 #
 # +-------------------------------------------------------------------------+
 # |      This file was generated by The Interactive Disassembler (IDA)      |
 # |           Copyright (c) 2018 Hex-Rays, <support@hex-rays.com>           |
 # |                      License info: 48-3015-72F4-DD                      |
 # |                       Octavian Dima, personal use                       |
 # +-------------------------------------------------------------------------+
 #
 # Input SHA256 : 875ADEE4F9B6C0A605B585048E0946994B0B6330371BA0DF23CCFCBABD5F31DD
 # Input MD5    : F65F915F8E2AD5825D65321483F39721
 # Input CRC32  : D4CBA766

 # File Name   : I:\_ELSE\firmware_prj\tools_4_firmware\0_Origins\search_program\tomato-Cisco-M10v2-NVRAM32K-1.28.RT-N5x-MIPSR2-110-PL-Mini\libssl.so.1.0.0
 # Format      : ELF for MIPS (Shared object)
 # Needed Library 'libcrypto.so.1.0.0'
 # Needed Library 'libdl.so.0'
 # Needed Library 'libgcc_s.so.1'
 # Needed Library 'libc.so.0'
 # Shared Name 'libssl.so.1.0.0'
 #
 # Options     : --opsex
 # Options     : -fPIC
 # Options     : -fCPIC
 # Options     : --mips32
 # Options     : --o32
 #

 # Processor       : mipsl
 # Target assembler: GNU assembler
 # Byte sex        : Little endian

.set noreorder
.set noat


 # ===========================================================================

 # Segment type: Pure code
                .text # LOAD
_X509_NAME_free:.word 0x464C457F         # DATA XREF: LOAD:00001948↓o
                                         # LOAD:00002298↓o ...
                                         # File format: \x7FELF
                .byte 1                  # File class: 32-bit
                .byte 1                  # Data encoding: little-endian
                .byte 1                  # File version
                .byte 0                  # OS/ABI: UNIX System V ABI
                .byte 0                  # ABI Version
                .byte 0, 0, 0, 0, 0, 0, 0  # Padding
                .half 3                  # File type: Shared object
                .half 8                  # Machine: MIPS
                .word 1                  # File version
                .word _ftext             # Entry point
                .word 0x34               # PHT file offset
                .word 0x4AE54            # SHT file offset
dword_24:       .word 0x50001007         # DATA XREF: .data:0005A148↓o
                                         # Processor-specific flags
                .half 0x34               # ELF header size
                .half 0x20               # PHT entry size
                .half 4                  # Number of entries in PHT
                .half 0x28               # SHT entry size
                .half 0x10               # Number of entries in SHT
                .half 0xF                # SHT entry index for string table
 # ELF32 Program Header
 # PHT Entry 0
                .word 1                  # Type: LOAD
                .word 0                  # File offset
                .word 0                  # Virtual address
dword_40:       .word 0                  # DATA XREF: .data.rel.ro:00057E08↓o
                                         # .data.rel.ro:000580AC↓o ...
                                         # Physical address
                .word 0x47AC8            # Size in file image
                .word 0x47AC8            # Size in memory image
                .word 5                  # Flags
                .word 0x10000            # Alignment
 # PHT Entry 1
                .word 1                  # Type: LOAD
                .word 0x47AC8            # File offset
                .word ssl2_ciphers       # Virtual address
dword_60:       .word 0x57AC8            # DATA XREF: .data.rel.ro:00057E38↓o
                                         # Physical address
                .word 0x32F8             # Size in file image
                .word 0x3364             # Size in memory image
                .word 6                  # Flags
                .word 0x10000            # Alignment
 # PHT Entry 2
dword_74:       .word 2                  # DATA XREF: .data:off_5A208↓o
                                         # Type: DYNAMIC
                .word 0xB4               # File offset
                .word stru_B4            # Virtual address
dword_80:       .word 0xB4               # DATA XREF: .data.rel.ro:00057E68↓o
                                         # .data.rel.ro:0005810C↓o ...
                                         # Physical address
                .word 0xE8               # Size in file image
                .word 0xE8               # Size in memory image
                .word 7                  # Flags
                .word 4                  # Alignment
 # PHT Entry 3
                .word 0                  # Type: NULL
                .word 0                  # File offset
                .word 0                  # Virtual address
                .word 0                  # Physical address
                .word 0                  # Size in file image
dword_A8:       .word 0                  # DATA XREF: .data.rel.ro:00057BE0↓o
                                         # Size in memory image
                .word 0                  # Flags
                .word 4                  # Alignment
 # ELF Dynamic Information
stru_B4:        Elf32_Dyn <1, <1>>       # DATA XREF: LOAD:0000007C↑o
                                         # DT_NEEDED libcrypto.so.1.0.0
                Elf32_Dyn <1, <0x2A>>    # DT_NEEDED libdl.so.0
                Elf32_Dyn <1, <0x35>>    # DT_NEEDED libgcc_s.so.1
                Elf32_Dyn <1, <0x43>>    # DT_NEEDED libc.so.0
                Elf32_Dyn <0xE, <0x3D6E>>  # DT_SONAME libssl.so.1.0.0
                Elf32_Dyn <0xC, <0>>     # DT_INIT
                Elf32_Dyn <0xD, <0>>     # DT_FINI
                Elf32_Dyn <4, <0x19C>>   # DT_HASH
                Elf32_Dyn <5, <0x4BB8>>  # DT_STRTAB
                Elf32_Dyn <6, <0x16F8>>  # DT_SYMTAB
                Elf32_Dyn <0xA, <0x3D84>>  # DT_STRSZ
                Elf32_Dyn <0xB, <0x10>>  # DT_SYMENT
                Elf32_Dyn <3, <0x5A360>>  # DT_PLTGOT
                Elf32_Dyn <0x11, <0x893C>>  # DT_REL
                Elf32_Dyn <0x12, <0x1888>>  # DT_RELSZ
                Elf32_Dyn <0x13, <8>>    # DT_RELENT
                Elf32_Dyn <0x70000001, <1>>  # DT_MIPS_RLD_VERSION
                Elf32_Dyn <0x70000005, <2>>  # DT_MIPS_FLAGS
                Elf32_Dyn <0x70000006, <0>>  # DT_MIPS_BASE_ADDRESS
                Elf32_Dyn <0x7000000A, <0xB>>  # DT_MIPS_LOCAL_GOTNO
                Elf32_Dyn <0x70000011, <0x34C>>  # DT_MIPS_SYMTABNO
                Elf32_Dyn <0x70000012, <0xF>>  # DT_MIPS_UNREFEXTNO
                Elf32_Dyn <0x70000013, <0xBF>>  # DT_MIPS_GOTSYM
                Elf32_Dyn <0>            # DT_NULL
                .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
 # ELF Hash Table
elf_hash_nbucket:.word 0x209
elf_hash_nchain:.word 0x34C
elf_hash_bucket:.word 0xF3, 0x22F, 0x33A, 0x111, 0xB2, 0x1AB, 0, 0x2BB
                .word 0x343, 0xDA, 0x139, 0x11F, 0x10F, 0x16E, 0x184, 0xF7
                .word 0x22C, 0x20C, 0, 0x1F5, 0, 0x115, 0xEF, 0x64, 0x342
                .word 0x132, 0, 0, 0xB3, 0, 0x49, 0x220, 0x7E, 0x150, 0x340
                .word 0xBF, 0x97, 0, 0x123, 0x28A, 0x1EC, 0, 0x155, 0x32E
                .word 0, 0xC7, 0, 0, 0x168, 0, 0x32B, 0, 0, 0, 0x1EA, 0x218
                .word 0x245, 0x5F, 0x344, 0, 0x1F6, 0x9F, 0xAD, 0xB8, 0x13A
                .word 0x1F4, 0xB7, 0x1A4, 0x121, 0, 0x65, 0, 0x261, 0x1D6
                .word 0x21, 0x174, 0xD1, 0x60, 0x31E, 0x1C0, 0x315, 0x106
                .word 0x109, 0x190, 0xFE, 0x94, 0x2E0, 0x33E, 0x10E, 0
                .word 0x1F8, 0x23F, 0x133, 0x124, 0x255, 0x23B, 0x102
                .word 0x33F, 0, 0x1C1, 0, 0x3D, 0x2BA, 0x186, 0x88, 0x1A2
                .word 0x1B1, 0x2A6, 0x14E, 0, 0x215, 0xBD, 0x96, 0x286
                .word 0x21B, 0, 0x171, 0x2C5, 0x14D, 0xE5, 0xBE, 0xB9
                .word 0, 0xF4, 0x211, 0, 0x166, 0x175, 0x1CE, 0xE4, 0
                .word 0x104, 0x247, 0xCD, 0xB1, 0, 0x99, 0x149, 0x323
                .word 0x349, 0x114, 0x1CF, 0x203, 0x1A1, 0x134, 0x32F
                .word 0xCF, 0xA8, 0x4D, 0x11E, 0xEC, 0x1E4, 0, 0x232, 0
                .word 0xDF, 0, 0x2A9, 0xE6, 0x339, 0xD3, 0x118, 0x7D, 0x163
                .word 0xA1, 0, 0x1B5, 0x8B, 0xB0, 0x209, 0x119, 0xFB, 0x11A
                .word 0xE7, 0x138, 0, 0x93, 0x280, 0x32, 0x1C9, 0xAE, 0x1FB
                .word 0x165, 0, 0, 0x9B, 0x48, 0x180, 0x25B, 0x1D, 0x1C2
                .word 0, 0x15E, 0x1D4, 0, 0x259, 0x206, 0xBC, 0xFD, 0x158
                .word 0x14B, 0, 0xA0, 0x66, 0x148, 0x13C, 0x331, 0, 0xAF
                .word 0x153, 0x15B, 0x112, 0x1DF, 0x185, 0, 0xF6, 0x233
                .word 0, 0xDD, 0x337, 0xD4, 0x196, 0, 0, 0xC0, 0, 0x173
                .word 0x157, 0x330, 0x222, 0xD7, 0x1D5, 0x6A, 0x11C, 0x40
                .word 0x278, 0x30B, 0x16D, 0x13E, 0xDC, 0x24F, 0xF1, 0x17C
                .word 0, 0x1CD, 0xE9, 0x12C, 0x34A, 0x4F, 0x5D, 0, 0x24C
                .word 6, 0x151, 0, 0xDB, 0, 0x14F, 0x31C, 0x29A, 0, 0x1C8
                .word 0x12E, 0x181, 0xB4, 0xB5, 0x19F, 0x239, 0, 0x1A0
                .word 0x27E, 0xCC, 0, 0x159, 0x154, 0x107, 0x117, 0xA2
                .word 0, 0, 0x189, 0x276, 0x192, 0x246, 0x37, 0x10C, 0xCB
                .word 0x136, 0x126, 0xB6, 0, 0x135, 0x105, 0x74, 0xF0
                .word 0, 0, 0, 0xC6, 0x170, 0x169, 0x193, 0x13D, 0x293
                .word 0x1A3, 0xE0, 0xC8, 0x223, 0x283, 0x146, 0x176, 0x1A9
                .word 0, 0x1F9, 0xF2, 0x346, 0, 0, 0x108, 0x14, 0x141
                .word 0, 0x194, 0x56, 0, 0x304, 0, 0x1BE, 0xEB, 0x2B1
                .word 0, 0x2B0, 0, 0x32A, 0xAA, 0x316, 0x2B6, 0x100, 0x1A5
                .word 0x258, 0x2BF, 0x1E9, 0x89, 0, 0x2AC, 0xA7, 0, 0
                .word 0xF9, 0x299, 0x110, 0xF8, 0x51, 0x17B, 0x26, 0x14A
                .word 0xEA, 0xE3, 0xDE, 0xA3, 0x47, 0x2FE, 0, 0xC2, 0
                .word 0x7F, 0xC4, 0x1D8, 0x131, 0, 0, 0x76, 0x341, 0, 0xE8
                .word 0x2E2, 0x58, 0x62, 0, 0x32C, 0, 0x10D, 0x335, 0x2B2
                .word 0x22D, 0x1C3, 0x1BA, 0x172, 0x144, 0x253, 0, 0x3B
                .word 0x116, 0, 0xE1, 0xD9, 0x19B, 0, 0x310, 0xCA, 0, 0
                .word 0x55, 0, 0, 0xC1, 0, 0x50, 0xD8, 0x35, 0, 0x298
                .word 0x21C, 0x11B, 0xE2, 0x338, 0, 0x2ED, 0xBB, 0x1D3
                .word 0x143, 0x33C, 0x188, 0x147, 0x2A0, 0x10B, 0x1B6
                .word 0x125, 0xD2, 0x69, 0, 0x28D, 0, 0x27D, 0, 0x2EA
                .word 0, 0x8C, 0x1CC, 0x345, 0x9D, 0x234, 0, 0, 0x9A, 0x11D
                .word 0x16C, 0xAC, 0x1FD, 0x54, 0x2E9, 0xF5, 0x7A, 0x269
                .word 0, 0, 0x33B, 0x1E0, 0x1B8, 0, 0x12F, 0x91, 0, 0x19E
                .word 0xED, 0x348, 0x26E, 0x225, 0, 0x120, 0x15D, 0, 0
                .word 9, 0, 0x130, 0x34B, 0x15A, 0xC5, 0x332, 0, 0xC3
                .word 0xC9, 0, 0xBA, 0x103, 0x71, 0x92, 0x33D, 0x19C, 0x2E7
                .word 0x8D, 0x145, 0x52, 0x152, 0x127, 0x1E2, 0x2D4, 0xD5
                .word 5, 0xA6, 0, 0x30E, 0x2D1, 0x140, 0x113, 0x30F, 0x18
                .word 0x1A7, 0xFA, 0, 0, 0x9C, 0x20B, 0, 0x1B, 0x297, 0
                .word 0, 0xAB, 0x6C
elf_hash_chain: .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2F8, 0
                .word 0, 0x300, 0x2F4, 0xF, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D2, 0
                .word 0, 0, 0, 0, 0x288, 0, 0, 0x277, 0, 0, 0, 0, 0, 0xE
                .word 0x2AF, 0, 0, 0x303, 0, 0x2C0, 2, 0x317, 3, 0x25F
                .word 0x27A, 0x2B5, 0x24E, 0x313, 0x257, 0x264, 0x41, 0
                .word 0, 0x23E, 0, 0x27, 0, 0, 0, 7, 0, 0, 0x2BE, 0, 0x2F6
                .word 0x271, 0, 0x267, 0, 0x2B8, 0, 0x2D, 0x1E, 0x2F1
                .word 0x23, 0x1DB, 0, 0, 0x325, 0, 0x2C4, 0x57, 0, 0x2A8
                .word 0x2AD, 0x2DD, 0x2A2, 0, 0x4A, 0, 0x1FC, 0x200, 0
                .word 0, 0, 0x2F, 0x1E3, 0x1D9, 0, 0x6B, 0, 0, 0x42, 0x1B2
                .word 0x20, 0, 0x1FF, 0x256, 0x6F, 0, 0x18A, 0x328, 0
                .word 0, 0, 0, 0x334, 0x224, 0, 0, 0x87, 0x244, 0, 0x2FB
                .word 0x1BB, 0, 0x30D, 0, 0, 0x19D, 0, 0, 0, 0x68, 0x18E
                .word 0x1FA, 0x80, 0x21F, 0x1F, 0x2F2, 0x1ED, 0x14C, 0x12D
                .word 0, 0x1E6, 0, 0x241, 0x178, 0x122, 0, 0, 0x95, 0
                .word 0x16A, 0, 0x329, 0x10A, 0, 0x16B, 0x8F, 0, 0, 0
                .word 0x2B7, 0x1BC, 0, 0x26D, 0xD0, 0x19A, 0xA, 0x5E, 0
                .word 0xD6, 0x19, 0xCE, 0x2A4, 0x20E, 0xEE, 0x83, 0x2C
                .word 0x2CD, 0x347, 0x321, 0x1D0, 0x2B3, 0x221, 0x2F0
                .word 0xFF, 0x2B4, 0x72, 0, 0x1D1, 0, 0x82, 0xFC, 0x17A
                .word 0x1E1, 0, 0x8E, 0, 0xA5, 0x249, 0x18B, 0, 0, 0, 0x101
                .word 0x284, 0x2FA, 0x1B9, 0x12B, 0x161, 0x1F1, 0, 0x137
                .word 0, 0x1F7, 0x191, 0x231, 0, 0x78, 0, 0x15, 0, 0, 0
                .word 0xA9, 0x31A, 0x142, 0xA4, 0, 0x8A, 0x15C, 0x129
                .word 0x187, 0x13F, 0, 0, 0x1AC, 0, 0x243, 0x22A, 0x98
                .word 0x1D2, 0x162, 0, 0x9E, 0, 0, 0x327, 0, 0x212, 0
                .word 0x13B, 0x266, 0x77, 0, 0x291, 0x18F, 0x1CB, 0x16F
                .word 0x84, 0x24D, 0x61, 0x1A8, 0x268, 0, 0x5A, 0, 0x79
                .word 0x208, 0x1E7, 0x160, 0x12A, 0x275, 0x17F, 0x167
                .word 0x217, 0, 0x238, 0x5C, 0xB, 0x1F3, 0x90, 0x23C, 0x20D
                .word 0x197, 0x2CA, 0x2A5, 0, 0x4C, 0, 0x7B, 0x227, 0x17D
                .word 0x156, 0x251, 0x198, 0x18D, 0x1B7, 0, 0x1CA, 0x12
                .word 0x17E, 0x2FC, 0x177, 0, 0x1DC, 0x46, 0x15F, 0x279
                .word 0, 0x201, 0x6D, 0x322, 0x3E, 0x6E, 0x20F, 0x305
                .word 0x67, 0x59, 0, 0, 0x236, 0, 8, 0x81, 0x204, 0x1EF
                .word 0x2FF, 0, 0x248, 0x183, 0x311, 0x1C6, 0x3F, 0x75
                .word 0, 0x25D, 0x2E6, 0x318, 0x63, 0x73, 0x1BD, 0, 0x242
                .word 0, 0x179, 0x202, 0x24A, 0x1A6, 0x199, 0, 0, 0x207
                .word 0x265, 0x86, 0x237, 0x2CF, 0x26A, 0x32D, 0x295, 0x18C
                .word 0x85, 0, 0x33, 0, 0, 0, 0x24B, 0x1EB, 0x195, 0, 0x1C7
                .word 0x31F, 0, 0x25E, 0, 0x306, 0x1B4, 0x17, 0x229, 0x289
                .word 0x3C, 0x1FE, 0x1AE, 0x1C5, 0x2BC, 0, 0, 0x1DD, 0
                .word 0x21D, 0, 0x2A1, 0, 0x1D7, 0x2A7, 0x287, 0x324, 0
                .word 0x20A, 0x281, 0, 0x1AF, 0, 0, 0x30, 0x219, 0, 0
                .word 0, 0x2D3, 0, 0x5B, 0x2C2, 0x1C, 0, 0x22E, 0x27B
                .word 0, 0x30A, 0x326, 0, 0, 0x2CB, 0x4E, 0, 0x205, 0x22
                .word 0x1F2, 0x34, 0x39, 0x36, 0x2C6, 0, 0x43, 0, 0, 0x1DA
                .word 0x230, 0x26F, 0x45, 0, 0, 0x214, 0x235, 0, 0x1E5
                .word 0, 0x213, 0x44, 0, 0, 0, 0x2C1, 0, 0, 0x307, 0x1A
                .word 4, 0, 0x2DC, 0x1F0, 0x320, 0, 0x319, 0, 0, 0x1EE
                .word 0, 0, 0, 0x31D, 0, 0, 0, 0, 0x216, 0, 0x53, 0, 0
                .word 0x2E1, 0x2BD, 0, 0, 0, 0x2C8, 0x28F, 0x28, 0x226
                .word 0x309, 0x2E4, 0, 0, 0, 0x2DE, 0, 0x273, 0x26B, 0x21A
                .word 0x210, 0x31B, 0x11, 0x228, 0, 0x29C, 0, 0, 0, 0x29F
                .word 0, 0, 0x254, 0, 0x21E, 0x262, 0, 0x23D, 0x274, 0
                .word 0, 0x2B9, 0x28C, 0, 0, 0, 0x31, 0, 0, 0x2FD, 0x25A
                .word 0x2DB, 0x240, 0x290, 0, 0, 0x2D5, 0, 0x2B, 0, 0
                .word 0, 0, 0, 0, 0, 0x29D, 0x302, 0x29E, 0x25, 0, 0x2E
                .word 0, 0x10, 0x292, 0x252, 0, 0, 0, 0, 0, 0x29B, 0, 0x263
                .word 0, 0x25C, 0, 0x2CC, 0, 0x27C, 0, 0xD, 0x285, 0, 0
                .word 0, 0x2EF, 0, 0x24, 0, 0x13, 0x26C, 0, 0x2A, 0, 0
                .word 0, 0, 0x312, 0, 0x2E3, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word 0, 0, 0, 0x27F, 0x30C, 0x282, 0x2D8, 0x2C9, 0x2F5
                .word 0x2AB, 0x28B, 0x294, 0, 0, 0x2DA, 0, 0x2C3, 0, 0
                .word 0, 0, 0, 0, 0, 0x301, 0, 0x29, 0, 0, 0, 0, 0, 0
                .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xC, 0, 0x2E5
                .word 0, 0x2C7, 0, 0, 0x2CE, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2EE
                .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D6, 0x2D9, 0
                .word 0, 0x2E8, 0, 0x2EB, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word 0, 0, 0, 0, 0, 0x2F9, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word 0, 0, 0, 0, 0, 0, 0, 0, 0x272, 0x270, 0, 0x2F7, 0x2DF
                .word 0x2F3, 0, 0, 0x2AA, 0, 0x296, 0, 0x16, 0x22B, 0
                .word 0, 0x3A, 0, 0, 0, 0x2D7, 0, 0x2AE, 0x314, 0x2A3
                .word 0x4B, 0x1AD, 0, 0x1E8, 0x308, 0x250, 0x38, 0, 0
                .word 0x260, 0x182, 0x1B3, 0, 0x1BF, 0, 0, 0x1AA, 0, 0x23A
                .word 0x70, 0x1DE, 0x2D0, 0x128, 0x1C4, 0x333, 0x164, 0x28E
                .word 0x336, 0x2EC, 0x1B0, 0x7C
 # ELF Symbol Table
                Elf32_Sym <0>
                Elf32_Sym <byte_4BB8 - byte_4BB8, _ftext, 0, 3, 0, 6>
                Elf32_Sym <aSslRenegotiate_1 - byte_4BB8, SSL_renegotiate_pending, \  # "SSL_renegotiate_pending"
                           0xC, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSet1Para - byte_4BB8, SSL_CTX_set1_param, 0x18, \  # "SSL_CTX_set1_param"
                           0x12, 0, 6>
                Elf32_Sym <aFbss - byte_4BB8, dword_5ADC0, 0, 0x10, 0, 0xFFF1>  # "_fbss"
                Elf32_Sym <aSslCtxSetCertS - byte_4BB8, SSL_CTX_set_cert_store, 0x58, \  # "SSL_CTX_set_cert_store"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetFd - byte_4BB8, SSL_get_fd, 0x18, 0x12, 0, 6>  # "SSL_get_fd"
                Elf32_Sym <aSslSetExData - byte_4BB8, SSL_set_ex_data, 0x18, 0x12, 0, \  # "SSL_set_ex_data"
                           6>
                Elf32_Sym <aSslGetSrpUseri - byte_4BB8, SSL_get_srp_userinfo, 0x20, \  # "SSL_get_srp_userinfo"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetPeerFini - byte_4BB8, SSL_get_peer_finished, 0x70, \  # "SSL_get_peer_finished"
                           0x12, 0, 6>
                Elf32_Sym <aSslRstateStrin - byte_4BB8, SSL_rstate_string_long, 0x5C, \  # "SSL_rstate_string_long"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetTlsextUs - byte_4BB8, SSL_set_tlsext_use_srtp, 0x24,\  # "SSL_set_tlsext_use_srtp"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSetSrpPa - byte_4BB8, SSL_CTX_set_srp_password, \  # "SSL_CTX_set_srp_password"
                           0x20, 0x12, 0, 6>
                Elf32_Sym <aSslSessionGetT_0 - byte_4BB8, SSL_SESSION_get_time, 0x18, \  # "SSL_SESSION_get_time"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxUsePriva_0 - byte_4BB8, SSL_CTX_use_PrivateKey_ASN1,\  # "SSL_CTX_use_PrivateKey_ASN1"
                           0xBC, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetGener - byte_4BB8, \  # "SSL_CTX_set_generate_session_id"
                           SSL_CTX_set_generate_session_id, 0x88, 0x12, 0, 6>
                Elf32_Sym <aSslSetDebug - byte_4BB8, SSL_set_debug, 8, 0x12, 0, 6>  # "SSL_set_debug"
                Elf32_Sym <aSslCtxSetClien - byte_4BB8, SSL_CTX_set_client_CA_list, \  # "SSL_CTX_set_client_CA_list"
                           0x5C, 0x12, 0, 6>
                Elf32_Sym <aSslGet0NextPro - byte_4BB8, \  # "SSL_get0_next_proto_negotiated"
                           SSL_get0_next_proto_negotiated, 0x20, 0x12, 0, 6>
                Elf32_Sym <aSslRstateStrin_0 - byte_4BB8, SSL_rstate_string, 0x5C, \  # "SSL_rstate_string"
                           0x12, 0, 6>
                Elf32_Sym <aSslCipherDescr - byte_4BB8, SSL_CIPHER_description, 0x65C,\  # "SSL_CIPHER_description"
                           0x12, 0, 6>
                Elf32_Sym <aGpDisp - byte_4BB8, 0x62350, 0, 0x13, 0, 0xFFF1>  # "_gp_disp"
                Elf32_Sym <aSslAddDirCertS - byte_4BB8, \  # "SSL_add_dir_cert_subjects_to_stack"
                           SSL_add_dir_cert_subjects_to_stack, 0x220, 0x12, 0, 6>
                Elf32_Sym <aSslCtxUseCerti_1 - byte_4BB8, \  # "SSL_CTX_use_certificate_ASN1"
                           SSL_CTX_use_certificate_ASN1, 0xC0, 0x12, 0, 6>
                Elf32_Sym <aSslSetTmpRsaCa - byte_4BB8, SSL_set_tmp_rsa_callback, \  # "SSL_set_tmp_rsa_callback"
                           0x1C, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetTlsex - byte_4BB8, SSL_CTX_set_tlsext_use_srtp, \  # "SSL_CTX_set_tlsext_use_srtp"
                           0x24, 0x12, 0, 6>
                Elf32_Sym <aSslSessionGetC - byte_4BB8, SSL_SESSION_get_compress_id, \  # "SSL_SESSION_get_compress_id"
                           8, 0x12, 0, 6>
                Elf32_Sym <aSslExportKeyin - byte_4BB8, SSL_export_keying_material, \  # "SSL_export_keying_material"
                           0x2C, 0x12, 0, 6>
                Elf32_Sym <aSslCtxGetExDat - byte_4BB8, SSL_CTX_get_ex_data, 0x18, \  # "SSL_CTX_get_ex_data"
                           0x12, 0, 6>
                Elf32_Sym <aSslSet1Param - byte_4BB8, SSL_set1_param, 0x18, 0x12, 0, \  # "SSL_set1_param"
                           6>
                Elf32_Sym <aSslGet1Session - byte_4BB8, SSL_get1_session, 0x8C, 0x12, \  # "SSL_get1_session"
                           0, 6>
                Elf32_Sym <aSslGetCurrentC_0 - byte_4BB8, SSL_get_current_compression,\  # "SSL_get_current_compression"
                           0x18, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetCertV - byte_4BB8, \  # "SSL_CTX_set_cert_verify_callback"
                           SSL_CTX_set_cert_verify_callback, 0xC, 0x12, 0, 6>
                Elf32_Sym <aSslSessionSetT - byte_4BB8, SSL_SESSION_set_timeout, 0x1C,\  # "SSL_SESSION_set_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSessGetR - byte_4BB8, SSL_CTX_sess_get_remove_cb, 8,\  # "SSL_CTX_sess_get_remove_cb"
                           0x12, 0, 6>
                Elf32_Sym <aSslSessionSetE - byte_4BB8, SSL_SESSION_set_ex_data, 0x18,\  # "SSL_SESSION_set_ex_data"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSetVerif - byte_4BB8, SSL_CTX_set_verify, 0xC, 0x12,\  # "SSL_CTX_set_verify"
                           0, 6>
                Elf32_Sym <aFini - byte_4BB8, _X509_NAME_free, 0, 0x12, 0, 0>  # "_fini"
                Elf32_Sym <aSslGetSelected - byte_4BB8, SSL_get_selected_srtp_profile,\  # "SSL_get_selected_srtp_profile"
                           8, 0x12, 0, 6>
                Elf32_Sym <aSslSetTrust - byte_4BB8, SSL_set_trust, 0x18, 0x12, 0, 6>  # "SSL_set_trust"
                Elf32_Sym <aSslGetSslMetho - byte_4BB8, SSL_get_ssl_method, 8, 0x12, \  # "SSL_get_ssl_method"
                           0, 6>
                Elf32_Sym <aSslCtxSetSrpCb - byte_4BB8, SSL_CTX_set_srp_cb_arg, 0x20, \  # "SSL_CTX_set_srp_cb_arg"
                           0x12, 0, 6>
                Elf32_Sym <aSslLoadErrorSt - byte_4BB8, SSL_load_error_strings, 8, \  # "SSL_load_error_strings"
                           0x12, 0, 6>
                Elf32_Sym <aSslCipherGetBi - byte_4BB8, SSL_CIPHER_get_bits, 0x28, \  # "SSL_CIPHER_get_bits"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetSrpServe_0 - byte_4BB8, SSL_set_srp_server_param_pw,\  # "SSL_set_srp_server_param_pw"
                           0x11C, 0x12, 0, 6>
                Elf32_Sym <aSslCheckPrivat - byte_4BB8, SSL_check_private_key, 0xD4, \  # "SSL_check_private_key"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetCipherLi - byte_4BB8, SSL_get_cipher_list, 0x90, \  # "SSL_get_cipher_list"
                           0x12, 0, 6>
                Elf32_Sym <aGlobalOffsetTa - byte_4BB8, off_5A360, 0, 0x11, 0, 0xFFF1>  # "_GLOBAL_OFFSET_TABLE_"
                Elf32_Sym <aSslSetVerifyRe - byte_4BB8, SSL_set_verify_result, 8, \  # "SSL_set_verify_result"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxGetQuiet - byte_4BB8, SSL_CTX_get_quiet_shutdown, 8,\  # "SSL_CTX_get_quiet_shutdown"
                           0x12, 0, 6>
                Elf32_Sym <aSslStateString_0 - byte_4BB8, SSL_state_string, 0xA10, \  # "SSL_state_string"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxCheckPri - byte_4BB8, SSL_CTX_check_private_key, \  # "SSL_CTX_check_private_key"
                           0xB4, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetExDat - byte_4BB8, SSL_CTX_set_ex_data, 0x18, \  # "SSL_CTX_set_ex_data"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxUseCerti_0 - byte_4BB8, \  # "SSL_CTX_use_certificate_chain_file"
                           SSL_CTX_use_certificate_chain_file, 0x27C, 0x12, 0, 6>
                Elf32_Sym <aSslGetServerna - byte_4BB8, SSL_get_servername, 0x40, \  # "SSL_get_servername"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetSslCtx - byte_4BB8, SSL_set_SSL_CTX, 0xC8, 0x12, 0, \  # "SSL_set_SSL_CTX"
                           6>
                Elf32_Sym <aSslUsePrivatek_1 - byte_4BB8, SSL_use_PrivateKey_file, \  # "SSL_use_PrivateKey_file"
                           0x1D0, 0x12, 0, 6>
                Elf32_Sym <aSsl2VersionStr - byte_4BB8, ssl2_version_str, 0x29, 0x11, \  # "ssl2_version_str" ...
                           0, 8>
                Elf32_Sym <aSslSessionPrin_0 - byte_4BB8, SSL_SESSION_print_fp, 0xEC, \  # "SSL_SESSION_print_fp"
                           0x12, 0, 6>
                Elf32_Sym <aSslSessionGetI - byte_4BB8, SSL_SESSION_get_id, 0x18, \  # "SSL_SESSION_get_id"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetPeerCert_0 - byte_4BB8, SSL_get_peer_certificate, \  # "SSL_get_peer_certificate"
                           0x88, 0x12, 0, 6>
                Elf32_Sym <aSslCipherGetVe - byte_4BB8, SSL_CIPHER_get_version, 0x58, \  # "SSL_CIPHER_get_version"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetPurpose - byte_4BB8, SSL_set_purpose, 0x18, 0x12, 0,\  # "SSL_set_purpose"
                           6>
                Elf32_Sym <aSslCtxGetInfoC - byte_4BB8, SSL_CTX_get_info_callback, 8, \  # "SSL_CTX_get_info_callback"
                           0x12, 0, 6>
                Elf32_Sym <aSslSessionSet1 - byte_4BB8, SSL_SESSION_set1_id_context, \  # "SSL_SESSION_set1_id_context"
                           0x74, 0x12, 0, 6>
                Elf32_Sym <aSslCtxAddClien - byte_4BB8, SSL_CTX_add_client_CA, 0x1C, \  # "SSL_CTX_add_client_CA"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetCertific - byte_4BB8, SSL_get_certificate, 0x1C, \  # "SSL_get_certificate"
                           0x12, 0, 6>
                Elf32_Sym <aSslDupCaList - byte_4BB8, SSL_dup_CA_list, 0xF0, 0x12, 0, \  # "SSL_dup_CA_list"
                           6>
                Elf32_Sym <aSslGetWfd - byte_4BB8, SSL_get_wfd, 0x70, 0x12, 0, 6>  # "SSL_get_wfd"
                Elf32_Sym <aSslCtxSetDefau_0 - byte_4BB8, \  # "SSL_CTX_set_default_passwd_cb_userdata"
                           SSL_CTX_set_default_passwd_cb_userdata, 8, 0x12, 0, 6>
                Elf32_Sym <aSslCtxUseRsapr_1 - byte_4BB8, \  # "SSL_CTX_use_RSAPrivateKey_file"
                           SSL_CTX_use_RSAPrivateKey_file, 0x1CC, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetSslVe - byte_4BB8, SSL_CTX_set_ssl_version, 0xB0,\  # "SSL_CTX_set_ssl_version"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxGetExNew - byte_4BB8, SSL_CTX_get_ex_new_index, \  # "SSL_CTX_get_ex_new_index"
                           0x54, 0x12, 0, 6>
                Elf32_Sym <aGp - byte_4BB8, 0x62350, 0, 0x10, 0, 0xFFF1>  # "_gp"
                Elf32_Sym <aSslSetShutdown - byte_4BB8, SSL_set_shutdown, 8, 0x12, 0, \  # "SSL_set_shutdown"
                           6>
                Elf32_Sym <aSslGetSrpN - byte_4BB8, SSL_get_srp_N, 0x20, 0x12, 0, 6>  # "SSL_get_srp_N"
                Elf32_Sym <aSslSetRfd - byte_4BB8, SSL_set_rfd, 0x154, 0x12, 0, 6>  # "SSL_set_rfd"
                Elf32_Sym <aSslCtxNew - byte_4BB8, SSL_CTX_new, 0x4F4, 0x12, 0, 6>  # "SSL_CTX_new"
                Elf32_Sym <aSslGetVerifyRe - byte_4BB8, SSL_get_verify_result, 8, \  # "SSL_get_verify_result"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetWfd - byte_4BB8, SSL_set_wfd, 0x174, 0x12, 0, 6>  # "SSL_set_wfd"
                Elf32_Sym <aSslCacheHit - byte_4BB8, SSL_cache_hit, 8, 0x12, 0, 6>  # "SSL_cache_hit"
                Elf32_Sym <aSslSessionGetT - byte_4BB8, SSL_SESSION_get_timeout, 0x18,\  # "SSL_SESSION_get_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetFd - byte_4BB8, SSL_set_fd, 0xDC, 0x12, 0, 6>  # "SSL_set_fd"
                Elf32_Sym <aSslCtxSetSessi - byte_4BB8, \  # "SSL_CTX_set_session_id_context"
                           SSL_CTX_set_session_id_context, 0x74, 0x12, 0, 6>
                Elf32_Sym <aSslUseRsapriva_0 - byte_4BB8, SSL_use_RSAPrivateKey_ASN1, \  # "SSL_use_RSAPrivateKey_ASN1"
                           0xBC, 0x12, 0, 6>
                Elf32_Sym <aSslGetServerna_0 - byte_4BB8, SSL_get_servername_type, \  # "SSL_get_servername_type"
                           0x34, 0x12, 0, 6>
                Elf32_Sym <aSslGetCurrentC - byte_4BB8, SSL_get_current_cipher, 0x18, \  # "SSL_get_current_cipher"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSetClien_0 - byte_4BB8, SSL_CTX_set_client_cert_cb, \  # "SSL_CTX_set_client_cert_cb"
                           8, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetCooki - byte_4BB8, \  # "SSL_CTX_set_cookie_generate_cb"
                           SSL_CTX_set_cookie_generate_cb, 8, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSessSetG - byte_4BB8, SSL_CTX_sess_set_get_cb, 8, \  # "SSL_CTX_sess_set_get_cb"
                           0x12, 0, 6>
                Elf32_Sym <aSslSessionGetE - byte_4BB8, SSL_SESSION_get_ex_data, 0x18,\  # "SSL_SESSION_get_ex_data"
                           0x12, 0, 6>
                Elf32_Sym <aSslLoadClientC - byte_4BB8, SSL_load_client_CA_file, \  # "SSL_load_client_CA_file"
                           0x274, 0x12, 0, 6>
                Elf32_Sym <aSslUseCertific_0 - byte_4BB8, SSL_use_certificate_ASN1, \  # "SSL_use_certificate_ASN1"
                           0xBC, 0x12, 0, 6>
                Elf32_Sym <aSslGetCurrentE - byte_4BB8, SSL_get_current_expansion, \  # "SSL_get_current_expansion"
                           0x18, 0x12, 0, 6>
                Elf32_Sym <aSslCtxLoadVeri - byte_4BB8, SSL_CTX_load_verify_locations,\  # "SSL_CTX_load_verify_locations"
                           0x18, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetSrpUs - byte_4BB8, \  # "SSL_CTX_set_srp_username_callback"
                           SSL_CTX_set_srp_username_callback, 0x1C, 0x12, 0, 6>
                Elf32_Sym <aPemWriteBioSsl - byte_4BB8, PEM_write_bio_SSL_SESSION, \  # "PEM_write_bio_SSL_SESSION"
                           0x58, 0x12, 0, 6>
                Elf32_Sym <aSslAlertDescSt_0 - byte_4BB8, SSL_alert_desc_string_long, \  # "SSL_alert_desc_string_long"
                           0x1AC, 0x12, 0, 6>
                Elf32_Sym <aSslCipherGetNa - byte_4BB8, SSL_CIPHER_get_name, 0x28, \  # "SSL_CIPHER_get_name"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSetQuiet - byte_4BB8, SSL_CTX_set_quiet_shutdown, 8,\  # "SSL_CTX_set_quiet_shutdown"
                           0x12, 0, 6>
                Elf32_Sym <aSslSessionGetE_0 - byte_4BB8, \  # "SSL_SESSION_get_ex_new_index"
                           SSL_SESSION_get_ex_new_index, 0x54, 0x12, 0, 6>
                Elf32_Sym <aFdata - byte_4BB8, _fdata, 0, 0x10, 0, 0xA>  # "_fdata"
                Elf32_Sym <aSslCtxSessions - byte_4BB8, SSL_CTX_sessions, 8, 0x12, 0, \  # "SSL_CTX_sessions"
                           6>
                Elf32_Sym <aSslCtxSetPurpo - byte_4BB8, SSL_CTX_set_purpose, 0x18, \  # "SSL_CTX_set_purpose"
                           0x12, 0, 6>
                Elf32_Sym <aSslRenegotiate_0 - byte_4BB8, SSL_renegotiate_abbreviated,\  # "SSL_renegotiate_abbreviated"
                           0x28, 0x12, 0, 6>
                Elf32_Sym <aSslBadMethod - byte_4BB8, ssl_bad_method, 0x48, 0x12, 0, \  # "ssl_bad_method"
                           6>
                Elf32_Sym <aBioSslCopySess - byte_4BB8, BIO_ssl_copy_session_id, 0xAC,\  # "BIO_ssl_copy_session_id"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxGetVerif - byte_4BB8, SSL_CTX_get_verify_mode, 8, \  # "SSL_CTX_get_verify_mode"
                           0x12, 0, 6>
                Elf32_Sym <aSslv23ClientMe - byte_4BB8, SSLv23_client_method, 0x18, \  # "SSLv23_client_method"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetSrpG - byte_4BB8, SSL_get_srp_g, 0x20, 0x12, 0, 6>  # "SSL_get_srp_g"
                Elf32_Sym <aSslStateString - byte_4BB8, SSL_state_string_long, 0xAC8, \  # "SSL_state_string_long"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSetVerif_0 - byte_4BB8, SSL_CTX_set_verify_depth, \  # "SSL_CTX_set_verify_depth"
                           0x18, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSessSetR - byte_4BB8, SSL_CTX_sess_set_remove_cb, 8,\  # "SSL_CTX_sess_set_remove_cb"
                           0x12, 0, 6>
                Elf32_Sym <aErrLoadSslStri - byte_4BB8, ERR_load_SSL_strings, 8, 0x12,\  # "ERR_load_SSL_strings"
                           0, 6>
                Elf32_Sym <aSslCtxSetTimeo - byte_4BB8, SSL_CTX_set_timeout, 0x1C, \  # "SSL_CTX_set_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aPemReadBioSslS - byte_4BB8, PEM_read_bio_SSL_SESSION, \  # "PEM_read_bio_SSL_SESSION"
                           0x54, 0x12, 0, 6>
                Elf32_Sym <aSslSetSessionT - byte_4BB8, SSL_set_session_ticket_ext_cb,\  # "SSL_set_session_ticket_ext_cb"
                           0x20, 0x12, 0, 6>
                Elf32_Sym <aSslGetPrivatek - byte_4BB8, SSL_get_privatekey, 0x1C, \  # "SSL_get_privatekey"
                           0x12, 0, 6>
                Elf32_Sym <aPemWriteSslSes - byte_4BB8, PEM_write_SSL_SESSION, 0x58, \  # "PEM_write_SSL_SESSION"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSetSrpCl - byte_4BB8, \  # "SSL_CTX_set_srp_client_pwd_callback"
                           SSL_CTX_set_srp_client_pwd_callback, 0x1C, 0x12, 0, 6>
                Elf32_Sym <aSslAlertTypeSt - byte_4BB8, SSL_alert_type_string_long, \  # "SSL_alert_type_string_long"
                           0x48, 0x12, 0, 6>
                Elf32_Sym <aSslCtxUsePriva_1 - byte_4BB8, SSL_CTX_use_PrivateKey_file,\  # "SSL_CTX_use_PrivateKey_file"
                           0x1CC, 0x12, 0, 6>
                Elf32_Sym <aSslLibraryInit - byte_4BB8, SSL_library_init, 0x34C, 0x12,\  # "SSL_library_init"
                           0, 6>
                Elf32_Sym <aSslCompGetName - byte_4BB8, SSL_COMP_get_name, 0x18, 0x12,\  # "SSL_COMP_get_name"
                           0, 6>
                Elf32_Sym <aSslAddClientCa - byte_4BB8, SSL_add_client_CA, 0x1C, 0x12,\  # "SSL_add_client_CA"
                           0, 6>
                Elf32_Sym <aSslCtxSetDefau - byte_4BB8, SSL_CTX_set_default_passwd_cb,\  # "SSL_CTX_set_default_passwd_cb"
                           8, 0x12, 0, 6>
                Elf32_Sym <aSslCtxUseCerti_2 - byte_4BB8, \  # "SSL_CTX_use_certificate_file"
                           SSL_CTX_use_certificate_file, 0x1D8, 0x12, 0, 6>
                Elf32_Sym <aSslGetSharedCi - byte_4BB8, SSL_get_shared_ciphers, 0x130,\  # "SSL_get_shared_ciphers"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetCipherLi - byte_4BB8, SSL_set_cipher_list, 0x94, \  # "SSL_set_cipher_list"
                           0x12, 0, 6>
                Elf32_Sym <aBssStart - byte_4BB8, dword_5ADC0, 0, 0x10, 0, 0xFFF1>  # "__bss_start"
                Elf32_Sym <aSslSetClientCa - byte_4BB8, SSL_set_client_CA_list, 0x5C, \  # "SSL_set_client_CA_list"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetExData - byte_4BB8, SSL_get_ex_data, 0x18, 0x12, 0, \  # "SSL_get_ex_data"
                           6>
                Elf32_Sym <aSslCtxSessSetN - byte_4BB8, SSL_CTX_sess_set_new_cb, 8, \  # "SSL_CTX_sess_set_new_cb"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxGetClien_0 - byte_4BB8, SSL_CTX_get_client_cert_cb, \  # "SSL_CTX_get_client_cert_cb"
                           8, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetCiphe - byte_4BB8, SSL_CTX_set_cipher_list, 0x90,\  # "SSL_CTX_set_cipher_list"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSetNextP - byte_4BB8, \  # "SSL_CTX_set_next_protos_advertised_cb"
                           SSL_CTX_set_next_protos_advertised_cb, 0xC, 0x12, 0, 6>
                Elf32_Sym <aSslCtxGetTimeo - byte_4BB8, SSL_CTX_get_timeout, 0x18, \  # "SSL_CTX_get_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aPemReadSslSess - byte_4BB8, PEM_read_SSL_SESSION, 0x54, \  # "PEM_read_SSL_SESSION"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetSrpServe - byte_4BB8, SSL_set_srp_server_param, \  # "SSL_set_srp_server_param"
                           0x1EC, 0x12, 0, 6>
                Elf32_Sym <aSslSetQuietShu - byte_4BB8, SSL_set_quiet_shutdown, 8, \  # "SSL_set_quiet_shutdown"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetSessionS - byte_4BB8, SSL_set_session_secret_cb, \  # "SSL_set_session_secret_cb"
                           0x20, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetSrpVe - byte_4BB8, \  # "SSL_CTX_set_srp_verify_param_callback"
                           SSL_CTX_set_srp_verify_param_callback, 0x1C, 0x12, 0, 6>
                Elf32_Sym <aSslSetMsgCallb - byte_4BB8, SSL_set_msg_callback, 0x1C, \  # "SSL_set_msg_callback"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxGetCertS - byte_4BB8, SSL_CTX_get_cert_store, 8, \  # "SSL_CTX_get_cert_store"
                           0x12, 0, 6>
                Elf32_Sym <aFtext - byte_4BB8, _ftext, 0, 0x10, 0, 6>  # "_ftext"
                Elf32_Sym <aSslGetFinished - byte_4BB8, SSL_get_finished, 0x70, 0x12, \  # "SSL_get_finished"
                           0, 6>
                Elf32_Sym <aSslCtxSetCooki_0 - byte_4BB8, \  # "SSL_CTX_set_cookie_verify_cb"
                           SSL_CTX_set_cookie_verify_cb, 8, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetMsgCa - byte_4BB8, SSL_CTX_set_msg_callback, \  # "SSL_CTX_set_msg_callback"
                           0x1C, 0x12, 0, 6>
                Elf32_Sym <aSslCtxGetClien - byte_4BB8, SSL_CTX_get_client_CA_list, 8,\  # "SSL_CTX_get_client_CA_list"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetGenerate - byte_4BB8, SSL_set_generate_session_id, \  # "SSL_set_generate_session_id"
                           0x88, 0x12, 0, 6>
                Elf32_Sym <aDtls1VersionSt - byte_4BB8, dtls1_version_str, 0x2A, 0x11,\  # "dtls1_version_str" ...
                           0, 8>
                Elf32_Sym <aOpensslDirEnd+0xB - byte_4BB8, _end_0, 0, 0x10, 0, 0xFFF1>  # "_end"
                Elf32_Sym <aSslCtxUseRsapr_0 - byte_4BB8, \  # "SSL_CTX_use_RSAPrivateKey_ASN1"
                           SSL_CTX_use_RSAPrivateKey_ASN1, 0xBC, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSessGetN - byte_4BB8, SSL_CTX_sess_get_new_cb, 8, \  # "SSL_CTX_sess_get_new_cb"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetState - byte_4BB8, SSL_set_state, 8, 0x12, 0, 6>  # "SSL_set_state"
                Elf32_Sym <aSslCtxSessGetG - byte_4BB8, SSL_CTX_sess_get_get_cb, 8, \  # "SSL_CTX_sess_get_get_cb"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetExNewInd - byte_4BB8, SSL_get_ex_new_index, 0x54, \  # "SSL_get_ex_new_index"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxGetVerif_1 - byte_4BB8, SSL_CTX_get_verify_depth, \  # "SSL_CTX_get_verify_depth"
                           0x18, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetSrpUs_0 - byte_4BB8, SSL_CTX_set_srp_username, \  # "SSL_CTX_set_srp_username"
                           0x20, 0x12, 0, 6>
                Elf32_Sym <aSslGetSrpUsern - byte_4BB8, SSL_get_srp_username, 0x20, \  # "SSL_get_srp_username"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetShutdown - byte_4BB8, SSL_get_shutdown, 8, 0x12, 0, \  # "SSL_get_shutdown"
                           6>
                Elf32_Sym <aSslCtxSetNextP_0 - byte_4BB8, \  # "SSL_CTX_set_next_proto_select_cb"
                           SSL_CTX_set_next_proto_select_cb, 0xC, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetInfoC - byte_4BB8, SSL_CTX_set_info_callback, 8, \  # "SSL_CTX_set_info_callback"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSetSrpSt - byte_4BB8, SSL_CTX_set_srp_strength, \  # "SSL_CTX_set_srp_strength"
                           0x20, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetDefau_1 - byte_4BB8, \  # "SSL_CTX_set_default_verify_paths"
                           SSL_CTX_set_default_verify_paths, 0x18, 0x12, 0, 6>
                Elf32_Sym <aSslGetVersion - byte_4BB8, SSL_get_version, 0x84, 0x12, 0,\  # "SSL_get_version"
                           6>
                Elf32_Sym <aBioSslShutdown - byte_4BB8, BIO_ssl_shutdown, 0x50, 0x12, \  # "BIO_ssl_shutdown"
                           0, 6>
                Elf32_Sym <aSslUseCertific_1 - byte_4BB8, SSL_use_certificate_file, \  # "SSL_use_certificate_file"
                           0x1DC, 0x12, 0, 6>
                Elf32_Sym <aSslCompAddComp - byte_4BB8, \  # "SSL_COMP_add_compression_method"
                           SSL_COMP_add_compression_method, 0x1E0, 0x12, 0, 6>
                Elf32_Sym <aBioNewBufferSs - byte_4BB8, BIO_new_buffer_ssl_connect, \  # "BIO_new_buffer_ssl_connect"
                           0xF8, 0x12, 0, 6>
                Elf32_Sym <aSslUseRsapriva_1 - byte_4BB8, SSL_use_RSAPrivateKey_file, \  # "SSL_use_RSAPrivateKey_file"
                           0x1D0, 0x12, 0, 6>
                Elf32_Sym <aSslAlertTypeSt_0 - byte_4BB8, SSL_alert_type_string, 0x48,\  # "SSL_alert_type_string"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetQuietShu - byte_4BB8, SSL_get_quiet_shutdown, 8, \  # "SSL_get_quiet_shutdown"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSetTmpRs - byte_4BB8, SSL_CTX_set_tmp_rsa_callback, \  # "SSL_CTX_set_tmp_rsa_callback"
                           0x1C, 0x12, 0, 6>
                Elf32_Sym <aEdata - byte_4BB8, dword_5ADC0, 0, 0x10, 0, 0xFFF1>  # "_edata"
                Elf32_Sym <aSslCipherGetId - byte_4BB8, SSL_CIPHER_get_id, 8, 0x12, 0,\  # "SSL_CIPHER_get_id"
                           6>
                Elf32_Sym <aSslAlertDescSt - byte_4BB8, SSL_alert_desc_string, 0x1AC, \  # "SSL_alert_desc_string"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxGetVerif_0 - byte_4BB8, SSL_CTX_get_verify_callback,\  # "SSL_CTX_get_verify_callback"
                           8, 0x12, 0, 6>
                Elf32_Sym <aSslCtxSetTrust - byte_4BB8, SSL_CTX_set_trust, 0x18, 0x12,\  # "SSL_CTX_set_trust"
                           0, 6>
                Elf32_Sym <aSslVersionStr - byte_4BB8, SSL_version_str, 4, 0x11, 0, \  # "SSL_version_str"
                           0xA>
                Elf32_Sym <aSslUsePrivatek_0 - byte_4BB8, SSL_use_PrivateKey_ASN1, \  # "SSL_use_PrivateKey_ASN1"
                           0xBC, 0x12, 0, 6>
                Elf32_Sym <aSslSessionGet0 - byte_4BB8, SSL_SESSION_get0_peer, 8, \  # "SSL_SESSION_get0_peer"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3VersionStr - byte_4BB8, ssl3_version_str, 0x29, 0x11, \  # "ssl3_version_str" ...
                           0, 8>
                Elf32_Sym <aDtls1VersionSt+1 - byte_4BB8, tls1_version_str, 0x29, \  # "tls1_version_str" ...
                           0x11, 0, 8>
                Elf32_Sym <aSslv23ServerMe - byte_4BB8, SSLv23_server_method, 0x18, \  # "SSLv23_server_method"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetSessionT_0 - byte_4BB8, SSL_set_session_ticket_ext, \  # "SSL_set_session_ticket_ext"
                           0x124, 0x12, 0, 6>
                Elf32_Sym <aHmacCtxInit+8 - byte_4BB8, _X509_NAME_free, 0, 0x12, 0, 0>  # "_init"
                Elf32_Sym <aSslv23Method - byte_4BB8, SSLv23_method, 0x18, 0x12, 0, 6>  # "SSLv23_method"
                Elf32_Sym <aSslSessionSetT_0 - byte_4BB8, SSL_SESSION_set_time, 0x18, \  # "SSL_SESSION_set_time"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetPeerCert - byte_4BB8, SSL_get_peer_cert_chain, 0x30,\  # "SSL_get_peer_cert_chain"
                           0x12, 0, 6>
                Elf32_Sym <aSslSelectNextP - byte_4BB8, SSL_select_next_proto, 0x148, \  # "SSL_select_next_proto"
                           0x12, 0, 6>
                Elf32_Sym <aCryptoFreeExDa - byte_4BB8, _CRYPTO_free_ex_data, 0, 0x12,\  # "CRYPTO_free_ex_data"
                           0, 0>
                Elf32_Sym <aDtls1Accept - byte_4BB8, dtls1_accept, 0xE94, 0x12, 0, 6>  # "dtls1_accept"
                Elf32_Sym <aPemAsn1Read - byte_4BB8, _PEM_ASN1_read, 0, 0x12, 0, 0>  # "PEM_ASN1_read"
                Elf32_Sym <aSsl23ReadBytes - byte_4BB8, ssl23_read_bytes, 0xC0, 0x12, \  # "ssl23_read_bytes"
                           0, 6>
                Elf32_Sym <aSslClearHashCt - byte_4BB8, ssl_clear_hash_ctx, 0x4C, \  # "ssl_clear_hash_ctx"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxSrpCtxFr - byte_4BB8, SSL_CTX_SRP_CTX_free, 0x120, \  # "SSL_CTX_SRP_CTX_free"
                           0x12, 0, 6>
                Elf32_Sym <aPqueuePop - byte_4BB8, _pqueue_pop, 0, 0x12, 0, 0>  # "pqueue_pop"
                Elf32_Sym <aSslCtxSrpCtxIn - byte_4BB8, SSL_CTX_SRP_CTX_init, 0x5C, \  # "SSL_CTX_SRP_CTX_init"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3ReleaseRea - byte_4BB8, ssl3_release_read_buffer, \  # "ssl3_release_read_buffer"
                           0x128, 0x12, 0, 6>
                Elf32_Sym <aStrcpy - byte_4BB8, _strcpy, 0, 0x12, 0, 0>  # "strcpy"
                Elf32_Sym <aEvpCipherFlags - byte_4BB8, _EVP_CIPHER_flags, 0, 0x12, 0,\  # "EVP_CIPHER_flags"
                           0>
                Elf32_Sym <aSsl3SendServer_1 - byte_4BB8, \  # "ssl3_send_server_key_exchange"
                           ssl3_send_server_key_exchange, 0x960, 0x12, 0, 6>
                Elf32_Sym <aDtls1SendClien - byte_4BB8, dtls1_send_client_certificate,\  # "dtls1_send_client_certificate"
                           0x274, 0x12, 0, 6>
                Elf32_Sym <aD2iPrivatekeyB - byte_4BB8, _d2i_PrivateKey_bio, 0, 0x12, \  # "d2i_PrivateKey_bio"
                           0, 0>
                Elf32_Sym <aEvpDigestupdat - byte_4BB8, _EVP_DigestUpdate, 0, 0x12, 0,\  # "EVP_DigestUpdate"
                           0>
                Elf32_Sym <aObjObj2nid - byte_4BB8, _OBJ_obj2nid, 0, 0x12, 0, 0>  # "OBJ_obj2nid"
                Elf32_Sym <aEvpMdSize - byte_4BB8, _EVP_MD_size, 0, 0x12, 0, 0>  # "EVP_MD_size"
                Elf32_Sym <aSkPush - byte_4BB8, _sk_push, 0, 0x12, 0, 0>  # "sk_push"
                Elf32_Sym <aSslGetDefaultT - byte_4BB8, SSL_get_default_timeout, 0x10,\  # "SSL_get_default_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxFree - byte_4BB8, SSL_CTX_free, 0x234, 0x12, 0, 6>  # "SSL_CTX_free"
                Elf32_Sym <aX509StoreSetDe - byte_4BB8, _X509_STORE_set_default_paths,\  # "X509_STORE_set_default_paths"
                           0, 0x12, 0, 0>
                Elf32_Sym <aErrPutError - byte_4BB8, _ERR_put_error, 0, 0x12, 0, 0>  # "ERR_put_error"
                Elf32_Sym <aSsl3SetupReadB - byte_4BB8, ssl3_setup_read_buffer, 0x1C0,\  # "ssl3_setup_read_buffer"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1Retransmi - byte_4BB8, \  # "dtls1_retransmit_buffered_messages"
                           dtls1_retransmit_buffered_messages, 0x118, 0x12, 0, 6>
                Elf32_Sym <aErrAddErrorDat - byte_4BB8, _ERR_add_error_data, 0, 0x12, \  # "ERR_add_error_data"
                           0, 0>
                Elf32_Sym <aSslGetError - byte_4BB8, SSL_get_error, 0x23C, 0x12, 0, 6>  # "SSL_get_error"
                Elf32_Sym <aBnCopy - byte_4BB8, _BN_copy, 0, 0x12, 0, 0>  # "BN_copy"
                Elf32_Sym <aEvpSha1 - byte_4BB8, _EVP_sha1, 0, 0x12, 0, 0>  # "EVP_sha1"
                Elf32_Sym <aSslCheckClient - byte_4BB8, ssl_check_clienthello_tlsext, \  # "ssl_check_clienthello_tlsext"
                           0x180, 0x12, 0, 6>
                Elf32_Sym <aDtls1SendServe_2 - byte_4BB8, dtls1_send_server_hello, \  # "dtls1_send_server_hello"
                           0x2BC, 0x12, 0, 6>
                Elf32_Sym <aDtls1SendServe - byte_4BB8, dtls1_send_server_done, 0xB0, \  # "dtls1_send_server_done"
                           0x12, 0, 6>
                Elf32_Sym <aBnFree - byte_4BB8, _BN_free, 0, 0x12, 0, 0>  # "BN_free"
                Elf32_Sym <aSslAddServerhe - byte_4BB8, ssl_add_serverhello_tlsext, \  # "ssl_add_serverhello_tlsext"
                           0x484, 0x12, 0, 6>
                Elf32_Sym <aDtls1BufferMes - byte_4BB8, dtls1_buffer_message, 0x254, \  # "dtls1_buffer_message"
                           0x12, 0, 6>
                Elf32_Sym <aLhDelete - byte_4BB8, _lh_delete, 0, 0x12, 0, 0>  # "lh_delete"
                Elf32_Sym <aSsl3Renegotiat - byte_4BB8, ssl3_renegotiate, 0x3C, 0x12, \  # "ssl3_renegotiate"
                           0, 6>
                Elf32_Sym <aEvpAes128Gcm - byte_4BB8, _EVP_aes_128_gcm, 0, 0x12, 0, 0>  # "EVP_aes_128_gcm"
                Elf32_Sym <aPqueuePeek - byte_4BB8, _pqueue_peek, 0, 0x12, 0, 0>  # "pqueue_peek"
                Elf32_Sym <aSslGetCiphers - byte_4BB8, SSL_get_ciphers, 0x38, 0x12, 0,\  # "SSL_get_ciphers"
                           6>
                Elf32_Sym <aSslCallbackCtr - byte_4BB8, SSL_callback_ctrl, 0x28, 0x12,\  # "SSL_callback_ctrl"
                           0, 6>
                Elf32_Sym <aSrpGenerateCli - byte_4BB8, \  # "SRP_generate_client_master_secret"
                           SRP_generate_client_master_secret, 0x284, 0x12, 0, 6>
                Elf32_Sym <aSsl2EncInit - byte_4BB8, ssl2_enc_init, 0x320, 0x12, 0, 6>  # "ssl2_enc_init"
                Elf32_Sym <aCryptoMemCtrl - byte_4BB8, _CRYPTO_mem_ctrl, 0, 0x12, 0, \  # "CRYPTO_mem_ctrl"
                           0>
                Elf32_Sym <aLhNumItems - byte_4BB8, _lh_num_items, 0, 0x12, 0, 0>  # "lh_num_items"
                Elf32_Sym <aTlsv11ServerMe - byte_4BB8, TLSv1_1_server_method, 0x18, \  # "TLSv1_1_server_method"
                           0x12, 0, 6>
                Elf32_Sym <aX509VerifyPara_5 - byte_4BB8, _X509_VERIFY_PARAM_new, 0, \  # "X509_VERIFY_PARAM_new"
                           0x12, 0, 0>
                Elf32_Sym <aTls12GetSigand - byte_4BB8, tls12_get_sigandhash, 0x114, \  # "tls12_get_sigandhash"
                           0x12, 0, 6>
                Elf32_Sym <aPemAsn1Write - byte_4BB8, _PEM_ASN1_write, 0, 0x12, 0, 0>  # "PEM_ASN1_write"
                Elf32_Sym <aSsl3SendAlert - byte_4BB8, ssl3_send_alert, 0xF8, 0x12, 0,\  # "ssl3_send_alert"
                           6>
                Elf32_Sym <aRsaUpRef - byte_4BB8, _RSA_up_ref, 0, 0x12, 0, 0>  # "RSA_up_ref"
                Elf32_Sym <aPemReadBioX509_0 - byte_4BB8, _PEM_read_bio_X509_AUX, 0, \  # "PEM_read_bio_X509_AUX"
                           0x12, 0, 0>
                Elf32_Sym <aSsl2Write - byte_4BB8, ssl2_write, 0x624, 0x12, 0, 6>  # "ssl2_write"
                Elf32_Sym <aBioSConnect - byte_4BB8, _BIO_s_connect, 0, 0x12, 0, 0>  # "BIO_s_connect"
                Elf32_Sym <aSslCtxCtrl - byte_4BB8, SSL_CTX_ctrl, 0x18C, 0x12, 0, 6>  # "SSL_CTX_ctrl"
                Elf32_Sym <aTlsv12ClientMe - byte_4BB8, TLSv1_2_client_method, 0x18, \  # "TLSv1_2_client_method"
                           0x12, 0, 6>
                Elf32_Sym <aSslAddClienthe - byte_4BB8, ssl_add_clienthello_tlsext, \  # "ssl_add_clienthello_tlsext"
                           0x8F8, 0x12, 0, 6>
                Elf32_Sym <aSsl3Accept - byte_4BB8, ssl3_accept, 0xEA4, 0x12, 0, 6>  # "ssl3_accept"
                Elf32_Sym <aSslUsePrivatek - byte_4BB8, SSL_use_PrivateKey, 0xD4, \  # "SSL_use_PrivateKey"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1SendNewse - byte_4BB8, dtls1_send_newsession_ticket, \  # "dtls1_send_newsession_ticket"
                           0x460, 0x12, 0, 6>
                Elf32_Sym <aD2iX509Bio - byte_4BB8, _d2i_X509_bio, 0, 0x12, 0, 0>  # "d2i_X509_bio"
                Elf32_Sym <aStrchr - byte_4BB8, _strchr, 0, 0x12, 0, 0>  # "strchr"
                Elf32_Sym <aDtls1SendHello - byte_4BB8, dtls1_send_hello_request, \  # "dtls1_send_hello_request"
                           0x9C, 0x12, 0, 6>
                Elf32_Sym <aSrpCalcServerK - byte_4BB8, _SRP_Calc_server_key, 0, 0x12,\  # "SRP_Calc_server_key"
                           0, 0>
                Elf32_Sym <aBioIntCtrl - byte_4BB8, _BIO_int_ctrl, 0, 0x12, 0, 0>  # "BIO_int_ctrl"
                Elf32_Sym <aEvpMd5 - byte_4BB8, _EVP_md5, 0, 0x12, 0, 0>  # "EVP_md5"
                Elf32_Sym <aDtls1GetCcsHea - byte_4BB8, dtls1_get_ccs_header, 0x14, \  # "dtls1_get_ccs_header"
                           0x12, 0, 6>
                Elf32_Sym <aSslParseClient - byte_4BB8, ssl_parse_clienthello_tlsext, \  # "ssl_parse_clienthello_tlsext"
                           0x920, 0x12, 0, 6>
                Elf32_Sym <aSslCreateCiphe - byte_4BB8, ssl_create_cipher_list, 0xA78,\  # "ssl_create_cipher_list"
                           0x12, 0, 6>
                Elf32_Sym <aSslSrpServerPa - byte_4BB8, \  # "SSL_srp_server_param_with_username"
                           SSL_srp_server_param_with_username, 0x128, 0x12, 0, 6>
                Elf32_Sym <aSslCertType - byte_4BB8, ssl_cert_type, 0xF0, 0x12, 0, 6>  # "ssl_cert_type"
                Elf32_Sym <aAsn1Getsequenc - byte_4BB8, _asn1_GetSequence, 0, 0x12, 0,\  # "asn1_GetSequence"
                           0>
                Elf32_Sym <aDtls1ProcessHe - byte_4BB8, dtls1_process_heartbeat, \  # "dtls1_process_heartbeat"
                           0x218, 0x12, 0, 6>
                Elf32_Sym <aPemAsn1ReadBio - byte_4BB8, _PEM_ASN1_read_bio, 0, 0x12, \  # "PEM_ASN1_read_bio"
                           0, 0>
                Elf32_Sym <aSsl23WriteByte - byte_4BB8, ssl23_write_bytes, 0xC8, 0x12,\  # "ssl23_write_bytes"
                           0, 6>
                Elf32_Sym <aDtls1GetQueueP - byte_4BB8, dtls1_get_queue_priority, \  # "dtls1_get_queue_priority"
                           0x10, 0x12, 0, 6>
                Elf32_Sym <aEvpDesEde3Cbc - byte_4BB8, _EVP_des_ede3_cbc, 0, 0x12, 0, \  # "EVP_des_ede3_cbc"
                           0>
                Elf32_Sym <aEvpPkeyAssign - byte_4BB8, _EVP_PKEY_assign, 0, 0x12, 0, \  # "EVP_PKEY_assign"
                           0>
                Elf32_Sym <aSslClearCipher - byte_4BB8, ssl_clear_cipher_ctx, 0xC0, \  # "ssl_clear_cipher_ctx"
                           0x12, 0, 6>
                Elf32_Sym <aEvpAes128Cbc - byte_4BB8, _EVP_aes_128_cbc, 0, 0x12, 0, 0>  # "EVP_aes_128_cbc"
                Elf32_Sym <aDtls1DoubleTim - byte_4BB8, dtls1_double_timeout, 0x3C, \  # "dtls1_double_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aBioPop - byte_4BB8, _BIO_pop, 0, 0x12, 0, 0>  # "BIO_pop"
                Elf32_Sym <aEvpDigestfinal - byte_4BB8, _EVP_DigestFinal_ex, 0, 0x12, \  # "EVP_DigestFinal_ex"
                           0, 0>
                Elf32_Sym <aEvpVerifyfinal - byte_4BB8, _EVP_VerifyFinal, 0, 0x12, 0, \  # "EVP_VerifyFinal"
                           0>
                Elf32_Sym <aObjFindSigidAl - byte_4BB8, _OBJ_find_sigid_algs, 0, 0x12,\  # "OBJ_find_sigid_algs"
                           0, 0>
                Elf32_Sym <aDtls1DoWrite - byte_4BB8, dtls1_do_write, 0x674, 0x12, 0, \  # "dtls1_do_write"
                           6>
                Elf32_Sym <aEvpPkeyCopyPar - byte_4BB8, _EVP_PKEY_copy_parameters, 0, \  # "EVP_PKEY_copy_parameters"
                           0x12, 0, 0>
                Elf32_Sym <aSkDelete - byte_4BB8, _sk_delete, 0, 0x12, 0, 0>  # "sk_delete"
                Elf32_Sym <aEvpDigestinitE - byte_4BB8, _EVP_DigestInit_ex, 0, 0x12, \  # "EVP_DigestInit_ex"
                           0, 0>
                Elf32_Sym <aSslUseCertific - byte_4BB8, SSL_use_certificate, 0xD4, \  # "SSL_use_certificate"
                           0x12, 0, 6>
                Elf32_Sym <aSrpCalcX - byte_4BB8, _SRP_Calc_x, 0, 0x12, 0, 0>  # "SRP_Calc_x"
                Elf32_Sym <aSslGetHandshak - byte_4BB8, ssl_get_handshake_digest, \  # "ssl_get_handshake_digest"
                           0x6C, 0x12, 0, 6>
                Elf32_Sym <aRsaFlags - byte_4BB8, _RSA_flags, 0, 0x12, 0, 0>  # "RSA_flags"
                Elf32_Sym <aEvpCipherKeyLe - byte_4BB8, _EVP_CIPHER_key_length, 0, \  # "EVP_CIPHER_key_length"
                           0x12, 0, 0>
                Elf32_Sym <aBioRead - byte_4BB8, _BIO_read, 0, 0x12, 0, 0>  # "BIO_read"
                Elf32_Sym <aSsl3SendChange - byte_4BB8, ssl3_send_change_cipher_spec, \  # "ssl3_send_change_cipher_spec"
                           0x40, 0x12, 0, 6>
                Elf32_Sym <aEvpDigestsignf - byte_4BB8, _EVP_DigestSignFinal, 0, 0x12,\  # "EVP_DigestSignFinal"
                           0, 0>
                Elf32_Sym <aEvpEncryptupda - byte_4BB8, _EVP_EncryptUpdate, 0, 0x12, \  # "EVP_EncryptUpdate"
                           0, 0>
                Elf32_Sym <aX509StoreCtxSe - byte_4BB8, _X509_STORE_CTX_set_ex_data, \  # "X509_STORE_CTX_set_ex_data"
                           0, 0x12, 0, 0>
                Elf32_Sym <aSslReplaceHash - byte_4BB8, ssl_replace_hash, 0x7C, 0x12, \  # "ssl_replace_hash"
                           0, 6>
                Elf32_Sym <aPqueueNew - byte_4BB8, _pqueue_new, 0, 0x12, 0, 0>  # "pqueue_new"
                Elf32_Sym <aSslCtxAddSessi - byte_4BB8, SSL_CTX_add_session, 0x2B4, \  # "SSL_CTX_add_session"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetCertMask - byte_4BB8, ssl_set_cert_masks, 0x3A4, \  # "ssl_set_cert_masks"
                           0x12, 0, 6>
                Elf32_Sym <aI2dSslSession - byte_4BB8, i2d_SSL_SESSION, 0xA30, 0x12, \  # "i2d_SSL_SESSION"
                           0, 6>
                Elf32_Sym <aEvpPkeySignIni - byte_4BB8, _EVP_PKEY_sign_init, 0, 0x12, \  # "EVP_PKEY_sign_init"
                           0, 0>
                Elf32_Sym <aDtls1SendServe_0 - byte_4BB8, \  # "dtls1_send_server_certificate"
                           dtls1_send_server_certificate, 0x108, 0x12, 0, 6>
                Elf32_Sym <aDtls1ClientHel - byte_4BB8, dtls1_client_hello, 0x440, \  # "dtls1_client_hello"
                           0x12, 0, 6>
                Elf32_Sym <aSslVersion - byte_4BB8, SSL_version, 8, 0x12, 0, 6>  # "SSL_version"
                Elf32_Sym <aEvpPkeyCtxCtrl - byte_4BB8, _EVP_PKEY_CTX_ctrl, 0, 0x12, \  # "EVP_PKEY_CTX_ctrl"
                           0, 0>
                Elf32_Sym <aD2iOcspRespid - byte_4BB8, _d2i_OCSP_RESPID, 0, 0x12, 0, \  # "d2i_OCSP_RESPID"
                           0>
                Elf32_Sym <aSslShutdown - byte_4BB8, SSL_shutdown, 0x98, 0x12, 0, 6>  # "SSL_shutdown"
                Elf32_Sym <aEvpAes256Gcm - byte_4BB8, _EVP_aes_256_gcm, 0, 0x12, 0, 0>  # "EVP_aes_256_gcm"
                Elf32_Sym <aEvpDigestsigni - byte_4BB8, _EVP_DigestSignInit, 0, 0x12, \  # "EVP_DigestSignInit"
                           0, 0>
                Elf32_Sym <aSslSetSslMetho - byte_4BB8, SSL_set_ssl_method, 0xF8, \  # "SSL_set_ssl_method"
                           0x12, 0, 6>
                Elf32_Sym <aBioSFile - byte_4BB8, _BIO_s_file, 0, 0x12, 0, 0>  # "BIO_s_file"
                Elf32_Sym <aSslFreeWbioBuf - byte_4BB8, ssl_free_wbio_buffer, 0x74, \  # "ssl_free_wbio_buffer"
                           0x12, 0, 6>
                Elf32_Sym <aEvpEncryptinit - byte_4BB8, _EVP_EncryptInit_ex, 0, 0x12, \  # "EVP_EncryptInit_ex"
                           0, 0>
                Elf32_Sym <aSslv2ServerMet - byte_4BB8, SSLv2_server_method, 0x18, \  # "SSLv2_server_method"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3NumCiphers - byte_4BB8, ssl3_num_ciphers, 8, 0x12, 0, \  # "ssl3_num_ciphers"
                           6>
                Elf32_Sym <aSslAccept - byte_4BB8, SSL_accept, 0x70, 0x12, 0, 6>  # "SSL_accept"
                Elf32_Sym <aSsl3DoChangeCi - byte_4BB8, ssl3_do_change_cipher_spec, \  # "ssl3_do_change_cipher_spec"
                           0x13C, 0x12, 0, 6>
                Elf32_Sym <aEvpPkeyNew - byte_4BB8, _EVP_PKEY_new, 0, 0x12, 0, 0>  # "EVP_PKEY_new"
                Elf32_Sym <aEvpCipher - byte_4BB8, _EVP_Cipher, 0, 0x12, 0, 0>  # "EVP_Cipher"
                Elf32_Sym <aSkNewNull - byte_4BB8, _sk_new_null, 0, 0x12, 0, 0>  # "sk_new_null"
                Elf32_Sym <aDtlsv1ServerMe+1 - byte_4BB8, TLSv1_server_method, 0x18, \  # "TLSv1_server_method"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3CompFind - byte_4BB8, ssl3_comp_find, 0xB0, 0x12, 0, \  # "ssl3_comp_find"
                           6>
                Elf32_Sym <aDtls1Connect - byte_4BB8, dtls1_connect, 0xD28, 0x12, 0, \  # "dtls1_connect"
                           6>
                Elf32_Sym <aSslGetInfoCall - byte_4BB8, SSL_get_info_callback, 8, \  # "SSL_get_info_callback"
                           0x12, 0, 6>
                Elf32_Sym <aAsn1ConstCheck - byte_4BB8, \  # "ASN1_const_check_infinite_end"
                           _ASN1_const_check_infinite_end, 0, 0x12, 0, 0>
                Elf32_Sym <aSslSetVerify - byte_4BB8, SSL_set_verify, 0x14, 0x12, 0, \  # "SSL_set_verify"
                           6>
                Elf32_Sym <aSslCipherIdCmp - byte_4BB8, ssl_cipher_id_cmp, 0x34, 0x12,\  # "ssl_cipher_id_cmp"
                           0, 6>
                Elf32_Sym <aSslCtxCallback - byte_4BB8, SSL_CTX_callback_ctrl, 0x28, \  # "SSL_CTX_callback_ctrl"
                           0x12, 0, 6>
                Elf32_Sym <aEvpMdCtxInit - byte_4BB8, _EVP_MD_CTX_init, 0, 0x12, 0, 0>  # "EVP_MD_CTX_init"
                Elf32_Sym <aSsl3ReleaseWri - byte_4BB8, ssl3_release_write_buffer, \  # "ssl3_release_write_buffer"
                           0x128, 0x12, 0, 6>
                Elf32_Sym <aDtls1SendClien_0 - byte_4BB8, dtls1_send_client_verify, \  # "dtls1_send_client_verify"
                           0x220, 0x12, 0, 6>
                Elf32_Sym <aPqueueSize - byte_4BB8, _pqueue_size, 0, 0x12, 0, 0>  # "pqueue_size"
                Elf32_Sym <aX509Free - byte_4BB8, _X509_NAME_free, 0, 0x12, 0, 0>  # "X509_free"
                Elf32_Sym <aLhInsert - byte_4BB8, _lh_insert, 0, 0x12, 0, 0>  # "lh_insert"
                Elf32_Sym <aX509StoreFree - byte_4BB8, _X509_STORE_free, 0, 0x12, 0, \  # "X509_STORE_free"
                           0>
                Elf32_Sym <aCompCtxNew - byte_4BB8, _COMP_CTX_new, 0, 0x12, 0, 0>  # "COMP_CTX_new"
                Elf32_Sym <aSsl3DoWrite - byte_4BB8, ssl3_do_write, 0x138, 0x12, 0, 6>  # "ssl3_do_write"
                Elf32_Sym <aSrpVerifyBModN - byte_4BB8, _SRP_Verify_B_mod_N, 0, 0x12, \  # "SRP_Verify_B_mod_N"
                           0, 0>
                Elf32_Sym <aSsl3ClientHell - byte_4BB8, ssl3_client_hello, 0x3F0, \  # "ssl3_client_hello"
                           0x12, 0, 6>
                Elf32_Sym <aSsl2NumCiphers - byte_4BB8, ssl2_num_ciphers, 8, 0x12, 0, \  # "ssl2_num_ciphers"
                           6>
                Elf32_Sym <aEvpSignfinal - byte_4BB8, _EVP_SignFinal, 0, 0x12, 0, 0>  # "EVP_SignFinal"
                Elf32_Sym <aSslGetExDataX5 - byte_4BB8, \  # "SSL_get_ex_data_X509_STORE_CTX_idx"
                           SSL_get_ex_data_X509_STORE_CTX_idx, 0x124, 0x12, 0, 6>
                Elf32_Sym <aLhFree - byte_4BB8, _lh_free, 0, 0x12, 0, 0>  # "lh_free"
                Elf32_Sym <aX509CheckPriva - byte_4BB8, _X509_check_private_key, 0, \  # "X509_check_private_key"
                           0x12, 0, 0>
                Elf32_Sym <aDtlsv1Method - byte_4BB8, DTLSv1_method, 0x18, 0x12, 0, 6>  # "DTLSv1_method"
                Elf32_Sym <aBufStrndup - byte_4BB8, _BUF_strndup, 0, 0x12, 0, 0>  # "BUF_strndup"
                Elf32_Sym <aSsl3SendCertSt - byte_4BB8, ssl3_send_cert_status, 0x114, \  # "ssl3_send_cert_status"
                           0x12, 0, 6>
                Elf32_Sym <aLhDoallArg - byte_4BB8, _lh_doall_arg, 0, 0x12, 0, 0>  # "lh_doall_arg"
                Elf32_Sym <aSslCipherGetEv - byte_4BB8, ssl_cipher_get_evp, 0x420, \  # "ssl_cipher_get_evp"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3CtxCallbac - byte_4BB8, ssl3_ctx_callback_ctrl, 0xE4, \  # "ssl3_ctx_callback_ctrl"
                           0x12, 0, 6>
                Elf32_Sym <aBioFindType - byte_4BB8, _BIO_find_type, 0, 0x12, 0, 0>  # "BIO_find_type"
                Elf32_Sym <aEvpDecryptupda - byte_4BB8, _EVP_DecryptUpdate, 0, 0x12, \  # "EVP_DecryptUpdate"
                           0, 0>
                Elf32_Sym <aSsl3GetClientH - byte_4BB8, ssl3_get_client_hello, 0xBD0, \  # "ssl3_get_client_hello"
                           0x12, 0, 6>
                Elf32_Sym <aSsl2ReturnErro - byte_4BB8, ssl2_return_error, 0x30, 0x12,\  # "ssl2_return_error"
                           0, 6>
                Elf32_Sym <aSsl3New - byte_4BB8, ssl3_new, 0xC4, 0x12, 0, 6>  # "ssl3_new"
                Elf32_Sym <aX509StoreCtxSe_1 - byte_4BB8, \  # "X509_STORE_CTX_set_verify_cb"
                           _X509_STORE_CTX_set_verify_cb, 0, 0x12, 0, 0>
                Elf32_Sym <aSsl3SendServer_2 - byte_4BB8, ssl3_send_server_hello, \  # "ssl3_send_server_hello"
                           0x290, 0x12, 0, 6>
                Elf32_Sym <aI2dAsn1Integer - byte_4BB8, _i2d_ASN1_INTEGER, 0, 0x12, 0,\  # "i2d_ASN1_INTEGER"
                           0>
                Elf32_Sym <aSsl3GetServerD - byte_4BB8, ssl3_get_server_done, 0xC4, \  # "ssl3_get_server_done"
                           0x12, 0, 6>
                Elf32_Sym <aEvpDesCbc - byte_4BB8, _EVP_des_cbc, 0, 0x12, 0, 0>  # "EVP_des_cbc"
                Elf32_Sym <aCryptoAddLock - byte_4BB8, _CRYPTO_add_lock, 0, 0x12, 0, \  # "CRYPTO_add_lock"
                           0>
                Elf32_Sym <aSslGetServerSe - byte_4BB8, ssl_get_server_send_cert, \  # "ssl_get_server_send_cert"
                           0x128, 0x12, 0, 6>
                Elf32_Sym <aMemcmp - byte_4BB8, _memcmp, 0, 0x12, 0, 0>  # "memcmp"
                Elf32_Sym <aSslSessCertFre - byte_4BB8, ssl_sess_cert_free, 0x16C, \  # "ssl_sess_cert_free"
                           0x12, 0, 6>
                Elf32_Sym <aAbort - byte_4BB8, _abort, 0, 0x12, 0, 0>  # "abort"
                Elf32_Sym <aTls12GetReqSig - byte_4BB8, tls12_get_req_sig_algs, 0x70, \  # "tls12_get_req_sig_algs"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1ReadFaile - byte_4BB8, dtls1_read_failed, 0xE8, 0x12,\  # "dtls1_read_failed"
                           0, 6>
                Elf32_Sym <aSrpCalcAParam - byte_4BB8, SRP_Calc_A_param, 0x124, 0x12, \  # "SRP_Calc_A_param"
                           0, 6>
                Elf32_Sym <aSslGetSslCtx - byte_4BB8, SSL_get_SSL_CTX, 8, 0x12, 0, 6>  # "SSL_get_SSL_CTX"
                Elf32_Sym <aBioCallbackCtr - byte_4BB8, _BIO_callback_ctrl, 0, 0x12, \  # "BIO_callback_ctrl"
                           0, 0>
                Elf32_Sym <aEvpDss1 - byte_4BB8, _EVP_dss1, 0, 0x12, 0, 0>  # "EVP_dss1"
                Elf32_Sym <aEvpPkeyEncrypt_0 - byte_4BB8, _EVP_PKEY_encrypt, 0, 0x12, \  # "EVP_PKEY_encrypt"
                           0, 0>
                Elf32_Sym <aSslCertNew - byte_4BB8, ssl_cert_new, 0xD4, 0x12, 0, 6>  # "ssl_cert_new"
                Elf32_Sym <aX509VerifyPara_0 - byte_4BB8, \  # "X509_VERIFY_PARAM_get_depth"
                           _X509_VERIFY_PARAM_get_depth, 0, 0x12, 0, 0>
                Elf32_Sym <aBufMemFree - byte_4BB8, _BUF_MEM_free, 0, 0x12, 0, 0>  # "BUF_MEM_free"
                Elf32_Sym <aRandPseudoByte - byte_4BB8, _RAND_pseudo_bytes, 0, 0x12, \  # "RAND_pseudo_bytes"
                           0, 0>
                Elf32_Sym <aPqueueFree - byte_4BB8, _pqueue_free, 0, 0x12, 0, 0>  # "pqueue_free"
                Elf32_Sym <aSsl2GetCipherB - byte_4BB8, ssl2_get_cipher_by_char, 0x88,\  # "ssl2_get_cipher_by_char"
                           0x12, 0, 6>
                Elf32_Sym <aX509VerifyPara_1 - byte_4BB8, _X509_VERIFY_PARAM_set1, 0, \  # "X509_VERIFY_PARAM_set1"
                           0x12, 0, 0>
                Elf32_Sym <aSslSessionPrin - byte_4BB8, SSL_SESSION_print, 0x56C, \  # "SSL_SESSION_print"
                           0x12, 0, 6>
                Elf32_Sym <aSrpCalcClientK - byte_4BB8, _SRP_Calc_client_key, 0, 0x12,\  # "SRP_Calc_client_key"
                           0, 0>
                Elf32_Sym <aBnDup - byte_4BB8, _BN_dup, 0, 0x12, 0, 0>  # "BN_dup"
                Elf32_Sym <aFprintf - byte_4BB8, _fprintf, 0, 0x12, 0, 0>  # "fprintf"
                Elf32_Sym <aSslWrite - byte_4BB8, SSL_write, 0x98, 0x12, 0, 6>  # "SSL_write"
                Elf32_Sym <aSsl3FinishMac - byte_4BB8, ssl3_finish_mac, 0x15C, 0x12, \  # "ssl3_finish_mac"
                           0, 6>
                Elf32_Sym <aSslCtxUseCerti - byte_4BB8, SSL_CTX_use_certificate, 0xD4,\  # "SSL_CTX_use_certificate"
                           0x12, 0, 6>
                Elf32_Sym <aEvpGetDigestby - byte_4BB8, _EVP_get_digestbyname, 0, \  # "EVP_get_digestbyname"
                           0x12, 0, 0>
                Elf32_Sym <aSslNew - byte_4BB8, SSL_new, 0x388, 0x12, 0, 6>  # "SSL_new"
                Elf32_Sym <aSsl3SendClient_1 - byte_4BB8, \  # "ssl3_send_client_key_exchange"
                           ssl3_send_client_key_exchange, 0x620, 0x12, 0, 6>
                Elf32_Sym <aBioPrintf - byte_4BB8, _BIO_printf, 0, 0x12, 0, 0>  # "BIO_printf"
                Elf32_Sym <aD2iPrivatekey - byte_4BB8, _d2i_PrivateKey, 0, 0x12, 0, 0>  # "d2i_PrivateKey"
                Elf32_Sym <aI2dX509Name - byte_4BB8, _i2d_X509_NAME, 0, 0x12, 0, 0>  # "i2d_X509_NAME"
                Elf32_Sym <aSslDoHandshake - byte_4BB8, SSL_do_handshake, 0xC0, 0x12, \  # "SSL_do_handshake"
                           0, 6>
                Elf32_Sym <aX509StoreCtxSe_0 - byte_4BB8, _X509_STORE_CTX_set_default,\  # "X509_STORE_CTX_set_default"
                           0, 0x12, 0, 0>
                Elf32_Sym <aX509GetPubkey - byte_4BB8, _X509_get_pubkey, 0, 0x12, 0, \  # "X509_get_pubkey"
                           0>
                Elf32_Sym <aSslClear - byte_4BB8, SSL_clear, 0x1B8, 0x12, 0, 6>  # "SSL_clear"
                Elf32_Sym <aSslGetVerifyMo - byte_4BB8, SSL_get_verify_mode, 8, 0x12, \  # "SSL_get_verify_mode"
                           0, 6>
                Elf32_Sym <aMemset - byte_4BB8, _memset, 0, 0x12, 0, 0>  # "memset"
                Elf32_Sym <aBioWrite - byte_4BB8, _BIO_write, 0, 0x12, 0, 0>  # "BIO_write"
                Elf32_Sym <aSsl2PartRead - byte_4BB8, ssl2_part_read, 0x11C, 0x12, 0, \  # "ssl2_part_read"
                           6>
                Elf32_Sym <aSslGetClientCa - byte_4BB8, SSL_get_client_CA_list, 0x60, \  # "SSL_get_client_CA_list"
                           0x12, 0, 6>
                Elf32_Sym <aOpensslDirEnd - byte_4BB8, _OPENSSL_DIR_end, 0, 0x12, 0, \  # "OPENSSL_DIR_end"
                           0>
                Elf32_Sym <aSsl2Ciphers - byte_4BB8, ssl2_ciphers, 0x120, 0x11, 0, 9>  # "ssl2_ciphers"
                Elf32_Sym <aDtls1StartTime - byte_4BB8, dtls1_start_timer, 0xA0, 0x12,\  # "dtls1_start_timer"
                           0, 6>
                Elf32_Sym <aEvpMdCtxSetFla - byte_4BB8, _EVP_MD_CTX_set_flags, 0, \  # "EVP_MD_CTX_set_flags"
                           0x12, 0, 0>
                Elf32_Sym <aSslCipherPtrId - byte_4BB8, ssl_cipher_ptr_id_cmp, 0x3C, \  # "ssl_cipher_ptr_id_cmp"
                           0x12, 0, 6>
                Elf32_Sym <aX509VerifyPara_4 - byte_4BB8, _X509_VERIFY_PARAM_free, 0, \  # "X509_VERIFY_PARAM_free"
                           0x12, 0, 0>
                Elf32_Sym <aSslParseServer_0 - byte_4BB8, \  # "ssl_parse_serverhello_renegotiate_ext"
                           ssl_parse_serverhello_renegotiate_ext, 0x1D4, 0x12, 0, 6>
                Elf32_Sym <aDtls1WriteByte - byte_4BB8, dtls1_write_bytes, 0xA4, 0x12,\  # "dtls1_write_bytes"
                           0, 6>
                Elf32_Sym <aSslInitWbioBuf - byte_4BB8, ssl_init_wbio_buffer, 0x190, \  # "ssl_init_wbio_buffer"
                           0x12, 0, 6>
                Elf32_Sym <aBufMemdup - byte_4BB8, _BUF_memdup, 0, 0x12, 0, 0>  # "BUF_memdup"
                Elf32_Sym <aSsl3GetCertifi - byte_4BB8, ssl3_get_certificate_request, \  # "ssl3_get_certificate_request"
                           0x5C0, 0x12, 0, 6>
                Elf32_Sym <aBufMemGrowClea - byte_4BB8, _BUF_MEM_grow_clean, 0, 0x12, \  # "BUF_MEM_grow_clean"
                           0, 0>
                Elf32_Sym <aErrPeekError - byte_4BB8, _ERR_peek_error, 0, 0x12, 0, 0>  # "ERR_peek_error"
                Elf32_Sym <aSsl3DigestCach - byte_4BB8, ssl3_digest_cached_records, \  # "ssl3_digest_cached_records"
                           0x27C, 0x12, 0, 6>
                Elf32_Sym <aEvpDigest - byte_4BB8, _EVP_Digest, 0, 0x12, 0, 0>  # "EVP_Digest"
                Elf32_Sym <aSslPrepareServ - byte_4BB8, \  # "ssl_prepare_serverhello_tlsext"
                           ssl_prepare_serverhello_tlsext, 8, 0x12, 0, 6>
                Elf32_Sym <aEvpPkeyFree - byte_4BB8, _EVP_PKEY_free, 0, 0x12, 0, 0>  # "EVP_PKEY_free"
                Elf32_Sym <aSslSetPeerCert - byte_4BB8, ssl_set_peer_cert_type, 0xC, \  # "ssl_set_peer_cert_type"
                           0x12, 0, 6>
                Elf32_Sym <aAsn1PutObject - byte_4BB8, _ASN1_put_object, 0, 0x12, 0, \  # "ASN1_put_object"
                           0>
                Elf32_Sym <aSrpCheckKnownG - byte_4BB8, _SRP_check_known_gN_param, 0, \  # "SRP_check_known_gN_param"
                           0x12, 0, 0>
                Elf32_Sym <aSsl3SetupBuffe - byte_4BB8, ssl3_setup_buffers, 0x54, \  # "ssl3_setup_buffers"
                           0x12, 0, 6>
                Elf32_Sym <aSslHasMatching - byte_4BB8, SSL_has_matching_session_id, \  # "SSL_has_matching_session_id"
                           0x130, 0x12, 0, 6>
                Elf32_Sym <aObjNameAdd - byte_4BB8, _OBJ_NAME_add, 0, 0x12, 0, 0>  # "OBJ_NAME_add"
                Elf32_Sym <aBioNewSsl - byte_4BB8, BIO_new_ssl, 0xE0, 0x12, 0, 6>  # "BIO_new_ssl"
                Elf32_Sym <aD2iX509 - byte_4BB8, _d2i_X509, 0, 0x12, 0, 0>  # "d2i_X509"
                Elf32_Sym <aDtlsv1ClientMe - byte_4BB8, DTLSv1_client_method, 0x18, \  # "DTLSv1_client_method"
                           0x12, 0, 6>
                Elf32_Sym <aSkNum - byte_4BB8, _sk_num, 0, 0x12, 0, 0>  # "sk_num"
                Elf32_Sym <aSslGetWbio - byte_4BB8, SSL_get_wbio, 8, 0x12, 0, 6>  # "SSL_get_wbio"
                Elf32_Sym <aPemAsn1WriteBi - byte_4BB8, _PEM_ASN1_write_bio, 0, 0x12, \  # "PEM_ASN1_write_bio"
                           0, 0>
                Elf32_Sym <aSsl3SendNewses - byte_4BB8, ssl3_send_newsession_ticket, \  # "ssl3_send_newsession_ticket"
                           0x52C, 0x12, 0, 6>
                Elf32_Sym <aEvpPkeyVerify - byte_4BB8, _EVP_PKEY_verify, 0, 0x12, 0, \  # "EVP_PKEY_verify"
                           0>
                Elf32_Sym <aBioNewSslConne - byte_4BB8, BIO_new_ssl_connect, 0xCC, \  # "BIO_new_ssl_connect"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1StopTimer - byte_4BB8, dtls1_stop_timer, 0x90, 0x12, \  # "dtls1_stop_timer"
                           0, 6>
                Elf32_Sym <aAsn1IntegerGet - byte_4BB8, _ASN1_INTEGER_get, 0, 0x12, 0,\  # "ASN1_INTEGER_get"
                           0>
                Elf32_Sym <aSslSetReadAhea - byte_4BB8, SSL_set_read_ahead, 8, 0x12, \  # "SSL_set_read_ahead"
                           0, 6>
                Elf32_Sym <aBioDumpIndent - byte_4BB8, _BIO_dump_indent, 0, 0x12, 0, \  # "BIO_dump_indent"
                           0>
                Elf32_Sym <aEvpMdCtxDestro - byte_4BB8, _EVP_MD_CTX_destroy, 0, 0x12, \  # "EVP_MD_CTX_destroy"
                           0, 0>
                Elf32_Sym <aDtls1Heartbeat+1 - byte_4BB8, tls1_heartbeat, 0x1D0, 0x12,\  # "tls1_heartbeat"
                           0, 6>
                Elf32_Sym <aEvpCipherCtxKe - byte_4BB8, _EVP_CIPHER_CTX_key_length, 0,\  # "EVP_CIPHER_CTX_key_length"
                           0x12, 0, 0>
                Elf32_Sym <aX509VerifyPara_2 - byte_4BB8, \  # "X509_VERIFY_PARAM_set_trust"
                           _X509_VERIFY_PARAM_set_trust, 0, 0x12, 0, 0>
                Elf32_Sym <aSsl3WriteBytes - byte_4BB8, ssl3_write_bytes, 0x1CC, 0x12,\  # "ssl3_write_bytes"
                           0, 6>
                Elf32_Sym <aSsl3Ctrl - byte_4BB8, ssl3_ctrl, 0x3AC, 0x12, 0, 6>  # "ssl3_ctrl"
                Elf32_Sym <aTls12GetHash - byte_4BB8, tls12_get_hash, 0x88, 0x12, 0, \  # "tls12_get_hash"
                           6>
                Elf32_Sym <aBnClearFree - byte_4BB8, _BN_clear_free, 0, 0x12, 0, 0>  # "BN_clear_free"
                Elf32_Sym <aEvpPkeyVerifyI - byte_4BB8, _EVP_PKEY_verify_init, 0, \  # "EVP_PKEY_verify_init"
                           0x12, 0, 0>
                Elf32_Sym <aEvpCipherCtxCi - byte_4BB8, _EVP_CIPHER_CTX_cipher, 0, \  # "EVP_CIPHER_CTX_cipher"
                           0x12, 0, 0>
                Elf32_Sym <aCompZlib - byte_4BB8, _COMP_zlib, 0, 0x12, 0, 0>  # "COMP_zlib"
                Elf32_Sym <aSkDup - byte_4BB8, _sk_dup, 0, 0x12, 0, 0>  # "sk_dup"
                Elf32_Sym <aTlsv11ClientMe - byte_4BB8, TLSv1_1_client_method, 0x18, \  # "TLSv1_1_client_method"
                           0x12, 0, 6>
                Elf32_Sym <aErrPeekLastErr - byte_4BB8, _ERR_peek_last_error, 0, 0x12,\  # "ERR_peek_last_error"
                           0, 0>
                Elf32_Sym <aSsl3CheckFinis - byte_4BB8, ssl3_check_finished, 0xB8, \  # "ssl3_check_finished"
                           0x12, 0, 6>
                Elf32_Sym <aSkSet - byte_4BB8, _sk_set, 0, 0x12, 0, 0>  # "sk_set"
                Elf32_Sym <aEvpMdType - byte_4BB8, _EVP_MD_type, 0, 0x12, 0, 0>  # "EVP_MD_type"
                Elf32_Sym <aEvpDecryptinit - byte_4BB8, _EVP_DecryptInit_ex, 0, 0x12, \  # "EVP_DecryptInit_ex"
                           0, 0>
                Elf32_Sym <aSslCheckServer - byte_4BB8, ssl_check_serverhello_tlsext, \  # "ssl_check_serverhello_tlsext"
                           0x19C, 0x12, 0, 6>
                Elf32_Sym <aSsl2GetCipher - byte_4BB8, ssl2_get_cipher, 0x40, 0x12, 0,\  # "ssl2_get_cipher"
                           6>
                Elf32_Sym <aDtls1GetMessag_0 - byte_4BB8, dtls1_get_message_header, \  # "dtls1_get_message_header"
                           0xB8, 0x12, 0, 6>
                Elf32_Sym <aSsl2GenerateKe - byte_4BB8, ssl2_generate_key_material, \  # "ssl2_generate_key_material"
                           0x278, 0x12, 0, 6>
                Elf32_Sym <aSsl3SendFinish - byte_4BB8, ssl3_send_finished, 0x1C4, \  # "ssl3_send_finished"
                           0x12, 0, 6>
                Elf32_Sym <aD2iRsaprivatek_0 - byte_4BB8, _d2i_RSAPrivateKey_bio, 0, \  # "d2i_RSAPrivateKey_bio"
                           0x12, 0, 0>
                Elf32_Sym <aSslSrpCtxInit - byte_4BB8, SSL_SRP_CTX_init, 0x2D8, 0x12, \  # "SSL_SRP_CTX_init"
                           0, 6>
                Elf32_Sym <aRandAdd - byte_4BB8, _RAND_add, 0, 0x12, 0, 0>  # "RAND_add"
                Elf32_Sym <aEvpAes256Cbc - byte_4BB8, _EVP_aes_256_cbc, 0, 0x12, 0, 0>  # "EVP_aes_256_cbc"
                Elf32_Sym <aDtls1Listen - byte_4BB8, dtls1_listen, 0xA4, 0x12, 0, 6>  # "dtls1_listen"
                Elf32_Sym <aD2iAsn1Integer - byte_4BB8, _d2i_ASN1_INTEGER, 0, 0x12, 0,\  # "d2i_ASN1_INTEGER"
                           0>
                Elf32_Sym <aHmacCtxCleanup - byte_4BB8, _HMAC_CTX_cleanup, 0, 0x12, 0,\  # "HMAC_CTX_cleanup"
                           0>
                Elf32_Sym <aSsl3DoUncompre - byte_4BB8, ssl3_do_uncompress, 0x80, \  # "ssl3_do_uncompress"
                           0x12, 0, 6>
                Elf32_Sym <aX509ExtensionF - byte_4BB8, _X509_NAME_free, 0, 0x12, 0, \  # "X509_EXTENSION_free"
                           0>
                Elf32_Sym <aBioSnprintf - byte_4BB8, _BIO_snprintf, 0, 0x12, 0, 0>  # "BIO_snprintf"
                Elf32_Sym <aRsaFree - byte_4BB8, _RSA_free, 0, 0x12, 0, 0>  # "RSA_free"
                Elf32_Sym <aSsl3PutCipherB - byte_4BB8, ssl3_put_cipher_by_char, 0x40,\  # "ssl3_put_cipher_by_char"
                           0x12, 0, 6>
                Elf32_Sym <aCryptoSetExDat - byte_4BB8, _CRYPTO_set_ex_data, 0, 0x12, \  # "CRYPTO_set_ex_data"
                           0, 0>
                Elf32_Sym <aSslCipherListT - byte_4BB8, ssl_cipher_list_to_bytes, \  # "ssl_cipher_list_to_bytes"
                           0x1C0, 0x12, 0, 6>
                Elf32_Sym <aSkFind - byte_4BB8, _sk_find, 0, 0x12, 0, 0>  # "sk_find"
                Elf32_Sym <aD2iRsaprivatek - byte_4BB8, _d2i_RSAPrivateKey, 0, 0x12, \  # "d2i_RSAPrivateKey"
                           0, 0>
                Elf32_Sym <aSslCompGetComp - byte_4BB8, \  # "SSL_COMP_get_compression_methods"
                           SSL_COMP_get_compression_methods, 0x40, 0x12, 0, 6>
                Elf32_Sym <aDtls1IsTimerEx - byte_4BB8, dtls1_is_timer_expired, 0x58, \  # "dtls1_is_timer_expired"
                           0x12, 0, 6>
                Elf32_Sym <aSslSrpCtxFree - byte_4BB8, SSL_SRP_CTX_free, 0x120, 0x12, \  # "SSL_SRP_CTX_free"
                           0, 6>
                Elf32_Sym <aSsl3SendServer_0 - byte_4BB8, \  # "ssl3_send_server_certificate"
                           ssl3_send_server_certificate, 0xF8, 0x12, 0, 6>
                Elf32_Sym <aEvpRc4 - byte_4BB8, _EVP_rc4, 0, 0x12, 0, 0>  # "EVP_rc4"
                Elf32_Sym <aTlsv12Method - byte_4BB8, TLSv1_2_method, 0x18, 0x12, 0, \  # "TLSv1_2_method"
                           6>
                Elf32_Sym <aX509CheckPurpo - byte_4BB8, _X509_check_purpose, 0, 0x12, \  # "X509_check_purpose"
                           0, 0>
                Elf32_Sym <aDtls1ResetSeqN - byte_4BB8, dtls1_reset_seq_numbers, 0xE0,\  # "dtls1_reset_seq_numbers"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetReadAhea - byte_4BB8, SSL_get_read_ahead, 8, 0x12, \  # "SSL_get_read_ahead"
                           0, 6>
                Elf32_Sym <aEvpAes128CbcHm - byte_4BB8, _EVP_aes_128_cbc_hmac_sha1, 0,\  # "EVP_aes_128_cbc_hmac_sha1"
                           0x12, 0, 0>
                Elf32_Sym <aX509VerifyPara_3 - byte_4BB8, \  # "X509_VERIFY_PARAM_set_purpose"
                           _X509_VERIFY_PARAM_set_purpose, 0, 0x12, 0, 0>
                Elf32_Sym <aSslCtxFlushSes - byte_4BB8, SSL_CTX_flush_sessions, 0xB4, \  # "SSL_CTX_flush_sessions"
                           0x12, 0, 6>
                Elf32_Sym <aRsaNew - byte_4BB8, _RSA_new, 0, 0x12, 0, 0>  # "RSA_new"
                Elf32_Sym <aCompExpandBloc - byte_4BB8, _COMP_expand_block, 0, 0x12, \  # "COMP_expand_block"
                           0, 0>
                Elf32_Sym <aDtls1SendClien_1 - byte_4BB8, \  # "dtls1_send_client_key_exchange"
                           dtls1_send_client_key_exchange, 0x28C, 0x12, 0, 6>
                Elf32_Sym <aBioPush - byte_4BB8, _BIO_push, 0, 0x12, 0, 0>  # "BIO_push"
                Elf32_Sym <aBufStrdup - byte_4BB8, _BUF_strdup, 0, 0x12, 0, 0>  # "BUF_strdup"
                Elf32_Sym <aStderr - byte_4BB8, _X509_NAME_free, 0, 0x11, 0, 0>  # "stderr"
                Elf32_Sym <aSslAddFileCert - byte_4BB8, \  # "SSL_add_file_cert_subjects_to_stack"
                           SSL_add_file_cert_subjects_to_stack, 0x1F4, 0x12, 0, 6>
                Elf32_Sym <aEvpCipherinitE - byte_4BB8, _EVP_CipherInit_ex, 0, 0x12, \  # "EVP_CipherInit_ex"
                           0, 0>
                Elf32_Sym <aSslSessionGetT_0+0x10 - byte_4BB8, _time, 0, 0x12, 0, 0>  # "time"
                Elf32_Sym <aSslCertDup - byte_4BB8, ssl_cert_dup, 0x208, 0x12, 0, 6>  # "ssl_cert_dup"
                Elf32_Sym <aSslAddServerhe_0 - byte_4BB8, \  # "ssl_add_serverhello_renegotiate_ext"
                           ssl_add_serverhello_renegotiate_ext, 0x10C, 0x12, 0, 6>
                Elf32_Sym <aSsl3GetReqCert - byte_4BB8, ssl3_get_req_cert_type, 0x18, \  # "ssl3_get_req_cert_type"
                           0x12, 0, 6>
                Elf32_Sym <aEvpCipherCtxCl - byte_4BB8, _EVP_CIPHER_CTX_cleanup, 0, \  # "EVP_CIPHER_CTX_cleanup"
                           0x12, 0, 0>
                Elf32_Sym <aSsl3GetNextPro - byte_4BB8, ssl3_get_next_proto, 0x198, \  # "ssl3_get_next_proto"
                           0x12, 0, 6>
                Elf32_Sym <aSslWant - byte_4BB8, SSL_want, 8, 0x12, 0, 6>  # "SSL_want"
                Elf32_Sym <aX509Certificat - byte_4BB8, _X509_certificate_type, 0, \  # "X509_certificate_type"
                           0x12, 0, 0>
                Elf32_Sym <aAsn1ObjectSize - byte_4BB8, _ASN1_object_size, 0, 0x12, 0,\  # "ASN1_object_size"
                           0>
                Elf32_Sym <aObjNid2sn - byte_4BB8, _OBJ_nid2sn, 0, 0x12, 0, 0>  # "OBJ_nid2sn"
                Elf32_Sym <aEvpMdCtxCleanu - byte_4BB8, _EVP_MD_CTX_cleanup, 0, 0x12, \  # "EVP_MD_CTX_cleanup"
                           0, 0>
                Elf32_Sym <aX509VerifyCert_0 - byte_4BB8, \  # "X509_verify_cert_error_string"
                           _X509_verify_cert_error_string, 0, 0x12, 0, 0>
                Elf32_Sym <aEvpPkeyDecrypt_0 - byte_4BB8, _EVP_PKEY_decrypt, 0, 0x12, \  # "EVP_PKEY_decrypt"
                           0, 0>
                Elf32_Sym <aSslParseServer - byte_4BB8, ssl_parse_serverhello_tlsext, \  # "ssl_parse_serverhello_tlsext"
                           0x4F8, 0x12, 0, 6>
                Elf32_Sym <aSslPending - byte_4BB8, SSL_pending, 0x10, 0x12, 0, 6>  # "SSL_pending"
                Elf32_Sym <aEvpPkeySize - byte_4BB8, _EVP_PKEY_size, 0, 0x12, 0, 0>  # "EVP_PKEY_size"
                Elf32_Sym <aEvpMdCtxMd - byte_4BB8, _EVP_MD_CTX_md, 0, 0x12, 0, 0>  # "EVP_MD_CTX_md"
                Elf32_Sym <aDtls1GetTimeou - byte_4BB8, dtls1_get_timeout, 0x138, \  # "dtls1_get_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1ProcessHe+1 - byte_4BB8, tls1_process_heartbeat, \  # "tls1_process_heartbeat"
                           0x204, 0x12, 0, 6>
                Elf32_Sym <aSkSort - byte_4BB8, _sk_sort, 0, 0x12, 0, 0>  # "sk_sort"
                Elf32_Sym <aSslGetAlgorith - byte_4BB8, ssl_get_algorithm2, 0x48, \  # "ssl_get_algorithm2"
                           0x12, 0, 6>
                Elf32_Sym <aSslCtxUsePriva - byte_4BB8, SSL_CTX_use_PrivateKey, 0xD4, \  # "SSL_CTX_use_PrivateKey"
                           0x12, 0, 6>
                Elf32_Sym <aBnBin2bn - byte_4BB8, _BN_bin2bn, 0, 0x12, 0, 0>  # "BN_bin2bn"
                Elf32_Sym <aOcspRespidFree - byte_4BB8, _X509_NAME_free, 0, 0x12, 0, \  # "OCSP_RESPID_free"
                           0>
                Elf32_Sym <aPitemFree - byte_4BB8, _pitem_free, 0, 0x12, 0, 0>  # "pitem_free"
                Elf32_Sym <aEvpPkeyBits - byte_4BB8, _EVP_PKEY_bits, 0, 0x12, 0, 0>  # "EVP_PKEY_bits"
                Elf32_Sym <aRandBytes - byte_4BB8, _RAND_bytes, 0, 0x12, 0, 0>  # "RAND_bytes"
                Elf32_Sym <aDoDtls1Write - byte_4BB8, do_dtls1_write, 0x41C, 0x12, 0, \  # "do_dtls1_write"
                           6>
                Elf32_Sym <aSslGetPrevSess - byte_4BB8, ssl_get_prev_session, 0x448, \  # "ssl_get_prev_session"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3GetCipher - byte_4BB8, ssl3_get_cipher, 0x40, 0x12, 0,\  # "ssl3_get_cipher"
                           6>
                Elf32_Sym <aSslRead - byte_4BB8, SSL_read, 0x88, 0x12, 0, 6>  # "SSL_read"
                Elf32_Sym <aCompCompressBl - byte_4BB8, _COMP_compress_block, 0, 0x12,\  # "COMP_compress_block"
                           0, 0>
                Elf32_Sym <aD2iX509Extensi - byte_4BB8, _d2i_X509_EXTENSIONS, 0, 0x12,\  # "d2i_X509_EXTENSIONS"
                           0, 0>
                Elf32_Sym <aHmacInitEx - byte_4BB8, _HMAC_Init_ex, 0, 0x12, 0, 0>  # "HMAC_Init_ex"
                Elf32_Sym <aSsl2New - byte_4BB8, ssl2_new, 0x14C, 0x12, 0, 6>  # "ssl2_new"
                Elf32_Sym <aDtls1SetMessag - byte_4BB8, dtls1_set_message_header, \  # "dtls1_set_message_header"
                           0x78, 0x12, 0, 6>
                Elf32_Sym <aX509VerifyCert - byte_4BB8, _X509_verify_cert, 0, 0x12, 0,\  # "X509_verify_cert"
                           0>
                Elf32_Sym <aDtlsv1ServerMe - byte_4BB8, DTLSv1_server_method, 0x18, \  # "DTLSv1_server_method"
                           0x12, 0, 6>
                Elf32_Sym <aBioSetFlags - byte_4BB8, _BIO_set_flags, 0, 0x12, 0, 0>  # "BIO_set_flags"
                Elf32_Sym <aSslSessionNew - byte_4BB8, SSL_SESSION_new, 0xE8, 0x12, 0,\  # "SSL_SESSION_new"
                           6>
                Elf32_Sym <aBioFBuffer - byte_4BB8, _BIO_f_buffer, 0, 0x12, 0, 0>  # "BIO_f_buffer"
                Elf32_Sym <aSkShift - byte_4BB8, _sk_shift, 0, 0x12, 0, 0>  # "sk_shift"
                Elf32_Sym <aSsl3Shutdown - byte_4BB8, ssl3_shutdown, 0x144, 0x12, 0, \  # "ssl3_shutdown"
                           6>
                Elf32_Sym <aMemmove - byte_4BB8, _memmove, 0, 0x12, 0, 0>  # "memmove"
                Elf32_Sym <aSslSetAcceptSt - byte_4BB8, SSL_set_accept_state, 0x74, \  # "SSL_set_accept_state"
                           0x12, 0, 6>
                Elf32_Sym <aX509StoreCtxCl - byte_4BB8, _X509_STORE_CTX_cleanup, 0, \  # "X509_STORE_CTX_cleanup"
                           0x12, 0, 0>
                Elf32_Sym <aTls1ProcessSig - byte_4BB8, tls1_process_sigalgs, 0x178, \  # "tls1_process_sigalgs"
                           0x12, 0, 6>
                Elf32_Sym <aSslv3Method - byte_4BB8, SSLv3_method, 0x18, 0x12, 0, 6>  # "SSLv3_method"
                Elf32_Sym <aSslSetConnectS - byte_4BB8, SSL_set_connect_state, 0x70, \  # "SSL_set_connect_state"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3CheckClien - byte_4BB8, ssl3_check_client_hello, 0xE0,\  # "ssl3_check_client_hello"
                           0x12, 0, 6>
                Elf32_Sym <aEvpSha512 - byte_4BB8, _EVP_sha512, 0, 0x12, 0, 0>  # "EVP_sha512"
                Elf32_Sym <aSsl3DoCompress - byte_4BB8, ssl3_do_compress, 0x80, 0x12, \  # "ssl3_do_compress"
                           0, 6>
                Elf32_Sym <aEvpCipherCtxCt - byte_4BB8, _EVP_CIPHER_CTX_ctrl, 0, 0x12,\  # "EVP_CIPHER_CTX_ctrl"
                           0, 0>
                Elf32_Sym <aSsl23GetClient - byte_4BB8, ssl23_get_client_hello, 0x960,\  # "ssl23_get_client_hello"
                           0x12, 0, 6>
                Elf32_Sym <aSsl2Accept - byte_4BB8, ssl2_accept, 0x1550, 0x12, 0, 6>  # "ssl2_accept"
                Elf32_Sym <aEvpSha224 - byte_4BB8, _EVP_sha224, 0, 0x12, 0, 0>  # "EVP_sha224"
                Elf32_Sym <aEvpMdCtxCopyEx - byte_4BB8, _EVP_MD_CTX_copy_ex, 0, 0x12, \  # "EVP_MD_CTX_copy_ex"
                           0, 0>
                Elf32_Sym <aSsl3Clear - byte_4BB8, ssl3_clear, 0x174, 0x12, 0, 6>  # "ssl3_clear"
                Elf32_Sym <aBufMemGrow - byte_4BB8, _BUF_MEM_grow, 0, 0x12, 0, 0>  # "BUF_MEM_grow"
                Elf32_Sym <aSslv3ClientMet - byte_4BB8, SSLv3_client_method, 0x18, \  # "SSLv3_client_method"
                           0x12, 0, 6>
                Elf32_Sym <aCryptoFree - byte_4BB8, _CRYPTO_free, 0, 0x12, 0, 0>  # "CRYPTO_free"
                Elf32_Sym <aSrpCreateVerif - byte_4BB8, _SRP_create_verifier_BN, 0, \  # "SRP_create_verifier_BN"
                           0x12, 0, 0>
                Elf32_Sym <aSslVerifyAlarm - byte_4BB8, ssl_verify_alarm_type, 0x7C, \  # "ssl_verify_alarm_type"
                           0x12, 0, 6>
                Elf32_Sym <aTls12GetSigid - byte_4BB8, tls12_get_sigid, 0x44, 0x12, 0,\  # "tls12_get_sigid"
                           6>
                Elf32_Sym <aBioTestFlags - byte_4BB8, _BIO_test_flags, 0, 0x12, 0, 0>  # "BIO_test_flags"
                Elf32_Sym <aDtls1SendServe_1 - byte_4BB8, \  # "dtls1_send_server_key_exchange"
                           dtls1_send_server_key_exchange, 0x6A8, 0x12, 0, 6>
                Elf32_Sym <aSkZero - byte_4BB8, _sk_zero, 0, 0x12, 0, 0>  # "sk_zero"
                Elf32_Sym <aAsn1ConstFinis - byte_4BB8, _asn1_const_Finish, 0, 0x12, \  # "asn1_const_Finish"
                           0, 0>
                Elf32_Sym <aSsl3ReadN - byte_4BB8, ssl3_read_n, 0x424, 0x12, 0, 6>  # "ssl3_read_n"
                Elf32_Sym <aSslClearBadSes - byte_4BB8, ssl_clear_bad_session, 0x94, \  # "ssl_clear_bad_session"
                           0x12, 0, 6>
                Elf32_Sym <aPemReadBioRsap - byte_4BB8, _PEM_read_bio_RSAPrivateKey, \  # "PEM_read_bio_RSAPrivateKey"
                           0, 0x12, 0, 0>
                Elf32_Sym <aBioMethodType - byte_4BB8, _BIO_method_type, 0, 0x12, 0, \  # "BIO_method_type"
                           0>
                Elf32_Sym <aSslCtxRemoveSe - byte_4BB8, SSL_CTX_remove_session, 0x1C, \  # "SSL_CTX_remove_session"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3GetServerC - byte_4BB8, ssl3_get_server_certificate, \  # "ssl3_get_server_certificate"
                           0x63C, 0x12, 0, 6>
                Elf32_Sym <aEvpCipherCtxFl - byte_4BB8, _EVP_CIPHER_CTX_flags, 0, \  # "EVP_CIPHER_CTX_flags"
                           0x12, 0, 0>
                Elf32_Sym <aSslParseClient_1 - byte_4BB8, \  # "ssl_parse_clienthello_renegotiate_ext"
                           ssl_parse_clienthello_renegotiate_ext, 0xF4, 0x12, 0, 6>
                Elf32_Sym <aI2dOcspRespid - byte_4BB8, _i2d_OCSP_RESPID, 0, 0x12, 0, \  # "i2d_OCSP_RESPID"
                           0>
                Elf32_Sym <aSsl3Free - byte_4BB8, ssl3_free, 0x128, 0x12, 0, 6>  # "ssl3_free"
                Elf32_Sym <aEvpPkeyEncrypt - byte_4BB8, _EVP_PKEY_encrypt_init, 0, \  # "EVP_PKEY_encrypt_init"
                           0x12, 0, 0>
                Elf32_Sym <aBioPuts - byte_4BB8, _BIO_puts, 0, 0x12, 0, 0>  # "BIO_puts"
                Elf32_Sym <aPemReadBioX509 - byte_4BB8, _PEM_read_bio_X509, 0, 0x12, \  # "PEM_read_bio_X509"
                           0, 0>
                Elf32_Sym <aCryptoLock - byte_4BB8, _CRYPTO_lock, 0, 0x12, 0, 0>  # "CRYPTO_lock"
                Elf32_Sym <aSkNew - byte_4BB8, _sk_new, 0, 0x12, 0, 0>  # "sk_new"
                Elf32_Sym <aDtls1SendFinis - byte_4BB8, dtls1_send_finished, 0x1D4, \  # "dtls1_send_finished"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1GetRecord - byte_4BB8, dtls1_get_record, 0x7A0, 0x12,\  # "dtls1_get_record"
                           0, 6>
                Elf32_Sym <aSsl3RecordSequ - byte_4BB8, ssl3_record_sequence_update, \  # "ssl3_record_sequence_update"
                           0xA0, 0x12, 0, 6>
                Elf32_Sym <aI2dX509Extensi - byte_4BB8, _i2d_X509_EXTENSIONS, 0, 0x12,\  # "i2d_X509_EXTENSIONS"
                           0, 0>
                Elf32_Sym <aSslv3ServerMet - byte_4BB8, SSLv3_server_method, 0x18, \  # "SSLv3_server_method"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetVerifyDe - byte_4BB8, SSL_get_verify_depth, 0x18, \  # "SSL_get_verify_depth"
                           0x12, 0, 6>
                Elf32_Sym <aEvpPkeyNewMacK - byte_4BB8, _EVP_PKEY_new_mac_key, 0, \  # "EVP_PKEY_new_mac_key"
                           0x12, 0, 0>
                Elf32_Sym <aSslUndefinedFu - byte_4BB8, ssl_undefined_function, 0x48, \  # "ssl_undefined_function"
                           0x12, 0, 6>
                Elf32_Sym <aEvpEncNull - byte_4BB8, _EVP_enc_null, 0, 0x12, 0, 0>  # "EVP_enc_null"
                Elf32_Sym <aEvpAes256CbcHm - byte_4BB8, _EVP_aes_256_cbc_hmac_sha1, 0,\  # "EVP_aes_256_cbc_hmac_sha1"
                           0x12, 0, 0>
                Elf32_Sym <aErrClearError - byte_4BB8, _ERR_clear_error, 0, 0x12, 0, \  # "ERR_clear_error"
                           0>
                Elf32_Sym <aSsl2Read - byte_4BB8, ssl2_read, 0x1C, 0x12, 0, 6>  # "ssl2_read"
                Elf32_Sym <aEvpPkeyAsn1Fin - byte_4BB8, _EVP_PKEY_asn1_find_str, 0, \  # "EVP_PKEY_asn1_find_str"
                           0x12, 0, 0>
                Elf32_Sym <aSslDup - byte_4BB8, SSL_dup, 0x414, 0x12, 0, 6>  # "SSL_dup"
                Elf32_Sym <aSsl3GetFinishe - byte_4BB8, ssl3_get_finished, 0x204, \  # "ssl3_get_finished"
                           0x12, 0, 6>
                Elf32_Sym <aSslFree - byte_4BB8, SSL_free, 0x2F8, 0x12, 0, 6>  # "SSL_free"
                Elf32_Sym <aHmacFinal - byte_4BB8, _HMAC_Final, 0, 0x12, 0, 0>  # "HMAC_Final"
                Elf32_Sym <aSslSetSessionI - byte_4BB8, SSL_set_session_id_context, \  # "SSL_set_session_id_context"
                           0x74, 0x12, 0, 6>
                Elf32_Sym <aSsl3ChooseCiph - byte_4BB8, ssl3_choose_cipher, 0x1C4, \  # "ssl3_choose_cipher"
                           0x12, 0, 6>
                Elf32_Sym <aX509GetSubject - byte_4BB8, _X509_get_subject_name, 0, \  # "X509_get_subject_name"
                           0x12, 0, 0>
                Elf32_Sym <aBioFSsl - byte_4BB8, BIO_f_ssl, 0x18, 0x12, 0, 6>  # "BIO_f_ssl"
                Elf32_Sym <aSrpGenerateSer - byte_4BB8, \  # "SRP_generate_server_master_secret"
                           SRP_generate_server_master_secret, 0x1A0, 0x12, 0, 6>
                Elf32_Sym <aBioNew - byte_4BB8, _BIO_new, 0, 0x12, 0, 0>  # "BIO_new"
                Elf32_Sym <aSsl3CleanupKey - byte_4BB8, ssl3_cleanup_key_block, 0x6C, \  # "ssl3_cleanup_key_block"
                           0x12, 0, 6>
                Elf32_Sym <aAsn1IntegerSet - byte_4BB8, _ASN1_INTEGER_set, 0, 0x12, 0,\  # "ASN1_INTEGER_set"
                           0>
                Elf32_Sym <aBufMemNew - byte_4BB8, _BUF_MEM_new, 0, 0x12, 0, 0>  # "BUF_MEM_new"
                Elf32_Sym <aEvpAddDigest - byte_4BB8, _EVP_add_digest, 0, 0x12, 0, 0>  # "EVP_add_digest"
                Elf32_Sym <aStrlen - byte_4BB8, _strlen, 0, 0x12, 0, 0>  # "strlen"
                Elf32_Sym <aSsl2Connect - byte_4BB8, ssl2_connect, 0x15A4, 0x12, 0, 6>  # "ssl2_connect"
                Elf32_Sym <aSslCertFree - byte_4BB8, ssl_cert_free, 0x210, 0x12, 0, 6>  # "ssl_cert_free"
                Elf32_Sym <aOpenssldie - byte_4BB8, _OpenSSLDie, 0, 0x12, 0, 0>  # "OpenSSLDie"
                Elf32_Sym <aSslParseClient_0 - byte_4BB8, \  # "ssl_parse_clienthello_use_srtp_ext"
                           ssl_parse_clienthello_use_srtp_ext, 0x250, 0x12, 0, 6>
                Elf32_Sym <aCryptoDupExDat - byte_4BB8, _CRYPTO_dup_ex_data, 0, 0x12, \  # "CRYPTO_dup_ex_data"
                           0, 0>
                Elf32_Sym <aX509NameCmp - byte_4BB8, _X509_NAME_cmp, 0, 0x12, 0, 0>  # "X509_NAME_cmp"
                Elf32_Sym <aEvpPkeyMissing - byte_4BB8, _EVP_PKEY_missing_parameters, \  # "EVP_PKEY_missing_parameters"
                           0, 0x12, 0, 0>
                Elf32_Sym <aPqueueFind - byte_4BB8, _pqueue_find, 0, 0x12, 0, 0>  # "pqueue_find"
                Elf32_Sym <aSslUseRsapriva - byte_4BB8, SSL_use_RSAPrivateKey, 0x148, \  # "SSL_use_RSAPrivateKey"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3InitFinish - byte_4BB8, ssl3_init_finished_mac, 0xB0, \  # "ssl3_init_finished_mac"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetNewSessi - byte_4BB8, ssl_get_new_session, 0x344, \  # "ssl_get_new_session"
                           0x12, 0, 6>
                Elf32_Sym <aSsl2WriteError - byte_4BB8, ssl2_write_error, 0x138, 0x12,\  # "ssl2_write_error"
                           0, 6>
                Elf32_Sym <aEvpCipherBlock - byte_4BB8, _EVP_CIPHER_block_size, 0, \  # "EVP_CIPHER_block_size"
                           0x12, 0, 0>
                Elf32_Sym <aSslv2Method - byte_4BB8, _ftext, 0x18, 0x12, 0, 6>  # "SSLv2_method"
                Elf32_Sym <aSslVerifyCertC - byte_4BB8, ssl_verify_cert_chain, 0x1E0, \  # "ssl_verify_cert_chain"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3SendClient - byte_4BB8, ssl3_send_client_certificate, \  # "ssl3_send_client_certificate"
                           0x260, 0x12, 0, 6>
                Elf32_Sym <aSslSetInfoCall - byte_4BB8, SSL_set_info_callback, 8, \  # "SSL_set_info_callback"
                           0x12, 0, 6>
                Elf32_Sym <aEvpPkeyAsn1Get - byte_4BB8, _EVP_PKEY_asn1_get0_info, 0, \  # "EVP_PKEY_asn1_get0_info"
                           0x12, 0, 0>
                Elf32_Sym <aBioClearFlags - byte_4BB8, _BIO_clear_flags, 0, 0x12, 0, \  # "BIO_clear_flags"
                           0>
                Elf32_Sym <aRsaPublicEncry - byte_4BB8, _RSA_public_encrypt, 0, 0x12, \  # "RSA_public_encrypt"
                           0, 0>
                Elf32_Sym <aBnBn2bin - byte_4BB8, _BN_bn2bin, 0, 0x12, 0, 0>  # "BN_bn2bin"
                Elf32_Sym <aStrncmp - byte_4BB8, _strncmp, 0, 0x12, 0, 0>  # "strncmp"
                Elf32_Sym <aX509NameFree - byte_4BB8, _X509_NAME_free, 0, 0x12, 0, 0>  # "X509_NAME_free"
                Elf32_Sym <aEvpPkeyDecrypt - byte_4BB8, _EVP_PKEY_decrypt_init, 0, \  # "EVP_PKEY_decrypt_init"
                           0x12, 0, 0>
                Elf32_Sym <aRsaPrivateDecr - byte_4BB8, _RSA_private_decrypt, 0, 0x12,\  # "RSA_private_decrypt"
                           0, 0>
                Elf32_Sym <aTlsv11Method - byte_4BB8, TLSv1_1_method, 0x18, 0x12, 0, \  # "TLSv1_1_method"
                           6>
                Elf32_Sym <aDtls1SendCerti - byte_4BB8, \  # "dtls1_send_certificate_request"
                           dtls1_send_certificate_request, 0x350, 0x12, 0, 6>
                Elf32_Sym <aSslv2ClientMet - byte_4BB8, SSLv2_client_method, 0x18, \  # "SSLv2_client_method"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1Heartbeat - byte_4BB8, dtls1_heartbeat, 0x1E0, 0x12, \  # "dtls1_heartbeat"
                           0, 6>
                Elf32_Sym <aAsn1GetObject - byte_4BB8, _ASN1_get_object, 0, 0x12, 0, \  # "ASN1_get_object"
                           0>
                Elf32_Sym <aSsl3GetCipherB - byte_4BB8, ssl3_get_cipher_by_char, 0x7C,\  # "ssl3_get_cipher_by_char"
                           0x12, 0, 6>
                Elf32_Sym <aSrpCalcB - byte_4BB8, _SRP_Calc_B, 0, 0x12, 0, 0>  # "SRP_Calc_B"
                Elf32_Sym <aSsl2SetCertifi - byte_4BB8, ssl2_set_certificate, 0x260, \  # "ssl2_set_certificate"
                           0x12, 0, 6>
                Elf32_Sym <aSslCopySession - byte_4BB8, SSL_copy_session_id, 0x100, \  # "SSL_copy_session_id"
                           0x12, 0, 6>
                Elf32_Sym <aRsaSign - byte_4BB8, _RSA_sign, 0, 0x12, 0, 0>  # "RSA_sign"
                Elf32_Sym <aDsaSign - byte_4BB8, _DSA_sign, 0, 0x12, 0, 0>  # "DSA_sign"
                Elf32_Sym <aTlsv12ServerMe - byte_4BB8, TLSv1_2_server_method, 0x18, \  # "TLSv1_2_server_method"
                           0x12, 0, 6>
                Elf32_Sym <aSslState - byte_4BB8, SSL_state, 8, 0x12, 0, 6>  # "SSL_state"
                Elf32_Sym <aSslCtxUseRsapr - byte_4BB8, SSL_CTX_use_RSAPrivateKey, \  # "SSL_CTX_use_RSAPrivateKey"
                           0x148, 0x12, 0, 6>
                Elf32_Sym <aX509StoreCtxIn - byte_4BB8, _X509_STORE_CTX_init, 0, 0x12,\  # "X509_STORE_CTX_init"
                           0, 0>
                Elf32_Sym <aCryptoMalloc - byte_4BB8, _CRYPTO_malloc, 0, 0x12, 0, 0>  # "CRYPTO_malloc"
                Elf32_Sym <aD2iAsn1OctetSt - byte_4BB8, _d2i_ASN1_OCTET_STRING, 0, \  # "d2i_ASN1_OCTET_STRING"
                           0x12, 0, 0>
                Elf32_Sym <aDsaVerify - byte_4BB8, _DSA_verify, 0, 0x12, 0, 0>  # "DSA_verify"
                Elf32_Sym <aSrpCalcU - byte_4BB8, _SRP_Calc_u, 0, 0x12, 0, 0>  # "SRP_Calc_u"
                Elf32_Sym <aDtls1ClearReco - byte_4BB8, dtls1_clear_record_buffer, \  # "dtls1_clear_record_buffer"
                           0xCC, 0x12, 0, 6>
                Elf32_Sym <aSslAddClienthe_1 - byte_4BB8, \  # "ssl_add_clienthello_use_srtp_ext"
                           ssl_add_clienthello_use_srtp_ext, 0x184, 0x12, 0, 6>
                Elf32_Sym <aX509StoreNew - byte_4BB8, _X509_STORE_new, 0, 0x12, 0, 0>  # "X509_STORE_new"
                Elf32_Sym <aI2dAsn1OctetSt - byte_4BB8, _i2d_ASN1_OCTET_STRING, 0, \  # "i2d_ASN1_OCTET_STRING"
                           0x12, 0, 0>
                Elf32_Sym <aEvpMdCtxCreate - byte_4BB8, _EVP_MD_CTX_create, 0, 0x12, \  # "EVP_MD_CTX_create"
                           0, 0>
                Elf32_Sym <aSsl3OutputCert - byte_4BB8, ssl3_output_cert_chain, 0x440,\  # "ssl3_output_cert_chain"
                           0x12, 0, 6>
                Elf32_Sym <aSslPeek - byte_4BB8, SSL_peek, 0x78, 0x12, 0, 6>  # "SSL_peek"
                Elf32_Sym <aSsl3CtxCtrl - byte_4BB8, ssl3_ctx_ctrl, 0x440, 0x12, 0, 6>  # "ssl3_ctx_ctrl"
                Elf32_Sym <aOpensslCleanse - byte_4BB8, _OPENSSL_cleanse, 0, 0x12, 0, \  # "OPENSSL_cleanse"
                           0>
                Elf32_Sym <aX509StoreCtxGe - byte_4BB8, \  # "X509_STORE_CTX_get_ex_new_index"
                           _X509_STORE_CTX_get_ex_new_index, 0, 0x12, 0, 0>
                Elf32_Sym <aHmacUpdate - byte_4BB8, _HMAC_Update, 0, 0x12, 0, 0>  # "HMAC_Update"
                Elf32_Sym <aSsl3GetClientC - byte_4BB8, ssl3_get_client_certificate, \  # "ssl3_get_client_certificate"
                           0x564, 0x12, 0, 6>
                Elf32_Sym <aSslCtrl - byte_4BB8, SSL_ctrl, 0x190, 0x12, 0, 6>  # "SSL_ctrl"
                Elf32_Sym <aRsaSize - byte_4BB8, _RSA_size, 0, 0x12, 0, 0>  # "RSA_size"
                Elf32_Sym <aSslDoClientCer - byte_4BB8, ssl_do_client_cert_cb, 0x20, \  # "ssl_do_client_cert_cb"
                           0x12, 0, 6>
                Elf32_Sym <aSkValue - byte_4BB8, _sk_value, 0, 0x12, 0, 0>  # "sk_value"
                Elf32_Sym <aPemReadBioPriv - byte_4BB8, _PEM_read_bio_PrivateKey, 0, \  # "PEM_read_bio_PrivateKey"
                           0x12, 0, 0>
                Elf32_Sym <aObjBsearchSslC - byte_4BB8, OBJ_bsearch_ssl_cipher_id, \  # "OBJ_bsearch_ssl_cipher_id"
                           0x40, 0x12, 0, 6>
                Elf32_Sym <aGettimeofday - byte_4BB8, _gettimeofday, 0, 0x12, 0, 0>  # "gettimeofday"
                Elf32_Sym <aSslGetRfd - byte_4BB8, SSL_get_rfd, 0x70, 0x12, 0, 6>  # "SSL_get_rfd"
                Elf32_Sym <aSkSetCmpFunc - byte_4BB8, _sk_set_cmp_func, 0, 0x12, 0, 0>  # "sk_set_cmp_func"
                Elf32_Sym <aTls1ProcessTic - byte_4BB8, tls1_process_ticket, 0x494, \  # "tls1_process_ticket"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3CheckCertA - byte_4BB8, ssl3_check_cert_and_algorithm,\  # "ssl3_check_cert_and_algorithm"
                           0x29C, 0x12, 0, 6>
                Elf32_Sym <aPqueueNext - byte_4BB8, _pqueue_next, 0, 0x12, 0, 0>  # "pqueue_next"
                Elf32_Sym <aEvpGetCipherby - byte_4BB8, _EVP_get_cipherbyname, 0, \  # "EVP_get_cipherbyname"
                           0x12, 0, 0>
                Elf32_Sym <aSslSessionFree - byte_4BB8, SSL_SESSION_free, 0x170, 0x12,\  # "SSL_SESSION_free"
                           0, 6>
                Elf32_Sym <aEvpEncryptfina - byte_4BB8, _EVP_EncryptFinal, 0, 0x12, 0,\  # "EVP_EncryptFinal"
                           0>
                Elf32_Sym <aSslBytesToCiph - byte_4BB8, ssl_bytes_to_cipher_list, \  # "ssl_bytes_to_cipher_list"
                           0x2C8, 0x12, 0, 6>
                Elf32_Sym <aSslCertInst - byte_4BB8, ssl_cert_inst, 0xA4, 0x12, 0, 6>  # "ssl_cert_inst"
                Elf32_Sym <aX509NameDup - byte_4BB8, _X509_NAME_dup, 0, 0x12, 0, 0>  # "X509_NAME_dup"
                Elf32_Sym <aCryptoGetExNew - byte_4BB8, _CRYPTO_get_ex_new_index, 0, \  # "CRYPTO_get_ex_new_index"
                           0x12, 0, 0>
                Elf32_Sym <aEvpSha256 - byte_4BB8, _EVP_sha256, 0, 0x12, 0, 0>  # "EVP_sha256"
                Elf32_Sym <aDtls1MinMtu - byte_4BB8, dtls1_min_mtu, 8, 0x12, 0, 6>  # "dtls1_min_mtu"
                Elf32_Sym <aSsl3FreeDigest - byte_4BB8, ssl3_free_digest_list, 0x114, \  # "ssl3_free_digest_list"
                           0x12, 0, 6>
                Elf32_Sym <aSslGetSrtpProf - byte_4BB8, SSL_get_srtp_profiles, 0x38, \  # "SSL_get_srtp_profiles"
                           0x12, 0, 6>
                Elf32_Sym <aRsaVerify - byte_4BB8, _RSA_verify, 0, 0x12, 0, 0>  # "RSA_verify"
                Elf32_Sym <aBioGetRetryRea - byte_4BB8, _BIO_get_retry_reason, 0, \  # "BIO_get_retry_reason"
                           0x12, 0, 0>
                Elf32_Sym <aSslSessCertNew - byte_4BB8, ssl_sess_cert_new, 0xA4, 0x12,\  # "ssl_sess_cert_new"
                           0, 6>
                Elf32_Sym <aSrpVerifyAModN - byte_4BB8, _SRP_Verify_A_mod_N, 0, 0x12, \  # "SRP_Verify_A_mod_N"
                           0, 0>
                Elf32_Sym <aLhRetrieve - byte_4BB8, _lh_retrieve, 0, 0x12, 0, 0>  # "lh_retrieve"
                Elf32_Sym <aSrpGetDefaultG - byte_4BB8, _SRP_get_default_gN, 0, 0x12, \  # "SRP_get_default_gN"
                           0, 0>
                Elf32_Sym <aSsl2Clear - byte_4BB8, ssl2_clear, 0x8C, 0x12, 0, 6>  # "ssl2_clear"
                Elf32_Sym <aEvpPkeyDeriveS - byte_4BB8, _EVP_PKEY_derive_set_peer, 0, \  # "EVP_PKEY_derive_set_peer"
                           0x12, 0, 0>
                Elf32_Sym <aCryptoNewExDat - byte_4BB8, _CRYPTO_new_ex_data, 0, 0x12, \  # "CRYPTO_new_ex_data"
                           0, 0>
                Elf32_Sym <aEvpCipherCtxIn - byte_4BB8, _EVP_CIPHER_CTX_init, 0, 0x12,\  # "EVP_CIPHER_CTX_init"
                           0, 0>
                Elf32_Sym <aBioCopyNextRet - byte_4BB8, _BIO_copy_next_retry, 0, 0x12,\  # "BIO_copy_next_retry"
                           0, 0>
                Elf32_Sym <aSslSetSession - byte_4BB8, SSL_set_session, 0x190, 0x12, \  # "SSL_set_session"
                           0, 6>
                Elf32_Sym <aEvpAddCipher - byte_4BB8, _EVP_add_cipher, 0, 0x12, 0, 0>  # "EVP_add_cipher"
                Elf32_Sym <aSsl3Renegotiat_0 - byte_4BB8, ssl3_renegotiate_check, \  # "ssl3_renegotiate_check"
                           0xB4, 0x12, 0, 6>
                Elf32_Sym <aSslAddClienthe_0 - byte_4BB8, \  # "ssl_add_clienthello_renegotiate_ext"
                           ssl_add_clienthello_renegotiate_ext, 0xCC, 0x12, 0, 6>
                Elf32_Sym <aSsl3GetKeyExch - byte_4BB8, ssl3_get_key_exchange, 0x980, \  # "ssl3_get_key_exchange"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3Connect - byte_4BB8, ssl3_connect, 0xB64, 0x12, 0, 6>  # "ssl3_connect"
                Elf32_Sym <aEvpAes192Cbc - byte_4BB8, _EVP_aes_192_cbc, 0, 0x12, 0, 0>  # "EVP_aes_192_cbc"
                Elf32_Sym <aDtls1OutputCer - byte_4BB8, dtls1_output_cert_chain, \  # "dtls1_output_cert_chain"
                           0x3B4, 0x12, 0, 6>
                Elf32_Sym <aDtls1CheckTime - byte_4BB8, dtls1_check_timeout_num, 0xBC,\  # "dtls1_check_timeout_num"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3SendClient_0 - byte_4BB8, ssl3_send_client_verify, \  # "ssl3_send_client_verify"
                           0x50C, 0x12, 0, 6>
                Elf32_Sym <aAsn1AddError - byte_4BB8, _asn1_add_error, 0, 0x12, 0, 0>  # "asn1_add_error"
                Elf32_Sym <aEvpCipherIvLen - byte_4BB8, _EVP_CIPHER_iv_length, 0, \  # "EVP_CIPHER_iv_length"
                           0x12, 0, 0>
                Elf32_Sym <aSslAddServerhe_1 - byte_4BB8, \  # "ssl_add_serverhello_use_srtp_ext"
                           ssl_add_serverhello_use_srtp_ext, 0xBC, 0x12, 0, 6>
                Elf32_Sym <aSslPrepareClie - byte_4BB8, \  # "ssl_prepare_clienthello_tlsext"
                           ssl_prepare_clienthello_tlsext, 8, 0x12, 0, 6>
                Elf32_Sym <aMemcpy - byte_4BB8, _memcpy, 0, 0x12, 0, 0>  # "memcpy"
                Elf32_Sym <aEvpCipherCtxIv - byte_4BB8, _EVP_CIPHER_CTX_iv_length, 0, \  # "EVP_CIPHER_CTX_iv_length"
                           0x12, 0, 0>
                Elf32_Sym <aEvpCipherCtxBl - byte_4BB8, _EVP_CIPHER_CTX_block_size, 0,\  # "EVP_CIPHER_CTX_block_size"
                           0x12, 0, 0>
                Elf32_Sym <aLhNew - byte_4BB8, _lh_new, 0, 0x12, 0, 0>  # "lh_new"
                Elf32_Sym <aHmacCtxInit - byte_4BB8, _HMAC_CTX_init, 0, 0x12, 0, 0>  # "HMAC_CTX_init"
                Elf32_Sym <aCryptoGetExDat - byte_4BB8, _CRYPTO_get_ex_data, 0, 0x12, \  # "CRYPTO_get_ex_data"
                           0, 0>
                Elf32_Sym <aSsl3WritePendi - byte_4BB8, ssl3_write_pending, 0x1CC, \  # "ssl3_write_pending"
                           0x12, 0, 6>
                Elf32_Sym <aFwrite - byte_4BB8, _fwrite, 0, 0x12, 0, 0>  # "fwrite"
                Elf32_Sym <aEvpPkeyCtxNew - byte_4BB8, _EVP_PKEY_CTX_new, 0, 0x12, 0, \  # "EVP_PKEY_CTX_new"
                           0>
                Elf32_Sym <aSsl3GetServerH - byte_4BB8, ssl3_get_server_hello, 0x754, \  # "ssl3_get_server_hello"
                           0x12, 0, 6>
                Elf32_Sym <aObjBsearch - byte_4BB8, _OBJ_bsearch_, 0, 0x12, 0, 0>  # "OBJ_bsearch_"
                Elf32_Sym <aBnNumBits - byte_4BB8, _BN_num_bits, 0, 0x12, 0, 0>  # "BN_num_bits"
                Elf32_Sym <aSsl3SendCertif - byte_4BB8, ssl3_send_certificate_request,\  # "ssl3_send_certificate_request"
                           0x334, 0x12, 0, 6>
                Elf32_Sym <aPqueueInsert - byte_4BB8, _pqueue_insert, 0, 0x12, 0, 0>  # "pqueue_insert"
                Elf32_Sym <aSkFree - byte_4BB8, _sk_free, 0, 0x12, 0, 0>  # "sk_free"
                Elf32_Sym <aEvpSha384 - byte_4BB8, _EVP_sha384, 0, 0x12, 0, 0>  # "EVP_sha384"
                Elf32_Sym <aX509VerifyPara - byte_4BB8, _X509_VERIFY_PARAM_set_depth, \  # "X509_VERIFY_PARAM_set_depth"
                           0, 0x12, 0, 0>
                Elf32_Sym <aEvpPkeyCtxFree - byte_4BB8, _EVP_PKEY_CTX_free, 0, 0x12, \  # "EVP_PKEY_CTX_free"
                           0, 0>
                Elf32_Sym <aBioCtrl - byte_4BB8, _BIO_ctrl, 0, 0x12, 0, 0>  # "BIO_ctrl"
                Elf32_Sym <aSsl3GetClientK - byte_4BB8, ssl3_get_client_key_exchange, \  # "ssl3_get_client_key_exchange"
                           0x628, 0x12, 0, 6>
                Elf32_Sym <aDtlsv1ClientMe+1 - byte_4BB8, TLSv1_client_method, 0x18, \  # "TLSv1_client_method"
                           0x12, 0, 6>
                Elf32_Sym <aEvpPkeySign - byte_4BB8, _EVP_PKEY_sign, 0, 0x12, 0, 0>  # "EVP_PKEY_sign"
                Elf32_Sym <aErrnoLocation - byte_4BB8, ___errno_location, 0, 0x12, 0, \  # "__errno_location"
                           0>
                Elf32_Sym <aSslGetCiphersB - byte_4BB8, ssl_get_ciphers_by_id, 0x38, \  # "ssl_get_ciphers_by_id"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3SetupWrite - byte_4BB8, ssl3_setup_write_buffer, \  # "ssl3_setup_write_buffer"
                           0x1E8, 0x12, 0, 6>
                Elf32_Sym <aBioFreeAll - byte_4BB8, _BIO_free_all, 0, 0x12, 0, 0>  # "BIO_free_all"
                Elf32_Sym <aEvpMdCtxCopy - byte_4BB8, _EVP_MD_CTX_copy, 0, 0x12, 0, 0>  # "EVP_MD_CTX_copy"
                Elf32_Sym <aDtls1HandleTim - byte_4BB8, dtls1_handle_timeout, 0xCC, \  # "dtls1_handle_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aSkPopFree - byte_4BB8, _sk_pop_free, 0, 0x12, 0, 0>  # "sk_pop_free"
                Elf32_Sym <aSsl2DoWrite - byte_4BB8, ssl2_do_write, 0xD8, 0x12, 0, 6>  # "ssl2_do_write"
                Elf32_Sym <aD2iSslSession - byte_4BB8, d2i_SSL_SESSION, 0x1374, 0x12, \  # "d2i_SSL_SESSION"
                           0, 6>
                Elf32_Sym <aSslParseServer_1 - byte_4BB8, \  # "ssl_parse_serverhello_use_srtp_ext"
                           ssl_parse_serverhello_use_srtp_ext, 0x1CC, 0x12, 0, 6>
                Elf32_Sym <aSsl2Mac - byte_4BB8, ssl2_mac, 0x150, 0x12, 0, 6>  # "ssl2_mac"
                Elf32_Sym <aSslGetSignPkey - byte_4BB8, ssl_get_sign_pkey, 0xF0, 0x12,\  # "ssl_get_sign_pkey"
                           0, 6>
                Elf32_Sym <aSsl3Ciphers - byte_4BB8, _fdata, 0xE40, 0x11, 0, 0xA>  # "ssl3_ciphers"
                Elf32_Sym <aOpensslDirRead - byte_4BB8, _OPENSSL_DIR_read, 0, 0x12, 0,\  # "OPENSSL_DIR_read"
                           0>
                Elf32_Sym <aSslGetSession - byte_4BB8, SSL_get_session, 8, 0x12, 0, 6>  # "SSL_get_session"
                Elf32_Sym <aSsl2Enc - byte_4BB8, ssl2_enc, 0x7C, 0x12, 0, 6>  # "ssl2_enc"
                Elf32_Sym <aBioSMem - byte_4BB8, _BIO_s_mem, 0, 0x12, 0, 0>  # "BIO_s_mem"
                Elf32_Sym <aSslUpdateCache - byte_4BB8, ssl_update_cache, 0x17C, 0x12,\  # "ssl_update_cache"
                           0, 6>
                Elf32_Sym <aBioFree - byte_4BB8, _BIO_free, 0, 0x12, 0, 0>  # "BIO_free"
                Elf32_Sym <aPqueueIterator - byte_4BB8, _pqueue_iterator, 0, 0x12, 0, \  # "pqueue_iterator"
                           0>
                Elf32_Sym <aEvpDigestinit - byte_4BB8, _EVP_DigestInit, 0, 0x12, 0, 0>  # "EVP_DigestInit"
                Elf32_Sym <aX509StoreLoadL - byte_4BB8, _X509_STORE_load_locations, 0,\  # "X509_STORE_load_locations"
                           0x12, 0, 0>
                Elf32_Sym <aCompCtxFree - byte_4BB8, _COMP_CTX_free, 0, 0x12, 0, 0>  # "COMP_CTX_free"
                Elf32_Sym <aPitemNew - byte_4BB8, _pitem_new, 0, 0x12, 0, 0>  # "pitem_new"
                Elf32_Sym <aDtls1Retransmi_0 - byte_4BB8, dtls1_retransmit_message, \  # "dtls1_retransmit_message"
                           0x270, 0x12, 0, 6>
                Elf32_Sym <aSsl3GetCertSta - byte_4BB8, ssl3_get_cert_status, 0x1E8, \  # "ssl3_get_cert_status"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetBio - byte_4BB8, SSL_set_bio, 0xC0, 0x12, 0, 6>  # "SSL_set_bio"
                Elf32_Sym <aSsl3GetCertVer - byte_4BB8, ssl3_get_cert_verify, 0x664, \  # "ssl3_get_cert_verify"
                           0x12, 0, 6>
                Elf32_Sym <aSslSetVerifyDe - byte_4BB8, SSL_set_verify_depth, 0x18, \  # "SSL_set_verify_depth"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3SendHelloR - byte_4BB8, ssl3_send_hello_request, 0x50,\  # "ssl3_send_hello_request"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3SendServer - byte_4BB8, ssl3_send_server_done, 0x54, \  # "ssl3_send_server_done"
                           0x12, 0, 6>
                Elf32_Sym <aSslRenegotiate - byte_4BB8, SSL_renegotiate, 0x28, 0x12, \  # "SSL_renegotiate"
                           0, 6>
                Elf32_Sym <aSrpCalcA - byte_4BB8, _SRP_Calc_A, 0, 0x12, 0, 0>  # "SRP_Calc_A"
                Elf32_Sym <aX509StoreCtxGe_0 - byte_4BB8, _X509_STORE_CTX_get0_param, \  # "X509_STORE_CTX_get0_param"
                           0, 0x12, 0, 0>
                Elf32_Sym <aSslGetVerifyCa - byte_4BB8, SSL_get_verify_callback, 8, \  # "SSL_get_verify_callback"
                           0x12, 0, 6>
                Elf32_Sym <aBioSSocket - byte_4BB8, _BIO_s_socket, 0, 0x12, 0, 0>  # "BIO_s_socket"
                Elf32_Sym <aSslGetRbio - byte_4BB8, SSL_get_rbio, 8, 0x12, 0, 6>  # "SSL_get_rbio"
                Elf32_Sym <aI2dX509 - byte_4BB8, _i2d_X509, 0, 0x12, 0, 0>  # "i2d_X509"
                Elf32_Sym <aSslConnect - byte_4BB8, SSL_connect, 0x70, 0x12, 0, 6>  # "SSL_connect"
                Elf32_Sym <aEvpDecryptfina - byte_4BB8, _EVP_DecryptFinal, 0, 0x12, 0,\  # "EVP_DecryptFinal"
                           0>
                Elf32_Sym <aSsl3SendNextPr - byte_4BB8, ssl3_send_next_proto, 0x150, \  # "ssl3_send_next_proto"
                           0x12, 0, 6>
                Elf32_Sym <aSslLoadCiphers - byte_4BB8, ssl_load_ciphers, 0x344, 0x12,\  # "ssl_load_ciphers"
                           0, 6>
                Elf32_Sym <aD2iX509Name - byte_4BB8, _d2i_X509_NAME, 0, 0x12, 0, 0>  # "d2i_X509_NAME"
                Elf32_Sym <aSsl3GetNewSess - byte_4BB8, ssl3_get_new_session_ticket, \  # "ssl3_get_new_session_ticket"
                           0x29C, 0x12, 0, 6>
                Elf32_Sym <aDtlsv1Method+1 - byte_4BB8, TLSv1_method, 0x18, 0x12, 0, \  # "TLSv1_method"
                           6>
                Elf32_Sym <aX509VerifyPara_6 - byte_4BB8, _X509_VERIFY_PARAM_inherit, \  # "X509_VERIFY_PARAM_inherit"
                           0, 0x12, 0, 0>
                Elf32_Sym <aRsaprivatekeyD - byte_4BB8, _RSAPrivateKey_dup, 0, 0x12, \  # "RSAPrivateKey_dup"
                           0, 0>
                Elf32_Sym <aDtls1SendChang - byte_4BB8, dtls1_send_change_cipher_spec,\  # "dtls1_send_change_cipher_spec"
                           0x104, 0x12, 0, 6>
                Elf32_Sym <aSsl23GetCipher - byte_4BB8, ssl23_get_cipher_by_char, \  # "ssl23_get_cipher_by_char"
                           0x58, 0x12, 0, 6>
                Elf32_Sym <aTls1AlertCode - byte_4BB8, tls1_alert_code, 0x124, 0x12, \  # "tls1_alert_code"
                           0, 6>
                Elf32_Sym <aSsl3Pending - byte_4BB8, ssl3_pending, 0x34, 0x12, 0, 6>  # "ssl3_pending"
                Elf32_Sym <aSslUndefinedCo - byte_4BB8, ssl_undefined_const_function, \  # "ssl_undefined_const_function"
                           0x48, 0x12, 0, 6>
                Elf32_Sym <aTls1CertVerify - byte_4BB8, tls1_cert_verify_mac, 0x25C, \  # "tls1_cert_verify_mac"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1Enc - byte_4BB8, dtls1_enc, 0x460, 0x12, 0, 6>  # "dtls1_enc"
                Elf32_Sym <aDtls1Free+1 - byte_4BB8, tls1_free, 0x50, 0x12, 0, 6>  # "tls1_free"
                Elf32_Sym <aDtls1WriteAppD - byte_4BB8, dtls1_write_app_data_bytes, \  # "dtls1_write_app_data_bytes"
                           0x104, 0x12, 0, 6>
                Elf32_Sym <aSsl3ChangeCiph - byte_4BB8, ssl3_change_cipher_state, \  # "ssl3_change_cipher_state"
                           0x668, 0x12, 0, 6>
                Elf32_Sym <aSsl2Pending - byte_4BB8, ssl2_pending, 0x60, 0x12, 0, 6>  # "ssl2_pending"
                Elf32_Sym <aSslOk - byte_4BB8, ssl_ok, 8, 0x12, 0, 6>  # "ssl_ok"
                Elf32_Sym <aSsl3Peek - byte_4BB8, ssl3_peek, 0x14C, 0x12, 0, 6>  # "ssl3_peek"
                Elf32_Sym <aSsl23NumCipher - byte_4BB8, ssl23_num_ciphers, 0x50, 0x12,\  # "ssl23_num_ciphers"
                           0, 6>
                Elf32_Sym <aSsl23Read - byte_4BB8, ssl23_read, 0xF8, 0x12, 0, 6>  # "ssl23_read"
                Elf32_Sym <aDtls1DispatchA - byte_4BB8, dtls1_dispatch_alert, 0x158, \  # "dtls1_dispatch_alert"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1Ctrl - byte_4BB8, dtls1_ctrl, 0x84, 0x12, 0, 6>  # "dtls1_ctrl"
                Elf32_Sym <aSsl23Connect - byte_4BB8, ssl23_connect, 0xF6C, 0x12, 0, \  # "ssl23_connect"
                           6>
                Elf32_Sym <aSsl2Shutdown - byte_4BB8, ssl2_shutdown, 0x10, 0x12, 0, 6>  # "ssl2_shutdown"
                Elf32_Sym <aSsl3GenerateMa - byte_4BB8, ssl3_generate_master_secret, \  # "ssl3_generate_master_secret"
                           0x414, 0x12, 0, 6>
                Elf32_Sym <aDtls1New+1 - byte_4BB8, tls1_new, 0x58, 0x12, 0, 6>  # "tls1_new"
                Elf32_Sym <aNSsl3Mac - byte_4BB8, n_ssl3_mac, 0x2A4, 0x12, 0, 6>  # "n_ssl3_mac"
                Elf32_Sym <aDtlsv1EncData+1 - byte_4BB8, TLSv1_enc_data, 0x38, 0x11, \  # "TLSv1_enc_data"
                           0, 0xA>
                Elf32_Sym <aSsl3DispatchAl - byte_4BB8, ssl3_dispatch_alert, 0x148, \  # "ssl3_dispatch_alert"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1New - byte_4BB8, dtls1_new, 0x1F0, 0x12, 0, 6>  # "dtls1_new"
                Elf32_Sym <aTls1Mac - byte_4BB8, tls1_mac, 0x380, 0x12, 0, 6>  # "tls1_mac"
                Elf32_Sym <aSsl3Write - byte_4BB8, ssl3_write, 0x164, 0x12, 0, 6>  # "ssl3_write"
                Elf32_Sym <aSsl2DefaultTim - byte_4BB8, ssl2_default_timeout, 8, 0x12,\  # "ssl2_default_timeout"
                           0, 6>
                Elf32_Sym <aSsl2CtxCallbac - byte_4BB8, ssl2_ctx_callback_ctrl, 8, \  # "ssl2_ctx_callback_ctrl"
                           0x12, 0, 6>
                Elf32_Sym <aTls1FinalFinis - byte_4BB8, tls1_final_finish_mac, 0x2A0, \  # "tls1_final_finish_mac"
                           0x12, 0, 6>
                Elf32_Sym <aTls1ExportKeyi - byte_4BB8, tls1_export_keying_material, \  # "tls1_export_keying_material"
                           0x3B4, 0x12, 0, 6>
                Elf32_Sym <aSsl3ReadBytes - byte_4BB8, ssl3_read_bytes, 0xF74, 0x12, \  # "ssl3_read_bytes"
                           0, 6>
                Elf32_Sym <aSsl3CertVerify - byte_4BB8, ssl3_cert_verify_mac, 0x40, \  # "ssl3_cert_verify_mac"
                           0x12, 0, 6>
                Elf32_Sym <aTls1ChangeCiph - byte_4BB8, tls1_change_cipher_state, \  # "tls1_change_cipher_state"
                           0x848, 0x12, 0, 6>
                Elf32_Sym <aSsl3UndefEncMe - byte_4BB8, ssl3_undef_enc_method, 0x38, \  # "ssl3_undef_enc_method"
                           0x11, 0, 0xA>
                Elf32_Sym <aSsl3FinalFinis - byte_4BB8, ssl3_final_finish_mac, 0xB0, \  # "ssl3_final_finish_mac"
                           0x12, 0, 6>
                Elf32_Sym <aTls1GenerateMa - byte_4BB8, tls1_generate_master_secret, \  # "tls1_generate_master_secret"
                           0xC8, 0x12, 0, 6>
                Elf32_Sym <aDtls1Shutdown - byte_4BB8, dtls1_shutdown, 0x18, 0x12, 0, \  # "dtls1_shutdown"
                           6>
                Elf32_Sym <aSsl2CtxCtrl - byte_4BB8, ssl2_ctx_ctrl, 8, 0x12, 0, 6>  # "ssl2_ctx_ctrl"
                Elf32_Sym <aSsl23Accept - byte_4BB8, ssl23_accept, 0x2B4, 0x12, 0, 6>  # "ssl23_accept"
                Elf32_Sym <aDtlsv1EncData - byte_4BB8, DTLSv1_enc_data, 0x38, 0x11, 0,\  # "DTLSv1_enc_data"
                           0xA>
                Elf32_Sym <aSslv3EncData - byte_4BB8, SSLv3_enc_data, 0x38, 0x11, 0, \  # "SSLv3_enc_data"
                           0xA>
                Elf32_Sym <aSsl3Read - byte_4BB8, ssl3_read, 0x144, 0x12, 0, 6>  # "ssl3_read"
                Elf32_Sym <aSsl2Peek - byte_4BB8, ssl2_peek, 0x1C, 0x12, 0, 6>  # "ssl2_peek"
                Elf32_Sym <aSsl2Ctrl - byte_4BB8, ssl2_ctrl, 0x1C, 0x12, 0, 6>  # "ssl2_ctrl"
                Elf32_Sym <aSsl2Free - byte_4BB8, ssl2_free, 0x98, 0x12, 0, 6>  # "ssl2_free"
                Elf32_Sym <aDtls1Free - byte_4BB8, dtls1_free, 0xBC, 0x12, 0, 6>  # "dtls1_free"
                Elf32_Sym <aSsl3DefaultTim - byte_4BB8, ssl3_default_timeout, 8, 0x12,\  # "ssl3_default_timeout"
                           0, 6>
                Elf32_Sym <aDtls1DefaultTi+1 - byte_4BB8, tls1_default_timeout, 8, \  # "tls1_default_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aSsl23PutCipher - byte_4BB8, ssl23_put_cipher_by_char, \  # "ssl23_put_cipher_by_char"
                           0x28, 0x12, 0, 6>
                Elf32_Sym <aSsl2CallbackCt - byte_4BB8, ssl2_callback_ctrl, 8, 0x12, \  # "ssl2_callback_ctrl"
                           0, 6>
                Elf32_Sym <aSsl3CallbackCt - byte_4BB8, ssl3_callback_ctrl, 0xE4, \  # "ssl3_callback_ctrl"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1Clear - byte_4BB8, dtls1_clear, 0x158, 0x12, 0, 6>  # "dtls1_clear"
                Elf32_Sym <aSsl3SetupKeyBl - byte_4BB8, ssl3_setup_key_block, 0x47C, \  # "ssl3_setup_key_block"
                           0x12, 0, 6>
                Elf32_Sym <aSsl23GetCipher_0 - byte_4BB8, ssl23_get_cipher, 0x68, \  # "ssl23_get_cipher"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3AlertCode - byte_4BB8, ssl3_alert_code, 0xA4, 0x12, 0,\  # "ssl3_alert_code"
                           6>
                Elf32_Sym <aSsl3GetMessage - byte_4BB8, ssl3_get_message, 0x4C8, 0x12,\  # "ssl3_get_message"
                           0, 6>
                Elf32_Sym <aDtls1GetCipher - byte_4BB8, dtls1_get_cipher, 0x5C, 0x12, \  # "dtls1_get_cipher"
                           0, 6>
                Elf32_Sym <aDtls1DefaultTi - byte_4BB8, dtls1_default_timeout, 8, \  # "dtls1_default_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1Clear+1 - byte_4BB8, tls1_clear, 0x48, 0x12, 0, 6>  # "tls1_clear"
                Elf32_Sym <aSsl23DefaultTi - byte_4BB8, ssl23_default_timeout, 8, \  # "ssl23_default_timeout"
                           0x12, 0, 6>
                Elf32_Sym <aSsl2PutCipherB - byte_4BB8, ssl2_put_cipher_by_char, 0x44,\  # "ssl2_put_cipher_by_char"
                           0x12, 0, 6>
                Elf32_Sym <aSsl3Enc - byte_4BB8, ssl3_enc, 0x2A0, 0x12, 0, 6>  # "ssl3_enc"
                Elf32_Sym <aDtls1GetMessag - byte_4BB8, dtls1_get_message, 0x2E0, \  # "dtls1_get_message"
                           0x12, 0, 6>
                Elf32_Sym <aSsl23Peek - byte_4BB8, ssl23_peek, 0xF8, 0x12, 0, 6>  # "ssl23_peek"
                Elf32_Sym <aSslUndefinedVo - byte_4BB8, ssl_undefined_void_function, \  # "ssl_undefined_void_function"
                           0x48, 0x12, 0, 6>
                Elf32_Sym <aSsl23Write - byte_4BB8, ssl23_write, 0xF8, 0x12, 0, 6>  # "ssl23_write"
                Elf32_Sym <aDtls1Enc+1 - byte_4BB8, tls1_enc, 0x7B8, 0x12, 0, 6>  # "tls1_enc"
                Elf32_Sym <aTls1SetupKeyBl - byte_4BB8, tls1_setup_key_block, 0x2F0, \  # "tls1_setup_key_block"
                           0x12, 0, 6>
                Elf32_Sym <aDtls1ReadBytes - byte_4BB8, dtls1_read_bytes, 0xC9C, 0x12,\  # "dtls1_read_bytes"
                           0, 6>
 # ELF String Table
byte_4BB8:      .byte 0                  # DATA XREF: LOAD:00001708↑o
                                         # LOAD:00001718↑o ...
aLibcryptoSo100:.ascii "libcrypto.so.1.0.0"<0>
aGlobalOffsetTa:.ascii "_GLOBAL_OFFSET_TABLE_"<0>
                                         # DATA XREF: LOAD:000019E8↑o
aLibdlSo0:      .ascii "libdl.so.0"<0>
aLibgccSSo1:    .ascii "libgcc_s.so.1"<0>
aLibcSo0:       .ascii "libc.so.0"<0>
aSslv2Method:   .ascii "SSLv2_method"<0>
                                         # DATA XREF: LOAD:00003D58↑o
aGpDisp:        .ascii "_gp_disp"<0>     # DATA XREF: LOAD:00001848↑o
aSsl2New:       .ascii "ssl2_new"<0>     # DATA XREF: LOAD:000037B8↑o
aSsl2Clear:     .ascii "ssl2_clear"<0>   # DATA XREF: LOAD:000041D8↑o
aSsl2Free:      .ascii "ssl2_free"<0>    # DATA XREF: LOAD:00004A28↑o
aSsl2Accept:    .ascii "ssl2_accept"<0>  # DATA XREF: LOAD:000038F8↑o
aSsl2Connect:   .ascii "ssl2_connect"<0>
                                         # DATA XREF: LOAD:00003C88↑o
aSsl2Read:      .ascii "ssl2_read"<0>    # DATA XREF: LOAD:00003B78↑o
aSsl2Peek:      .ascii "ssl2_peek"<0>    # DATA XREF: LOAD:00004A08↑o
aSsl2Write:     .ascii "ssl2_write"<0>   # DATA XREF: LOAD:00002618↑o
aSsl2Shutdown:  .ascii "ssl2_shutdown"<0>
                                         # DATA XREF: LOAD:00004878↑o
aSslOk:         .ascii "ssl_ok"<0>       # DATA XREF: LOAD:00004808↑o
aSsl2Ctrl:      .ascii "ssl2_ctrl"<0>    # DATA XREF: LOAD:00004A18↑o
aSsl2CtxCtrl:   .ascii "ssl2_ctx_ctrl"<0>
                                         # DATA XREF: LOAD:000049B8↑o
aSsl2GetCipherB:.ascii "ssl2_get_cipher_by_char"<0>
                                         # DATA XREF: LOAD:00002E28↑o
aSsl2PutCipherB:.ascii "ssl2_put_cipher_by_char"<0>
                                         # DATA XREF: LOAD:00004B28↑o
aSsl2Pending:   .ascii "ssl2_pending"<0>
                                         # DATA XREF: LOAD:000047F8↑o
aSsl2NumCiphers:.ascii "ssl2_num_ciphers"<0>
                                         # DATA XREF: LOAD:00002BC8↑o
aSsl2GetCipher: .ascii "ssl2_get_cipher"<0>
                                         # DATA XREF: LOAD:00003318↑o
aSsl2DefaultTim:.ascii "ssl2_default_timeout"<0>
                                         # DATA XREF: LOAD:00004908↑o
aSsl3UndefEncMe:.ascii "ssl3_undef_enc_method"<0>
                                         # DATA XREF: LOAD:00004978↑o
aSslUndefinedVo:.ascii "ssl_undefined_void_function"<0>
                                         # DATA XREF: LOAD:00004B68↑o
aSsl2CallbackCt:.ascii "ssl2_callback_ctrl"<0>
                                         # DATA XREF: LOAD:00004A78↑o
aSsl2CtxCallbac:.ascii "ssl2_ctx_callback_ctrl"<0>
                                         # DATA XREF: LOAD:00004918↑o
aSslv2ServerMet:.ascii "SSLv2_server_method"<0>
                                         # DATA XREF: LOAD:00002A28↑o
aErrPutError:   .ascii "ERR_put_error"<0>
                                         # DATA XREF: LOAD:00002438↑o
aSkFree:        .ascii "sk_free"<0>      # DATA XREF: LOAD:000043E8↑o
aX509Free:      .ascii "X509_free"<0>    # DATA XREF: LOAD:00002B58↑o
aD2iX509:       .ascii "d2i_X509"<0>     # DATA XREF: LOAD:00003128↑o
aSkNewNull:     .ascii "sk_new_null"<0>  # DATA XREF: LOAD:00002A88↑o
aSkPush:        .ascii "sk_push"<0>      # DATA XREF: LOAD:000023F8↑o
aSsl2ReturnErro:.ascii "ssl2_return_error"<0>
                                         # DATA XREF: LOAD:00002CA8↑o
aSsl2DoWrite:   .ascii "ssl2_do_write"<0>
                                         # DATA XREF: LOAD:000044D8↑o
aSsl2PartRead:  .ascii "ssl2_part_read"<0>
                                         # DATA XREF: LOAD:00002F88↑o
aSslVerifyCertC:.ascii "ssl_verify_cert_chain"<0>
                                         # DATA XREF: LOAD:00003D68↑o
aEvpMdCtxInit:  .ascii "EVP_MD_CTX_init"<0>
                                         # DATA XREF: LOAD:00002B18↑o
aEvpDigestinitE:.ascii "EVP_DigestInit_ex"<0>
                                         # DATA XREF: LOAD:00002858↑o
aEvpDigestupdat:.ascii "EVP_DigestUpdate"<0>
                                         # DATA XREF: LOAD:000023C8↑o
aI2dX509:       .ascii "i2d_X509"<0>     # DATA XREF: LOAD:000046B8↑o
aCryptoMalloc:  .ascii "CRYPTO_malloc"<0>
                                         # DATA XREF: LOAD:00003F08↑o
aCryptoFree:    .ascii "CRYPTO_free"<0>  # DATA XREF: LOAD:00003958↑o
aX509GetPubkey: .ascii "X509_get_pubkey"<0>
                                         # DATA XREF: LOAD:00002F38↑o
aEvpVerifyfinal:.ascii "EVP_VerifyFinal"<0>
                                         # DATA XREF: LOAD:00002808↑o
aEvpPkeyFree:   .ascii "EVP_PKEY_free"<0>
                                         # DATA XREF: LOAD:000030A8↑o
aEvpMdCtxCleanu:.ascii "EVP_MD_CTX_cleanup"<0>
                                         # DATA XREF: LOAD:00003638↑o
aCryptoAddLock: .ascii "CRYPTO_add_lock"<0>
                                         # DATA XREF: LOAD:00002D18↑o
aRandPseudoByte:.ascii "RAND_pseudo_bytes"<0>
                                         # DATA XREF: LOAD:00002E08↑o
aRandAdd:       .ascii "RAND_add"<0>     # DATA XREF: LOAD:00003378↑o
aErrClearError: .ascii "ERR_clear_error"<0>
                                         # DATA XREF: LOAD:00003B68↑o
aErrnoLocation: .ascii "__errno_location"<0>
                                         # DATA XREF: LOAD:00004468↑o
aSslState:      .ascii "SSL_state"<0>    # DATA XREF: LOAD:00003ED8↑o
aSslClear:      .ascii "SSL_clear"<0>    # DATA XREF: LOAD:00002F48↑o
aMemcpy:        .ascii "memcpy"<0>       # DATA XREF: LOAD:00004308↑o
aSslCipherGetEv:.ascii "ssl_cipher_get_evp"<0>
                                         # DATA XREF: LOAD:00002C58↑o
aEvpCipherKeyLe:.ascii "EVP_CIPHER_key_length"<0>
                                         # DATA XREF: LOAD:000028A8↑o
aBufMemGrow:    .ascii "BUF_MEM_grow"<0>
                                         # DATA XREF: LOAD:00003938↑o
aBufMemFree:    .ascii "BUF_MEM_free"<0>
                                         # DATA XREF: LOAD:00002DF8↑o
aSslFreeWbioBuf:.ascii "ssl_free_wbio_buffer"<0>
                                         # DATA XREF: LOAD:00002A08↑o
aSslUpdateCache:.ascii "ssl_update_cache"<0>
                                         # DATA XREF: LOAD:00004578↑o
aBioCtrl:       .ascii "BIO_ctrl"<0>     # DATA XREF: LOAD:00004428↑o
aBioPop:        .ascii "BIO_pop"<0>      # DATA XREF: LOAD:000027E8↑o
aSslInitWbioBuf:.ascii "ssl_init_wbio_buffer"<0>
                                         # DATA XREF: LOAD:00003028↑o
aMemcmp:        .ascii "memcmp"<0>       # DATA XREF: LOAD:00002D38↑o
aSsl2EncInit:   .ascii "ssl2_enc_init"<0>
                                         # DATA XREF: LOAD:00002578↑o
aSslGetPrevSess:.ascii "ssl_get_prev_session"<0>
                                         # DATA XREF: LOAD:00003758↑o
aSslGetNewSessi:.ascii "ssl_get_new_session"<0>
                                         # DATA XREF: LOAD:00003D28↑o
aSslBytesToCiph:.ascii "ssl_bytes_to_cipher_list"<0>
                                         # DATA XREF: LOAD:000040F8↑o
aSslSessCertFre:.ascii "ssl_sess_cert_free"<0>
                                         # DATA XREF: LOAD:00002D48↑o
aSslSessCertNew:.ascii "ssl_sess_cert_new"<0>
                                         # DATA XREF: LOAD:00004198↑o
aBufMemNew:     .ascii "BUF_MEM_new"<0>  # DATA XREF: LOAD:00003C58↑o
aRsaPrivateDecr:.ascii "RSA_private_decrypt"<0>
                                         # DATA XREF: LOAD:00003E08↑o
aSslGetCiphers: .ascii "SSL_get_ciphers"<0>
                                         # DATA XREF: LOAD:00002548↑o
aSkNum:         .ascii "sk_num"<0>       # DATA XREF: LOAD:00003148↑o
aSkValue:       .ascii "sk_value"<0>     # DATA XREF: LOAD:00004038↑o
aSkFind:        .ascii "sk_find"<0>      # DATA XREF: LOAD:00003438↑o
aSkDelete:      .ascii "sk_delete"<0>    # DATA XREF: LOAD:00002848↑o
aSkDup:         .ascii "sk_dup"<0>       # DATA XREF: LOAD:00003298↑o
aSslCipherListT:.ascii "ssl_cipher_list_to_bytes"<0>
                                         # DATA XREF: LOAD:00003428↑o
aSslUndefinedFu:.ascii "ssl_undefined_function"<0>
                                         # DATA XREF: LOAD:00003B38↑o
aSslv2ClientMet:.ascii "SSLv2_client_method"<0>
                                         # DATA XREF: LOAD:00003E38↑o
aSsl2SetCertifi:.ascii "ssl2_set_certificate"<0>
                                         # DATA XREF: LOAD:00003E88↑o
aSslSetPeerCert:.ascii "ssl_set_peer_cert_type"<0>
                                         # DATA XREF: LOAD:000030B8↑o
aSslUseCertific:.ascii "SSL_use_certificate"<0>
                                         # DATA XREF: LOAD:00002868↑o
aEvpSignfinal:  .ascii "EVP_SignFinal"<0>
                                         # DATA XREF: LOAD:00002BD8↑o
aSslUsePrivatek:.ascii "SSL_use_PrivateKey"<0>
                                         # DATA XREF: LOAD:00002678↑o
aEvpCipherIvLen:.ascii "EVP_CIPHER_iv_length"<0>
                                         # DATA XREF: LOAD:000042D8↑o
aRandBytes:     .ascii "RAND_bytes"<0>   # DATA XREF: LOAD:00003738↑o
aRsaPublicEncry:.ascii "RSA_public_encrypt"<0>
                                         # DATA XREF: LOAD:00003DB8↑o
aSslCipherPtrId:.ascii "ssl_cipher_ptr_id_cmp"<0>
                                         # DATA XREF: LOAD:00002FE8↑o
aSkSetCmpFunc:  .ascii "sk_set_cmp_func"<0>
                                         # DATA XREF: LOAD:00004088↑o
aSsl2Ciphers:   .ascii "ssl2_ciphers"<0>
                                         # DATA XREF: LOAD:00002FB8↑o
aSsl2WriteError:.ascii "ssl2_write_error"<0>
                                         # DATA XREF: LOAD:00003D38↑o
aOpenssldie:    .ascii "OpenSSLDie"<0>   # DATA XREF: LOAD:00003CA8↑o
aSsl2GenerateKe:.ascii "ssl2_generate_key_material"<0>
                                         # DATA XREF: LOAD:00003338↑o
aEvpMd5:        .ascii "EVP_md5"<0>      # DATA XREF: LOAD:000026E8↑o
aEvpMdSize:     .ascii "EVP_MD_size"<0>  # DATA XREF: LOAD:000023E8↑o
aEvpDigestfinal:.ascii "EVP_DigestFinal_ex"<0>
                                         # DATA XREF: LOAD:000027F8↑o
aObjBsearchSslC:.ascii "OBJ_bsearch_ssl_cipher_id"<0>
                                         # DATA XREF: LOAD:00004058↑o
aMemset:        .ascii "memset"<0>       # DATA XREF: LOAD:00002F68↑o
aOpensslCleanse:.ascii "OPENSSL_cleanse"<0>
                                         # DATA XREF: LOAD:00003FC8↑o
aSsl2VersionStr:.ascii "ssl2_version_str"<0>
                                         # DATA XREF: LOAD:00001A88↑o
aSsl2Mac:       .ascii "ssl2_mac"<0>     # DATA XREF: LOAD:00004508↑o
aEvpMdCtxCopy:  .ascii "EVP_MD_CTX_copy"<0>
                                         # DATA XREF: LOAD:000044A8↑o
aEvpCipherCtxKe:.ascii "EVP_CIPHER_CTX_key_length"<0>
                                         # DATA XREF: LOAD:00003208↑o
aSsl2Enc:       .ascii "ssl2_enc"<0>     # DATA XREF: LOAD:00004558↑o
aEvpCipher:     .ascii "EVP_Cipher"<0>   # DATA XREF: LOAD:00002A78↑o
aSslReplaceHash:.ascii "ssl_replace_hash"<0>
                                         # DATA XREF: LOAD:00002908↑o
aEvpCipherCtxIn:.ascii "EVP_CIPHER_CTX_init"<0>
                                         # DATA XREF: LOAD:00004208↑o
aEvpEncryptinit:.ascii "EVP_EncryptInit_ex"<0>
                                         # DATA XREF: LOAD:00002A18↑o
aEvpDecryptinit:.ascii "EVP_DecryptInit_ex"<0>
                                         # DATA XREF: LOAD:000032F8↑o
aMemmove:       .ascii "memmove"<0>      # DATA XREF: LOAD:00003848↑o
aBioRead:       .ascii "BIO_read"<0>     # DATA XREF: LOAD:000028B8↑o
aEvpMdCtxMd:    .ascii "EVP_MD_CTX_md"<0>
                                         # DATA XREF: LOAD:00003698↑o
aEvpCipherCtxBl:.ascii "EVP_CIPHER_CTX_block_size"<0>
                                         # DATA XREF: LOAD:00004328↑o
aBioWrite:      .ascii "BIO_write"<0>    # DATA XREF: LOAD:00002F78↑o
aSslv3Method:   .ascii "SSLv3_method"<0>
                                         # DATA XREF: LOAD:00003888↑o
aSsl3New:       .ascii "ssl3_new"<0>     # DATA XREF: LOAD:00002CB8↑o
aSsl3Clear:     .ascii "ssl3_clear"<0>   # DATA XREF: LOAD:00003928↑o
aSsl3Free:      .ascii "ssl3_free"<0>    # DATA XREF: LOAD:00003A68↑o
aSsl3Accept:    .ascii "ssl3_accept"<0>  # DATA XREF: LOAD:00002668↑o
aSsl3Connect:   .ascii "ssl3_connect"<0>
                                         # DATA XREF: LOAD:00004278↑o
aSsl3Read:      .ascii "ssl3_read"<0>    # DATA XREF: LOAD:000049F8↑o
aSsl3Peek:      .ascii "ssl3_peek"<0>    # DATA XREF: LOAD:00004818↑o
aSsl3Write:     .ascii "ssl3_write"<0>   # DATA XREF: LOAD:000048F8↑o
aSsl3Shutdown:  .ascii "ssl3_shutdown"<0>
                                         # DATA XREF: LOAD:00003838↑o
aSsl3Renegotiat:.ascii "ssl3_renegotiate"<0>
                                         # DATA XREF: LOAD:00002518↑o
aSsl3Renegotiat_0:.ascii "ssl3_renegotiate_check"<0>
                                         # DATA XREF: LOAD:00004248↑o
aSsl3GetMessage:.ascii "ssl3_get_message"<0>
                                         # DATA XREF: LOAD:00004AD8↑o
aSsl3ReadBytes: .ascii "ssl3_read_bytes"<0>
                                         # DATA XREF: LOAD:00004948↑o
aSsl3WriteBytes:.ascii "ssl3_write_bytes"<0>
                                         # DATA XREF: LOAD:00003228↑o
aSsl3DispatchAl:.ascii "ssl3_dispatch_alert"<0>
                                         # DATA XREF: LOAD:000048C8↑o
aSsl3Ctrl:      .ascii "ssl3_ctrl"<0>    # DATA XREF: LOAD:00003238↑o
aSsl3CtxCtrl:   .ascii "ssl3_ctx_ctrl"<0>
                                         # DATA XREF: LOAD:00003FB8↑o
aSsl3GetCipherB:.ascii "ssl3_get_cipher_by_char"<0>
                                         # DATA XREF: LOAD:00003E68↑o
aSsl3PutCipherB:.ascii "ssl3_put_cipher_by_char"<0>
                                         # DATA XREF: LOAD:00003408↑o
aSsl3Pending:   .ascii "ssl3_pending"<0>
                                         # DATA XREF: LOAD:00004788↑o
aSsl3NumCiphers:.ascii "ssl3_num_ciphers"<0>
                                         # DATA XREF: LOAD:00002A38↑o
aSsl3GetCipher: .ascii "ssl3_get_cipher"<0>
                                         # DATA XREF: LOAD:00003768↑o
aSsl3DefaultTim:.ascii "ssl3_default_timeout"<0>
                                         # DATA XREF: LOAD:00004A48↑o
aSslv3EncData:  .ascii "SSLv3_enc_data"<0>
                                         # DATA XREF: LOAD:000049E8↑o
aSsl3CallbackCt:.ascii "ssl3_callback_ctrl"<0>
                                         # DATA XREF: LOAD:00004A88↑o
aSsl3CtxCallbac:.ascii "ssl3_ctx_callback_ctrl"<0>
                                         # DATA XREF: LOAD:00002C68↑o
aSslv3ServerMet:.ascii "SSLv3_server_method"<0>
                                         # DATA XREF: LOAD:00003B08↑o
aSsl3CheckClien:.ascii "ssl3_check_client_hello"<0>
                                         # DATA XREF: LOAD:000038A8↑o
aSsl3GetNextPro:.ascii "ssl3_get_next_proto"<0>
                                         # DATA XREF: LOAD:000035E8↑o
aSsl3SendCertSt:.ascii "ssl3_send_cert_status"<0>
                                         # DATA XREF: LOAD:00002C38↑o
aSsl3DoWrite:   .ascii "ssl3_do_write"<0>
                                         # DATA XREF: LOAD:00002B98↑o
aSsl3SendServer:.ascii "ssl3_send_server_done"<0>
                                         # DATA XREF: LOAD:00004648↑o
aSsl3SendHelloR:.ascii "ssl3_send_hello_request"<0>
                                         # DATA XREF: LOAD:00004638↑o
aSsl3SendNewses:.ascii "ssl3_send_newsession_ticket"<0>
                                         # DATA XREF: LOAD:00003178↑o
aI2dSslSession: .ascii "i2d_SSL_SESSION"<0>
                                         # DATA XREF: LOAD:00002948↑o
aD2iSslSession: .ascii "d2i_SSL_SESSION"<0>
                                         # DATA XREF: LOAD:000044E8↑o
aSslSessionFree:.ascii "SSL_SESSION_free"<0>
                                         # DATA XREF: LOAD:000040D8↑o
aHmacCtxInit:   .ascii "HMAC_CTX_init"<0>
                                         # DATA XREF: LOAD:00004348↑o
                                         # LOAD:00002298↑o
aEvpCipherCtxIv:.ascii "EVP_CIPHER_CTX_iv_length"<0>
                                         # DATA XREF: LOAD:00004318↑o
aEvpEncryptupda:.ascii "EVP_EncryptUpdate"<0>
                                         # DATA XREF: LOAD:000028E8↑o
aEvpEncryptfina:.ascii "EVP_EncryptFinal"<0>
                                         # DATA XREF: LOAD:000040E8↑o
aEvpCipherCtxCl:.ascii "EVP_CIPHER_CTX_cleanup"<0>
                                         # DATA XREF: LOAD:000035D8↑o
aHmacUpdate:    .ascii "HMAC_Update"<0>  # DATA XREF: LOAD:00003FE8↑o
aHmacFinal:     .ascii "HMAC_Final"<0>   # DATA XREF: LOAD:00003BC8↑o
aHmacCtxCleanup:.ascii "HMAC_CTX_cleanup"<0>
                                         # DATA XREF: LOAD:000033B8↑o
aEvpAes128Cbc:  .ascii "EVP_aes_128_cbc"<0>
                                         # DATA XREF: LOAD:000027C8↑o
aEvpSha256:     .ascii "EVP_sha256"<0>   # DATA XREF: LOAD:00004138↑o
aHmacInitEx:    .ascii "HMAC_Init_ex"<0>
                                         # DATA XREF: LOAD:000037A8↑o
aSsl3SendServer_0:.ascii "ssl3_send_server_certificate"<0>
                                         # DATA XREF: LOAD:00003488↑o
aSslGetServerSe:.ascii "ssl_get_server_send_cert"<0>
                                         # DATA XREF: LOAD:00002D28↑o
aSsl3OutputCert:.ascii "ssl3_output_cert_chain"<0>
                                         # DATA XREF: LOAD:00003F98↑o
aSsl3GetClientC:.ascii "ssl3_get_client_certificate"<0>
                                         # DATA XREF: LOAD:00003FF8↑o
aSsl3SendAlert: .ascii "ssl3_send_alert"<0>
                                         # DATA XREF: LOAD:000025E8↑o
aSkPopFree:     .ascii "sk_pop_free"<0>  # DATA XREF: LOAD:000044C8↑o
aSkShift:       .ascii "sk_shift"<0>     # DATA XREF: LOAD:00003828↑o
aSsl3DigestCach:.ascii "ssl3_digest_cached_records"<0>
                                         # DATA XREF: LOAD:00003078↑o
aSslVerifyAlarm:.ascii "ssl_verify_alarm_type"<0>
                                         # DATA XREF: LOAD:00003978↑o
aSsl3GetCertVer:.ascii "ssl3_get_cert_verify"<0>
                                         # DATA XREF: LOAD:00004618↑o
aX509Certificat:.ascii "X509_certificate_type"<0>
                                         # DATA XREF: LOAD:00003608↑o
aBioFree:       .ascii "BIO_free"<0>     # DATA XREF: LOAD:00004588↑o
aEvpPkeySize:   .ascii "EVP_PKEY_size"<0>
                                         # DATA XREF: LOAD:00003688↑o
aTls12GetSigid: .ascii "tls12_get_sigid"<0>
                                         # DATA XREF: LOAD:00003988↑o
aRsaVerify:     .ascii "RSA_verify"<0>   # DATA XREF: LOAD:00004178↑o
aEvpPkeyCtxNew: .ascii "EVP_PKEY_CTX_new"<0>
                                         # DATA XREF: LOAD:00004388↑o
aEvpPkeyVerifyI:.ascii "EVP_PKEY_verify_init"<0>
                                         # DATA XREF: LOAD:00003268↑o
aStderr:        .ascii "stderr"<0>       # DATA XREF: LOAD:00003568↑o
aFprintf:       .ascii "fprintf"<0>      # DATA XREF: LOAD:00002E78↑o
aEvpPkeyVerify: .ascii "EVP_PKEY_verify"<0>
                                         # DATA XREF: LOAD:00003188↑o
aEvpPkeyCtxFree:.ascii "EVP_PKEY_CTX_free"<0>
                                         # DATA XREF: LOAD:00004418↑o
aDsaVerify:     .ascii "DSA_verify"<0>   # DATA XREF: LOAD:00003F28↑o
aTls12GetHash:  .ascii "tls12_get_hash"<0>
                                         # DATA XREF: LOAD:00003248↑o
aSsl3GetClientK:.ascii "ssl3_get_client_key_exchange"<0>
                                         # DATA XREF: LOAD:00004438↑o
aEvpPkeyDecrypt:.ascii "EVP_PKEY_decrypt_init"<0>
                                         # DATA XREF: LOAD:00003DF8↑o
aEvpPkeyDeriveS:.ascii "EVP_PKEY_derive_set_peer"<0>
                                         # DATA XREF: LOAD:000041E8↑o
aEvpPkeyDecrypt_0:.ascii "EVP_PKEY_decrypt"<0>
                                         # DATA XREF: LOAD:00003658↑o
aEvpPkeyCtxCtrl:.ascii "EVP_PKEY_CTX_ctrl"<0>
                                         # DATA XREF: LOAD:00002998↑o
aBnBin2bn:      .ascii "BN_bin2bn"<0>    # DATA XREF: LOAD:000036F8↑o
aBufStrdup:     .ascii "BUF_strdup"<0>   # DATA XREF: LOAD:00003558↑o
aSrpGenerateSer:.ascii "SRP_generate_server_master_secret"<0>
                                         # DATA XREF: LOAD:00003C18↑o
aSsl3SendCertif:.ascii "ssl3_send_certificate_request"<0>
                                         # DATA XREF: LOAD:000043C8↑o
aSsl3GetReqCert:.ascii "ssl3_get_req_cert_type"<0>
                                         # DATA XREF: LOAD:000035C8↑o
aSslGetClientCa:.ascii "SSL_get_client_CA_list"<0>
                                         # DATA XREF: LOAD:00002F98↑o
aI2dX509Name:   .ascii "i2d_X509_NAME"<0>
                                         # DATA XREF: LOAD:00002F08↑o
aBufMemGrowClea:.ascii "BUF_MEM_grow_clean"<0>
                                         # DATA XREF: LOAD:00003058↑o
aTls12GetReqSig:.ascii "tls12_get_req_sig_algs"<0>
                                         # DATA XREF: LOAD:00002D68↑o
aSsl3SendServer_1:.ascii "ssl3_send_server_key_exchange"<0>
                                         # DATA XREF: LOAD:00002398↑o
aBnNumBits:     .ascii "BN_num_bits"<0>  # DATA XREF: LOAD:000043B8↑o
aSslGetSignPkey:.ascii "ssl_get_sign_pkey"<0>
                                         # DATA XREF: LOAD:00004518↑o
aBnBn2bin:      .ascii "BN_bn2bin"<0>    # DATA XREF: LOAD:00003DC8↑o
aTls12GetSigand:.ascii "tls12_get_sigandhash"<0>
                                         # DATA XREF: LOAD:000025C8↑o
aRsaUpRef:      .ascii "RSA_up_ref"<0>   # DATA XREF: LOAD:000025F8↑o
aEvpMdCtxSetFla:.ascii "EVP_MD_CTX_set_flags"<0>
                                         # DATA XREF: LOAD:00002FD8↑o
aRsaSign:       .ascii "RSA_sign"<0>     # DATA XREF: LOAD:00003EA8↑o
aSsl3SendServer_2:.ascii "ssl3_send_server_hello"<0>
                                         # DATA XREF: LOAD:00002CD8↑o
aSslPrepareServ:.ascii "ssl_prepare_serverhello_tlsext"<0>
                                         # DATA XREF: LOAD:00003098↑o
aSslAddServerhe:.ascii "ssl_add_serverhello_tlsext"<0>
                                         # DATA XREF: LOAD:000024E8↑o
aSsl3GetClientH:.ascii "ssl3_get_client_hello"<0>
                                         # DATA XREF: LOAD:00002C98↑o
aSslCtrl:       .ascii "SSL_ctrl"<0>     # DATA XREF: LOAD:00004008↑o
aSslParseClient:.ascii "ssl_parse_clienthello_tlsext"<0>
                                         # DATA XREF: LOAD:00002708↑o
aSslCheckClient:.ascii "ssl_check_clienthello_tlsext"<0>
                                         # DATA XREF: LOAD:000024A8↑o
aSsl3ChooseCiph:.ascii "ssl3_choose_cipher"<0>
                                         # DATA XREF: LOAD:00003BE8↑o
aSsl3SendFinish:.ascii "ssl3_send_finished"<0>
                                         # DATA XREF: LOAD:00003348↑o
aSsl3CleanupKey:.ascii "ssl3_cleanup_key_block"<0>
                                         # DATA XREF: LOAD:00003C38↑o
aSsl3SetupBuffe:.ascii "ssl3_setup_buffers"<0>
                                         # DATA XREF: LOAD:000030E8↑o
aSsl3InitFinish:.ascii "ssl3_init_finished_mac"<0>
                                         # DATA XREF: LOAD:00003D18↑o
aSsl3GetFinishe:.ascii "ssl3_get_finished"<0>
                                         # DATA XREF: LOAD:00003BA8↑o
aSsl3SendChange:.ascii "ssl3_send_change_cipher_spec"<0>
                                         # DATA XREF: LOAD:000028C8↑o
aEvpMdType:     .ascii "EVP_MD_type"<0>  # DATA XREF: LOAD:000032E8↑o
aSslSrpServerPa:.ascii "SSL_srp_server_param_with_username"<0>
                                         # DATA XREF: LOAD:00002728↑o
aSslv3ClientMet:.ascii "SSLv3_client_method"<0>
                                         # DATA XREF: LOAD:00003948↑o
aSsl3CheckFinis:.ascii "ssl3_check_finished"<0>
                                         # DATA XREF: LOAD:000032C8↑o
aSslDoClientCer:.ascii "ssl_do_client_cert_cb"<0>
                                         # DATA XREF: LOAD:00004028↑o
aSsl3SendNextPr:.ascii "ssl3_send_next_proto"<0>
                                         # DATA XREF: LOAD:000046E8↑o
aSsl3CheckCertA:.ascii "ssl3_check_cert_and_algorithm"<0>
                                         # DATA XREF: LOAD:000040A8↑o
aRsaSize:       .ascii "RSA_size"<0>     # DATA XREF: LOAD:00004018↑o
aSsl3GetServerD:.ascii "ssl3_get_server_done"<0>
                                         # DATA XREF: LOAD:00002CF8↑o
aSsl3SendClient:.ascii "ssl3_send_client_certificate"<0>
                                         # DATA XREF: LOAD:00003D78↑o
aSsl3SendClient_0:.ascii "ssl3_send_client_verify"<0>
                                         # DATA XREF: LOAD:000042B8↑o
aEvpPkeySignIni:.ascii "EVP_PKEY_sign_init"<0>
                                         # DATA XREF: LOAD:00002958↑o
aEvpSha1:       .ascii "EVP_sha1"<0>     # DATA XREF: LOAD:00002498↑o
aEvpPkeySign:   .ascii "EVP_PKEY_sign"<0>
                                         # DATA XREF: LOAD:00004458↑o
aDsaSign:       .ascii "DSA_sign"<0>     # DATA XREF: LOAD:00003EB8↑o
aSsl3SendClient_1:.ascii "ssl3_send_client_key_exchange"<0>
                                         # DATA XREF: LOAD:00002ED8↑o
aSrpGenerateCli:.ascii "SRP_generate_client_master_secret"<0>
                                         # DATA XREF: LOAD:00002568↑o
aEvpPkeyEncrypt:.ascii "EVP_PKEY_encrypt_init"<0>
                                         # DATA XREF: LOAD:00003A78↑o
aEvpMdCtxCreate:.ascii "EVP_MD_CTX_create"<0>
                                         # DATA XREF: LOAD:00003F88↑o
aObjNid2sn:     .ascii "OBJ_nid2sn"<0>   # DATA XREF: LOAD:00003628↑o
aEvpGetDigestby:.ascii "EVP_get_digestbyname"<0>
                                         # DATA XREF: LOAD:00002EB8↑o
aEvpDigestinit: .ascii "EVP_DigestInit"<0>
                                         # DATA XREF: LOAD:000045A8↑o
aEvpMdCtxDestro:.ascii "EVP_MD_CTX_destroy"<0>
                                         # DATA XREF: LOAD:000031E8↑o
aEvpPkeyEncrypt_0:.ascii "EVP_PKEY_encrypt"<0>
                                         # DATA XREF: LOAD:00002DC8↑o
aSsl3GetCertSta:.ascii "ssl3_get_cert_status"<0>
                                         # DATA XREF: LOAD:000045F8↑o
aBufMemdup:     .ascii "BUF_memdup"<0>   # DATA XREF: LOAD:00003038↑o
aSsl3GetNewSess:.ascii "ssl3_get_new_session_ticket"<0>
                                         # DATA XREF: LOAD:00004718↑o
aEvpDigest:     .ascii "EVP_Digest"<0>   # DATA XREF: LOAD:00003088↑o
aSsl3GetCertifi:.ascii "ssl3_get_certificate_request"<0>
                                         # DATA XREF: LOAD:00003048↑o
aSkNew:         .ascii "sk_new"<0>       # DATA XREF: LOAD:00003AB8↑o
aX509NameFree:  .ascii "X509_NAME_free"<0>
                                         # DATA XREF: LOAD:00003DE8↑o
aD2iX509Name:   .ascii "d2i_X509_NAME"<0>
                                         # DATA XREF: LOAD:00004708↑o
aTls1ProcessSig:.ascii "tls1_process_sigalgs"<0>
                                         # DATA XREF: LOAD:00003878↑o
aX509NameCmp:   .ascii "X509_NAME_cmp"<0>
                                         # DATA XREF: LOAD:00003CD8↑o
aSsl3GetKeyExch:.ascii "ssl3_get_key_exchange"<0>
                                         # DATA XREF: LOAD:00004268↑o
aRsaFree:       .ascii "RSA_free"<0>     # DATA XREF: LOAD:000033F8↑o
aRsaNew:        .ascii "RSA_new"<0>      # DATA XREF: LOAD:00003518↑o
aSsl3GetServerC:.ascii "ssl3_get_server_certificate"<0>
                                         # DATA XREF: LOAD:00003A28↑o
aSslCertType:   .ascii "ssl_cert_type"<0>
                                         # DATA XREF: LOAD:00002738↑o
aEvpPkeyMissing:.ascii "EVP_PKEY_missing_parameters"<0>
                                         # DATA XREF: LOAD:00003CE8↑o
aSsl3GetServerH:.ascii "ssl3_get_server_hello"<0>
                                         # DATA XREF: LOAD:00004398↑o
aSslVersion:    .ascii "SSL_version"<0>  # DATA XREF: LOAD:00002988↑o
aSslGetCiphersB:.ascii "ssl_get_ciphers_by_id"<0>
                                         # DATA XREF: LOAD:00004478↑o
aSsl3CompFind:  .ascii "ssl3_comp_find"<0>
                                         # DATA XREF: LOAD:00002AA8↑o
aSslParseServer:.ascii "ssl_parse_serverhello_tlsext"<0>
                                         # DATA XREF: LOAD:00003668↑o
aSslCheckServer:.ascii "ssl_check_serverhello_tlsext"<0>
                                         # DATA XREF: LOAD:00003308↑o
aSsl3ClientHell:.ascii "ssl3_client_hello"<0>
                                         # DATA XREF: LOAD:00002BB8↑o
aSslPrepareClie:.ascii "ssl_prepare_clienthello_tlsext"<0>
                                         # DATA XREF: LOAD:000042F8↑o
aSslAddClienthe:.ascii "ssl_add_clienthello_tlsext"<0>
                                         # DATA XREF: LOAD:00002658↑o
aSrpCalcAParam: .ascii "SRP_Calc_A_param"<0>
                                         # DATA XREF: LOAD:00002D88↑o
aBioPush:       .ascii "BIO_push"<0>     # DATA XREF: LOAD:00003548↑o
aSsl3Ciphers:   .ascii "ssl3_ciphers"<0>
                                         # DATA XREF: LOAD:00004528↑o
aSslGetAlgorith:.ascii "ssl_get_algorithm2"<0>
                                         # DATA XREF: LOAD:000036D8↑o
aSslSetCertMask:.ascii "ssl_set_cert_masks"<0>
                                         # DATA XREF: LOAD:00002938↑o
aRsaprivatekeyD:.ascii "RSAPrivateKey_dup"<0>
                                         # DATA XREF: LOAD:00004748↑o
aStrlen:        .ascii "strlen"<0>       # DATA XREF: LOAD:00003C78↑o
aSslCertInst:   .ascii "ssl_cert_inst"<0>
                                         # DATA XREF: LOAD:00004108↑o
aDtls1Heartbeat:.ascii "dtls1_heartbeat"<0>
                                         # DATA XREF: LOAD:00003E48↑o
                                         # LOAD:000031F8↑o
aSsl3FreeDigest:.ascii "ssl3_free_digest_list"<0>
                                         # DATA XREF: LOAD:00004158↑o
aSsl3ReleaseRea:.ascii "ssl3_release_read_buffer"<0>
                                         # DATA XREF: LOAD:00002368↑o
aSsl3ReleaseWri:.ascii "ssl3_release_write_buffer"<0>
                                         # DATA XREF: LOAD:00002B28↑o
aSslSrpCtxFree: .ascii "SSL_SRP_CTX_free"<0>
                                         # DATA XREF: LOAD:00003478↑o
aSslSrpCtxInit: .ascii "SSL_SRP_CTX_init"<0>
                                         # DATA XREF: LOAD:00003368↑o
aSsl3VersionStr:.ascii "ssl3_version_str"<0>
                                         # DATA XREF: LOAD:00002258↑o
aSsl3Enc:       .ascii "ssl3_enc"<0>     # DATA XREF: LOAD:00004B38↑o
aNSsl3Mac:      .ascii "n_ssl3_mac"<0>   # DATA XREF: LOAD:000048A8↑o
aSsl3SetupKeyBl:.ascii "ssl3_setup_key_block"<0>
                                         # DATA XREF: LOAD:00004AA8↑o
aSsl3GenerateMa:.ascii "ssl3_generate_master_secret"<0>
                                         # DATA XREF: LOAD:00004888↑o
aSsl3ChangeCiph:.ascii "ssl3_change_cipher_state"<0>
                                         # DATA XREF: LOAD:000047E8↑o
aSsl3FinalFinis:.ascii "ssl3_final_finish_mac"<0>
                                         # DATA XREF: LOAD:00004988↑o
aSsl3CertVerify:.ascii "ssl3_cert_verify_mac"<0>
                                         # DATA XREF: LOAD:00004958↑o
aSsl3AlertCode: .ascii "ssl3_alert_code"<0>
                                         # DATA XREF: LOAD:00004AC8↑o
aSsl3RecordSequ:.ascii "ssl3_record_sequence_update"<0>
                                         # DATA XREF: LOAD:00003AE8↑o
aEvpMdCtxCopyEx:.ascii "EVP_MD_CTX_copy_ex"<0>
                                         # DATA XREF: LOAD:00003918↑o
aSsl3FinishMac: .ascii "ssl3_finish_mac"<0>
                                         # DATA XREF: LOAD:00002E98↑o
aSslGetHandshak:.ascii "ssl_get_handshake_digest"<0>
                                         # DATA XREF: LOAD:00002888↑o
aBioSMem:       .ascii "BIO_s_mem"<0>    # DATA XREF: LOAD:00004568↑o
aBioNew:        .ascii "BIO_new"<0>      # DATA XREF: LOAD:00003C28↑o
aEvpCipherCtxCi:.ascii "EVP_CIPHER_CTX_cipher"<0>
                                         # DATA XREF: LOAD:00003278↑o
aEvpCipherBlock:.ascii "EVP_CIPHER_block_size"<0>
                                         # DATA XREF: LOAD:00003D48↑o
aCompCtxFree:   .ascii "COMP_CTX_free"<0>
                                         # DATA XREF: LOAD:000045C8↑o
aCompCtxNew:    .ascii "COMP_CTX_new"<0>
                                         # DATA XREF: LOAD:00002B88↑o
aEvpCipherinitE:.ascii "EVP_CipherInit_ex"<0>
                                         # DATA XREF: LOAD:00003588↑o
aSsl3DoChangeCi:.ascii "ssl3_do_change_cipher_spec"<0>
                                         # DATA XREF: LOAD:00002A58↑o
aSslCtxRemoveSe:.ascii "SSL_CTX_remove_session"<0>
                                         # DATA XREF: LOAD:00003A18↑o
aSsl3WritePendi:.ascii "ssl3_write_pending"<0>
                                         # DATA XREF: LOAD:00004368↑o
aSsl3DoCompress:.ascii "ssl3_do_compress"<0>
                                         # DATA XREF: LOAD:000038C8↑o
aCompCompressBl:.ascii "COMP_compress_block"<0>
                                         # DATA XREF: LOAD:00003788↑o
aEvpCipherCtxFl:.ascii "EVP_CIPHER_CTX_flags"<0>
                                         # DATA XREF: LOAD:00003A38↑o
aSsl3SetupWrite:.ascii "ssl3_setup_write_buffer"<0>
                                         # DATA XREF: LOAD:00004488↑o
aSsl3DoUncompre:.ascii "ssl3_do_uncompress"<0>
                                         # DATA XREF: LOAD:000033C8↑o
aCompExpandBloc:.ascii "COMP_expand_block"<0>
                                         # DATA XREF: LOAD:00003528↑o
aSsl3ReadN:     .ascii "ssl3_read_n"<0>  # DATA XREF: LOAD:000039D8↑o
aSsl3SetupReadB:.ascii "ssl3_setup_read_buffer"<0>
                                         # DATA XREF: LOAD:00002448↑o
aSslGetRbio:    .ascii "SSL_get_rbio"<0>
                                         # DATA XREF: LOAD:000046A8↑o
aBioClearFlags: .ascii "BIO_clear_flags"<0>
                                         # DATA XREF: LOAD:00003DA8↑o
aBioSetFlags:   .ascii "BIO_set_flags"<0>
                                         # DATA XREF: LOAD:000037F8↑o
aBioSnprintf:   .ascii "BIO_snprintf"<0>
                                         # DATA XREF: LOAD:000033E8↑o
aErrAddErrorDat:.ascii "ERR_add_error_data"<0>
                                         # DATA XREF: LOAD:00002468↑o
aCryptoLock:    .ascii "CRYPTO_lock"<0>  # DATA XREF: LOAD:00003AA8↑o
aX509StoreCtxIn:.ascii "X509_STORE_CTX_init"<0>
                                         # DATA XREF: LOAD:00003EF8↑o
aX509VerifyCert:.ascii "X509_verify_cert"<0>
                                         # DATA XREF: LOAD:000037D8↑o
aX509StoreCtxCl:.ascii "X509_STORE_CTX_cleanup"<0>
                                         # DATA XREF: LOAD:00003868↑o
aSslv23Method:  .ascii "SSLv23_method"<0>
                                         # DATA XREF: LOAD:000022A8↑o
aTlsv11Method:  .ascii "TLSv1_1_method"<0>
                                         # DATA XREF: LOAD:00003E18↑o
aTlsv12Method:  .ascii "TLSv1_2_method"<0>
                                         # DATA XREF: LOAD:000034A8↑o
aSsl23Accept:   .ascii "ssl23_accept"<0>
                                         # DATA XREF: LOAD:000049C8↑o
aSsl23Connect:  .ascii "ssl23_connect"<0>
                                         # DATA XREF: LOAD:00004868↑o
aSsl23Read:     .ascii "ssl23_read"<0>   # DATA XREF: LOAD:00004838↑o
aSsl23Peek:     .ascii "ssl23_peek"<0>   # DATA XREF: LOAD:00004B58↑o
aSsl23Write:    .ascii "ssl23_write"<0>  # DATA XREF: LOAD:00004B78↑o
aSsl23GetCipher:.ascii "ssl23_get_cipher_by_char"<0>
                                         # DATA XREF: LOAD:00004768↑o
aSsl23PutCipher:.ascii "ssl23_put_cipher_by_char"<0>
                                         # DATA XREF: LOAD:00004A68↑o
aSslUndefinedCo:.ascii "ssl_undefined_const_function"<0>
                                         # DATA XREF: LOAD:00004798↑o
aSsl23NumCipher:.ascii "ssl23_num_ciphers"<0>
                                         # DATA XREF: LOAD:00004828↑o
aSsl23GetCipher_0:.ascii "ssl23_get_cipher"<0>
                                         # DATA XREF: LOAD:00004AB8↑o
aSsl23DefaultTi:.ascii "ssl23_default_timeout"<0>
                                         # DATA XREF: LOAD:00004B18↑o
aSslv23ServerMe:.ascii "SSLv23_server_method"<0>
                                         # DATA XREF: LOAD:00002278↑o
aTlsv11ServerMe:.ascii "TLSv1_1_server_method"<0>
                                         # DATA XREF: LOAD:000025A8↑o
aTlsv12ServerMe:.ascii "TLSv1_2_server_method"<0>
                                         # DATA XREF: LOAD:00003EC8↑o
aSsl23GetClient:.ascii "ssl23_get_client_hello"<0>
                                         # DATA XREF: LOAD:000038E8↑o
aSslAccept:     .ascii "SSL_accept"<0>   # DATA XREF: LOAD:00002A48↑o
aSsl23ReadBytes:.ascii "ssl23_read_bytes"<0>
                                         # DATA XREF: LOAD:00002318↑o
aStrncmp:       .ascii "strncmp"<0>      # DATA XREF: LOAD:00003DD8↑o
aSslv23ClientMe:.ascii "SSLv23_client_method"<0>
                                         # DATA XREF: LOAD:00001DB8↑o
aTlsv11ClientMe:.ascii "TLSv1_1_client_method"<0>
                                         # DATA XREF: LOAD:000032A8↑o
aTlsv12ClientMe:.ascii "TLSv1_2_client_method"<0>
                                         # DATA XREF: LOAD:00002648↑o
aSsl23WriteByte:.ascii "ssl23_write_bytes"<0>
                                         # DATA XREF: LOAD:00002778↑o
aSslConnect:    .ascii "SSL_connect"<0>  # DATA XREF: LOAD:000046C8↑o
aSslWrite:      .ascii "SSL_write"<0>    # DATA XREF: LOAD:00002E88↑o
aSslPeek:       .ascii "SSL_peek"<0>     # DATA XREF: LOAD:00003FA8↑o
aSslRead:       .ascii "SSL_read"<0>     # DATA XREF: LOAD:00003778↑o
aEvpSha512:     .ascii "EVP_sha512"<0>   # DATA XREF: LOAD:000038B8↑o
aEvpSha224:     .ascii "EVP_sha224"<0>   # DATA XREF: LOAD:00003908↑o
aEvpSha384:     .ascii "EVP_sha384"<0>   # DATA XREF: LOAD:000043F8↑o
aEvpDss1:       .ascii "EVP_dss1"<0>     # DATA XREF: LOAD:00002DB8↑o
aTls1ProcessTic:.ascii "tls1_process_ticket"<0>
                                         # DATA XREF: LOAD:00004098↑o
aEvpDecryptupda:.ascii "EVP_DecryptUpdate"<0>
                                         # DATA XREF: LOAD:00002C88↑o
aEvpDecryptfina:.ascii "EVP_DecryptFinal"<0>
                                         # DATA XREF: LOAD:000046D8↑o
aSslParseServer_0:.ascii "ssl_parse_serverhello_renegotiate_ext"<0>
                                         # DATA XREF: LOAD:00003008↑o
aSslParseServer_1:.ascii "ssl_parse_serverhello_use_srtp_ext"<0>
                                         # DATA XREF: LOAD:000044F8↑o
aSslParseClient_0:.ascii "ssl_parse_clienthello_use_srtp_ext"<0>
                                         # DATA XREF: LOAD:00003CB8↑o
aD2iOcspRespid: .ascii "d2i_OCSP_RESPID"<0>
                                         # DATA XREF: LOAD:000029A8↑o
aOcspRespidFree:.ascii "OCSP_RESPID_free"<0>
                                         # DATA XREF: LOAD:00003708↑o
aSslParseClient_1:.ascii "ssl_parse_clienthello_renegotiate_ext"<0>
                                         # DATA XREF: LOAD:00003A48↑o
aX509ExtensionF:.ascii "X509_EXTENSION_free"<0>
                                         # DATA XREF: LOAD:000033D8↑o
aD2iX509Extensi:.ascii "d2i_X509_EXTENSIONS"<0>
                                         # DATA XREF: LOAD:00003798↑o
aSslAddServerhe_0:.ascii "ssl_add_serverhello_renegotiate_ext"<0>
                                         # DATA XREF: LOAD:000035B8↑o
aSslAddServerhe_1:.ascii "ssl_add_serverhello_use_srtp_ext"<0>
                                         # DATA XREF: LOAD:000042E8↑o
aSslAddClienthe_0:.ascii "ssl_add_clienthello_renegotiate_ext"<0>
                                         # DATA XREF: LOAD:00004258↑o
aSslGetSrtpProf:.ascii "SSL_get_srtp_profiles"<0>
                                         # DATA XREF: LOAD:00004168↑o
aI2dOcspRespid: .ascii "i2d_OCSP_RESPID"<0>
                                         # DATA XREF: LOAD:00003A58↑o
aI2dX509Extensi:.ascii "i2d_X509_EXTENSIONS"<0>
                                         # DATA XREF: LOAD:00003AF8↑o
aSslAddClienthe_1:.ascii "ssl_add_clienthello_use_srtp_ext"<0>
                                         # DATA XREF: LOAD:00003F58↑o
aTls1Mac:       .ascii "tls1_mac"<0>     # DATA XREF: LOAD:000048E8↑o
aTls1SetupKeyBl:.ascii "tls1_setup_key_block"<0>
                                         # DATA XREF: LOAD:00004B98↑o
aTls1GenerateMa:.ascii "tls1_generate_master_secret"<0>
                                         # DATA XREF: LOAD:00004998↑o
aTls1ChangeCiph:.ascii "tls1_change_cipher_state"<0>
                                         # DATA XREF: LOAD:00004968↑o
aTls1FinalFinis:.ascii "tls1_final_finish_mac"<0>
                                         # DATA XREF: LOAD:00004928↑o
aTls1CertVerify:.ascii "tls1_cert_verify_mac"<0>
                                         # DATA XREF: LOAD:000047A8↑o
aTls1AlertCode: .ascii "tls1_alert_code"<0>
                                         # DATA XREF: LOAD:00004778↑o
aTls1ExportKeyi:.ascii "tls1_export_keying_material"<0>
                                         # DATA XREF: LOAD:00004938↑o
aEvpPkeyNewMacK:.ascii "EVP_PKEY_new_mac_key"<0>
                                         # DATA XREF: LOAD:00003B28↑o
aEvpDigestsigni:.ascii "EVP_DigestSignInit"<0>
                                         # DATA XREF: LOAD:000029D8↑o
aEvpDigestsignf:.ascii "EVP_DigestSignFinal"<0>
                                         # DATA XREF: LOAD:000028D8↑o
aEvpCipherFlags:.ascii "EVP_CIPHER_flags"<0>
                                         # DATA XREF: LOAD:00002388↑o
aEvpCipherCtxCt:.ascii "EVP_CIPHER_CTX_ctrl"<0>
                                         # DATA XREF: LOAD:000038D8↑o
aDtlsv1Method:  .ascii "DTLSv1_method"<0>
                                         # DATA XREF: LOAD:00002C18↑o
                                         # LOAD:00004728↑o
aDtls1New:      .ascii "dtls1_new"<0>    # DATA XREF: LOAD:000048D8↑o
                                         # LOAD:00004898↑o
aDtls1Clear:    .ascii "dtls1_clear"<0>  # DATA XREF: LOAD:00004A98↑o
                                         # LOAD:00004B08↑o
aDtls1Free:     .ascii "dtls1_free"<0>   # DATA XREF: LOAD:00004A38↑o
                                         # LOAD:000047C8↑o
aDtls1Accept:   .ascii "dtls1_accept"<0>
                                         # DATA XREF: LOAD:000022F8↑o
aDtls1Connect:  .ascii "dtls1_connect"<0>
                                         # DATA XREF: LOAD:00002AB8↑o
aDtls1Shutdown: .ascii "dtls1_shutdown"<0>
                                         # DATA XREF: LOAD:000049A8↑o
aDtls1GetMessag:.ascii "dtls1_get_message"<0>
                                         # DATA XREF: LOAD:00004B48↑o
aDtls1ReadBytes:.ascii "dtls1_read_bytes"<0>
                                         # DATA XREF: LOAD:00004BA8↑o
aDtls1WriteAppD:.ascii "dtls1_write_app_data_bytes"<0>
                                         # DATA XREF: LOAD:000047D8↑o
aDtls1DispatchA:.ascii "dtls1_dispatch_alert"<0>
                                         # DATA XREF: LOAD:00004848↑o
aDtls1Ctrl:     .ascii "dtls1_ctrl"<0>   # DATA XREF: LOAD:00004858↑o
aDtls1GetCipher:.ascii "dtls1_get_cipher"<0>
                                         # DATA XREF: LOAD:00004AE8↑o
aDtls1DefaultTi:.ascii "dtls1_default_timeout"<0>
                                         # DATA XREF: LOAD:00004AF8↑o
                                         # LOAD:00004A58↑o
aDtlsv1EncData: .ascii "DTLSv1_enc_data"<0>
                                         # DATA XREF: LOAD:000049D8↑o
                                         # LOAD:000048B8↑o
aDtlsv1ServerMe:.ascii "DTLSv1_server_method"<0>
                                         # DATA XREF: LOAD:000037E8↑o
                                         # LOAD:00002A98↑o
aDtls1SendNewse:.ascii "dtls1_send_newsession_ticket"<0>
                                         # DATA XREF: LOAD:00002688↑o
aDtls1DoWrite:  .ascii "dtls1_do_write"<0>
                                         # DATA XREF: LOAD:00002828↑o
aDtls1SetMessag:.ascii "dtls1_set_message_header"<0>
                                         # DATA XREF: LOAD:000037C8↑o
aDtls1BufferMes:.ascii "dtls1_buffer_message"<0>
                                         # DATA XREF: LOAD:000024F8↑o
aDtls1SendServe:.ascii "dtls1_send_server_done"<0>
                                         # DATA XREF: LOAD:000024C8↑o
aDtls1SendHello:.ascii "dtls1_send_hello_request"<0>
                                         # DATA XREF: LOAD:000026B8↑o
aDtls1SendServe_0:.ascii "dtls1_send_server_certificate"<0>
                                         # DATA XREF: LOAD:00002968↑o
aDtls1OutputCer:.ascii "dtls1_output_cert_chain"<0>
                                         # DATA XREF: LOAD:00004298↑o
aDtls1SendCerti:.ascii "dtls1_send_certificate_request"<0>
                                         # DATA XREF: LOAD:00003E28↑o
aDtls1SendServe_1:.ascii "dtls1_send_server_key_exchange"<0>
                                         # DATA XREF: LOAD:000039A8↑o
aDtls1SendServe_2:.ascii "dtls1_send_server_hello"<0>
                                         # DATA XREF: LOAD:000024B8↑o
aDtls1StopTimer:.ascii "dtls1_stop_timer"<0>
                                         # DATA XREF: LOAD:000031A8↑o
aDtls1StartTime:.ascii "dtls1_start_timer"<0>
                                         # DATA XREF: LOAD:00002FC8↑o
aDtls1SendChang:.ascii "dtls1_send_change_cipher_spec"<0>
                                         # DATA XREF: LOAD:00004758↑o
aDtls1ResetSeqN:.ascii "dtls1_reset_seq_numbers"<0>
                                         # DATA XREF: LOAD:000034C8↑o
aDtls1SendFinis:.ascii "dtls1_send_finished"<0>
                                         # DATA XREF: LOAD:00003AC8↑o
aBioTestFlags:  .ascii "BIO_test_flags"<0>
                                         # DATA XREF: LOAD:00003998↑o
aDtlsv1ClientMe:.ascii "DTLSv1_client_method"<0>
                                         # DATA XREF: LOAD:00003138↑o
                                         # LOAD:00004448↑o
aDtls1SendClien:.ascii "dtls1_send_client_certificate"<0>
                                         # DATA XREF: LOAD:000023A8↑o
aDtls1SendClien_0:.ascii "dtls1_send_client_verify"<0>
                                         # DATA XREF: LOAD:00002B38↑o
aDtls1SendClien_1:.ascii "dtls1_send_client_key_exchange"<0>
                                         # DATA XREF: LOAD:00003538↑o
aDtls1ClientHel:.ascii "dtls1_client_hello"<0>
                                         # DATA XREF: LOAD:00002978↑o
aDtls1Listen:   .ascii "dtls1_listen"<0>
                                         # DATA XREF: LOAD:00003398↑o
aDtls1CheckTime:.ascii "dtls1_check_timeout_num"<0>
                                         # DATA XREF: LOAD:000042A8↑o
aSslGetWbio:    .ascii "SSL_get_wbio"<0>
                                         # DATA XREF: LOAD:00003158↑o
aDtls1ClearReco:.ascii "dtls1_clear_record_buffer"<0>
                                         # DATA XREF: LOAD:00003F48↑o
aDtls1GetTimeou:.ascii "dtls1_get_timeout"<0>
                                         # DATA XREF: LOAD:000036A8↑o
aGettimeofday:  .ascii "gettimeofday"<0>
                                         # DATA XREF: LOAD:00004068↑o
aDtls1IsTimerEx:.ascii "dtls1_is_timer_expired"<0>
                                         # DATA XREF: LOAD:00003468↑o
aPitemFree:     .ascii "pitem_free"<0>   # DATA XREF: LOAD:00003718↑o
aPqueuePop:     .ascii "pqueue_pop"<0>   # DATA XREF: LOAD:00002348↑o
aPqueueFree:    .ascii "pqueue_free"<0>  # DATA XREF: LOAD:00002E18↑o
aPqueueNew:     .ascii "pqueue_new"<0>   # DATA XREF: LOAD:00002918↑o
aDtls1DoubleTim:.ascii "dtls1_double_timeout"<0>
                                         # DATA XREF: LOAD:000027D8↑o
aDtls1HandleTim:.ascii "dtls1_handle_timeout"<0>
                                         # DATA XREF: LOAD:000044B8↑o
aDtls1Retransmi:.ascii "dtls1_retransmit_buffered_messages"<0>
                                         # DATA XREF: LOAD:00002458↑o
aDtls1VersionSt:.ascii "dtls1_version_str"<0>
                                         # DATA XREF: LOAD:00002058↑o
                                         # LOAD:00002268↑o
aDtls1Enc:      .ascii "dtls1_enc"<0>    # DATA XREF: LOAD:000047B8↑o
                                         # LOAD:00004B88↑o
aDoDtls1Write:  .ascii "do_dtls1_write"<0>
                                         # DATA XREF: LOAD:00003748↑o
aDtls1WriteByte:.ascii "dtls1_write_bytes"<0>
                                         # DATA XREF: LOAD:00003018↑o
aPqueueSize:    .ascii "pqueue_size"<0>  # DATA XREF: LOAD:00002B48↑o
aPitemNew:      .ascii "pitem_new"<0>    # DATA XREF: LOAD:000045D8↑o
aPqueueInsert:  .ascii "pqueue_insert"<0>
                                         # DATA XREF: LOAD:000043D8↑o
aDtls1GetRecord:.ascii "dtls1_get_record"<0>
                                         # DATA XREF: LOAD:00003AD8↑o
aPqueuePeek:    .ascii "pqueue_peek"<0>  # DATA XREF: LOAD:00002538↑o
aDtls1ReadFaile:.ascii "dtls1_read_failed"<0>
                                         # DATA XREF: LOAD:00002D78↑o
aDtls1GetCcsHea:.ascii "dtls1_get_ccs_header"<0>
                                         # DATA XREF: LOAD:000026F8↑o
aDtls1GetMessag_0:.ascii "dtls1_get_message_header"<0>
                                         # DATA XREF: LOAD:00003328↑o
aDtls1ProcessHe:.ascii "dtls1_process_heartbeat"<0>
                                         # DATA XREF: LOAD:00002758↑o
                                         # LOAD:000036B8↑o
aDtls1GetQueueP:.ascii "dtls1_get_queue_priority"<0>
                                         # DATA XREF: LOAD:00002788↑o
aDtls1MinMtu:   .ascii "dtls1_min_mtu"<0>
                                         # DATA XREF: LOAD:00004148↑o
aDtls1Retransmi_0:.ascii "dtls1_retransmit_message"<0>
                                         # DATA XREF: LOAD:000045E8↑o
aPqueueFind:    .ascii "pqueue_find"<0>  # DATA XREF: LOAD:00003CF8↑o
aPqueueIterator:.ascii "pqueue_iterator"<0>
                                         # DATA XREF: LOAD:00004598↑o
aPqueueNext:    .ascii "pqueue_next"<0>  # DATA XREF: LOAD:000040B8↑o
aFwrite:        .ascii "fwrite"<0>       # DATA XREF: LOAD:00004378↑o
aSslGetSelected:.ascii "SSL_get_selected_srtp_profile"<0>
                                         # DATA XREF: LOAD:00001958↑o
aStrchr:        .ascii "strchr"<0>       # DATA XREF: LOAD:000026A8↑o
aSslSetTlsextUs:.ascii "SSL_set_tlsext_use_srtp"<0>
                                         # DATA XREF: LOAD:000017A8↑o
aSslCtxSetTlsex:.ascii "SSL_CTX_set_tlsext_use_srtp"<0>
                                         # DATA XREF: LOAD:00001888↑o
aSslGetVerifyMo:.ascii "SSL_get_verify_mode"<0>
                                         # DATA XREF: LOAD:00002F58↑o
aSslGetVerifyCa:.ascii "SSL_get_verify_callback"<0>
                                         # DATA XREF: LOAD:00004688↑o
aSslCtxGetVerif:.ascii "SSL_CTX_get_verify_mode"<0>
                                         # DATA XREF: LOAD:00001DA8↑o
aSslCtxGetVerif_0:.ascii "SSL_CTX_get_verify_callback"<0>
                                         # DATA XREF: LOAD:00002208↑o
aSslSetVerify:  .ascii "SSL_set_verify"<0>
                                         # DATA XREF: LOAD:00002AE8↑o
aSslSetReadAhea:.ascii "SSL_set_read_ahead"<0>
                                         # DATA XREF: LOAD:000031C8↑o
aSslGetReadAhea:.ascii "SSL_get_read_ahead"<0>
                                         # DATA XREF: LOAD:000034D8↑o
aSslPending:    .ascii "SSL_pending"<0>  # DATA XREF: LOAD:00003678↑o
aSslGetPeerCert:.ascii "SSL_get_peer_cert_chain"<0>
                                         # DATA XREF: LOAD:000022C8↑o
aSslGetDefaultT:.ascii "SSL_get_default_timeout"<0>
                                         # DATA XREF: LOAD:00002408↑o
aSslRenegotiate:.ascii "SSL_renegotiate"<0>
                                         # DATA XREF: LOAD:00004658↑o
aSslRenegotiate_0:.ascii "SSL_renegotiate_abbreviated"<0>
                                         # DATA XREF: LOAD:00001D78↑o
aSslRenegotiate_1:.ascii "SSL_renegotiate_pending"<0>
                                         # DATA XREF: LOAD:00001718↑o
aSslCallbackCtr:.ascii "SSL_callback_ctrl"<0>
                                         # DATA XREF: LOAD:00002558↑o
aSslCtxSessions:.ascii "SSL_CTX_sessions"<0>
                                         # DATA XREF: LOAD:00001D58↑o
aSslCtxCallback:.ascii "SSL_CTX_callback_ctrl"<0>
                                         # DATA XREF: LOAD:00002B08↑o
aSslCipherIdCmp:.ascii "ssl_cipher_id_cmp"<0>
                                         # DATA XREF: LOAD:00002AF8↑o
aSslGetServerna:.ascii "SSL_get_servername"<0>
                                         # DATA XREF: LOAD:00001A58↑o
aSslGetServerna_0:.ascii "SSL_get_servername_type"<0>
                                         # DATA XREF: LOAD:00001C48↑o
aSslGet0NextPro:.ascii "SSL_get0_next_proto_negotiated"<0>
                                         # DATA XREF: LOAD:00001818↑o
aSslCtxSetNextP:.ascii "SSL_CTX_set_next_protos_advertised_cb"<0>
                                         # DATA XREF: LOAD:00001F68↑o
aSslCtxSetNextP_0:.ascii "SSL_CTX_set_next_proto_select_cb"<0>
                                         # DATA XREF: LOAD:00002108↑o
aSslExportKeyin:.ascii "SSL_export_keying_material"<0>
                                         # DATA XREF: LOAD:000018A8↑o
aSslCtxSetDefau:.ascii "SSL_CTX_set_default_passwd_cb"<0>
                                         # DATA XREF: LOAD:00001EC8↑o
aSslCtxSetDefau_0:.ascii "SSL_CTX_set_default_passwd_cb_userdata"<0>
                                         # DATA XREF: LOAD:00001B48↑o
aSslCtxSetCertV:.ascii "SSL_CTX_set_cert_verify_callback"<0>
                                         # DATA XREF: LOAD:000018F8↑o
aSslCtxSetVerif:.ascii "SSL_CTX_set_verify"<0>
                                         # DATA XREF: LOAD:00001938↑o
aSslGetSslMetho:.ascii "SSL_get_ssl_method"<0>
                                         # DATA XREF: LOAD:00001978↑o
aSslSetSslMetho:.ascii "SSL_set_ssl_method"<0>
                                         # DATA XREF: LOAD:000029E8↑o
aSslGetVersion: .ascii "SSL_get_version"<0>
                                         # DATA XREF: LOAD:00002148↑o
aSslGetCertific:.ascii "SSL_get_certificate"<0>
                                         # DATA XREF: LOAD:00001B18↑o
aSslGetPrivatek:.ascii "SSL_get_privatekey"<0>
                                         # DATA XREF: LOAD:00001E48↑o
aSslGetCurrentC:.ascii "SSL_get_current_cipher"<0>
                                         # DATA XREF: LOAD:00001C58↑o
aSslGetCurrentC_0:.ascii "SSL_get_current_compression"<0>
                                         # DATA XREF: LOAD:000018E8↑o
aSslGetCurrentE:.ascii "SSL_get_current_expansion"<0>
                                         # DATA XREF: LOAD:00001CC8↑o
aSslCtxSetQuiet:.ascii "SSL_CTX_set_quiet_shutdown"<0>
                                         # DATA XREF: LOAD:00001D28↑o
aSslCtxGetQuiet:.ascii "SSL_CTX_get_quiet_shutdown"<0>
                                         # DATA XREF: LOAD:00001A08↑o
aSslSetQuietShu:.ascii "SSL_set_quiet_shutdown"<0>
                                         # DATA XREF: LOAD:00001FA8↑o
aSslGetQuietShu:.ascii "SSL_get_quiet_shutdown"<0>
                                         # DATA XREF: LOAD:000021B8↑o
aSslSetShutdown:.ascii "SSL_set_shutdown"<0>
                                         # DATA XREF: LOAD:00001B98↑o
aSslGetShutdown:.ascii "SSL_get_shutdown"<0>
                                         # DATA XREF: LOAD:000020F8↑o
aSslGetSslCtx:  .ascii "SSL_get_SSL_CTX"<0>
                                         # DATA XREF: LOAD:00002D98↑o
aSslSetInfoCall:.ascii "SSL_set_info_callback"<0>
                                         # DATA XREF: LOAD:00003D88↑o
aSslGetInfoCall:.ascii "SSL_get_info_callback"<0>
                                         # DATA XREF: LOAD:00002AC8↑o
aSslSetState:   .ascii "SSL_set_state"<0>
                                         # DATA XREF: LOAD:00002098↑o
aSslSetVerifyRe:.ascii "SSL_set_verify_result"<0>
                                         # DATA XREF: LOAD:000019F8↑o
aSslGetVerifyRe:.ascii "SSL_get_verify_result"<0>
                                         # DATA XREF: LOAD:00001BD8↑o
aSslCtxGetCertS:.ascii "SSL_CTX_get_cert_store"<0>
                                         # DATA XREF: LOAD:00001FE8↑o
aSslWant:       .ascii "SSL_want"<0>     # DATA XREF: LOAD:000035F8↑o
aSslCtxSetTmpRs:.ascii "SSL_CTX_set_tmp_rsa_callback"<0>
                                         # DATA XREF: LOAD:000021C8↑o
aSslSetTmpRsaCa:.ascii "SSL_set_tmp_rsa_callback"<0>
                                         # DATA XREF: LOAD:00001878↑o
aSslCtxSetMsgCa:.ascii "SSL_CTX_set_msg_callback"<0>
                                         # DATA XREF: LOAD:00002028↑o
aSslSetMsgCallb:.ascii "SSL_set_msg_callback"<0>
                                         # DATA XREF: LOAD:00001FD8↑o
aSslSetDebug:   .ascii "SSL_set_debug"<0>
                                         # DATA XREF: LOAD:000017F8↑o
aSslCacheHit:   .ascii "SSL_cache_hit"<0>
                                         # DATA XREF: LOAD:00001BF8↑o
aObjBsearch:    .ascii "OBJ_bsearch_"<0>
                                         # DATA XREF: LOAD:000043A8↑o
aSslClearHashCt:.ascii "ssl_clear_hash_ctx"<0>
                                         # DATA XREF: LOAD:00002328↑o
aSslCtxSetCertS:.ascii "SSL_CTX_set_cert_store"<0>
                                         # DATA XREF: LOAD:00001748↑o
aX509StoreFree: .ascii "X509_STORE_free"<0>
                                         # DATA XREF: LOAD:00002B78↑o
aSslCtxGetExDat:.ascii "SSL_CTX_get_ex_data"<0>
                                         # DATA XREF: LOAD:000018B8↑o
aCryptoGetExDat:.ascii "CRYPTO_get_ex_data"<0>
                                         # DATA XREF: LOAD:00004358↑o
aSslGetExData:  .ascii "SSL_get_ex_data"<0>
                                         # DATA XREF: LOAD:00001F28↑o
aSslCtxSetExDat:.ascii "SSL_CTX_set_ex_data"<0>
                                         # DATA XREF: LOAD:00001A38↑o
aCryptoSetExDat:.ascii "CRYPTO_set_ex_data"<0>
                                         # DATA XREF: LOAD:00003418↑o
aSslSetExData:  .ascii "SSL_set_ex_data"<0>
                                         # DATA XREF: LOAD:00001768↑o
aSslCtxGetExNew:.ascii "SSL_CTX_get_ex_new_index"<0>
                                         # DATA XREF: LOAD:00001B78↑o
aCryptoGetExNew:.ascii "CRYPTO_get_ex_new_index"<0>
                                         # DATA XREF: LOAD:00004128↑o
aSslGetExNewInd:.ascii "SSL_get_ex_new_index"<0>
                                         # DATA XREF: LOAD:000020B8↑o
aSslCtxLoadVeri:.ascii "SSL_CTX_load_verify_locations"<0>
                                         # DATA XREF: LOAD:00001CD8↑o
aX509StoreLoadL:.ascii "X509_STORE_load_locations"<0>
                                         # DATA XREF: LOAD:000045B8↑o
aSslCtxSetDefau_1:.ascii "SSL_CTX_set_default_verify_paths"<0>
                                         # DATA XREF: LOAD:00002138↑o
aX509StoreSetDe:.ascii "X509_STORE_set_default_paths"<0>
                                         # DATA XREF: LOAD:00002428↑o
aSslGetPeerCert_0:.ascii "SSL_get_peer_certificate"<0>
                                         # DATA XREF: LOAD:00001AB8↑o
aSslBadMethod:  .ascii "ssl_bad_method"<0>
                                         # DATA XREF: LOAD:00001D88↑o
aSslDoHandshake:.ascii "SSL_do_handshake"<0>
                                         # DATA XREF: LOAD:00002F18↑o
aSslShutdown:   .ascii "SSL_shutdown"<0>
                                         # DATA XREF: LOAD:000029B8↑o
aBioIntCtrl:    .ascii "BIO_int_ctrl"<0>
                                         # DATA XREF: LOAD:000026D8↑o
aBioFBuffer:    .ascii "BIO_f_buffer"<0>
                                         # DATA XREF: LOAD:00003818↑o
aSslClearCipher:.ascii "ssl_clear_cipher_ctx"<0>
                                         # DATA XREF: LOAD:000027B8↑o
aSslSetConnectS:.ascii "SSL_set_connect_state"<0>
                                         # DATA XREF: LOAD:00003898↑o
aSslSetAcceptSt:.ascii "SSL_set_accept_state"<0>
                                         # DATA XREF: LOAD:00003858↑o
aSslGetCipherLi:.ascii "SSL_get_cipher_list"<0>
                                         # DATA XREF: LOAD:000019D8↑o
aSslGetError:   .ascii "SSL_get_error"<0>
                                         # DATA XREF: LOAD:00002478↑o
aErrPeekError:  .ascii "ERR_peek_error"<0>
                                         # DATA XREF: LOAD:00003068↑o
aBioGetRetryRea:.ascii "BIO_get_retry_reason"<0>
                                         # DATA XREF: LOAD:00004188↑o
aSslCtxAddSessi:.ascii "SSL_CTX_add_session"<0>
                                         # DATA XREF: LOAD:00002928↑o
aSslCtxFlushSes:.ascii "SSL_CTX_flush_sessions"<0>
                                         # DATA XREF: LOAD:00003508↑o
aX509CheckPurpo:.ascii "X509_check_purpose"<0>
                                         # DATA XREF: LOAD:000034B8↑o
aEvpPkeyBits:   .ascii "EVP_PKEY_bits"<0>
                                         # DATA XREF: LOAD:00003728↑o
aObjObj2nid:    .ascii "OBJ_obj2nid"<0>  # DATA XREF: LOAD:000023D8↑o
aObjFindSigidAl:.ascii "OBJ_find_sigid_algs"<0>
                                         # DATA XREF: LOAD:00002818↑o
aSslCtxSetVerif_0:.ascii "SSL_CTX_set_verify_depth"<0>
                                         # DATA XREF: LOAD:00001DE8↑o
aX509VerifyPara:.ascii "X509_VERIFY_PARAM_set_depth"<0>
                                         # DATA XREF: LOAD:00004408↑o
aSslSetVerifyDe:.ascii "SSL_set_verify_depth"<0>
                                         # DATA XREF: LOAD:00004628↑o
aSslSetCipherLi:.ascii "SSL_set_cipher_list"<0>
                                         # DATA XREF: LOAD:00001EF8↑o
aSslCreateCiphe:.ascii "ssl_create_cipher_list"<0>
                                         # DATA XREF: LOAD:00002718↑o
aSslCtxSetCiphe:.ascii "SSL_CTX_set_cipher_list"<0>
                                         # DATA XREF: LOAD:00001F58↑o
aSslCtxSetSslVe:.ascii "SSL_CTX_set_ssl_version"<0>
                                         # DATA XREF: LOAD:00001B68↑o
aSslSelectNextP:.ascii "SSL_select_next_proto"<0>
                                         # DATA XREF: LOAD:000022D8↑o
aSkZero:        .ascii "sk_zero"<0>      # DATA XREF: LOAD:000039B8↑o
aSslGetSharedCi:.ascii "SSL_get_shared_ciphers"<0>
                                         # DATA XREF: LOAD:00001EE8↑o
aStrcpy:        .ascii "strcpy"<0>       # DATA XREF: LOAD:00002378↑o
aSslCtxCtrl:    .ascii "SSL_CTX_ctrl"<0>
                                         # DATA XREF: LOAD:00002638↑o
aLhNumItems:    .ascii "lh_num_items"<0>
                                         # DATA XREF: LOAD:00002598↑o
aSslCheckPrivat:.ascii "SSL_check_private_key"<0>
                                         # DATA XREF: LOAD:000019C8↑o
aX509CheckPriva:.ascii "X509_check_private_key"<0>
                                         # DATA XREF: LOAD:00002C08↑o
aSslCtxCheckPri:.ascii "SSL_CTX_check_private_key"<0>
                                         # DATA XREF: LOAD:00001A28↑o
aSslCtxGetVerif_1:.ascii "SSL_CTX_get_verify_depth"<0>
                                         # DATA XREF: LOAD:000020C8↑o
aX509VerifyPara_0:.ascii "X509_VERIFY_PARAM_get_depth"<0>
                                         # DATA XREF: LOAD:00002DE8↑o
aSslGetVerifyDe:.ascii "SSL_get_verify_depth"<0>
                                         # DATA XREF: LOAD:00003B18↑o
aSslGetPeerFini:.ascii "SSL_get_peer_finished"<0>
                                         # DATA XREF: LOAD:00001788↑o
aSslGetFinished:.ascii "SSL_get_finished"<0>
                                         # DATA XREF: LOAD:00002008↑o
aSslSetSessionI:.ascii "SSL_set_session_id_context"<0>
                                         # DATA XREF: LOAD:00003BD8↑o
aSslCopySession:.ascii "SSL_copy_session_id"<0>
                                         # DATA XREF: LOAD:00003E98↑o
aSslGetSession: .ascii "SSL_get_session"<0>
                                         # DATA XREF: LOAD:00004548↑o
aSslSetSession: .ascii "SSL_set_session"<0>
                                         # DATA XREF: LOAD:00004228↑o
aSslCertFree:   .ascii "ssl_cert_free"<0>
                                         # DATA XREF: LOAD:00003C98↑o
aSslCtxSetSessi:.ascii "SSL_CTX_set_session_id_context"<0>
                                         # DATA XREF: LOAD:00001C28↑o
aSslGetWfd:     .ascii "SSL_get_wfd"<0>  # DATA XREF: LOAD:00001B38↑o
aBioFindType:   .ascii "BIO_find_type"<0>
                                         # DATA XREF: LOAD:00002C78↑o
aSslGetRfd:     .ascii "SSL_get_rfd"<0>  # DATA XREF: LOAD:00004078↑o
aSslGetFd:      .ascii "SSL_get_fd"<0>   # DATA XREF: LOAD:00001758↑o
aSslSetBio:     .ascii "SSL_set_bio"<0>  # DATA XREF: LOAD:00004608↑o
aBioFreeAll:    .ascii "BIO_free_all"<0>
                                         # DATA XREF: LOAD:00004498↑o
aSslSetRfd:     .ascii "SSL_set_rfd"<0>  # DATA XREF: LOAD:00001BB8↑o
aBioMethodType: .ascii "BIO_method_type"<0>
                                         # DATA XREF: LOAD:00003A08↑o
aBioSSocket:    .ascii "BIO_s_socket"<0>
                                         # DATA XREF: LOAD:00004698↑o
aSslSetWfd:     .ascii "SSL_set_wfd"<0>  # DATA XREF: LOAD:00001BE8↑o
aSslSetFd:      .ascii "SSL_set_fd"<0>   # DATA XREF: LOAD:00001C18↑o
aSslClearBadSes:.ascii "ssl_clear_bad_session"<0>
                                         # DATA XREF: LOAD:000039E8↑o
aSslSet1Param:  .ascii "SSL_set1_param"<0>
                                         # DATA XREF: LOAD:000018C8↑o
aX509VerifyPara_1:.ascii "X509_VERIFY_PARAM_set1"<0>
                                         # DATA XREF: LOAD:00002E38↑o
aSslCtxSet1Para:.ascii "SSL_CTX_set1_param"<0>
                                         # DATA XREF: LOAD:00001728↑o
aSslSetTrust:   .ascii "SSL_set_trust"<0>
                                         # DATA XREF: LOAD:00001968↑o
aX509VerifyPara_2:.ascii "X509_VERIFY_PARAM_set_trust"<0>
                                         # DATA XREF: LOAD:00003218↑o
aSslCtxSetTrust:.ascii "SSL_CTX_set_trust"<0>
                                         # DATA XREF: LOAD:00002218↑o
aSslSetPurpose: .ascii "SSL_set_purpose"<0>
                                         # DATA XREF: LOAD:00001AD8↑o
aX509VerifyPara_3:.ascii "X509_VERIFY_PARAM_set_purpose"<0>
                                         # DATA XREF: LOAD:000034F8↑o
aSslCtxSetPurpo:.ascii "SSL_CTX_set_purpose"<0>
                                         # DATA XREF: LOAD:00001D68↑o
aSslSetGenerate:.ascii "SSL_set_generate_session_id"<0>
                                         # DATA XREF: LOAD:00002048↑o
aSslCtxSetGener:.ascii "SSL_CTX_set_generate_session_id"<0>
                                         # DATA XREF: LOAD:000017E8↑o
aSslHasMatching:.ascii "SSL_has_matching_session_id"<0>
                                         # DATA XREF: LOAD:000030F8↑o
aLhRetrieve:    .ascii "lh_retrieve"<0>  # DATA XREF: LOAD:000041B8↑o
aSslCtxFree:    .ascii "SSL_CTX_free"<0>
                                         # DATA XREF: LOAD:00002418↑o
aX509VerifyPara_4:.ascii "X509_VERIFY_PARAM_free"<0>
                                         # DATA XREF: LOAD:00002FF8↑o
aCryptoFreeExDa:.ascii "CRYPTO_free_ex_data"<0>
                                         # DATA XREF: LOAD:000022E8↑o
aLhFree:        .ascii "lh_free"<0>      # DATA XREF: LOAD:00002BF8↑o
aSslCtxSrpCtxFr:.ascii "SSL_CTX_SRP_CTX_free"<0>
                                         # DATA XREF: LOAD:00002338↑o
aSslSetSslCtx:  .ascii "SSL_set_SSL_CTX"<0>
                                         # DATA XREF: LOAD:00001A68↑o
aSslCertDup:    .ascii "ssl_cert_dup"<0>
                                         # DATA XREF: LOAD:000035A8↑o
aSslCtxNew:     .ascii "SSL_CTX_new"<0>  # DATA XREF: LOAD:00001BC8↑o
aSslGetExDataX5:.ascii "SSL_get_ex_data_X509_STORE_CTX_idx"<0>
                                         # DATA XREF: LOAD:00002BE8↑o
aSslCertNew:    .ascii "ssl_cert_new"<0>
                                         # DATA XREF: LOAD:00002DD8↑o
aLhNew:         .ascii "lh_new"<0>       # DATA XREF: LOAD:00004338↑o
aX509StoreNew:  .ascii "X509_STORE_new"<0>
                                         # DATA XREF: LOAD:00003F68↑o
aX509VerifyPara_5:.ascii "X509_VERIFY_PARAM_new"<0>
                                         # DATA XREF: LOAD:000025B8↑o
aCryptoNewExDat:.ascii "CRYPTO_new_ex_data"<0>
                                         # DATA XREF: LOAD:000041F8↑o
aSslCompGetComp:.ascii "SSL_COMP_get_compression_methods"<0>
                                         # DATA XREF: LOAD:00003458↑o
aSslCtxSrpCtxIn:.ascii "SSL_CTX_SRP_CTX_init"<0>
                                         # DATA XREF: LOAD:00002358↑o
aSslFree:       .ascii "SSL_free"<0>     # DATA XREF: LOAD:00003BB8↑o
aSslNew:        .ascii "SSL_new"<0>      # DATA XREF: LOAD:00002EC8↑o
aX509VerifyPara_6:.ascii "X509_VERIFY_PARAM_inherit"<0>
                                         # DATA XREF: LOAD:00004738↑o
aSslDup:        .ascii "SSL_dup"<0>      # DATA XREF: LOAD:00003B98↑o
aCryptoDupExDat:.ascii "CRYPTO_dup_ex_data"<0>
                                         # DATA XREF: LOAD:00003CC8↑o
aX509NameDup:   .ascii "X509_NAME_dup"<0>
                                         # DATA XREF: LOAD:00004118↑o
aSkSet:         .ascii "sk_set"<0>       # DATA XREF: LOAD:000032D8↑o
aSslVersionStr: .ascii "SSL_version_str"<0>
                                         # DATA XREF: LOAD:00002228↑o
aSslLoadErrorSt:.ascii "SSL_load_error_strings"<0>
                                         # DATA XREF: LOAD:00001998↑o
aSslCtxGetClien:.ascii "SSL_CTX_get_client_CA_list"<0>
                                         # DATA XREF: LOAD:00002038↑o
aSslAddFileCert:.ascii "SSL_add_file_cert_subjects_to_stack"<0>
                                         # DATA XREF: LOAD:00003578↑o
aBioSFile:      .ascii "BIO_s_file"<0>   # DATA XREF: LOAD:000029F8↑o
aPemReadBioX509:.ascii "PEM_read_bio_X509"<0>
                                         # DATA XREF: LOAD:00003A98↑o
aX509GetSubject:.ascii "X509_get_subject_name"<0>
                                         # DATA XREF: LOAD:00003BF8↑o
aSslAddDirCertS:.ascii "SSL_add_dir_cert_subjects_to_stack"<0>
                                         # DATA XREF: LOAD:00001858↑o
aOpensslDirRead:.ascii "OPENSSL_DIR_read"<0>
                                         # DATA XREF: LOAD:00004538↑o
aOpensslDirEnd: .ascii "OPENSSL_DIR_end"<0>
                                         # DATA XREF: LOAD:00002FA8↑o
                                         # LOAD:00002068↑o
aSslCtxAddClien:.ascii "SSL_CTX_add_client_CA"<0>
                                         # DATA XREF: LOAD:00001B08↑o
aSslAddClientCa:.ascii "SSL_add_client_CA"<0>
                                         # DATA XREF: LOAD:00001EB8↑o
aSslCtxSetClien:.ascii "SSL_CTX_set_client_CA_list"<0>
                                         # DATA XREF: LOAD:00001808↑o
aSslLoadClientC:.ascii "SSL_load_client_CA_file"<0>
                                         # DATA XREF: LOAD:00001CA8↑o
aSslDupCaList:  .ascii "SSL_dup_CA_list"<0>
                                         # DATA XREF: LOAD:00001B28↑o
aX509StoreCtxGe:.ascii "X509_STORE_CTX_get_ex_new_index"<0>
                                         # DATA XREF: LOAD:00003FD8↑o
aX509StoreCtxSe:.ascii "X509_STORE_CTX_set_ex_data"<0>
                                         # DATA XREF: LOAD:000028F8↑o
aX509StoreCtxSe_0:.ascii "X509_STORE_CTX_set_default"<0>
                                         # DATA XREF: LOAD:00002F28↑o
aX509StoreCtxGe_0:.ascii "X509_STORE_CTX_get0_param"<0>
                                         # DATA XREF: LOAD:00004678↑o
aX509StoreCtxSe_1:.ascii "X509_STORE_CTX_set_verify_cb"<0>
                                         # DATA XREF: LOAD:00002CC8↑o
aSslSetClientCa:.ascii "SSL_set_client_CA_list"<0>
                                         # DATA XREF: LOAD:00001F18↑o
aSslSessionGetI:.ascii "SSL_SESSION_get_id"<0>
                                         # DATA XREF: LOAD:00001AA8↑o
aSslSessionGetC:.ascii "SSL_SESSION_get_compress_id"<0>
                                         # DATA XREF: LOAD:00001898↑o
aSslSessionSetT:.ascii "SSL_SESSION_set_timeout"<0>
                                         # DATA XREF: LOAD:00001908↑o
aSslSessionGetT:.ascii "SSL_SESSION_get_timeout"<0>
                                         # DATA XREF: LOAD:00001C08↑o
aSslSessionGetT_0:.ascii "SSL_SESSION_get_time"<0>
                                         # DATA XREF: LOAD:000017C8↑o
aSslSessionSetT_0:.ascii "SSL_SESSION_set_time"<0>
                                         # DATA XREF: LOAD:000022B8↑o
aSslSessionGet0:.ascii "SSL_SESSION_get0_peer"<0>
                                         # DATA XREF: LOAD:00002248↑o
aSslCtxSetTimeo:.ascii "SSL_CTX_set_timeout"<0>
                                         # DATA XREF: LOAD:00001E18↑o
aSslCtxGetTimeo:.ascii "SSL_CTX_get_timeout"<0>
                                         # DATA XREF: LOAD:00001F78↑o
aSslSetSessionS:.ascii "SSL_set_session_secret_cb"<0>
                                         # DATA XREF: LOAD:00001FB8↑o
aSslSetSessionT:.ascii "SSL_set_session_ticket_ext_cb"<0>
                                         # DATA XREF: LOAD:00001E38↑o
aSslCtxSessSetN:.ascii "SSL_CTX_sess_set_new_cb"<0>
                                         # DATA XREF: LOAD:00001F38↑o
aSslCtxSessGetN:.ascii "SSL_CTX_sess_get_new_cb"<0>
                                         # DATA XREF: LOAD:00002088↑o
aSslCtxSessSetR:.ascii "SSL_CTX_sess_set_remove_cb"<0>
                                         # DATA XREF: LOAD:00001DF8↑o
aSslCtxSessGetR:.ascii "SSL_CTX_sess_get_remove_cb"<0>
                                         # DATA XREF: LOAD:00001918↑o
aSslCtxSessSetG:.ascii "SSL_CTX_sess_set_get_cb"<0>
                                         # DATA XREF: LOAD:00001C88↑o
aSslCtxSessGetG:.ascii "SSL_CTX_sess_get_get_cb"<0>
                                         # DATA XREF: LOAD:000020A8↑o
aSslCtxSetInfoC:.ascii "SSL_CTX_set_info_callback"<0>
                                         # DATA XREF: LOAD:00002118↑o
aSslCtxGetInfoC:.ascii "SSL_CTX_get_info_callback"<0>
                                         # DATA XREF: LOAD:00001AE8↑o
aSslCtxSetClien_0:.ascii "SSL_CTX_set_client_cert_cb"<0>
                                         # DATA XREF: LOAD:00001C68↑o
aSslCtxGetClien_0:.ascii "SSL_CTX_get_client_cert_cb"<0>
                                         # DATA XREF: LOAD:00001F48↑o
aSslCtxSetCooki:.ascii "SSL_CTX_set_cookie_generate_cb"<0>
                                         # DATA XREF: LOAD:00001C78↑o
aSslCtxSetCooki_0:.ascii "SSL_CTX_set_cookie_verify_cb"<0>
                                         # DATA XREF: LOAD:00002018↑o
aPemWriteSslSes:.ascii "PEM_write_SSL_SESSION"<0>
                                         # DATA XREF: LOAD:00001E58↑o
aPemAsn1Write:  .ascii "PEM_ASN1_write"<0>
                                         # DATA XREF: LOAD:000025D8↑o
aPemWriteBioSsl:.ascii "PEM_write_bio_SSL_SESSION"<0>
                                         # DATA XREF: LOAD:00001CF8↑o
aPemAsn1WriteBi:.ascii "PEM_ASN1_write_bio"<0>
                                         # DATA XREF: LOAD:00003168↑o
aPemReadSslSess:.ascii "PEM_read_SSL_SESSION"<0>
                                         # DATA XREF: LOAD:00001F88↑o
aPemAsn1Read:   .ascii "PEM_ASN1_read"<0>
                                         # DATA XREF: LOAD:00002308↑o
aPemReadBioSslS:.ascii "PEM_read_bio_SSL_SESSION"<0>
                                         # DATA XREF: LOAD:00001E28↑o
aPemAsn1ReadBio:.ascii "PEM_ASN1_read_bio"<0>
                                         # DATA XREF: LOAD:00002768↑o
aSslGet1Session:.ascii "SSL_get1_session"<0>
                                         # DATA XREF: LOAD:000018D8↑o
aLhDoallArg:    .ascii "lh_doall_arg"<0>
                                         # DATA XREF: LOAD:00002C48↑o
aSslSetSessionT_0:.ascii "SSL_set_session_ticket_ext"<0>
                                         # DATA XREF: LOAD:00002288↑o
aSslSessionSet1:.ascii "SSL_SESSION_set1_id_context"<0>
                                         # DATA XREF: LOAD:00001AF8↑o
aSslSessionNew: .ascii "SSL_SESSION_new"<0>
                                         # DATA XREF: LOAD:00003808↑o
aSslSessionGetE:.ascii "SSL_SESSION_get_ex_data"<0>
                                         # DATA XREF: LOAD:00001C98↑o
aSslSessionSetE:.ascii "SSL_SESSION_set_ex_data"<0>
                                         # DATA XREF: LOAD:00001928↑o
aSslSessionGetE_0:.ascii "SSL_SESSION_get_ex_new_index"<0>
                                         # DATA XREF: LOAD:00001D38↑o
aLhDelete:      .ascii "lh_delete"<0>    # DATA XREF: LOAD:00002508↑o
aLhInsert:      .ascii "lh_insert"<0>    # DATA XREF: LOAD:00002B68↑o
aAbort:         .ascii "abort"<0>        # DATA XREF: LOAD:00002D58↑o
aSslCipherGetVe:.ascii "SSL_CIPHER_get_version"<0>
                                         # DATA XREF: LOAD:00001AC8↑o
aSslCipherGetNa:.ascii "SSL_CIPHER_get_name"<0>
                                         # DATA XREF: LOAD:00001D18↑o
aSslCipherGetBi:.ascii "SSL_CIPHER_get_bits"<0>
                                         # DATA XREF: LOAD:000019A8↑o
aSslCipherGetId:.ascii "SSL_CIPHER_get_id"<0>
                                         # DATA XREF: LOAD:000021E8↑o
aSslCompGetName:.ascii "SSL_COMP_get_name"<0>
                                         # DATA XREF: LOAD:00001EA8↑o
aCryptoMemCtrl: .ascii "CRYPTO_mem_ctrl"<0>
                                         # DATA XREF: LOAD:00002588↑o
aCompZlib:      .ascii "COMP_zlib"<0>    # DATA XREF: LOAD:00003288↑o
aSkSort:        .ascii "sk_sort"<0>      # DATA XREF: LOAD:000036C8↑o
aSslCompAddComp:.ascii "SSL_COMP_add_compression_method"<0>
                                         # DATA XREF: LOAD:00002178↑o
aSslCipherDescr:.ascii "SSL_CIPHER_description"<0>
                                         # DATA XREF: LOAD:00001838↑o
aEvpGetCipherby:.ascii "EVP_get_cipherbyname"<0>
                                         # DATA XREF: LOAD:000040C8↑o
aEvpEncNull:    .ascii "EVP_enc_null"<0>
                                         # DATA XREF: LOAD:00003B48↑o
aSslLoadCiphers:.ascii "ssl_load_ciphers"<0>
                                         # DATA XREF: LOAD:000046F8↑o
aEvpPkeyAsn1Fin:.ascii "EVP_PKEY_asn1_find_str"<0>
                                         # DATA XREF: LOAD:00003B88↑o
aEvpPkeyAsn1Get:.ascii "EVP_PKEY_asn1_get0_info"<0>
                                         # DATA XREF: LOAD:00003D98↑o
aSslStateString:.ascii "SSL_state_string_long"<0>
                                         # DATA XREF: LOAD:00001DD8↑o
aSslRstateStrin:.ascii "SSL_rstate_string_long"<0>
                                         # DATA XREF: LOAD:00001798↑o
aSslStateString_0:.ascii "SSL_state_string"<0>
                                         # DATA XREF: LOAD:00001A18↑o
aSslAlertTypeSt:.ascii "SSL_alert_type_string_long"<0>
                                         # DATA XREF: LOAD:00001E78↑o
aSslAlertTypeSt_0:.ascii "SSL_alert_type_string"<0>
                                         # DATA XREF: LOAD:000021A8↑o
aSslAlertDescSt:.ascii "SSL_alert_desc_string"<0>
                                         # DATA XREF: LOAD:000021F8↑o
aSslAlertDescSt_0:.ascii "SSL_alert_desc_string_long"<0>
                                         # DATA XREF: LOAD:00001D08↑o
aSslRstateStrin_0:.ascii "SSL_rstate_string"<0>
                                         # DATA XREF: LOAD:00001828↑o
aEvpPkeyCopyPar:.ascii "EVP_PKEY_copy_parameters"<0>
                                         # DATA XREF: LOAD:00002838↑o
aRsaFlags:      .ascii "RSA_flags"<0>    # DATA XREF: LOAD:00002898↑o
aSslCtxUseCerti:.ascii "SSL_CTX_use_certificate"<0>
                                         # DATA XREF: LOAD:00002EA8↑o
aSslCtxUseCerti_0:.ascii "SSL_CTX_use_certificate_chain_file"<0>
                                         # DATA XREF: LOAD:00001A48↑o
aPemReadBioX509_0:.ascii "PEM_read_bio_X509_AUX"<0>
                                         # DATA XREF: LOAD:00002608↑o
aErrPeekLastErr:.ascii "ERR_peek_last_error"<0>
                                         # DATA XREF: LOAD:000032B8↑o
aSslCtxUsePriva:.ascii "SSL_CTX_use_PrivateKey"<0>
                                         # DATA XREF: LOAD:000036E8↑o
aSslCtxUsePriva_0:.ascii "SSL_CTX_use_PrivateKey_ASN1"<0>
                                         # DATA XREF: LOAD:000017D8↑o
aD2iPrivatekey: .ascii "d2i_PrivateKey"<0>
                                         # DATA XREF: LOAD:00002EF8↑o
aSslCtxUsePriva_1:.ascii "SSL_CTX_use_PrivateKey_file"<0>
                                         # DATA XREF: LOAD:00001E88↑o
aD2iPrivatekeyB:.ascii "d2i_PrivateKey_bio"<0>
                                         # DATA XREF: LOAD:000023B8↑o
aPemReadBioPriv:.ascii "PEM_read_bio_PrivateKey"<0>
                                         # DATA XREF: LOAD:00004048↑o
aSslUsePrivatek_0:.ascii "SSL_use_PrivateKey_ASN1"<0>
                                         # DATA XREF: LOAD:00002238↑o
aSslUsePrivatek_1:.ascii "SSL_use_PrivateKey_file"<0>
                                         # DATA XREF: LOAD:00001A78↑o
aSslCtxUseRsapr:.ascii "SSL_CTX_use_RSAPrivateKey"<0>
                                         # DATA XREF: LOAD:00003EE8↑o
aEvpPkeyNew:    .ascii "EVP_PKEY_new"<0>
                                         # DATA XREF: LOAD:00002A68↑o
aEvpPkeyAssign: .ascii "EVP_PKEY_assign"<0>
                                         # DATA XREF: LOAD:000027A8↑o
aSslCtxUseRsapr_0:.ascii "SSL_CTX_use_RSAPrivateKey_ASN1"<0>
                                         # DATA XREF: LOAD:00002078↑o
aD2iRsaprivatek:.ascii "d2i_RSAPrivateKey"<0>
                                         # DATA XREF: LOAD:00003448↑o
aSslCtxUseRsapr_1:.ascii "SSL_CTX_use_RSAPrivateKey_file"<0>
                                         # DATA XREF: LOAD:00001B58↑o
aPemReadBioRsap:.ascii "PEM_read_bio_RSAPrivateKey"<0>
                                         # DATA XREF: LOAD:000039F8↑o
aD2iRsaprivatek_0:.ascii "d2i_RSAPrivateKey_bio"<0>
                                         # DATA XREF: LOAD:00003358↑o
aSslUseRsapriva:.ascii "SSL_use_RSAPrivateKey"<0>
                                         # DATA XREF: LOAD:00003D08↑o
aSslUseRsapriva_0:.ascii "SSL_use_RSAPrivateKey_ASN1"<0>
                                         # DATA XREF: LOAD:00001C38↑o
aSslUseRsapriva_1:.ascii "SSL_use_RSAPrivateKey_file"<0>
                                         # DATA XREF: LOAD:00002198↑o
aSslCtxUseCerti_1:.ascii "SSL_CTX_use_certificate_ASN1"<0>
                                         # DATA XREF: LOAD:00001868↑o
aSslUseCertific_0:.ascii "SSL_use_certificate_ASN1"<0>
                                         # DATA XREF: LOAD:00001CB8↑o
aSslCtxUseCerti_2:.ascii "SSL_CTX_use_certificate_file"<0>
                                         # DATA XREF: LOAD:00001ED8↑o
aD2iX509Bio:    .ascii "d2i_X509_bio"<0>
                                         # DATA XREF: LOAD:00002698↑o
aSslUseCertific_1:.ascii "SSL_use_certificate_file"<0>
                                         # DATA XREF: LOAD:00002168↑o
aAsn1Getsequenc:.ascii "asn1_GetSequence"<0>
                                         # DATA XREF: LOAD:00002748↑o
aD2iAsn1Integer:.ascii "d2i_ASN1_INTEGER"<0>
                                         # DATA XREF: LOAD:000033A8↑o
aAsn1IntegerGet:.ascii "ASN1_INTEGER_get"<0>
                                         # DATA XREF: LOAD:000031B8↑o
aD2iAsn1OctetSt:.ascii "d2i_ASN1_OCTET_STRING"<0>
                                         # DATA XREF: LOAD:00003F18↑o
aAsn1AddError:  .ascii "asn1_add_error"<0>
                                         # DATA XREF: LOAD:000042C8↑o
aAsn1GetObject: .ascii "ASN1_get_object"<0>
                                         # DATA XREF: LOAD:00003E58↑o
aAsn1ConstFinis:.ascii "asn1_const_Finish"<0>
                                         # DATA XREF: LOAD:000039C8↑o
aBufStrndup:    .ascii "BUF_strndup"<0>  # DATA XREF: LOAD:00002C28↑o
aAsn1ConstCheck:.ascii "ASN1_const_check_infinite_end"<0>
                                         # DATA XREF: LOAD:00002AD8↑o
aAsn1IntegerSet:.ascii "ASN1_INTEGER_set"<0>
                                         # DATA XREF: LOAD:00003C48↑o
aI2dAsn1Integer:.ascii "i2d_ASN1_INTEGER"<0>
                                         # DATA XREF: LOAD:00002CE8↑o
aI2dAsn1OctetSt:.ascii "i2d_ASN1_OCTET_STRING"<0>
                                         # DATA XREF: LOAD:00003F78↑o
aAsn1ObjectSize:.ascii "ASN1_object_size"<0>
                                         # DATA XREF: LOAD:00003618↑o
aAsn1PutObject: .ascii "ASN1_put_object"<0>
                                         # DATA XREF: LOAD:000030C8↑o
aSslSessionPrin:.ascii "SSL_SESSION_print"<0>
                                         # DATA XREF: LOAD:00002E48↑o
aBioPuts:       .ascii "BIO_puts"<0>     # DATA XREF: LOAD:00003A88↑o
aBioPrintf:     .ascii "BIO_printf"<0>   # DATA XREF: LOAD:00002EE8↑o
aBioDumpIndent: .ascii "BIO_dump_indent"<0>
                                         # DATA XREF: LOAD:000031D8↑o
aX509VerifyCert_0:.ascii "X509_verify_cert_error_string"<0>
                                         # DATA XREF: LOAD:00003648↑o
aSslSessionPrin_0:.ascii "SSL_SESSION_print_fp"<0>
                                         # DATA XREF: LOAD:00001A98↑o
aSslLibraryInit:.ascii "SSL_library_init"<0>
                                         # DATA XREF: LOAD:00001E98↑o
aEvpDesCbc:     .ascii "EVP_des_cbc"<0>  # DATA XREF: LOAD:00002D08↑o
aEvpAddCipher:  .ascii "EVP_add_cipher"<0>
                                         # DATA XREF: LOAD:00004238↑o
aEvpDesEde3Cbc: .ascii "EVP_des_ede3_cbc"<0>
                                         # DATA XREF: LOAD:00002798↑o
aEvpRc4:        .ascii "EVP_rc4"<0>      # DATA XREF: LOAD:00003498↑o
aEvpAes192Cbc:  .ascii "EVP_aes_192_cbc"<0>
                                         # DATA XREF: LOAD:00004288↑o
aEvpAes256Cbc:  .ascii "EVP_aes_256_cbc"<0>
                                         # DATA XREF: LOAD:00003388↑o
aEvpAes128Gcm:  .ascii "EVP_aes_128_gcm"<0>
                                         # DATA XREF: LOAD:00002528↑o
aEvpAes256Gcm:  .ascii "EVP_aes_256_gcm"<0>
                                         # DATA XREF: LOAD:000029C8↑o
aEvpAes128CbcHm:.ascii "EVP_aes_128_cbc_hmac_sha1"<0>
                                         # DATA XREF: LOAD:000034E8↑o
aEvpAes256CbcHm:.ascii "EVP_aes_256_cbc_hmac_sha1"<0>
                                         # DATA XREF: LOAD:00003B58↑o
aEvpAddDigest:  .ascii "EVP_add_digest"<0>
                                         # DATA XREF: LOAD:00003C68↑o
aObjNameAdd:    .ascii "OBJ_NAME_add"<0>
                                         # DATA XREF: LOAD:00003108↑o
aBioFSsl:       .ascii "BIO_f_ssl"<0>    # DATA XREF: LOAD:00003C08↑o
aBioSslShutdown:.ascii "BIO_ssl_shutdown"<0>
                                         # DATA XREF: LOAD:00002158↑o
aBioSslCopySess:.ascii "BIO_ssl_copy_session_id"<0>
                                         # DATA XREF: LOAD:00001D98↑o
aBioNewSsl:     .ascii "BIO_new_ssl"<0>  # DATA XREF: LOAD:00003118↑o
aBioNewSslConne:.ascii "BIO_new_ssl_connect"<0>
                                         # DATA XREF: LOAD:00003198↑o
aBioSConnect:   .ascii "BIO_s_connect"<0>
                                         # DATA XREF: LOAD:00002628↑o
aBioNewBufferSs:.ascii "BIO_new_buffer_ssl_connect"<0>
                                         # DATA XREF: LOAD:00002188↑o
aBioCallbackCtr:.ascii "BIO_callback_ctrl"<0>
                                         # DATA XREF: LOAD:00002DA8↑o
aBioCopyNextRet:.ascii "BIO_copy_next_retry"<0>
                                         # DATA XREF: LOAD:00004218↑o
aErrLoadSslStri:.ascii "ERR_load_SSL_strings"<0>
                                         # DATA XREF: LOAD:00001E08↑o
aSslGetSrpG:    .ascii "SSL_get_srp_g"<0>
                                         # DATA XREF: LOAD:00001DC8↑o
aSslGetSrpN:    .ascii "SSL_get_srp_N"<0>
                                         # DATA XREF: LOAD:00001BA8↑o
aSslGetSrpUsern:.ascii "SSL_get_srp_username"<0>
                                         # DATA XREF: LOAD:000020E8↑o
aSslGetSrpUseri:.ascii "SSL_get_srp_userinfo"<0>
                                         # DATA XREF: LOAD:00001778↑o
aSslCtxSetSrpCl:.ascii "SSL_CTX_set_srp_client_pwd_callback"<0>
                                         # DATA XREF: LOAD:00001E68↑o
aSslCtxSetSrpUs:.ascii "SSL_CTX_set_srp_username_callback"<0>
                                         # DATA XREF: LOAD:00001CE8↑o
aSslCtxSetSrpVe:.ascii "SSL_CTX_set_srp_verify_param_callback"<0>
                                         # DATA XREF: LOAD:00001FC8↑o
aSslCtxSetSrpCb:.ascii "SSL_CTX_set_srp_cb_arg"<0>
                                         # DATA XREF: LOAD:00001988↑o
aSslCtxSetSrpSt:.ascii "SSL_CTX_set_srp_strength"<0>
                                         # DATA XREF: LOAD:00002128↑o
aSslCtxSetSrpPa:.ascii "SSL_CTX_set_srp_password"<0>
                                         # DATA XREF: LOAD:000017B8↑o
aSslCtxSetSrpUs_0:.ascii "SSL_CTX_set_srp_username"<0>
                                         # DATA XREF: LOAD:000020D8↑o
aSrpCheckKnownG:.ascii "SRP_check_known_gN_param"<0>
                                         # DATA XREF: LOAD:000030D8↑o
aSrpCalcA:      .ascii "SRP_Calc_A"<0>   # DATA XREF: LOAD:00004668↑o
aSrpVerifyBModN:.ascii "SRP_Verify_B_mod_N"<0>
                                         # DATA XREF: LOAD:00002BA8↑o
aSrpCalcU:      .ascii "SRP_Calc_u"<0>   # DATA XREF: LOAD:00003F38↑o
aSrpCalcX:      .ascii "SRP_Calc_x"<0>   # DATA XREF: LOAD:00002878↑o
aSrpCalcClientK:.ascii "SRP_Calc_client_key"<0>
                                         # DATA XREF: LOAD:00002E58↑o
aBnClearFree:   .ascii "BN_clear_free"<0>
                                         # DATA XREF: LOAD:00003258↑o
aSrpVerifyAModN:.ascii "SRP_Verify_A_mod_N"<0>
                                         # DATA XREF: LOAD:000041A8↑o
aSrpCalcServerK:.ascii "SRP_Calc_server_key"<0>
                                         # DATA XREF: LOAD:000026C8↑o
aBnFree:        .ascii "BN_free"<0>      # DATA XREF: LOAD:000024D8↑o
aSslSetSrpServe:.ascii "SSL_set_srp_server_param"<0>
                                         # DATA XREF: LOAD:00001F98↑o
aBnCopy:        .ascii "BN_copy"<0>      # DATA XREF: LOAD:00002488↑o
aBnDup:         .ascii "BN_dup"<0>       # DATA XREF: LOAD:00002E68↑o
aSslSetSrpServe_0:.ascii "SSL_set_srp_server_param_pw"<0>
                                         # DATA XREF: LOAD:000019B8↑o
aSrpGetDefaultG:.ascii "SRP_get_default_gN"<0>
                                         # DATA XREF: LOAD:000041C8↑o
aSrpCreateVerif:.ascii "SRP_create_verifier_BN"<0>
                                         # DATA XREF: LOAD:00003968↑o
aSrpCalcB:      .ascii "SRP_Calc_B"<0>   # DATA XREF: LOAD:00003E78↑o
aFtext:         .ascii "_ftext"<0>       # DATA XREF: LOAD:00001FF8↑o
aFdata:         .ascii "_fdata"<0>       # DATA XREF: LOAD:00001D48↑o
aGp:            .ascii "_gp"<0>          # DATA XREF: LOAD:00001B88↑o
aEdata:         .ascii "_edata"<0>       # DATA XREF: LOAD:000021D8↑o
aBssStart:      .ascii "__bss_start"<0>  # DATA XREF: LOAD:00001F08↑o
aFbss:          .ascii "_fbss"<0>        # DATA XREF: LOAD:00001738↑o
aLibsslSo100:   .ascii "libssl.so.1.0.0"<0>
aFini:          .ascii "_fini"<0>        # DATA XREF: LOAD:00001948↑o
 # ELF REL Relocation Table
                Elf32_Rel <0>            # R_MIPS_NONE
                Elf32_Rel <0x57ACC, 3>   # R_MIPS_REL
                Elf32_Rel <0x57AFC, 3>   # R_MIPS_REL
                Elf32_Rel <0x57B2C, 3>   # R_MIPS_REL
                Elf32_Rel <0x57B5C, 3>   # R_MIPS_REL
                Elf32_Rel <0x57B8C, 3>   # R_MIPS_REL
                Elf32_Rel <0x57BBC, 3>   # R_MIPS_REL
                Elf32_Rel <0x57BE8, 3>   # R_MIPS_REL
                Elf32_Rel <0x57BF0, 3>   # R_MIPS_REL
                Elf32_Rel <0x57C20, 3>   # R_MIPS_REL
                Elf32_Rel <0x57C50, 3>   # R_MIPS_REL
                Elf32_Rel <0x57C80, 3>   # R_MIPS_REL
                Elf32_Rel <0x57CB0, 3>   # R_MIPS_REL
                Elf32_Rel <0x57CE0, 3>   # R_MIPS_REL
                Elf32_Rel <0x57D10, 3>   # R_MIPS_REL
                Elf32_Rel <0x57D40, 3>   # R_MIPS_REL
                Elf32_Rel <0x57D70, 3>   # R_MIPS_REL
                Elf32_Rel <0x57DA0, 3>   # R_MIPS_REL
                Elf32_Rel <0x57DD0, 3>   # R_MIPS_REL
                Elf32_Rel <0x57E00, 3>   # R_MIPS_REL
                Elf32_Rel <0x57E30, 3>   # R_MIPS_REL
                Elf32_Rel <0x57E60, 3>   # R_MIPS_REL
                Elf32_Rel <0x57E90, 3>   # R_MIPS_REL
                Elf32_Rel <0x57EC0, 3>   # R_MIPS_REL
                Elf32_Rel <0x57EF0, 3>   # R_MIPS_REL
                Elf32_Rel <0x57F20, 3>   # R_MIPS_REL
                Elf32_Rel <0x57F50, 3>   # R_MIPS_REL
                Elf32_Rel <0x57F80, 3>   # R_MIPS_REL
                Elf32_Rel <0x57FB0, 3>   # R_MIPS_REL
                Elf32_Rel <0x57FE0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58010, 3>   # R_MIPS_REL
                Elf32_Rel <0x58040, 3>   # R_MIPS_REL
                Elf32_Rel <0x58070, 3>   # R_MIPS_REL
                Elf32_Rel <0x580A0, 3>   # R_MIPS_REL
                Elf32_Rel <0x580D0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58100, 3>   # R_MIPS_REL
                Elf32_Rel <0x58130, 3>   # R_MIPS_REL
                Elf32_Rel <0x58160, 3>   # R_MIPS_REL
                Elf32_Rel <0x58190, 3>   # R_MIPS_REL
                Elf32_Rel <0x581C0, 3>   # R_MIPS_REL
                Elf32_Rel <0x581F0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58220, 3>   # R_MIPS_REL
                Elf32_Rel <0x58250, 3>   # R_MIPS_REL
                Elf32_Rel <0x58280, 3>   # R_MIPS_REL
                Elf32_Rel <0x582B0, 3>   # R_MIPS_REL
                Elf32_Rel <0x582E0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58310, 3>   # R_MIPS_REL
                Elf32_Rel <0x58340, 3>   # R_MIPS_REL
                Elf32_Rel <0x58370, 3>   # R_MIPS_REL
                Elf32_Rel <0x583A0, 3>   # R_MIPS_REL
                Elf32_Rel <0x583D0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58400, 3>   # R_MIPS_REL
                Elf32_Rel <0x58430, 3>   # R_MIPS_REL
                Elf32_Rel <0x58460, 3>   # R_MIPS_REL
                Elf32_Rel <0x58490, 3>   # R_MIPS_REL
                Elf32_Rel <0x584C0, 3>   # R_MIPS_REL
                Elf32_Rel <0x584F0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58520, 3>   # R_MIPS_REL
                Elf32_Rel <0x58550, 3>   # R_MIPS_REL
                Elf32_Rel <0x58580, 3>   # R_MIPS_REL
                Elf32_Rel <0x585B0, 3>   # R_MIPS_REL
                Elf32_Rel <0x585E0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58610, 3>   # R_MIPS_REL
                Elf32_Rel <0x58640, 3>   # R_MIPS_REL
                Elf32_Rel <0x58670, 3>   # R_MIPS_REL
                Elf32_Rel <0x586A0, 3>   # R_MIPS_REL
                Elf32_Rel <0x586D0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58700, 3>   # R_MIPS_REL
                Elf32_Rel <0x58730, 3>   # R_MIPS_REL
                Elf32_Rel <0x58760, 3>   # R_MIPS_REL
                Elf32_Rel <0x58790, 3>   # R_MIPS_REL
                Elf32_Rel <0x587C0, 3>   # R_MIPS_REL
                Elf32_Rel <0x587F0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58820, 3>   # R_MIPS_REL
                Elf32_Rel <0x58850, 3>   # R_MIPS_REL
                Elf32_Rel <0x58880, 3>   # R_MIPS_REL
                Elf32_Rel <0x588B0, 3>   # R_MIPS_REL
                Elf32_Rel <0x588E0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58910, 3>   # R_MIPS_REL
                Elf32_Rel <0x58940, 3>   # R_MIPS_REL
                Elf32_Rel <0x589C8, 3>   # R_MIPS_REL
                Elf32_Rel <0x58A3C, 3>   # R_MIPS_REL
                Elf32_Rel <0x58AB0, 3>   # R_MIPS_REL
                Elf32_Rel <0x58B24, 3>   # R_MIPS_REL
                Elf32_Rel <0x58B98, 3>   # R_MIPS_REL
                Elf32_Rel <0x58C0C, 3>   # R_MIPS_REL
                Elf32_Rel <0x58C80, 3>   # R_MIPS_REL
                Elf32_Rel <0x58CF4, 3>   # R_MIPS_REL
                Elf32_Rel <0x58D68, 3>   # R_MIPS_REL
                Elf32_Rel <0x58DDC, 3>   # R_MIPS_REL
                Elf32_Rel <0x58E50, 3>   # R_MIPS_REL
                Elf32_Rel <0x58EC4, 3>   # R_MIPS_REL
                Elf32_Rel <0x58F38, 3>   # R_MIPS_REL
                Elf32_Rel <0x58FAC, 3>   # R_MIPS_REL
                Elf32_Rel <0x59020, 3>   # R_MIPS_REL
                Elf32_Rel <0x59094, 3>   # R_MIPS_REL
                Elf32_Rel <0x59108, 3>   # R_MIPS_REL
                Elf32_Rel <0x5917C, 3>   # R_MIPS_REL
                Elf32_Rel <0x591F0, 3>   # R_MIPS_REL
                Elf32_Rel <0x59264, 3>   # R_MIPS_REL
                Elf32_Rel <0x592D8, 3>   # R_MIPS_REL
                Elf32_Rel <0x592F4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59324, 3>   # R_MIPS_REL
                Elf32_Rel <0x59354, 3>   # R_MIPS_REL
                Elf32_Rel <0x59384, 3>   # R_MIPS_REL
                Elf32_Rel <0x593B4, 3>   # R_MIPS_REL
                Elf32_Rel <0x593E4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59414, 3>   # R_MIPS_REL
                Elf32_Rel <0x59444, 3>   # R_MIPS_REL
                Elf32_Rel <0x59474, 3>   # R_MIPS_REL
                Elf32_Rel <0x594A4, 3>   # R_MIPS_REL
                Elf32_Rel <0x594D4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59504, 3>   # R_MIPS_REL
                Elf32_Rel <0x59534, 3>   # R_MIPS_REL
                Elf32_Rel <0x59564, 3>   # R_MIPS_REL
                Elf32_Rel <0x59594, 3>   # R_MIPS_REL
                Elf32_Rel <0x595C4, 3>   # R_MIPS_REL
                Elf32_Rel <0x595F4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59624, 3>   # R_MIPS_REL
                Elf32_Rel <0x59654, 3>   # R_MIPS_REL
                Elf32_Rel <0x59684, 3>   # R_MIPS_REL
                Elf32_Rel <0x596B4, 3>   # R_MIPS_REL
                Elf32_Rel <0x596E4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59714, 3>   # R_MIPS_REL
                Elf32_Rel <0x59744, 3>   # R_MIPS_REL
                Elf32_Rel <0x59774, 3>   # R_MIPS_REL
                Elf32_Rel <0x597A4, 3>   # R_MIPS_REL
                Elf32_Rel <0x597D4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59804, 3>   # R_MIPS_REL
                Elf32_Rel <0x59834, 3>   # R_MIPS_REL
                Elf32_Rel <0x59864, 3>   # R_MIPS_REL
                Elf32_Rel <0x59894, 3>   # R_MIPS_REL
                Elf32_Rel <0x598C4, 3>   # R_MIPS_REL
                Elf32_Rel <0x598F4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59924, 3>   # R_MIPS_REL
                Elf32_Rel <0x59954, 3>   # R_MIPS_REL
                Elf32_Rel <0x59984, 3>   # R_MIPS_REL
                Elf32_Rel <0x599B4, 3>   # R_MIPS_REL
                Elf32_Rel <0x599E4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59A14, 3>   # R_MIPS_REL
                Elf32_Rel <0x59A44, 3>   # R_MIPS_REL
                Elf32_Rel <0x59A74, 3>   # R_MIPS_REL
                Elf32_Rel <0x59AA4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59AD4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59B04, 3>   # R_MIPS_REL
                Elf32_Rel <0x59B34, 3>   # R_MIPS_REL
                Elf32_Rel <0x59B64, 3>   # R_MIPS_REL
                Elf32_Rel <0x59B94, 3>   # R_MIPS_REL
                Elf32_Rel <0x59BC4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59BF4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59C24, 3>   # R_MIPS_REL
                Elf32_Rel <0x59C54, 3>   # R_MIPS_REL
                Elf32_Rel <0x59C84, 3>   # R_MIPS_REL
                Elf32_Rel <0x59CB4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59CE4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59D14, 3>   # R_MIPS_REL
                Elf32_Rel <0x59D44, 3>   # R_MIPS_REL
                Elf32_Rel <0x59D74, 3>   # R_MIPS_REL
                Elf32_Rel <0x59DA4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59DD4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59E04, 3>   # R_MIPS_REL
                Elf32_Rel <0x59E34, 3>   # R_MIPS_REL
                Elf32_Rel <0x59E64, 3>   # R_MIPS_REL
                Elf32_Rel <0x59E94, 3>   # R_MIPS_REL
                Elf32_Rel <0x59EC4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59EF4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59F24, 3>   # R_MIPS_REL
                Elf32_Rel <0x59F54, 3>   # R_MIPS_REL
                Elf32_Rel <0x59F84, 3>   # R_MIPS_REL
                Elf32_Rel <0x59FB4, 3>   # R_MIPS_REL
                Elf32_Rel <0x59FE4, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A014, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A044, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A074, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A0A4, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A0D4, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A104, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A150, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A158, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A1E8, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A1F0, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A278, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A280, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A290, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A298, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A2A8, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A334, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A338, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A33C, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A340, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A348, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A34C, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A350, 3>   # R_MIPS_REL
                Elf32_Rel <0x5A354, 3>   # R_MIPS_REL
                Elf32_Rel <0x591A4, 0xC003>  # R_MIPS_REL dtls1_accept
                Elf32_Rel <0x59218, 0xC003>  # R_MIPS_REL dtls1_accept
                Elf32_Rel <0x58AF0, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x58B64, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x58BD8, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x58DA8, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x58E1C, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x58E90, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x58F04, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x58F78, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x58FEC, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x59060, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x590D4, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x59148, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x591BC, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x59230, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x592A4, 0xE203>  # R_MIPS_REL ssl3_renegotiate
                Elf32_Rel <0x5898C, 0xF203>  # R_MIPS_REL ssl2_write
                Elf32_Rel <0x58A00, 0xF203>  # R_MIPS_REL ssl2_write
                Elf32_Rel <0x58A74, 0xF203>  # R_MIPS_REL ssl2_write
                Elf32_Rel <0x58AD8, 0xF703>  # R_MIPS_REL ssl3_accept
                Elf32_Rel <0x58B4C, 0xF703>  # R_MIPS_REL ssl3_accept
                Elf32_Rel <0x58D90, 0xF703>  # R_MIPS_REL ssl3_accept
                Elf32_Rel <0x58E04, 0xF703>  # R_MIPS_REL ssl3_accept
                Elf32_Rel <0x58E78, 0xF703>  # R_MIPS_REL ssl3_accept
                Elf32_Rel <0x58EEC, 0xF703>  # R_MIPS_REL ssl3_accept
                Elf32_Rel <0x58F60, 0xF703>  # R_MIPS_REL ssl3_accept
                Elf32_Rel <0x58FD4, 0xF703>  # R_MIPS_REL ssl3_accept
                Elf32_Rel <0x58B1C, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x58B90, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x58C04, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x58DD4, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x58E48, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x58EBC, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x58F30, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x58FA4, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x59018, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x5908C, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x59100, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x59174, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x591E8, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x5925C, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x592D0, 0x13403>  # R_MIPS_REL ssl3_num_ciphers
                Elf32_Rel <0x591A8, 0x13C03>  # R_MIPS_REL dtls1_connect
                Elf32_Rel <0x59290, 0x13C03>  # R_MIPS_REL dtls1_connect
                Elf32_Rel <0x589C0, 0x14D03>  # R_MIPS_REL ssl2_num_ciphers
                Elf32_Rel <0x58A34, 0x14D03>  # R_MIPS_REL ssl2_num_ciphers
                Elf32_Rel <0x58AA8, 0x14D03>  # R_MIPS_REL ssl2_num_ciphers
                Elf32_Rel <0x58B38, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58BAC, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58C20, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58C94, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58D08, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58D7C, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58DF0, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58E64, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58ED8, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58F4C, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58FC0, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x59034, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x590A8, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x5911C, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x59190, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x59204, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x59278, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x592EC, 0x15703>  # R_MIPS_REL ssl3_ctx_callback_ctrl
                Elf32_Rel <0x58ACC, 0x15C03>  # R_MIPS_REL ssl3_new
                Elf32_Rel <0x58B40, 0x15C03>  # R_MIPS_REL ssl3_new
                Elf32_Rel <0x58BB4, 0x15C03>  # R_MIPS_REL ssl3_new
                Elf32_Rel <0x589B4, 0x17303>  # R_MIPS_REL ssl2_get_cipher_by_char
                Elf32_Rel <0x58A28, 0x17303>  # R_MIPS_REL ssl2_get_cipher_by_char
                Elf32_Rel <0x58A9C, 0x17303>  # R_MIPS_REL ssl2_get_cipher_by_char
                Elf32_Rel <0x58B00, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58B74, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58BE8, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58C5C, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58CD0, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58D44, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58DB8, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58E2C, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58EA0, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58F14, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58F88, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58FFC, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x59070, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x590E4, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x59158, 0x1B303>  # R_MIPS_REL ssl3_write_bytes
                Elf32_Rel <0x58B08, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58B7C, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58BF0, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58C64, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58CD8, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58D4C, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58DC0, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58E34, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58EA8, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58F1C, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x58F90, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x59004, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x59078, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x590EC, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x59160, 0x1B403>  # R_MIPS_REL ssl3_ctrl
                Elf32_Rel <0x589C4, 0x1C203>  # R_MIPS_REL ssl2_get_cipher
                Elf32_Rel <0x58A38, 0x1C203>  # R_MIPS_REL ssl2_get_cipher
                Elf32_Rel <0x58AAC, 0x1C203>  # R_MIPS_REL ssl2_get_cipher
                Elf32_Rel <0x58B14, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x58B88, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x58BFC, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x58DCC, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x58E40, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x58EB4, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x58F28, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x58F9C, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x59010, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x59084, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x590F8, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x5916C, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x591E0, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x59254, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x592C8, 0x1D103>  # R_MIPS_REL ssl3_put_cipher_by_char
                Elf32_Rel <0x58B20, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x58B94, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x58C08, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x58DD8, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x58E4C, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x58EC0, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x58F34, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x58FA8, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x5901C, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x59090, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x59104, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x59178, 0x20703>  # R_MIPS_REL ssl3_get_cipher
                Elf32_Rel <0x58970, 0x20C03>  # R_MIPS_REL ssl2_new
                Elf32_Rel <0x589E4, 0x20C03>  # R_MIPS_REL ssl2_new
                Elf32_Rel <0x58A58, 0x20C03>  # R_MIPS_REL ssl2_new
                Elf32_Rel <0x58AEC, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x58B60, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x58BD4, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x58DA4, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x58E18, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x58E8C, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x58F00, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x58F74, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x58FE8, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x5905C, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x590D0, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x59144, 0x21403>  # R_MIPS_REL ssl3_shutdown
                Elf32_Rel <0x5897C, 0x22003>  # R_MIPS_REL ssl2_accept
                Elf32_Rel <0x589F0, 0x22003>  # R_MIPS_REL ssl2_accept
                Elf32_Rel <0x58AD0, 0x22303>  # R_MIPS_REL ssl3_clear
                Elf32_Rel <0x58B44, 0x22303>  # R_MIPS_REL ssl3_clear
                Elf32_Rel <0x58BB8, 0x22303>  # R_MIPS_REL ssl3_clear
                Elf32_Rel <0x58AD4, 0x23703>  # R_MIPS_REL ssl3_free
                Elf32_Rel <0x58B48, 0x23703>  # R_MIPS_REL ssl3_free
                Elf32_Rel <0x58BBC, 0x23703>  # R_MIPS_REL ssl3_free
                Elf32_Rel <0x589F4, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58A64, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58B50, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58BC0, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58C48, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58C4C, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58CAC, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58CBC, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58CC0, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58D1C, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58D30, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58D34, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58EF0, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58F64, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58FD8, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x59048, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x590BC, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x59130, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5921C, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5928C, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A164, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A2AC, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A2B0, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A2B4, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A2B8, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A2BC, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A2C0, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A2C8, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A2DC, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x5A2E0, 0x24403>  # R_MIPS_REL ssl_undefined_function
                Elf32_Rel <0x58984, 0x24803>  # R_MIPS_REL ssl2_read
                Elf32_Rel <0x589F8, 0x24803>  # R_MIPS_REL ssl2_read
                Elf32_Rel <0x58A6C, 0x24803>  # R_MIPS_REL ssl2_read
                Elf32_Rel <0x58980, 0x25903>  # R_MIPS_REL ssl2_connect
                Elf32_Rel <0x58A68, 0x25903>  # R_MIPS_REL ssl2_connect
                Elf32_Rel <0x58B10, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x58B84, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x58BF8, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x58DC8, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x58E3C, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x58EB0, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x58F24, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x58F98, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x5900C, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x59080, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x590F4, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x59168, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x591DC, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x59250, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x592C4, 0x27703>  # R_MIPS_REL ssl3_get_cipher_by_char
                Elf32_Rel <0x58B0C, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58B80, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58BF4, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58C68, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58CDC, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58D50, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58DC4, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58E38, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58EAC, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58F20, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58F94, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x59008, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x5907C, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x590F0, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x59164, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x591D8, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x5924C, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x592C0, 0x28C03>  # R_MIPS_REL ssl3_ctx_ctrl
                Elf32_Rel <0x58974, 0x2AE03>  # R_MIPS_REL ssl2_clear
                Elf32_Rel <0x589E8, 0x2AE03>  # R_MIPS_REL ssl2_clear
                Elf32_Rel <0x58A5C, 0x2AE03>  # R_MIPS_REL ssl2_clear
                Elf32_Rel <0x58AF4, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x58B68, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x58BDC, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x58DAC, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x58E20, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x58E94, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x58F08, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x58F7C, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x58FF0, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x59064, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x590D8, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x5914C, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x591C0, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x59234, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x592A8, 0x2B503>  # R_MIPS_REL ssl3_renegotiate_check
                Elf32_Rel <0x58ADC, 0x2B803>  # R_MIPS_REL ssl3_connect
                Elf32_Rel <0x58BC4, 0x2B803>  # R_MIPS_REL ssl3_connect
                Elf32_Rel <0x58D94, 0x2B803>  # R_MIPS_REL ssl3_connect
                Elf32_Rel <0x58E08, 0x2B803>  # R_MIPS_REL ssl3_connect
                Elf32_Rel <0x58E7C, 0x2B803>  # R_MIPS_REL ssl3_connect
                Elf32_Rel <0x5904C, 0x2B803>  # R_MIPS_REL ssl3_connect
                Elf32_Rel <0x590C0, 0x2B803>  # R_MIPS_REL ssl3_connect
                Elf32_Rel <0x59134, 0x2B803>  # R_MIPS_REL ssl3_connect
                Elf32_Rel <0x58C6C, 0x30703>  # R_MIPS_REL ssl23_get_cipher_by_char
                Elf32_Rel <0x58CE0, 0x30703>  # R_MIPS_REL ssl23_get_cipher_by_char
                Elf32_Rel <0x58D54, 0x30703>  # R_MIPS_REL ssl23_get_cipher_by_char
                Elf32_Rel <0x5A1F8, 0x30803>  # R_MIPS_REL tls1_alert_code
                Elf32_Rel <0x5A288, 0x30803>  # R_MIPS_REL tls1_alert_code
                Elf32_Rel <0x58B18, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x58B8C, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x58C00, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x58DD0, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x58E44, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x58EB8, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x58F2C, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x58FA0, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x59014, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x59088, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x590FC, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x59170, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x591E4, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x59258, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x592CC, 0x30903>  # R_MIPS_REL ssl3_pending
                Elf32_Rel <0x58C74, 0x30A03>  # R_MIPS_REL ssl_undefined_const_function
                Elf32_Rel <0x58CE8, 0x30A03>  # R_MIPS_REL ssl_undefined_const_function
                Elf32_Rel <0x58D5C, 0x30A03>  # R_MIPS_REL ssl_undefined_const_function
                Elf32_Rel <0x5A1E4, 0x30B03>  # R_MIPS_REL tls1_cert_verify_mac
                Elf32_Rel <0x5A274, 0x30B03>  # R_MIPS_REL tls1_cert_verify_mac
                Elf32_Rel <0x5A258, 0x30C03>  # R_MIPS_REL dtls1_enc
                Elf32_Rel <0x58C30, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x58CA4, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x58D18, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x58D8C, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x58E00, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x58E74, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x58EE8, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x58F5C, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x58FD0, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x59044, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x590B8, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x5912C, 0x30D03>  # R_MIPS_REL tls1_free
                Elf32_Rel <0x591CC, 0x30E03>  # R_MIPS_REL dtls1_write_app_data_bytes
                Elf32_Rel <0x59240, 0x30E03>  # R_MIPS_REL dtls1_write_app_data_bytes
                Elf32_Rel <0x592B4, 0x30E03>  # R_MIPS_REL dtls1_write_app_data_bytes
                Elf32_Rel <0x5A140, 0x30F03>  # R_MIPS_REL ssl3_change_cipher_state
                Elf32_Rel <0x589BC, 0x31003>  # R_MIPS_REL ssl2_pending
                Elf32_Rel <0x58A30, 0x31003>  # R_MIPS_REL ssl2_pending
                Elf32_Rel <0x58AA4, 0x31003>  # R_MIPS_REL ssl2_pending
                Elf32_Rel <0x58994, 0x31103>  # R_MIPS_REL ssl_ok
                Elf32_Rel <0x58998, 0x31103>  # R_MIPS_REL ssl_ok
                Elf32_Rel <0x58A08, 0x31103>  # R_MIPS_REL ssl_ok
                Elf32_Rel <0x58A0C, 0x31103>  # R_MIPS_REL ssl_ok
                Elf32_Rel <0x58A7C, 0x31103>  # R_MIPS_REL ssl_ok
                Elf32_Rel <0x58A80, 0x31103>  # R_MIPS_REL ssl_ok
                Elf32_Rel <0x58C50, 0x31103>  # R_MIPS_REL ssl_ok
                Elf32_Rel <0x58CC4, 0x31103>  # R_MIPS_REL ssl_ok
                Elf32_Rel <0x58D38, 0x31103>  # R_MIPS_REL ssl_ok
                Elf32_Rel <0x58AE4, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x58B58, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x58BCC, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x58D9C, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x58E10, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x58E84, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x58EF8, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x58F6C, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x58FE0, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x59054, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x590C8, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x5913C, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x591B0, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x59224, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x59298, 0x31203>  # R_MIPS_REL ssl3_peek
                Elf32_Rel <0x58C78, 0x31303>  # R_MIPS_REL ssl23_num_ciphers
                Elf32_Rel <0x58CEC, 0x31303>  # R_MIPS_REL ssl23_num_ciphers
                Elf32_Rel <0x58D60, 0x31303>  # R_MIPS_REL ssl23_num_ciphers
                Elf32_Rel <0x58C3C, 0x31403>  # R_MIPS_REL ssl23_read
                Elf32_Rel <0x58CB0, 0x31403>  # R_MIPS_REL ssl23_read
                Elf32_Rel <0x58D24, 0x31403>  # R_MIPS_REL ssl23_read
                Elf32_Rel <0x591D0, 0x31503>  # R_MIPS_REL dtls1_dispatch_alert
                Elf32_Rel <0x59244, 0x31503>  # R_MIPS_REL dtls1_dispatch_alert
                Elf32_Rel <0x592B8, 0x31503>  # R_MIPS_REL dtls1_dispatch_alert
                Elf32_Rel <0x591D4, 0x31603>  # R_MIPS_REL dtls1_ctrl
                Elf32_Rel <0x59248, 0x31603>  # R_MIPS_REL dtls1_ctrl
                Elf32_Rel <0x592BC, 0x31603>  # R_MIPS_REL dtls1_ctrl
                Elf32_Rel <0x58C38, 0x31703>  # R_MIPS_REL ssl23_connect
                Elf32_Rel <0x58D20, 0x31703>  # R_MIPS_REL ssl23_connect
                Elf32_Rel <0x58990, 0x31803>  # R_MIPS_REL ssl2_shutdown
                Elf32_Rel <0x58A04, 0x31803>  # R_MIPS_REL ssl2_shutdown
                Elf32_Rel <0x58A78, 0x31803>  # R_MIPS_REL ssl2_shutdown
                Elf32_Rel <0x5A13C, 0x31903>  # R_MIPS_REL ssl3_generate_master_secret
                Elf32_Rel <0x58C28, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x58C9C, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x58D10, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x58D84, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x58DF8, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x58E6C, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x58EE0, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x58F54, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x58FC8, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x5903C, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x590B0, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x59124, 0x31A03>  # R_MIPS_REL tls1_new
                Elf32_Rel <0x5A134, 0x31B03>  # R_MIPS_REL n_ssl3_mac
                Elf32_Rel <0x58DE4, 0x31C03>  # R_MIPS_REL TLSv1_enc_data
                Elf32_Rel <0x58E58, 0x31C03>  # R_MIPS_REL TLSv1_enc_data
                Elf32_Rel <0x58ECC, 0x31C03>  # R_MIPS_REL TLSv1_enc_data
                Elf32_Rel <0x58F40, 0x31C03>  # R_MIPS_REL TLSv1_enc_data
                Elf32_Rel <0x58FB4, 0x31C03>  # R_MIPS_REL TLSv1_enc_data
                Elf32_Rel <0x59028, 0x31C03>  # R_MIPS_REL TLSv1_enc_data
                Elf32_Rel <0x5909C, 0x31C03>  # R_MIPS_REL TLSv1_enc_data
                Elf32_Rel <0x59110, 0x31C03>  # R_MIPS_REL TLSv1_enc_data
                Elf32_Rel <0x59184, 0x31C03>  # R_MIPS_REL TLSv1_enc_data
                Elf32_Rel <0x58B04, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58B78, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58BEC, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58C60, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58CD4, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58D48, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58DBC, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58E30, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58EA4, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58F18, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x58F8C, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x59000, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x59074, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x590E8, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x5915C, 0x31D03>  # R_MIPS_REL ssl3_dispatch_alert
                Elf32_Rel <0x59198, 0x31E03>  # R_MIPS_REL dtls1_new
                Elf32_Rel <0x5920C, 0x31E03>  # R_MIPS_REL dtls1_new
                Elf32_Rel <0x59280, 0x31E03>  # R_MIPS_REL dtls1_new
                Elf32_Rel <0x5A1CC, 0x31F03>  # R_MIPS_REL tls1_mac
                Elf32_Rel <0x5A25C, 0x31F03>  # R_MIPS_REL tls1_mac
                Elf32_Rel <0x58AE8, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x58B5C, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x58BD0, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x58DA0, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x58E14, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x58E88, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x58EFC, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x58F70, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x58FE4, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x59058, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x590CC, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x59140, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x591B4, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x59228, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x5929C, 0x32003>  # R_MIPS_REL ssl3_write
                Elf32_Rel <0x589CC, 0x32103>  # R_MIPS_REL ssl2_default_timeout
                Elf32_Rel <0x58A40, 0x32103>  # R_MIPS_REL ssl2_default_timeout
                Elf32_Rel <0x58AB4, 0x32103>  # R_MIPS_REL ssl2_default_timeout
                Elf32_Rel <0x589DC, 0x32203>  # R_MIPS_REL ssl2_ctx_callback_ctrl
                Elf32_Rel <0x58A50, 0x32203>  # R_MIPS_REL ssl2_ctx_callback_ctrl
                Elf32_Rel <0x58AC4, 0x32203>  # R_MIPS_REL ssl2_ctx_callback_ctrl
                Elf32_Rel <0x5A1DC, 0x32303>  # R_MIPS_REL tls1_final_finish_mac
                Elf32_Rel <0x5A26C, 0x32303>  # R_MIPS_REL tls1_final_finish_mac
                Elf32_Rel <0x5A1FC, 0x32403>  # R_MIPS_REL tls1_export_keying_material
                Elf32_Rel <0x5A28C, 0x32403>  # R_MIPS_REL tls1_export_keying_material
                Elf32_Rel <0x58AFC, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58B70, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58BE4, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58C58, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58CCC, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58D40, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58DB4, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58E28, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58E9C, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58F10, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58F84, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x58FF8, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x5906C, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x590E0, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x59154, 0x32503>  # R_MIPS_REL ssl3_read_bytes
                Elf32_Rel <0x5A14C, 0x32603>  # R_MIPS_REL ssl3_cert_verify_mac
                Elf32_Rel <0x5A1D8, 0x32703>  # R_MIPS_REL tls1_change_cipher_state
                Elf32_Rel <0x5A268, 0x32703>  # R_MIPS_REL tls1_change_cipher_state
                Elf32_Rel <0x589D0, 0x32803>  # R_MIPS_REL ssl3_undef_enc_method
                Elf32_Rel <0x58A44, 0x32803>  # R_MIPS_REL ssl3_undef_enc_method
                Elf32_Rel <0x58AB8, 0x32803>  # R_MIPS_REL ssl3_undef_enc_method
                Elf32_Rel <0x58C88, 0x32803>  # R_MIPS_REL ssl3_undef_enc_method
                Elf32_Rel <0x58CFC, 0x32803>  # R_MIPS_REL ssl3_undef_enc_method
                Elf32_Rel <0x58D70, 0x32803>  # R_MIPS_REL ssl3_undef_enc_method
                Elf32_Rel <0x5A144, 0x32903>  # R_MIPS_REL ssl3_final_finish_mac
                Elf32_Rel <0x5A1D4, 0x32A03>  # R_MIPS_REL tls1_generate_master_secret
                Elf32_Rel <0x5A264, 0x32A03>  # R_MIPS_REL tls1_generate_master_secret
                Elf32_Rel <0x591B8, 0x32B03>  # R_MIPS_REL dtls1_shutdown
                Elf32_Rel <0x5922C, 0x32B03>  # R_MIPS_REL dtls1_shutdown
                Elf32_Rel <0x592A0, 0x32B03>  # R_MIPS_REL dtls1_shutdown
                Elf32_Rel <0x589B0, 0x32C03>  # R_MIPS_REL ssl2_ctx_ctrl
                Elf32_Rel <0x58A24, 0x32C03>  # R_MIPS_REL ssl2_ctx_ctrl
                Elf32_Rel <0x58A98, 0x32C03>  # R_MIPS_REL ssl2_ctx_ctrl
                Elf32_Rel <0x58C34, 0x32D03>  # R_MIPS_REL ssl23_accept
                Elf32_Rel <0x58CA8, 0x32D03>  # R_MIPS_REL ssl23_accept
                Elf32_Rel <0x591F8, 0x32E03>  # R_MIPS_REL DTLSv1_enc_data
                Elf32_Rel <0x5926C, 0x32E03>  # R_MIPS_REL DTLSv1_enc_data
                Elf32_Rel <0x592E0, 0x32E03>  # R_MIPS_REL DTLSv1_enc_data
                Elf32_Rel <0x58B2C, 0x32F03>  # R_MIPS_REL SSLv3_enc_data
                Elf32_Rel <0x58BA0, 0x32F03>  # R_MIPS_REL SSLv3_enc_data
                Elf32_Rel <0x58C14, 0x32F03>  # R_MIPS_REL SSLv3_enc_data
                Elf32_Rel <0x58AE0, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x58B54, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x58BC8, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x58D98, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x58E0C, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x58E80, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x58EF4, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x58F68, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x58FDC, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x59050, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x590C4, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x59138, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x591AC, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x59220, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x59294, 0x33003>  # R_MIPS_REL ssl3_read
                Elf32_Rel <0x58988, 0x33103>  # R_MIPS_REL ssl2_peek
                Elf32_Rel <0x589FC, 0x33103>  # R_MIPS_REL ssl2_peek
                Elf32_Rel <0x58A70, 0x33103>  # R_MIPS_REL ssl2_peek
                Elf32_Rel <0x589AC, 0x33203>  # R_MIPS_REL ssl2_ctrl
                Elf32_Rel <0x58A20, 0x33203>  # R_MIPS_REL ssl2_ctrl
                Elf32_Rel <0x58A94, 0x33203>  # R_MIPS_REL ssl2_ctrl
                Elf32_Rel <0x58978, 0x33303>  # R_MIPS_REL ssl2_free
                Elf32_Rel <0x589EC, 0x33303>  # R_MIPS_REL ssl2_free
                Elf32_Rel <0x58A60, 0x33303>  # R_MIPS_REL ssl2_free
                Elf32_Rel <0x591A0, 0x33403>  # R_MIPS_REL dtls1_free
                Elf32_Rel <0x59214, 0x33403>  # R_MIPS_REL dtls1_free
                Elf32_Rel <0x59288, 0x33403>  # R_MIPS_REL dtls1_free
                Elf32_Rel <0x58B28, 0x33503>  # R_MIPS_REL ssl3_default_timeout
                Elf32_Rel <0x58B9C, 0x33503>  # R_MIPS_REL ssl3_default_timeout
                Elf32_Rel <0x58C10, 0x33503>  # R_MIPS_REL ssl3_default_timeout
                Elf32_Rel <0x58DE0, 0x33603>  # R_MIPS_REL tls1_default_timeout
                Elf32_Rel <0x58E54, 0x33603>  # R_MIPS_REL tls1_default_timeout
                Elf32_Rel <0x58EC8, 0x33603>  # R_MIPS_REL tls1_default_timeout
                Elf32_Rel <0x58F3C, 0x33603>  # R_MIPS_REL tls1_default_timeout
                Elf32_Rel <0x58FB0, 0x33603>  # R_MIPS_REL tls1_default_timeout
                Elf32_Rel <0x59024, 0x33603>  # R_MIPS_REL tls1_default_timeout
                Elf32_Rel <0x59098, 0x33603>  # R_MIPS_REL tls1_default_timeout
                Elf32_Rel <0x5910C, 0x33603>  # R_MIPS_REL tls1_default_timeout
                Elf32_Rel <0x59180, 0x33603>  # R_MIPS_REL tls1_default_timeout
                Elf32_Rel <0x58C70, 0x33703>  # R_MIPS_REL ssl23_put_cipher_by_char
                Elf32_Rel <0x58CE4, 0x33703>  # R_MIPS_REL ssl23_put_cipher_by_char
                Elf32_Rel <0x58D58, 0x33703>  # R_MIPS_REL ssl23_put_cipher_by_char
                Elf32_Rel <0x589D8, 0x33803>  # R_MIPS_REL ssl2_callback_ctrl
                Elf32_Rel <0x58A4C, 0x33803>  # R_MIPS_REL ssl2_callback_ctrl
                Elf32_Rel <0x58AC0, 0x33803>  # R_MIPS_REL ssl2_callback_ctrl
                Elf32_Rel <0x58B34, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58BA8, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58C1C, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58C90, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58D04, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58D78, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58DEC, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58E60, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58ED4, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58F48, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x58FBC, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x59030, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x590A4, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x59118, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x5918C, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x59200, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x59274, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x592E8, 0x33903>  # R_MIPS_REL ssl3_callback_ctrl
                Elf32_Rel <0x5919C, 0x33A03>  # R_MIPS_REL dtls1_clear
                Elf32_Rel <0x59210, 0x33A03>  # R_MIPS_REL dtls1_clear
                Elf32_Rel <0x59284, 0x33A03>  # R_MIPS_REL dtls1_clear
                Elf32_Rel <0x5A138, 0x33B03>  # R_MIPS_REL ssl3_setup_key_block
                Elf32_Rel <0x58C7C, 0x33C03>  # R_MIPS_REL ssl23_get_cipher
                Elf32_Rel <0x58CF0, 0x33C03>  # R_MIPS_REL ssl23_get_cipher
                Elf32_Rel <0x58D64, 0x33C03>  # R_MIPS_REL ssl23_get_cipher
                Elf32_Rel <0x5A160, 0x33D03>  # R_MIPS_REL ssl3_alert_code
                Elf32_Rel <0x58AF8, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58B6C, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58BE0, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58C54, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58CC8, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58D3C, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58DB0, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58E24, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58E98, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58F0C, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58F80, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x58FF4, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x59068, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x590DC, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x59150, 0x33E03>  # R_MIPS_REL ssl3_get_message
                Elf32_Rel <0x591EC, 0x33F03>  # R_MIPS_REL dtls1_get_cipher
                Elf32_Rel <0x59260, 0x33F03>  # R_MIPS_REL dtls1_get_cipher
                Elf32_Rel <0x592D4, 0x33F03>  # R_MIPS_REL dtls1_get_cipher
                Elf32_Rel <0x591F4, 0x34003>  # R_MIPS_REL dtls1_default_timeout
                Elf32_Rel <0x59268, 0x34003>  # R_MIPS_REL dtls1_default_timeout
                Elf32_Rel <0x592DC, 0x34003>  # R_MIPS_REL dtls1_default_timeout
                Elf32_Rel <0x58C2C, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x58CA0, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x58D14, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x58D88, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x58DFC, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x58E70, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x58EE4, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x58F58, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x58FCC, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x59040, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x590B4, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x59128, 0x34103>  # R_MIPS_REL tls1_clear
                Elf32_Rel <0x58C84, 0x34203>  # R_MIPS_REL ssl23_default_timeout
                Elf32_Rel <0x58CF8, 0x34203>  # R_MIPS_REL ssl23_default_timeout
                Elf32_Rel <0x58D6C, 0x34203>  # R_MIPS_REL ssl23_default_timeout
                Elf32_Rel <0x589B8, 0x34303>  # R_MIPS_REL ssl2_put_cipher_by_char
                Elf32_Rel <0x58A2C, 0x34303>  # R_MIPS_REL ssl2_put_cipher_by_char
                Elf32_Rel <0x58AA0, 0x34303>  # R_MIPS_REL ssl2_put_cipher_by_char
                Elf32_Rel <0x5A130, 0x34403>  # R_MIPS_REL ssl3_enc
                Elf32_Rel <0x591C4, 0x34503>  # R_MIPS_REL dtls1_get_message
                Elf32_Rel <0x59238, 0x34503>  # R_MIPS_REL dtls1_get_message
                Elf32_Rel <0x592AC, 0x34503>  # R_MIPS_REL dtls1_get_message
                Elf32_Rel <0x58C40, 0x34603>  # R_MIPS_REL ssl23_peek
                Elf32_Rel <0x58CB4, 0x34603>  # R_MIPS_REL ssl23_peek
                Elf32_Rel <0x58D28, 0x34603>  # R_MIPS_REL ssl23_peek
                Elf32_Rel <0x589D4, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58A48, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58ABC, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58B30, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58BA4, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58C18, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58C8C, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58D00, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58D74, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58DE8, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58E5C, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58ED0, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58F44, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58FB8, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x5902C, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x590A0, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x59114, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x59188, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x591FC, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x59270, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x592E4, 0x34703>  # R_MIPS_REL ssl_undefined_void_function
                Elf32_Rel <0x58C44, 0x34803>  # R_MIPS_REL ssl23_write
                Elf32_Rel <0x58CB8, 0x34803>  # R_MIPS_REL ssl23_write
                Elf32_Rel <0x58D2C, 0x34803>  # R_MIPS_REL ssl23_write
                Elf32_Rel <0x5A1C8, 0x34903>  # R_MIPS_REL tls1_enc
                Elf32_Rel <0x5A1D0, 0x34A03>  # R_MIPS_REL tls1_setup_key_block
                Elf32_Rel <0x5A260, 0x34A03>  # R_MIPS_REL tls1_setup_key_block
                Elf32_Rel <0x591C8, 0x34B03>  # R_MIPS_REL dtls1_read_bytes
                Elf32_Rel <0x5923C, 0x34B03>  # R_MIPS_REL dtls1_read_bytes
                Elf32_Rel <0x592B0, 0x34B03>  # R_MIPS_REL dtls1_read_bytes

 # ===========================================================================

 # Segment type: Pure code
                .text

 # =============== S U B R O U T I N E =======================================


                .globl _ftext
_ftext:                                  # CODE XREF: sub_A1DC+24↓j
                                         # sub_1F0C8+5C↓j
                                         # DATA XREF: ...
                la      $gp, (off_5A360+0x7FF0 - _ftext)  # Alternative name is '_ftext'
                                         # SSLv2_method
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_5896C - 0x60000)
 # End of function _ftext


 # =============== S U B R O U T I N E =======================================


sub_A1DC:                                # DATA XREF: .data.rel.ro:000589C8↓o
                la      $gp, (off_5A360+0x7FF0 - sub_A1DC)
                addu    $gp, $t9
                li      $v0, 2
                beq     $a0, $v0, loc_A1FC
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_A1FC:                                # CODE XREF: sub_A1DC+10↑j
                la      $t9, _ftext
                jr      $t9 ; _ftext
                nop
 # End of function sub_A1DC


 # =============== S U B R O U T I N E =======================================


                .globl SSLv2_server_method
SSLv2_server_method:                     # CODE XREF: sub_A220+24↓j
                                         # sub_1F15C+5C↓j ...
                la      $gp, (off_5A360+0x7FF0 - SSLv2_server_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_589E0 - 0x60000)
 # End of function SSLv2_server_method


 # =============== S U B R O U T I N E =======================================


sub_A220:                                # DATA XREF: .data.rel.ro:00058A3C↓o
                la      $gp, (off_5A360+0x7FF0 - sub_A220)
                addu    $gp, $t9
                li      $v0, 2
                beq     $a0, $v0, loc_A240
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_A240:                                # CODE XREF: sub_A220+10↑j
                la      $t9, SSLv2_server_method
                jr      $t9 ; SSLv2_server_method
                nop
 # End of function sub_A220


 # =============== S U B R O U T I N E =======================================


sub_A24C:                                # CODE XREF: ssl2_accept+2FC↓p
                                         # DATA XREF: ssl2_accept+2F8↓o

var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_48          = -0x48
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_A24C)
                addu    $gp, $t9
                addiu   $sp, -0x68
                sw      $ra, 0x68+var_8($sp)
                sw      $s5, 0x68+var_C($sp)
                sw      $s4, 0x68+var_10($sp)
                sw      $s3, 0x68+var_14($sp)
                sw      $s2, 0x68+var_18($sp)
                sw      $s1, 0x68+var_1C($sp)
                sw      $s0, 0x68+var_20($sp)
                sw      $gp, 0x68+var_48($sp)
                move    $s3, $a0
                lw      $v1, 0x34($s3)
                lw      $a0, 0x54($a0)
                li      $v0, 0x2070
                beq     $v1, $v0, loc_A858
                addiu   $s4, $a0, 0xF0

loc_A294:                                # CODE XREF: sub_A24C+690↓j
                li      $v0, 0x2071
                beq     $v1, $v0, loc_A434
                li      $v0, 0x2072
                beq     $v1, $v0, loc_A454
                nop
                lw      $a0, 0x54($s3)

loc_A2AC:                                # CODE XREF: sub_A24C+5CC↓j
                lw      $v1, 0x11C($a0)
                lw      $v0, 0x118($a0)
                lw      $a0, 0x3C($s3)
                addu    $v0, $v1
                addiu   $s1, $v0, 6
                sltiu   $v1, $s1, 0x4000
                bnez    $v1, loc_A340
                lw      $s2, 4($a0)
                la      $t9, ERR_put_error
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x71  # 'q'
                li      $a2, 0x128

loc_A2E0:                                # CODE XREF: sub_A24C+288↓j
                                         # sub_A24C+2E4↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x68+var_48($sp)
                li      $s0, 0xFFFFFFFF
                move    $s5, $zero
                move    $a0, $zero

loc_A2F8:                                # CODE XREF: sub_A24C+1E0↓j
                                         # sub_A24C+308↓j ...
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x68+var_48($sp)
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                move    $a0, $s5
                lw      $gp, 0x68+var_48($sp)

loc_A318:                                # CODE XREF: sub_A24C:loc_A8E4↓j
                move    $v0, $s0
                lw      $ra, 0x68+var_8($sp)
                lw      $s5, 0x68+var_C($sp)
                lw      $s4, 0x68+var_10($sp)
                lw      $s3, 0x68+var_14($sp)
                lw      $s2, 0x68+var_18($sp)
                lw      $s1, 0x68+var_1C($sp)
                lw      $s0, 0x68+var_20($sp)
                jr      $ra
                addiu   $sp, 0x68
 # ---------------------------------------------------------------------------

loc_A340:                                # CODE XREF: sub_A24C+78↑j
                lw      $a1, 0x44($s3)
                la      $t9, ssl2_read
                subu    $s0, $s1, $a1
                move    $a2, $s0
                addu    $a1, $s2
                jalr    $t9 ; ssl2_read
                move    $a0, $s3
                slt     $s0, $v0, $s0
                bnez    $s0, loc_A55C
                lw      $gp, 0x68+var_48($sp)
                lw      $t9, 0x64($s3)
                beqz    $t9, loc_A398
                move    $a0, $zero
                lw      $v0, 0x68($s3)
                lw      $a1, 0($s3)
                sw      $s1, 0x68+var_58($sp)
                sw      $v0, 0x68+var_50($sp)
                sw      $s3, 0x68+var_54($sp)
                move    $a2, $zero
                jalr    $t9
                move    $a3, $s2
                lw      $gp, 0x68+var_48($sp)

loc_A398:                                # CODE XREF: sub_A24C+120↑j
                lw      $v0, 0x54($s3)
                la      $t9, d2i_X509
                addiu   $v1, $s2, 6
                lw      $a2, 0x118($v0)
                sw      $v1, 0x68+var_40($sp)
                move    $a0, $zero
                jalr    $t9 ; d2i_X509
                addiu   $a1, $sp, 0x68+var_40
                move    $s5, $v0
                beqz    $v0, loc_A570
                lw      $gp, 0x68+var_48($sp)
                la      $t9, sk_new_null
                jalr    $t9 ; sk_new_null
                nop
                move    $s1, $v0
                beqz    $v0, loc_A3F4
                lw      $gp, 0x68+var_48($sp)
                la      $t9, sk_push
                move    $a0, $v0
                jalr    $t9 ; sk_push
                move    $a1, $s5
                bnez    $v0, loc_A5E4
                lw      $gp, 0x68+var_48($sp)

loc_A3F4:                                # CODE XREF: sub_A24C+188↑j
                                         # sub_A24C+448↓j
                la      $t9, ERR_put_error
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x71  # 'q'
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x68+var_48($sp)

loc_A414:                                # CODE XREF: sub_A24C+344↓j
                                         # sub_A24C+3A8↓j ...
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                li      $a1, 4
                lw      $gp, 0x68+var_48($sp)
                move    $a0, $s1
                b       loc_A2F8
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_A434:                                # CODE XREF: sub_A24C+4C↑j
                la      $t9, ssl2_do_write
                jalr    $t9 ; ssl2_do_write
                move    $a0, $s3
                blez    $v0, loc_A7A0
                lw      $gp, 0x68+var_48($sp)
                li      $v0, 0x2072
                sw      $v0, 0x34($s3)
                sw      $zero, 0x44($s3)

loc_A454:                                # CODE XREF: sub_A24C+54↑j
                lw      $v0, 0x3C($s3)
                lw      $a1, 0x44($s3)
                lw      $s0, 4($v0)
                la      $t9, ssl2_read
                li      $a2, 6
                subu    $a2, $a1
                move    $a0, $s3
                jalr    $t9 ; ssl2_read
                addu    $a1, $s0
                lw      $v1, 0x44($s3)
                li      $a0, 3
                move    $a2, $v0
                subu    $v0, $a0, $v1
                slt     $v0, $a2, $v0
                bnez    $v0, loc_A538
                lw      $gp, 0x68+var_48($sp)
                addu    $a2, $v1
                slti    $v0, $a2, 3
                beqz    $v0, loc_A4DC
                sw      $a2, 0x44($s3)
                lbu     $v1, 0($s0)
                li      $v0, 8

loc_A4AC:                                # CODE XREF: sub_A24C+294↓j
                bne     $v1, $v0, loc_A510
                la      $t9, ssl2_return_error
                slti    $v0, $a2, 6
                bnez    $v0, loc_A510
                li      $v0, 6
                beq     $a2, $v0, loc_A7B0
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x71  # 'q'
                li      $a2, 0x44  # 'D'
                b       loc_A2E0
                sw      $zero, 0x68+var_58($sp)
 # ---------------------------------------------------------------------------

loc_A4DC:                                # CODE XREF: sub_A24C+250↑j
                lbu     $v1, 0($s0)
                bnez    $v1, loc_A4AC
                li      $v0, 8
                lbu     $v1, 1($s0)
                li      $v0, 2
                beq     $v1, $v0, loc_A598
                la      $t9, ssl2_part_read
                addiu   $v0, $a2, -3
                move    $a0, $s3
                li      $a1, 0x71  # 'q'
                li      $a2, 3
                b       loc_A544
                sw      $v0, 0x44($s3)
 # ---------------------------------------------------------------------------

loc_A510:                                # CODE XREF: sub_A24C:loc_A4AC↑j
                                         # sub_A24C+26C↑j
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x68+var_48($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x71  # 'q'
                li      $a2, 0xDB
                b       loc_A2E0
                sw      $zero, 0x68+var_58($sp)
 # ---------------------------------------------------------------------------

loc_A538:                                # CODE XREF: sub_A24C+240↑j
                la      $t9, ssl2_part_read
                move    $a0, $s3
                li      $a1, 0x71  # 'q'

loc_A544:                                # CODE XREF: sub_A24C+2BC↑j
                                         # sub_A24C+31C↓j
                jalr    $t9 ; ssl2_part_read
                move    $s5, $zero
                lw      $gp, 0x68+var_48($sp)
                move    $s0, $v0
                b       loc_A2F8
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_A55C:                                # CODE XREF: sub_A24C+114↑j
                la      $t9, ssl2_part_read
                move    $a0, $s3
                move    $a2, $v0
                b       loc_A544
                li      $a1, 0x71  # 'q'
 # ---------------------------------------------------------------------------

loc_A570:                                # CODE XREF: sub_A24C+170↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x71  # 'q'
                li      $a2, 0xB
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x68+var_48($sp)
                b       loc_A414
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_A598:                                # CODE XREF: sub_A24C+2A4↑j
                lw      $t9, 0x64($s3)
                beqz    $t9, loc_A5C8
                addiu   $a3, $s0, 2
                lw      $v0, 0x68($s3)
                lw      $a1, 0($s3)
                sw      $a0, 0x68+var_58($sp)
                sw      $v0, 0x68+var_50($sp)
                sw      $s3, 0x68+var_54($sp)
                move    $a0, $zero
                jalr    $t9
                move    $a2, $zero
                lw      $gp, 0x68+var_48($sp)

loc_A5C8:                                # CODE XREF: sub_A24C+350↑j
                lw      $v0, 0xC8($s3)
                andi    $v0, 2
                bnez    $v0, loc_A820
                li      $s0, 1
                move    $s5, $zero
                b       loc_A2F8
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_A5E4:                                # CODE XREF: sub_A24C+1A0↑j
                la      $t9, ssl_verify_cert_chain
                move    $a0, $s3
                jalr    $t9 ; ssl_verify_cert_chain
                move    $a1, $s1
                blez    $v0, loc_A414
                lw      $gp, 0x68+var_48($sp)
                addiu   $s2, $sp, 0x68+var_38
                la      $t9, EVP_MD_CTX_init
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s2
                lw      $gp, 0x68+var_48($sp)
                lw      $v0, 0xDC($s3)
                lw      $a1, 0x88($v0)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0x68+var_48($sp)
                lw      $a1, 0x54($s3)
                lw      $a2, 0x9C($a1)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, 0xA0
                lw      $gp, 0x68+var_48($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s4
                li      $a2, 0x10
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s2
                lw      $gp, 0x68+var_48($sp)
                lw      $v1, 0x98($s3)
                lw      $a0, 0x20($v1)
                la      $t9, i2d_X509
                la      $s4, loc_40000
                jalr    $t9 ; i2d_X509
                move    $a1, $zero
                lw      $gp, 0x68+var_48($sp)
                la      $t9, CRYPTO_malloc
                move    $a0, $v0
                addiu   $a1, $s4, (aS2SrvrC - 0x40000)  # "s2_srvr.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x42C
                move    $s0, $v0
                beqz    $v0, loc_A3F4
                lw      $gp, 0x68+var_48($sp)
                lw      $v0, 0x98($s3)
                la      $t9, i2d_X509
                lw      $a0, 0x20($v0)
                sw      $s0, 0x68+var_3C($sp)
                jalr    $t9 ; i2d_X509
                addiu   $a1, $sp, 0x68+var_3C
                lw      $gp, 0x68+var_48($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s0
                move    $a2, $v0
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s2
                lw      $gp, 0x68+var_48($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x68+var_48($sp)
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                move    $a0, $s5
                move    $s0, $v0
                beqz    $v0, loc_A84C
                lw      $gp, 0x68+var_48($sp)
                lw      $v0, 0x54($s3)
                la      $t9, EVP_VerifyFinal
                lw      $a1, 0x68+var_40($sp)
                lw      $a2, 0x11C($v0)
                move    $a3, $s0
                jalr    $t9 ; EVP_VerifyFinal
                move    $a0, $s2
                lw      $gp, 0x68+var_48($sp)
                la      $t9, EVP_PKEY_free
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_free
                move    $s0, $v0
                lw      $gp, 0x68+var_48($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s2
                blez    $s0, loc_A8EC
                lw      $gp, 0x68+var_48($sp)
                lw      $v0, 0xC0($s3)
                lw      $a0, 0x94($v0)
                beqz    $a0, loc_A760
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x68+var_48($sp)
                lw      $v0, 0xC0($s3)

loc_A760:                                # CODE XREF: sub_A24C+4FC↑j
                la      $t9, CRYPTO_add_lock
                sw      $s5, 0x94($v0)
                li      $v0, 0x442
                addiu   $a0, $s5, 0x10
                sw      $v0, 0x68+var_58($sp)
                addiu   $a3, $s4, (aS2SrvrC - 0x40000)  # "s2_srvr.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 3
                lw      $gp, 0x68+var_48($sp)
                lw      $v1, 0xE4($s3)
                lw      $v0, 0xC0($s3)
                move    $a0, $s1
                li      $s0, 1
                b       loc_A2F8
                sw      $v1, 0x98($v0)
 # ---------------------------------------------------------------------------

loc_A7A0:                                # CODE XREF: sub_A24C+1F4↑j
                move    $s0, $v0
                move    $s5, $zero
                b       loc_A2F8
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_A7B0:                                # CODE XREF: sub_A24C+274↑j
                lbu     $v1, 1($s0)
                li      $v0, 1
                beq     $v1, $v0, loc_A7E8
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                li      $a1, 6
                lw      $gp, 0x68+var_48($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x71  # 'q'
                li      $a2, 0x75  # 'u'
                b       loc_A2E0
                sw      $zero, 0x68+var_58($sp)
 # ---------------------------------------------------------------------------

loc_A7E8:                                # CODE XREF: sub_A24C+56C↑j
                lbu     $v0, 2($s0)
                lbu     $v1, 3($s0)
                sll     $v0, 8
                lw      $a0, 0x54($s3)
                or      $v1, $v0
                sw      $v1, 0x118($a0)
                lbu     $v0, 4($s0)
                lbu     $v1, 5($s0)
                sll     $v0, 8
                or      $v1, $v0
                li      $v0, 0x2073
                sw      $v1, 0x11C($a0)
                b       loc_A2AC
                sw      $v0, 0x34($s3)
 # ---------------------------------------------------------------------------

loc_A820:                                # CODE XREF: sub_A24C+384↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                li      $a1, 4
                lw      $gp, 0x68+var_48($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x71  # 'q'
                li      $a2, 0xC7
                b       loc_A2E0
                sw      $zero, 0x68+var_58($sp)
 # ---------------------------------------------------------------------------

loc_A84C:                                # CODE XREF: sub_A24C+4A4↑j
                move    $a0, $s1
                b       loc_A2F8
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_A858:                                # CODE XREF: sub_A24C+40↑j
                lw      $v1, 0x3C($s3)
                la      $t9, RAND_pseudo_bytes
                lw      $s0, 4($v1)
                li      $v0, 7
                li      $v1, 1
                sb      $v0, 0($s0)
                sb      $v1, 1($s0)
                move    $a0, $s4
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                blez    $v0, loc_A8E4
                lw      $gp, 0x68+var_48($sp)
                lwl     $v1, 3($s4)
                lwl     $a0, 7($s4)
                lwr     $v1, 0($s4)
                lwl     $a1, 0xB($s4)
                lwl     $a2, 0xF($s4)
                addiu   $v0, $s0, 2
                lwr     $a0, 4($s4)
                lwr     $a1, 8($s4)
                lwr     $a2, 0xC($s4)
                usw     $v1, 0($v0)
                usw     $a0, 4($v0)
                usw     $a1, 8($v0)
                swl     $a2, 0xF($v0)
                li      $v1, 0x2071
                swr     $a2, 0xC($v0)
                li      $v0, 0x12
                sw      $v1, 0x34($s3)
                sw      $v0, 0x44($s3)
                b       loc_A294
                sw      $zero, 0x48($s3)
 # ---------------------------------------------------------------------------

loc_A8E4:                                # CODE XREF: sub_A24C+634↑j
                b       loc_A318
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_A8EC:                                # CODE XREF: sub_A24C+4EC↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x71  # 'q'
                li      $a2, 0x68  # 'h'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_A414
                lw      $gp, 0x68+var_48($sp)
 # End of function sub_A24C


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_accept
ssl2_accept:                             # DATA XREF: LOAD:000038F8↑o
                                         # ssl2_accept+65C↓o ...

var_60          = -0x60
var_5C          = -0x5C
var_58          = -0x58
var_50          = -0x50
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x57A40
                addu    $gp, $t9
                addiu   $sp, -0x70
                sw      $ra, 0x70+var_4($sp)
                sw      $fp, 0x70+var_8($sp)
                sw      $s7, 0x70+var_C($sp)
                sw      $s6, 0x70+var_10($sp)
                sw      $s5, 0x70+var_14($sp)
                sw      $s4, 0x70+var_18($sp)
                sw      $s3, 0x70+var_1C($sp)
                sw      $s2, 0x70+var_20($sp)
                sw      $s1, 0x70+var_24($sp)
                sw      $s0, 0x70+var_28($sp)
                sw      $gp, 0x70+var_50($sp)
                la      $t9, time
                move    $s2, $a0
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, RAND_add
                sw      $v0, 0x70+var_48($sp)
                addiu   $a0, $sp, 0x70+var_48
                li      $a1, 4
                move    $a2, $zero
                jalr    $t9 ; RAND_add
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x70+var_50($sp)
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $s6, 0xD0($s2)
                lw      $gp, 0x70+var_50($sp)
                move    $s0, $v0
                beqz    $s6, loc_B494
                sw      $zero, 0($v0)

loc_A9B0:                                # CODE XREF: ssl2_accept+B88↓j
                lw      $v0, 0x1C($s2)
                la      $t9, SSL_state
                addiu   $v0, 1
                sw      $v0, 0x1C($s2)
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x3000
                beqz    $v0, loc_AAF8
                lw      $gp, 0x70+var_50($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x4000
                bnez    $v0, loc_AAF8
                lw      $gp, 0x70+var_50($sp)

loc_A9EC:                                # CODE XREF: ssl2_accept+1F4↓j
                lw      $v0, 0x98($s2)
                beqz    $v0, loc_BB54
                addiu   $v0, $sp, 0x70+var_44
                sw      $zero, 0($s0)
                lw      $s4, 0x34($s2)
                sw      $v0, 0x70+var_38($sp)
                addiu   $t9, $sp, 0x70+var_40
                addiu   $v0, $sp, 0x70+var_3C
                slti    $s7, $s4, 0x2042
                sw      $t9, 0x70+var_34($sp)
                sw      $v0, 0x70+var_30($sp)

loc_AA18:                                # CODE XREF: ssl2_accept+160↓j
                                         # ssl2_accept+1E0↓j
                beqz    $s7, loc_AAA4
                slti    $v0, $s4, 0x2062

loc_AA20:                                # CODE XREF: ssl2_accept+188↓j
                slti    $v0, $s4, 0x2040
                bnez    $v0, loc_AB0C
                slti    $v0, $s4, 0x2013
                li      $v0, 0x2040
                beq     $s4, $v0, loc_B05C
                li      $v1, 5

loc_AA38:                                # CODE XREF: ssl2_accept+798↓j
                la      $t9, ssl2_do_write
                jalr    $t9 ; ssl2_do_write
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_AC68
                lw      $gp, 0x70+var_50($sp)
                lw      $v0, 0x6C($s2)
                beqz    $v0, loc_B33C
                sw      $zero, 0x44($s2)
                li      $v0, 0x2042
                sw      $v0, 0x34($s2)

loc_AA64:                                # CODE XREF: ssl2_accept+2A4↓j
                                         # ssl2_accept+318↓j ...
                beqz    $s6, loc_AAEC
                nop

loc_AA6C:                                # CODE XREF: ssl2_accept+1D4↓j
                lw      $s0, 0x34($s2)
                beq     $s4, $s0, loc_AA18
                li      $a1, 0x2001
                sw      $s4, 0x34($s2)
                move    $a0, $s2
                li      $a2, 1
                move    $t9, $s6
                jalr    $t9
                slti    $s7, $s0, 0x2042
                move    $s4, $s0
                lw      $gp, 0x70+var_50($sp)
                bnez    $s7, loc_AA20
                sw      $s0, 0x34($s2)
                slti    $v0, $s4, 0x2062

loc_AAA4:                                # CODE XREF: ssl2_accept:loc_AA18↑j
                beqz    $v0, loc_ABBC
                li      $v0, 0x2080
                slti    $v0, $s4, 0x2060
                bnez    $v0, loc_AC30
                li      $v0, 0x2042
                li      $v0, 0x2060
                beq     $s4, $v0, loc_B008
                li      $v1, 6

loc_AAC4:                                # CODE XREF: ssl2_accept+744↓j
                la      $t9, ssl2_do_write
                jalr    $t9 ; ssl2_do_write
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_AC68
                lw      $gp, 0x70+var_50($sp)
                li      $v0, 3
                sw      $v0, 0x34($s2)
                bnez    $s6, loc_AA6C
                sw      $zero, 0x44($s2)

loc_AAEC:                                # CODE XREF: ssl2_accept:loc_AA64↑j
                lw      $s4, 0x34($s2)
                b       loc_AA18
                slti    $s7, $s4, 0x2042
 # ---------------------------------------------------------------------------

loc_AAF8:                                # CODE XREF: ssl2_accept+BC↑j
                                         # ssl2_accept+D4↑j
                la      $t9, SSL_clear
                jalr    $t9 ; SSL_clear
                move    $a0, $s2
                b       loc_A9EC
                lw      $gp, 0x70+var_50($sp)
 # ---------------------------------------------------------------------------

loc_AB0C:                                # CODE XREF: ssl2_accept+114↑j
                beqz    $v0, loc_ACC4
                slti    $v0, $s4, 0x2020
                slti    $v0, $s4, 0x2010
                bnez    $v0, loc_AF78
                li      $v0, 0x2000
                lw      $a0, 0x34($s2)
                li      $v0, 0x2010
                beq     $a0, $v0, loc_B25C
                sw      $zero, 0x30($s2)
                lw      $v0, 0x3C($s2)
                li      $v1, 0x2011
                beq     $a0, $v1, loc_B274
                lw      $s3, 4($v0)
                lw      $a1, 0x54($s2)

loc_AB44:                                # CODE XREF: ssl2_accept+A24↓j
                lw      $v1, 0x64($a1)
                lw      $v0, 0x110($a1)
                lw      $a0, 0x114($a1)
                addu    $v0, $v1
                addiu   $v0, 9
                addu    $s1, $v0, $a0
                sltiu   $v1, $s1, 0x4000
                beqz    $v1, loc_BAAC
                la      $t9, ssl2_return_error
                lw      $a1, 0x44($s2)
                la      $t9, ssl2_read
                subu    $s0, $s1, $a1
                move    $a0, $s2
                addu    $a1, $s3
                jalr    $t9 ; ssl2_read
                move    $a2, $s0
                beq     $s0, $v0, loc_B354
                lw      $gp, 0x70+var_50($sp)

loc_AB8C:                                # CODE XREF: ssl2_accept+98C↓j
                la      $t9, ssl2_part_read
                move    $a2, $v0
                move    $a0, $s2
                jalr    $t9 ; ssl2_part_read
                li      $a1, 0x6A  # 'j'
                move    $s0, $v0
                blez    $v0, loc_AC68
                lw      $gp, 0x70+var_50($sp)

loc_ABAC:                                # CODE XREF: ssl2_accept+B24↓j
                li      $v0, 0x2020
                sw      $v0, 0x34($s2)
                b       loc_AA64
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_ABBC:                                # CODE XREF: ssl2_accept:loc_AAA4↑j
                beq     $s4, $v0, loc_B228
                slti    $v0, $s4, 0x2081
                beqz    $v0, loc_AEE8
                li      $v0, 0x4000
                addiu   $v0, $s4, -0x2070
                sltiu   $v0, 4
                beqz    $v0, loc_AC48
                la      $t9, ERR_put_error
                lw      $a0, 0xC8($s2)
                andi    $v0, $a0, 1
                beqz    $v0, loc_B254
                li      $v0, 0x2060
                lw      $v0, 0xC0($s2)
                lw      $v1, 0x94($v0)
                beqz    $v1, loc_AC04
                andi    $v0, $a0, 4
                bnez    $v0, loc_B254
                li      $v0, 0x2060

loc_AC04:                                # CODE XREF: ssl2_accept+2E4↑j
                la      $t9, loc_10000
                addiu   $t9, (sub_A24C - 0x10000)
                jalr    $t9 ; sub_A24C
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_AC68
                lw      $gp, 0x70+var_50($sp)
                li      $v0, 0x2060
                sw      $v0, 0x34($s2)
                b       loc_AA64
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_AC30:                                # CODE XREF: ssl2_accept+1A0↑j
                beq     $s4, $v0, loc_B0B0
                addiu   $v0, $s4, -0x2050
                sltiu   $v0, 2
                bnez    $v0, loc_B180
                li      $v1, 0x2050
                la      $t9, ERR_put_error

loc_AC48:                                # CODE XREF: ssl2_accept+2C4↑j
                                         # ssl2_accept:loc_ACC4↓j ...
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x7A  # 'z'
                li      $a2, 0xFF

loc_AC58:                                # CODE XREF: ssl2_accept+1134↓j
                                         # ssl2_accept+1158↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                li      $s0, 0xFFFFFFFF

loc_AC68:                                # CODE XREF: ssl2_accept+138↑j
                                         # ssl2_accept+1C4↑j ...
                lw      $v0, 0x1C($s2)

loc_AC6C:                                # CODE XREF: ssl2_accept+B7C↓j
                                         # ssl2_accept+C24↓j ...
                addiu   $v0, -1
                beqz    $s6, loc_AC90
                sw      $v0, 0x1C($s2)

loc_AC78:                                # CODE XREF: ssl2_accept+6F0↓j
                move    $a0, $s2
                li      $a1, 0x2002
                move    $t9, $s6
                jalr    $t9
                move    $a2, $s0
                lw      $gp, 0x70+var_50($sp)

loc_AC90:                                # CODE XREF: ssl2_accept+360↑j
                                         # ssl2_accept+1264↓j
                move    $v0, $s0
                lw      $ra, 0x70+var_4($sp)
                lw      $fp, 0x70+var_8($sp)
                lw      $s7, 0x70+var_C($sp)
                lw      $s6, 0x70+var_10($sp)
                lw      $s5, 0x70+var_14($sp)
                lw      $s4, 0x70+var_18($sp)
                lw      $s3, 0x70+var_1C($sp)
                lw      $s2, 0x70+var_20($sp)
                lw      $s1, 0x70+var_24($sp)
                lw      $s0, 0x70+var_28($sp)
                jr      $ra
                addiu   $sp, 0x70
 # ---------------------------------------------------------------------------

loc_ACC4:                                # CODE XREF: ssl2_accept:loc_AB0C↑j
                bnez    $v0, loc_AC48
                la      $t9, ERR_put_error
                slti    $v0, $s4, 0x2022
                bnez    $v0, loc_B120
                li      $v1, 0x2020
                addiu   $v0, $s4, -0x2030
                sltiu   $v0, 2
                beqz    $v0, loc_AC48
                li      $v0, 0x2030
                lw      $v1, 0x3C($s2)
                beq     $s4, $v0, loc_B43C
                lw      $s3, 4($v1)

loc_ACF4:                                # CODE XREF: ssl2_accept+EDC↓j
                lw      $v0, 0($v1)
                sltiu   $v0, 0x3FFF
                bnez    $v0, loc_BA24
                la      $t9, ssl2_return_error
                lw      $a0, 0x54($s2)
                lw      $v1, 0xC0($s2)
                lw      $v0, 0xE8($a0)
                lw      $s5, 4($v1)
                lw      $a1, 0xEC($a0)
                addu    $v0, $s5, $v0
                addiu   $v0, 0xA
                addu    $s1, $v0, $a1
                sltiu   $v1, $s1, 0x4000
                beqz    $v1, loc_BA4C
                move    $a0, $s2
                lw      $a1, 0x44($s2)
                la      $t9, ssl2_read
                subu    $s0, $s1, $a1
                addu    $a1, $s3
                jalr    $t9 ; ssl2_read
                move    $a2, $s0
                bne     $s0, $v0, loc_B46C
                lw      $gp, 0x70+var_50($sp)
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_AD80
                move    $a0, $zero
                lw      $v0, 0x68($s2)
                lw      $a1, 0($s2)
                sw      $s1, 0x70+var_60($sp)
                sw      $v0, 0x70+var_58($sp)
                sw      $s2, 0x70+var_5C($sp)
                move    $a2, $zero
                jalr    $t9
                move    $a3, $s3
                lw      $gp, 0x70+var_50($sp)

loc_AD80:                                # CODE XREF: ssl2_accept+444↑j
                lw      $v0, 0x54($s2)
                lw      $a0, 0xC0($s2)
                lw      $v1, 0xE8($v0)
                lw      $a1, 0xEC($v0)
                la      $t9, memcpy
                addu    $a1, $v1
                addiu   $fp, $s3, 0xA
                move    $a2, $s5
                addiu   $a0, 8
                jalr    $t9 ; memcpy
                addu    $a1, $fp
                lw      $v1, 0x98($s2)
                lw      $a2, 0x24($v1)
                beqz    $a2, loc_BB7C
                lw      $gp, 0x70+var_50($sp)
                lw      $v1, 0x54($s2)
                li      $v0, 1
                lw      $a0, 0xC($v1)
                li      $t0, 2
                lw      $a1, 0($a2)
                movz    $t0, $v0, $a0
                li      $v0, 6
                lw      $a0, 0xEC($v1)
                beq     $a1, $v0, loc_B6A0
                lw      $v1, 0xE8($v1)
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0xBB
                li      $a2, 0xD1
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                li      $s1, 0xFFFFFFFF

loc_AE08:                                # CODE XREF: ssl2_accept+DAC↓j
                                         # ssl2_accept+DD0↓j
                lw      $a0, 0xC0($s2)
                la      $t9, ssl_cipher_get_evp
                lw      $v0, 0xAC($a0)
                lw      $a1, 0x70+var_34($sp)
                lw      $a2, 0x70+var_30($sp)
                lw      $s0, 0x20($v0)
                move    $a3, $zero
                sw      $zero, 0x70+var_60($sp)
                jalr    $t9 ; ssl_cipher_get_evp
                sw      $zero, 0x70+var_5C($sp)
                beqz    $v0, loc_BBD0
                lw      $gp, 0x70+var_50($sp)
                lw      $v0, 0xC0($s2)
                lw      $a0, 0xAC($v0)
                lw      $v1, 0x24($a0)
                andi    $v1, 2
                beqz    $v1, loc_B678
                andi    $s5, $s0, 2
                li      $s5, 1
                li      $s3, 8

loc_AE58:                                # CODE XREF: ssl2_accept:loc_B678↓j
                bltz    $s1, loc_B9E0
                la      $t9, ERR_clear_error
                beqz    $s5, loc_B7F4
                la      $t9, EVP_CIPHER_key_length
                beq     $s3, $s1, loc_B9F8
                lw      $a0, 0x70+var_40($sp)

loc_AE70:                                # CODE XREF: ssl2_accept+10F8↓j
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x70+var_50($sp)

loc_AE80:                                # CODE XREF: ssl2_accept+F14↓j
                la      $t9, RAND_pseudo_bytes

loc_AE84:                                # CODE XREF: ssl2_accept+10E0↓j
                move    $a0, $fp
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a1, $s3
                blez    $v0, loc_BC9C
                lw      $gp, 0x70+var_50($sp)
                beqz    $s5, loc_AEAC
                move    $s1, $s3
                lw      $v0, 0x54($s2)

loc_AEA4:                                # CODE XREF: ssl2_accept+1100↓j
                lw      $v1, 0xE8($v0)
                addu    $s1, $v1

loc_AEAC:                                # CODE XREF: ssl2_accept+588↑j
                                         # ssl2_accept+EEC↓j
                slti    $v0, $s1, 0x31  # '1'
                beqz    $v0, loc_BBA8
                la      $t9, ssl2_return_error
                lw      $a0, 0xC0($s2)
                la      $t9, memcpy
                sw      $s1, 0x10($a0)
                move    $a1, $fp
                addiu   $a0, 0x14
                jalr    $t9 ; memcpy
                move    $a2, $s1
                lw      $gp, 0x70+var_50($sp)

loc_AED8:                                # CODE XREF: ssl2_accept+B74↓j
                li      $v0, 0x2080
                sw      $v0, 0x34($s2)
                b       loc_AA64
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_AEE8:                                # CODE XREF: ssl2_accept+2B4↑j
                beq     $s4, $v0, loc_AEF8
                li      $v0, 0x6000
                bne     $s4, $v0, loc_AC48
                la      $t9, ERR_put_error

loc_AEF8:                                # CODE XREF: ssl2_accept:loc_AEE8↑j
                                         # ssl2_accept:loc_AF78↓j ...
                li      $v0, 1
                beqz    $s6, loc_AF1C
                sw      $v0, 0x24($s2)
                move    $a0, $s2
                li      $a1, 0x10
                move    $t9, $s6
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x70+var_50($sp)

loc_AF1C:                                # CODE XREF: ssl2_accept+5EC↑j
                lw      $s0, 0x3C($s2)
                li      $v0, 2
                li      $v1, 0x2000
                sw      $v0, 0($s2)
                beqz    $s0, loc_B680
                sw      $v1, 4($s2)

loc_AF34:                                # CODE XREF: ssl2_accept+D80↓j
                la      $t9, BUF_MEM_grow
                move    $a0, $s0
                jalr    $t9 ; BUF_MEM_grow
                li      $a1, 0x3FFF
                beqz    $v0, loc_B698
                lw      $gp, 0x70+var_50($sp)
                lw      $v0, 0xDC($s2)
                sw      $zero, 0x44($s2)
                lw      $v1, 0x40($v0)
                sw      $s0, 0x3C($s2)
                addiu   $v1, 1
                sw      $v1, 0x40($v0)
                li      $v0, 0x2010
                sw      $v0, 0x34($s2)
                la      $v0, ssl2_accept
                b       loc_AA64
                sw      $v0, 0x20($s2)
 # ---------------------------------------------------------------------------

loc_AF78:                                # CODE XREF: ssl2_accept+208↑j
                beq     $s4, $v0, loc_AEF8
                li      $v0, 0x2003
                beq     $s4, $v0, loc_AEF8
                li      $v0, 3
                bne     $s4, $v0, loc_AC48
                la      $t9, ERR_put_error
                la      $t9, BUF_MEM_free
                jalr    $t9 ; BUF_MEM_free
                lw      $a0, 0x3C($s2)
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ssl_free_wbio_buffer
                jalr    $t9 ; ssl_free_wbio_buffer
                move    $a0, $s2
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ssl_update_cache
                sw      $zero, 0x3C($s2)
                sw      $zero, 0x44($s2)
                move    $a0, $s2
                jalr    $t9 ; ssl_update_cache
                li      $a1, 2
                lw      $v1, 0xDC($s2)
                lw      $gp, 0x70+var_50($sp)
                lw      $v0, 0x48($v1)
                addiu   $v0, 1
                beqz    $s6, loc_B4A0
                sw      $v0, 0x48($v1)
                move    $a0, $s2
                li      $a1, 0x20  # ' '
                move    $t9, $s6
                jalr    $t9
                li      $a2, 1
                lw      $v0, 0x1C($s2)
                li      $s0, 1
                addiu   $v0, -1
                b       loc_AC78
                sw      $v0, 0x1C($s2)
 # ---------------------------------------------------------------------------

loc_B008:                                # CODE XREF: ssl2_accept+1AC↑j
                lw      $v0, 0x3C($s2)
                lw      $a0, 4($v0)
                sb      $v1, 0($a0)
                lw      $a1, 0xC0($s2)
                lw      $a2, 0x44($a1)
                sltiu   $v0, $a2, 0x21  # '!'
                beqz    $v0, loc_BB2C
                la      $t9, ERR_put_error
                la      $t9, memcpy
                addiu   $a0, 1
                jalr    $t9 ; memcpy
                addiu   $a1, 0x48  # 'H'
                lw      $a0, 0xC0($s2)
                li      $v1, 0x2061
                lw      $gp, 0x70+var_50($sp)
                sw      $v1, 0x34($s2)
                lw      $v0, 0x44($a0)
                addiu   $v0, 1
                sw      $zero, 0x48($s2)
                b       loc_AAC4
                sw      $v0, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_B05C:                                # CODE XREF: ssl2_accept+120↑j
                lw      $v0, 0x3C($s2)
                lw      $a0, 4($v0)
                sb      $v1, 0($a0)
                lw      $a1, 0x54($s2)
                lw      $a2, 0x64($a1)
                sltiu   $v0, $a2, 0x21  # '!'
                beqz    $v0, loc_BB40
                la      $t9, ERR_put_error
                la      $t9, memcpy
                addiu   $a0, 1
                jalr    $t9 ; memcpy
                addiu   $a1, 0x68  # 'h'
                lw      $a0, 0x54($s2)
                li      $v1, 0x2041
                lw      $gp, 0x70+var_50($sp)
                sw      $v1, 0x34($s2)
                lw      $v0, 0x64($a0)
                addiu   $v0, 1
                sw      $zero, 0x48($s2)
                b       loc_AA38
                sw      $v0, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_B0B0:                                # CODE XREF: ssl2_accept:loc_AC30↑j
                la      $t9, BIO_ctrl
                lw      $a0, 0x10($s2)
                li      $a1, 3
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                blez    $v0, loc_B100
                lw      $gp, 0x70+var_50($sp)
                la      $t9, BIO_ctrl
                li      $v0, 2
                lw      $a0, 0x10($s2)
                sw      $v0, 0x18($s2)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                blez    $v0, loc_B698
                lw      $gp, 0x70+var_50($sp)
                li      $v0, 1
                sw      $v0, 0x18($s2)

loc_B100:                                # CODE XREF: ssl2_accept+7B8↑j
                la      $t9, BIO_pop
                jalr    $t9 ; BIO_pop
                lw      $a0, 0x10($s2)
                lw      $gp, 0x70+var_50($sp)
                sw      $v0, 0x10($s2)
                li      $v0, 0x2050
                b       loc_AA64
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_B120:                                # CODE XREF: ssl2_accept+3C0↑j
                lw      $v0, 0x3C($s2)
                beq     $s4, $v1, loc_B53C
                lw      $a0, 4($v0)

loc_B12C:                                # CODE XREF: ssl2_accept+D60↓j
                lw      $v0, 0x6C($s2)
                beqz    $v0, loc_B154
                la      $t9, ssl2_do_write
                la      $t9, ssl_init_wbio_buffer
                move    $a0, $s2
                jalr    $t9 ; ssl_init_wbio_buffer
                li      $a1, 1
                beqz    $v0, loc_B698
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ssl2_do_write

loc_B154:                                # CODE XREF: ssl2_accept+820↑j
                jalr    $t9 ; ssl2_do_write
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_AC68
                lw      $gp, 0x70+var_50($sp)
                lw      $v0, 0x6C($s2)
                bnez    $v0, loc_B348
                sw      $zero, 0x44($s2)
                li      $v0, 0x2030
                b       loc_AA64
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_B180:                                # CODE XREF: ssl2_accept+32C↑j
                lw      $v0, 0x3C($s2)
                beq     $s4, $v1, loc_B4E4
                lw      $s3, 4($v0)

loc_B18C:                                # CODE XREF: ssl2_accept+110C↓j
                lw      $v0, 0x54($s2)
                lw      $s0, 0x88($v0)
                sltiu   $v1, $s0, 0x11
                beqz    $v1, loc_BA70
                addiu   $s1, $s0, 1
                lw      $a1, 0x44($s2)
                subu    $s0, $s1, $a1
                la      $t9, ssl2_read
                move    $a2, $s0
                addu    $a1, $s3
                jalr    $t9 ; ssl2_read
                move    $a0, $s2
                slt     $s0, $v0, $s0
                bnez    $s0, loc_B514
                lw      $gp, 0x70+var_50($sp)
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_B1F8
                move    $a0, $zero
                lw      $v0, 0x68($s2)
                lw      $a1, 0($s2)
                sw      $s1, 0x70+var_60($sp)
                sw      $v0, 0x70+var_58($sp)
                sw      $s2, 0x70+var_5C($sp)
                move    $a2, $zero
                jalr    $t9
                move    $a3, $s3
                lw      $gp, 0x70+var_50($sp)

loc_B1F8:                                # CODE XREF: ssl2_accept+8BC↑j
                lw      $a1, 0x54($s2)
                la      $t9, memcmp
                lw      $a2, 0x88($a1)
                addiu   $a0, $s3, 1
                jalr    $t9 ; memcmp
                addiu   $a1, 0x8C
                bnez    $v0, loc_BAD4
                lw      $gp, 0x70+var_50($sp)

loc_B218:                                # CODE XREF: ssl2_accept+C1C↓j
                                         # ssl2_accept+E48↓j
                li      $v0, 0x2070
                sw      $v0, 0x34($s2)
                b       loc_AA64
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_B228:                                # CODE XREF: ssl2_accept:loc_ABBC↑j
                la      $t9, ssl2_enc_init
                move    $a0, $s2
                jalr    $t9 ; ssl2_enc_init
                move    $a1, $zero
                beqz    $v0, loc_B698
                lw      $gp, 0x70+var_50($sp)
                lw      $a1, 0x54($s2)
                li      $v0, 0x2040
                sw      $zero, 4($a1)
                b       loc_AA64
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_B254:                                # CODE XREF: ssl2_accept+2D4↑j
                                         # ssl2_accept+2EC↑j
                b       loc_AA64
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_B25C:                                # CODE XREF: ssl2_accept+218↑j
                lw      $v0, 0x3C($s2)
                li      $v1, 1
                lw      $s3, 4($v0)
                li      $v0, 0x2011
                sw      $v1, 0x104($s2)
                sw      $v0, 0x34($s2)

loc_B274:                                # CODE XREF: ssl2_accept+228↑j
                lw      $a1, 0x44($s2)
                la      $t9, ssl2_read
                li      $s0, 9
                subu    $a2, $s0, $a1
                move    $a0, $s2
                jalr    $t9 ; ssl2_read
                addu    $a1, $s3
                lw      $v1, 0x44($s2)
                subu    $v1, $s0, $v1
                slt     $v1, $v0, $v1
                bnez    $v1, loc_AB8C
                lw      $gp, 0x70+var_50($sp)
                sw      $s0, 0x44($s2)
                lbu     $v1, 0($s3)
                li      $v0, 1
                bne     $v1, $v0, loc_BC0C
                addiu   $a0, $s3, 1
                lbu     $v0, 1($s3)
                lbu     $a0, 1($a0)
                sll     $v0, 8
                lw      $v1, 0($s2)
                or      $a0, $v0
                slt     $v1, $a0, $v1
                beqz    $v1, loc_B2DC
                addiu   $a1, $s3, 3
                sw      $a0, 0($s2)

loc_B2DC:                                # CODE XREF: ssl2_accept+9C0↑j
                lbu     $v0, 3($s3)
                lbu     $v1, 1($a1)
                sll     $v0, 8
                lw      $a1, 0x54($s2)
                or      $v1, $v0
                sw      $v1, 0x110($a1)
                lbu     $v0, 5($s3)
                lbu     $v1, 6($s3)
                sll     $v0, 8
                or      $v1, $v0
                sw      $v1, 0x114($a1)
                lbu     $v0, 7($s3)
                lbu     $a0, 8($s3)
                sll     $v0, 8
                or      $a0, $v0
                addiu   $v1, $a0, -0x10
                sltiu   $v1, 0x11
                beqz    $v1, loc_BC70
                sw      $a0, 0x64($a1)
                lw      $v0, 0x3C($s2)
                li      $v1, 0x2012
                lw      $s3, 4($v0)
                b       loc_AB44
                sw      $v1, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_B33C:                                # CODE XREF: ssl2_accept+144↑j
                li      $v0, 0x2050
                b       loc_AA64
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_B348:                                # CODE XREF: ssl2_accept+85C↑j
                li      $v0, 0x2080
                b       loc_AA64
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_B354:                                # CODE XREF: ssl2_accept+274↑j
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_B384
                move    $a0, $zero
                lw      $v0, 0x68($s2)
                lw      $a1, 0($s2)
                sw      $s1, 0x70+var_60($sp)
                sw      $v0, 0x70+var_58($sp)
                sw      $s2, 0x70+var_5C($sp)
                move    $a2, $zero
                jalr    $t9
                move    $a3, $s3
                lw      $gp, 0x70+var_50($sp)

loc_B384:                                # CODE XREF: ssl2_accept+A48↑j
                lw      $a0, 0x54($s2)
                lw      $v1, 0x114($a0)
                beqz    $v1, loc_B3E4
                addiu   $s5, $s3, 9
                li      $v0, 0x10
                bne     $v1, $v0, loc_BCDC
                la      $t9, ssl2_return_error
                lw      $a1, 0x110($a0)
                la      $t9, ssl_get_prev_session
                addu    $a1, $s5, $a1
                move    $a0, $s2
                li      $a2, 0x10
                jalr    $t9 ; ssl_get_prev_session
                move    $a3, $zero
                move    $v1, $v0
                li      $v0, 1
                beq     $v1, $v0, loc_B9D8
                lw      $gp, 0x70+var_50($sp)
                li      $v0, 0xFFFFFFFF
                beq     $v1, $v0, loc_BB14
                la      $t9, ssl2_return_error
                lw      $v0, 0x98($s2)
                beqz    $v0, loc_BD04
                move    $a0, $s2

loc_B3E4:                                # CODE XREF: ssl2_accept+A7C↑j
                la      $t9, ssl_get_new_session
                move    $a0, $s2
                jalr    $t9 ; ssl_get_new_session
                li      $a1, 1
                beqz    $v0, loc_BB10
                lw      $gp, 0x70+var_50($sp)
                lw      $v0, 0x6C($s2)
                beqz    $v0, loc_B82C
                la      $t9, ssl_bytes_to_cipher_list

loc_B408:                                # CODE XREF: ssl2_accept+1008↓j
                                         # ssl2_accept+1024↓j ...
                lw      $a0, 0x54($s2)
                lw      $a2, 0x64($a0)
                lw      $a1, 0x110($a0)
                sltiu   $v0, $a2, 0x21  # '!'
                beqz    $v0, loc_BC44
                lw      $v1, 0x114($a0)
                la      $t9, memcpy
                addu    $a1, $s5
                addu    $a1, $v1, $a1
                jalr    $t9 ; memcpy
                addiu   $a0, 0x68  # 'h'
                b       loc_ABAC
                lw      $gp, 0x70+var_50($sp)
 # ---------------------------------------------------------------------------

loc_B43C:                                # CODE XREF: ssl2_accept+3DC↑j
                lw      $a1, 0x44($s2)
                la      $t9, ssl2_read
                li      $s0, 0xA
                subu    $a2, $s0, $a1
                move    $a0, $s2
                jalr    $t9 ; ssl2_read
                addu    $a1, $s3
                lw      $v1, 0x44($s2)
                subu    $v1, $s0, $v1
                slt     $v1, $v0, $v1
                beqz    $v1, loc_B768
                lw      $gp, 0x70+var_50($sp)

loc_B46C:                                # CODE XREF: ssl2_accept+438↑j
                la      $t9, ssl2_part_read
                move    $a2, $v0
                move    $a0, $s2
                jalr    $t9 ; ssl2_part_read
                li      $a1, 0x6B  # 'k'
                move    $s0, $v0
                bgtz    $v0, loc_AED8
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC6C
                lw      $v0, 0x1C($s2)
 # ---------------------------------------------------------------------------

loc_B494:                                # CODE XREF: ssl2_accept+98↑j
                lw      $v0, 0xDC($s2)
                b       loc_A9B0
                lw      $s6, 0x9C($v0)
 # ---------------------------------------------------------------------------

loc_B4A0:                                # CODE XREF: ssl2_accept+6C8↑j
                lw      $v0, 0x1C($s2)
                li      $s0, 1
                addiu   $v0, -1
                sw      $v0, 0x1C($s2)
                lw      $ra, 0x70+var_4($sp)
                move    $v0, $s0
                lw      $fp, 0x70+var_8($sp)
                lw      $s7, 0x70+var_C($sp)
                lw      $s6, 0x70+var_10($sp)
                lw      $s5, 0x70+var_14($sp)
                lw      $s4, 0x70+var_18($sp)
                lw      $s3, 0x70+var_1C($sp)
                lw      $s2, 0x70+var_20($sp)
                lw      $s1, 0x70+var_24($sp)
                lw      $s0, 0x70+var_28($sp)
                jr      $ra
                addiu   $sp, 0x70
 # ---------------------------------------------------------------------------

loc_B4E4:                                # CODE XREF: ssl2_accept+874↑j
                lw      $a1, 0x44($s2)
                la      $t9, ssl2_read
                li      $s0, 1
                subu    $a2, $s0, $a1
                move    $a0, $s2
                jalr    $t9 ; ssl2_read
                addu    $a1, $s3
                lw      $a2, 0x44($s2)
                subu    $s0, $a2
                slt     $s0, $v0, $s0
                beqz    $s0, loc_B6E8
                lw      $gp, 0x70+var_50($sp)

loc_B514:                                # CODE XREF: ssl2_accept+8B0↑j
                la      $t9, ssl2_part_read
                move    $a2, $v0
                move    $a0, $s2
                jalr    $t9 ; ssl2_part_read
                li      $a1, 0x69  # 'i'
                move    $s0, $v0
                bgtz    $s0, loc_B218
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC6C
                lw      $v0, 0x1C($s2)
 # ---------------------------------------------------------------------------

loc_B53C:                                # CODE XREF: ssl2_accept+814↑j
                addiu   $v0, $a0, 0xB
                li      $v1, 4
                sw      $v0, 0x70+var_44($sp)
                sb      $v1, 0($a0)
                lw      $s1, 0x6C($s2)
                addiu   $s3, $a0, 1
                bnez    $s1, loc_B5A0
                sb      $s1, 1($a0)
                lw      $s0, 0xC0($s2)
                lw      $a0, 0x90($s0)
                beqz    $a0, loc_B57C
                la      $t9, ssl_sess_cert_free
                jalr    $t9 ; ssl_sess_cert_free
                nop
                lw      $gp, 0x70+var_50($sp)
                lw      $s0, 0xC0($s2)

loc_B57C:                                # CODE XREF: ssl2_accept+C54↑j
                la      $t9, ssl_sess_cert_new
                jalr    $t9 ; ssl_sess_cert_new
                nop
                lw      $v1, 0xC0($s2)
                lw      $gp, 0x70+var_50($sp)
                sw      $v0, 0x90($s0)
                lw      $v0, 0x90($v1)
                beqz    $v0, loc_BD58
                la      $t9, ERR_put_error

loc_B5A0:                                # CODE XREF: ssl2_accept+C44↑j
                lw      $v0, 0x98($s2)
                beqz    $v0, loc_BCA4
                la      $t9, ssl2_return_error
                beqz    $s1, loc_B93C
                li      $v1, 1
                sb      $zero, 1($s3)
                lw      $v0, 0($s2)
                addiu   $a0, $s3, 8
                sra     $v0, 8
                sb      $v0, 2($s3)
                lw      $v1, 0($s2)
                sb      $zero, 4($s3)
                sb      $v1, 3($s3)
                sb      $zero, 5($s3)
                sb      $zero, 6($s3)
                sb      $zero, 7($s3)

loc_B5E0:                                # CODE XREF: ssl2_accept+10C0↓j
                li      $v0, 0x10
                sb      $v0, 1($a0)
                sb      $zero, 0($a0)
                lw      $a0, 0x54($s2)
                la      $t9, RAND_pseudo_bytes
                li      $v0, 0x10
                sw      $v0, 0x88($a0)
                li      $a1, 0x10
                jalr    $t9 ; RAND_pseudo_bytes
                addiu   $a0, 0x8C
                blez    $v0, loc_B698
                lw      $gp, 0x70+var_50($sp)
                lw      $v1, 0x54($s2)
                lw      $v0, 0x70+var_44($sp)
                lw      $a1, 0x8C($v1)
                addiu   $v1, 0x8C
                lw      $a0, 4($v1)
                lw      $a3, 0xC($v1)
                lw      $a2, 8($v1)
                usw     $a1, 0($v0)
                usw     $a0, 4($v0)
                usw     $a2, 8($v0)
                usw     $a3, 0xC($v0)
                lw      $v1, 0x3C($s2)
                lw      $a0, 0x70+var_44($sp)
                lw      $a1, 4($v1)
                addiu   $a0, 0x10
                subu    $a1, $a0, $a1
                li      $v0, 0x2021
                sw      $v0, 0x34($s2)
                sw      $a1, 0x44($s2)
                sw      $a0, 0x70+var_44($sp)
                b       loc_B12C
                sw      $zero, 0x48($s2)
 # ---------------------------------------------------------------------------

loc_B678:                                # CODE XREF: ssl2_accept+538↑j
                b       loc_AE58
                li      $s3, 5
 # ---------------------------------------------------------------------------

loc_B680:                                # CODE XREF: ssl2_accept+61C↑j
                la      $t9, BUF_MEM_new
                jalr    $t9 ; BUF_MEM_new
                nop
                move    $s0, $v0
                bnez    $v0, loc_AF34
                lw      $gp, 0x70+var_50($sp)

loc_B698:                                # CODE XREF: ssl2_accept+634↑j
                                         # ssl2_accept+7E0↑j ...
                b       loc_AC68
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_B6A0:                                # CODE XREF: ssl2_accept+4CC↑j
                lw      $a3, 0x14($a2)
                la      $t9, RSA_private_decrypt
                addu    $a1, $v1, $fp
                sw      $t0, 0x70+var_60($sp)
                jalr    $t9 ; RSA_private_decrypt
                move    $a2, $a1
                move    $s1, $v0
                bgez    $v0, loc_AE08
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0xBB
                li      $a2, 4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_AE08
                lw      $gp, 0x70+var_50($sp)
 # ---------------------------------------------------------------------------

loc_B6E8:                                # CODE XREF: ssl2_accept+BFC↑j
                addu    $v0, $a2
                sw      $v0, 0x44($s2)
                lbu     $v0, 0($s3)
                li      $s0, 3
                beq     $v0, $s0, loc_BA18
                nop
                bnez    $v0, loc_BE0C
                la      $t9, ERR_put_error
                move    $a3, $zero
                li      $a0, 0x14
                li      $a1, 0x69  # 'i'
                li      $a2, 0xC8
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                lw      $gp, 0x70+var_50($sp)
                lw      $a1, 0x44($s2)
                la      $t9, ssl2_read
                subu    $a2, $s0, $a1
                move    $a0, $s2
                jalr    $t9 ; ssl2_read
                addu    $a1, $s3
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ssl2_part_read
                move    $a2, $v0
                move    $a0, $s2
                jalr    $t9 ; ssl2_part_read
                li      $a1, 0x6E  # 'n'
                move    $s0, $v0
                bgtz    $s0, loc_B218
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC6C
                lw      $v0, 0x1C($s2)
 # ---------------------------------------------------------------------------

loc_B768:                                # CODE XREF: ssl2_accept+B54↑j
                sw      $s0, 0x44($s2)
                lbu     $v1, 0($s3)
                li      $v0, 2
                bne     $v1, $v0, loc_BDD4
                addiu   $a0, $s3, 1
                la      $t9, ssl2_get_cipher_by_char
                jalr    $t9 ; ssl2_get_cipher_by_char
                nop
                beqz    $v0, loc_BDA8
                lw      $gp, 0x70+var_50($sp)
                lw      $a1, 0xC0($s2)
                lw      $a0, 0x54($s2)
                sw      $v0, 0xAC($a1)
                lbu     $v0, 4($s3)
                lbu     $v1, 5($s3)
                sll     $v0, 8
                or      $v1, $v0
                sw      $v1, 0xE8($a0)
                lbu     $v0, 6($s3)
                lbu     $v1, 7($s3)
                sll     $v0, 8
                or      $v1, $v0
                sw      $v1, 0xEC($a0)
                lbu     $v0, 8($s3)
                lbu     $a0, 9($s3)
                sll     $v0, 8
                or      $a0, $v0
                slti    $v1, $a0, 9
                beqz    $v1, loc_BD7C
                li      $v0, 0x2031
                lw      $v1, 0x3C($s2)
                lw      $s3, 4($v1)
                sw      $a0, 4($a1)
                b       loc_ACF4
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_B7F4:                                # CODE XREF: ssl2_accept+550↑j
                jalr    $t9 ; EVP_CIPHER_key_length
                lw      $a0, 0x70+var_40($sp)
                beq     $s1, $v0, loc_AEAC
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x70+var_50($sp)

loc_B814:                                # CODE XREF: ssl2_accept+10D8↓j
                la      $t9, EVP_CIPHER_key_length
                jalr    $t9 ; EVP_CIPHER_key_length
                lw      $a0, 0x70+var_40($sp)
                lw      $gp, 0x70+var_50($sp)
                b       loc_AE80
                move    $s3, $v0
 # ---------------------------------------------------------------------------

loc_B82C:                                # CODE XREF: ssl2_accept+AF0↑j
                lw      $v0, 0x54($s2)
                lw      $a3, 0xC0($s2)
                lw      $a2, 0x110($v0)
                addiu   $a3, 0xB4
                move    $a0, $s2
                jalr    $t9 ; ssl_bytes_to_cipher_list
                move    $a1, $s5
                move    $s1, $v0
                beqz    $v0, loc_BD40
                lw      $gp, 0x70+var_50($sp)
                la      $t9, SSL_get_ciphers
                jalr    $t9 ; SSL_get_ciphers
                move    $a0, $s2
                lw      $a0, 0xF8($s2)
                lui     $v1, 0x40  # '@'
                and     $a0, $v1
                lw      $gp, 0x70+var_50($sp)
                bnez    $a0, loc_B8EC
                move    $s3, $v0

loc_B878:                                # CODE XREF: ssl2_accept+FF4↓j
                move    $s0, $zero

loc_B87C:                                # CODE XREF: ssl2_accept+FB4↓j
                                         # ssl2_accept+FD4↓j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s1
                lw      $gp, 0x70+var_50($sp)
                slt     $v0, $s0, $v0
                move    $a1, $s0
                move    $a0, $s1
                beqz    $v0, loc_B90C
                la      $t9, sk_value
                jalr    $t9 ; sk_value
                nop
                lw      $gp, 0x70+var_50($sp)
                la      $t9, sk_find
                move    $a1, $v0
                jalr    $t9 ; sk_find
                move    $a0, $s3
                bltz    $v0, loc_B8CC
                lw      $gp, 0x70+var_50($sp)
                b       loc_B87C
                addiu   $s0, 1
 # ---------------------------------------------------------------------------

loc_B8CC:                                # CODE XREF: ssl2_accept+FAC↑j
                la      $t9, sk_delete
                move    $a1, $s0
                jalr    $t9 ; sk_delete
                move    $a0, $s1
                addiu   $s0, -1
                lw      $gp, 0x70+var_50($sp)
                b       loc_B87C
                addiu   $s0, 1
 # ---------------------------------------------------------------------------

loc_B8EC:                                # CODE XREF: ssl2_accept+F60↑j
                la      $t9, sk_dup
                jalr    $t9 ; sk_dup
                move    $a0, $v0
                beqz    $v0, loc_BD40
                lw      $gp, 0x70+var_50($sp)
                move    $s3, $s1
                b       loc_B878
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_B90C:                                # CODE XREF: ssl2_accept+F88↑j
                lw      $v0, 0xF8($s2)
                lui     $v1, 0x40  # '@'
                and     $v0, $v1
                beqz    $v0, loc_B408
                la      $t9, sk_free
                lw      $v0, 0xC0($s2)
                jalr    $t9 ; sk_free
                lw      $a0, 0xB4($v0)
                lw      $gp, 0x70+var_50($sp)
                lw      $v0, 0xC0($s2)
                b       loc_B408
                sw      $s1, 0xB4($v0)
 # ---------------------------------------------------------------------------

loc_B93C:                                # CODE XREF: ssl2_accept+C9C↑j
                sb      $v1, 1($s3)
                lw      $v0, 0($s2)
                la      $t9, i2d_X509
                sra     $v0, 8
                sb      $v0, 2($s3)
                lw      $v1, 0($s2)
                move    $a1, $zero
                sb      $v1, 3($s3)
                lw      $v0, 0x98($s2)
                addiu   $s0, $s3, 4
                lw      $a0, 0x20($v0)
                jalr    $t9 ; i2d_X509
                addiu   $s1, $s3, 6
                sra     $v1, $v0, 8
                lw      $gp, 0x70+var_50($sp)
                sb      $v1, 4($s3)
                sb      $v0, 1($s0)
                lw      $v0, 0x98($s2)
                lw      $a0, 0x20($v0)
                la      $t9, i2d_X509
                jalr    $t9 ; i2d_X509
                lw      $a1, 0x70+var_38($sp)
                lw      $gp, 0x70+var_50($sp)
                lw      $v1, 0xC0($s2)
                lw      $a1, 0xB4($v1)
                la      $t9, ssl_cipher_list_to_bytes
                lw      $a2, 0x70+var_44($sp)
                move    $a0, $s2
                jalr    $t9 ; ssl_cipher_list_to_bytes
                move    $a3, $zero
                lw      $v1, 0x70+var_44($sp)
                lw      $gp, 0x70+var_50($sp)
                sra     $a0, $v0, 8
                addu    $v1, $v0
                sw      $v1, 0x70+var_44($sp)
                sb      $a0, 6($s3)
                addiu   $a0, $s3, 8
                b       loc_B5E0
                sb      $v0, 1($s1)
 # ---------------------------------------------------------------------------

loc_B9D8:                                # CODE XREF: ssl2_accept+AB4↑j
                b       loc_B408
                sw      $v1, 0x6C($s2)
 # ---------------------------------------------------------------------------

loc_B9E0:                                # CODE XREF: ssl2_accept:loc_AE58↑j
                jalr    $t9 ; ERR_clear_error
                nop
                beqz    $s5, loc_B814
                lw      $gp, 0x70+var_50($sp)
                b       loc_AE84
                la      $t9, RAND_pseudo_bytes
 # ---------------------------------------------------------------------------

loc_B9F8:                                # CODE XREF: ssl2_accept+558↑j
                lw      $v0, 0x54($s2)
                lw      $s0, 0xE8($v0)
                jalr    $t9 ; EVP_CIPHER_key_length
                addu    $s0, $s1, $s0
                bne     $s0, $v0, loc_AE70
                lw      $gp, 0x70+var_50($sp)
                b       loc_AEA4
                lw      $v0, 0x54($s2)
 # ---------------------------------------------------------------------------

loc_BA18:                                # CODE XREF: ssl2_accept+DE8↑j
                li      $v0, 0x2051
                b       loc_B18C
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_BA24:                                # CODE XREF: ssl2_accept+3EC↑j
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6B  # 'k'
                li      $a2, 0x44  # 'D'
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BA4C:                                # CODE XREF: ssl2_accept+418↑j
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6B  # 'k'
                li      $a2, 0x128
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BA70:                                # CODE XREF: ssl2_accept+888↑j
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x69  # 'i'
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC68
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_BAAC:                                # CODE XREF: ssl2_accept+250↑j
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6A  # 'j'
                li      $a2, 0x128
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BAD4:                                # CODE XREF: ssl2_accept+900↑j
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x69  # 'i'
                li      $a2, 0x8F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC68
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_BB10:                                # CODE XREF: ssl2_accept+AE4↑j
                la      $t9, ssl2_return_error

loc_BB14:                                # CODE XREF: ssl2_accept+AC0↑j
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC68
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_BB2C:                                # CODE XREF: ssl2_accept+710↑j
                li      $a0, 0x14
                li      $a1, 0xEF
                li      $a2, 0x44  # 'D'
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BB40:                                # CODE XREF: ssl2_accept+764↑j
                li      $a0, 0x14
                li      $a1, 0xF0
                li      $a2, 0x44  # 'D'
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BB54:                                # CODE XREF: ssl2_accept+E0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x7A  # 'z'
                li      $a2, 0xB3
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC90
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_BB7C:                                # CODE XREF: ssl2_accept+4A4↑j
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6B  # 'k'
                li      $a2, 0xBD
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BBA8:                                # CODE XREF: ssl2_accept+5A0↑j
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6B  # 'k'
                li      $a2, 0x44  # 'D'
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BBD0:                                # CODE XREF: ssl2_accept+520↑j
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                li      $a1, 1
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x6B  # 'k'
                li      $a2, 0xCE

loc_BBF8:                                # CODE XREF: ssl2_accept+1440↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC68
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_BC0C:                                # CODE XREF: ssl2_accept+9A0↑j
                lbu     $v0, -1($a0)
                beqz    $v0, loc_BD28
                nop
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6A  # 'j'
                li      $a2, 0xD4
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BC44:                                # CODE XREF: ssl2_accept+B08↑j
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6A  # 'j'
                li      $a2, 0x44  # 'D'
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BC70:                                # CODE XREF: ssl2_accept+A10↑j
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6A  # 'j'
                li      $a2, 0x9E
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BC9C:                                # CODE XREF: ssl2_accept+580↑j
                b       loc_AC68
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_BCA4:                                # CODE XREF: ssl2_accept+C94↑j
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                li      $a1, 2
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x72  # 'r'
                li      $a2, 0xB4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC68
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_BCDC:                                # CODE XREF: ssl2_accept+A88↑j
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6A  # 'j'
                li      $a2, 0x7D  # '}'
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BD04:                                # CODE XREF: ssl2_accept+ACC↑j
                jalr    $t9 ; ssl2_return_error
                li      $a1, 2
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6A  # 'j'
                li      $a2, 0xB3
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BD28:                                # CODE XREF: ssl2_accept+1300↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6A  # 'j'
                li      $a2, 0xC8
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BD40:                                # CODE XREF: ssl2_accept+F3C↑j
                                         # ssl2_accept+FE8↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6A  # 'j'
                li      $a2, 0x41  # 'A'
                b       loc_BBF8
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BD58:                                # CODE XREF: ssl2_accept+C88↑j
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x72  # 'r'
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC68
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_BD7C:                                # CODE XREF: ssl2_accept+EC8↑j
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6B  # 'k'
                li      $a2, 0x11C
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BDA8:                                # CODE XREF: ssl2_accept+E78↑j
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                li      $a1, 1
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6B  # 'k'
                li      $a2, 0xB9
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BDD4:                                # CODE XREF: ssl2_accept+E64↑j
                lbu     $v0, -1($a0)
                beqz    $v0, loc_BE48
                nop
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6B  # 'k'
                li      $a2, 0xD4
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_BE0C:                                # CODE XREF: ssl2_accept+DF0↑j
                la      $t9, ssl2_return_error
                move    $a0, $s2
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x69  # 'i'
                li      $a2, 0xD4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                b       loc_AC68
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_BE48:                                # CODE XREF: ssl2_accept+14C8↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6B  # 'k'
                li      $a2, 0xC8
                b       loc_AC58
                sw      $zero, 0x70+var_60($sp)
 # End of function ssl2_accept


 # =============== S U B R O U T I N E =======================================


                .globl SSLv2_client_method
SSLv2_client_method:                     # CODE XREF: sub_BE78+24↓j
                                         # sub_1FE04+5C↓j ...
                li      $gp, 0x564F0
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58A54 - 0x60000)
 # End of function SSLv2_client_method


 # =============== S U B R O U T I N E =======================================


sub_BE78:                                # DATA XREF: .data.rel.ro:00058AB0↓o
                li      $gp, 0x564D8
                addu    $gp, $t9
                li      $v0, 2
                beq     $a0, $v0, loc_BE98
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_BE98:                                # CODE XREF: sub_BE78+10↑j
                la      $t9, SSLv2_client_method
                jr      $t9 ; SSLv2_client_method
                nop
 # End of function sub_BE78


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_set_certificate
ssl2_set_certificate:                    # CODE XREF: ssl2_connect+DA0↓p
                                         # DATA XREF: LOAD:00003E88↑o ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_C           =  0xC

                li      $gp, 0x564AC
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, d2i_X509
                sw      $a3, 0x38+arg_C($sp)
                move    $s3, $a0
                addiu   $a1, $sp, 0x38+arg_C
                jalr    $t9 ; d2i_X509
                move    $a0, $zero
                move    $s0, $v0
                beqz    $v0, loc_C074
                lw      $gp, 0x38+var_20($sp)
                la      $t9, sk_new_null
                jalr    $t9 ; sk_new_null
                nop
                move    $s1, $v0
                beqz    $v0, loc_BF20
                lw      $gp, 0x38+var_20($sp)
                la      $t9, sk_push
                move    $a0, $v0
                jalr    $t9 ; sk_push
                move    $a1, $s0
                bnez    $v0, loc_BF9C
                lw      $gp, 0x38+var_20($sp)

loc_BF20:                                # CODE XREF: ssl2_set_certificate+5C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x7E  # '~'
                li      $a2, 0x41  # 'A'

loc_BF34:                                # CODE XREF: ssl2_set_certificate+230↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $v0, $s1
                move    $s3, $zero
                move    $s2, $zero

loc_BF4C:                                # CODE XREF: ssl2_set_certificate+1C8↓j
                                         # ssl2_set_certificate+1F8↓j ...
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                move    $a0, $v0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                move    $a0, $s0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s3
                move    $v0, $s2
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_BF9C:                                # CODE XREF: ssl2_set_certificate+74↑j
                la      $t9, ssl_verify_cert_chain
                move    $a0, $s3
                jalr    $t9 ; ssl_verify_cert_chain
                move    $a1, $s1
                lw      $v1, 0xC8($s3)
                beqz    $v1, loc_BFC0
                lw      $gp, 0x38+var_20($sp)
                blez    $v0, loc_C0C8
                la      $t9, ERR_put_error

loc_BFC0:                                # CODE XREF: ssl2_set_certificate+10C↑j
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 0xC0($s3)
                lw      $v0, 0xE4($s3)
                la      $t9, ssl_sess_cert_new
                jalr    $t9 ; ssl_sess_cert_new
                sw      $v0, 0x98($v1)
                move    $s2, $v0
                beqz    $v0, loc_C0DC
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 0xC0($s3)
                lw      $a0, 0x90($v1)
                beqz    $a0, loc_C010
                la      $t9, ssl_sess_cert_free
                jalr    $t9 ; ssl_sess_cert_free
                nop
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 0xC0($s3)

loc_C010:                                # CODE XREF: ssl2_set_certificate+154↑j
                la      $t9, X509_get_pubkey
                addiu   $v0, $s2, 0xC
                sw      $s2, 0x90($v1)
                sw      $v0, 8($s2)
                sw      $s0, 0xC($s2)
                jalr    $t9 ; X509_get_pubkey
                move    $a0, $s0
                move    $s3, $v0
                beqz    $v0, loc_C0EC
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 0($v0)
                li      $v0, 6
                beq     $v1, $v0, loc_C0A4
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x7E  # '~'
                li      $a2, 0xD2

loc_C058:                                # CODE XREF: ssl2_set_certificate+258↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $v0, $s1
                move    $s0, $zero
                b       loc_BF4C
                move    $s2, $zero
 # ---------------------------------------------------------------------------

loc_C074:                                # CODE XREF: ssl2_set_certificate+44↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x7E  # '~'
                li      $a2, 0xB
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s3, $zero
                move    $s2, $zero
                b       loc_BF4C
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_C0A4:                                # CODE XREF: ssl2_set_certificate+19C↑j
                la      $t9, ssl_set_peer_cert_type
                move    $a0, $s2
                jalr    $t9 ; ssl_set_peer_cert_type
                li      $a1, 1
                lw      $gp, 0x38+var_20($sp)
                sltu    $s2, $zero, $v0
                move    $s0, $zero
                b       loc_BF4C
                move    $v0, $s1
 # ---------------------------------------------------------------------------

loc_C0C8:                                # CODE XREF: ssl2_set_certificate+114↑j
                li      $a0, 0x14
                li      $a1, 0x7E  # '~'
                li      $a2, 0x86
                b       loc_BF34
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_C0DC:                                # CODE XREF: ssl2_set_certificate+144↑j
                move    $v0, $s1
                move    $s3, $zero
                b       loc_BF4C
                li      $s2, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_C0EC:                                # CODE XREF: ssl2_set_certificate+18C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x7E  # '~'
                li      $a2, 0xED
                b       loc_C058
                sw      $zero, 0x38+var_28($sp)
 # End of function ssl2_set_certificate


 # =============== S U B R O U T I N E =======================================


sub_C104:                                # CODE XREF: ssl2_connect+7F8↓p
                                         # DATA XREF: ssl2_connect:loc_CDB4↓o

var_60          = -0x60
var_5C          = -0x5C
var_58          = -0x58
var_50          = -0x50
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x5624C
                addu    $gp, $t9
                addiu   $sp, -0x70
                sw      $ra, 0x70+var_4($sp)
                sw      $s4, 0x70+var_8($sp)
                sw      $s3, 0x70+var_C($sp)
                sw      $s2, 0x70+var_10($sp)
                sw      $s1, 0x70+var_14($sp)
                sw      $s0, 0x70+var_18($sp)
                sw      $gp, 0x70+var_50($sp)
                lw      $v1, 0x3C($a0)
                lw      $t0, 0x34($a0)
                li      $v0, 0x1050
                move    $s0, $a0
                beq     $t0, $v0, loc_C2A8
                lw      $s1, 4($v1)
                lw      $v0, 0x44($a0)
                addiu   $s3, $v0, -2
                li      $v0, 0x1090
                beq     $t0, $v0, loc_C1BC
                addiu   $s4, $s1, 2

loc_C15C:                                # CODE XREF: sub_C104+FC↓j
                                         # sub_C104+148↓j
                li      $v0, 0x1051
                beq     $t0, $v0, loc_C170
                li      $v0, 0x1052
                beq     $t0, $v0, loc_C360
                addiu   $s2, $sp, 0x70+var_34

loc_C170:                                # CODE XREF: sub_C104+5C↑j
                                         # sub_C104+3D8↓j
                la      $t9, ssl2_do_write
                jalr    $t9 ; ssl2_do_write
                move    $a0, $s0
                lw      $gp, 0x70+var_50($sp)
                move    $v1, $v0

loc_C184:                                # CODE XREF: sub_C104+458↓j
                                         # sub_C104+4A4↓j ...
                lw      $ra, 0x70+var_4($sp)
                lw      $s4, 0x70+var_8($sp)
                lw      $s3, 0x70+var_C($sp)
                lw      $s2, 0x70+var_10($sp)
                lw      $s1, 0x70+var_14($sp)
                lw      $s0, 0x70+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x70
 # ---------------------------------------------------------------------------

loc_C1A8:                                # CODE XREF: sub_C104+224↓j
                                         # sub_C104+234↓j ...
                lw      $v0, 0x44($s0)
                addiu   $s4, $s1, 2
                addiu   $s3, $v0, -2
                li      $v0, 0x1090
                sw      $v0, 0x34($s0)

loc_C1BC:                                # CODE XREF: sub_C104+50↑j
                lw      $v0, 0xDC($s0)
                sw      $zero, 0x70+var_3C($sp)
                lw      $t9, 0x74($v0)
                beqz    $t9, loc_C208
                sw      $zero, 0x70+var_38($sp)
                move    $a0, $s0
                addiu   $a1, $sp, 0x70+var_3C
                jalr    $t9
                addiu   $a2, $sp, 0x70+var_38
                move    $s2, $v0
                bltz    $v0, loc_C5B0
                lw      $gp, 0x70+var_50($sp)
                li      $v0, 1
                beq     $s2, $v0, loc_C254
                sw      $v0, 0x18($s0)

loc_C1F8:                                # CODE XREF: sub_C104+19C↓j
                beqz    $s2, loc_C210
                nop
                b       loc_C15C
                lw      $t0, 0x34($s0)
 # ---------------------------------------------------------------------------

loc_C208:                                # CODE XREF: sub_C104+C4↑j
                li      $v0, 1
                sw      $v0, 0x18($s0)

loc_C210:                                # CODE XREF: sub_C104:loc_C1F8↑j
                                         # sub_C104+41C↓j
                addiu   $v1, $s1, 1
                li      $v0, 0x1051
                sw      $v0, 0x34($s0)
                sb      $zero, 0($s1)
                sw      $v1, 0x70+var_48($sp)
                sb      $zero, 1($s1)
                lw      $v1, 0x70+var_48($sp)
                li      $a0, 2
                sb      $a0, 1($v1)
                lw      $v0, 0x70+var_48($sp)
                lw      $t0, 0x34($s0)
                addiu   $v0, 2
                li      $v1, 3
                sw      $v0, 0x70+var_48($sp)
                sw      $v1, 0x44($s0)
                b       loc_C15C
                sw      $zero, 0x48($s0)
 # ---------------------------------------------------------------------------

loc_C254:                                # CODE XREF: sub_C104+EC↑j
                lw      $a0, 0x70+var_38($sp)
                beqz    $a0, loc_C4E4
                lw      $a1, 0x70+var_3C($sp)
                beqz    $a1, loc_C564
                la      $t9, SSL_use_certificate
                li      $v0, 0x1052
                sw      $v0, 0x34($s0)
                jalr    $t9 ; SSL_use_certificate
                move    $a0, $s0
                bnez    $v0, loc_C528
                lw      $gp, 0x70+var_50($sp)
                move    $s2, $zero

loc_C284:                                # CODE XREF: sub_C104+434↓j
                                         # sub_C104+43C↓j
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                lw      $a0, 0x70+var_3C($sp)
                lw      $gp, 0x70+var_50($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                lw      $a0, 0x70+var_38($sp)
                b       loc_C1F8
                lw      $gp, 0x70+var_50($sp)
 # ---------------------------------------------------------------------------

loc_C2A8:                                # CODE XREF: sub_C104+3C↑j
                lw      $a1, 0x44($a0)
                la      $t9, ssl2_read
                li      $a2, 0x22  # '"'
                subu    $a2, $a1
                jalr    $t9 ; ssl2_read
                addu    $a1, $s1
                lw      $v1, 0x44($s0)
                move    $a2, $v0
                li      $v0, 0x12
                subu    $v0, $v1
                slt     $v0, $a2, $v0
                bnez    $v0, loc_C548
                lw      $gp, 0x70+var_50($sp)
                lw      $t9, 0x64($s0)
                addu    $a2, $v1
                beqz    $t9, loc_C314
                sw      $a2, 0x44($s0)
                lw      $v0, 0x68($s0)
                lw      $a1, 0($s0)
                move    $a0, $zero
                sw      $a2, 0x70+var_60($sp)
                sw      $v0, 0x70+var_58($sp)
                sw      $s0, 0x70+var_5C($sp)
                move    $a2, $zero
                jalr    $t9
                move    $a3, $s1
                lw      $gp, 0x70+var_50($sp)

loc_C314:                                # CODE XREF: sub_C104+1E0↑j
                lbu     $v1, 1($s1)
                li      $v0, 1
                bne     $v1, $v0, loc_C578
                la      $t9, ssl2_return_error
                lw      $v0, 0x98($s0)
                beqz    $v0, loc_C1A8
                nop
                lw      $v1, 0($v0)
                lw      $v0, 0($v1)
                beqz    $v0, loc_C1A8
                nop
                lw      $v0, 4($v1)
                beqz    $v0, loc_C1A8
                addiu   $s4, $s1, 2
                lw      $v0, 0x44($s0)
                addiu   $s3, $v0, -2
                li      $v0, 0x1052
                sw      $v0, 0x34($s0)
                addiu   $s2, $sp, 0x70+var_34

loc_C360:                                # CODE XREF: sub_C104+64↑j
                la      $t9, EVP_MD_CTX_init
                move    $a0, $s2
                jalr    $t9 ; EVP_MD_CTX_init
                sw      $s1, 0x70+var_48($sp)
                lw      $gp, 0x70+var_50($sp)
                lw      $v0, 0xDC($s0)
                lw      $a1, 0x88($v0)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0x70+var_50($sp)
                lw      $a1, 0x54($s0)
                lw      $a2, 0x9C($a1)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, 0xA0
                lw      $gp, 0x70+var_50($sp)
                la      $t9, EVP_DigestUpdate
                move    $a2, $s3
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $s4
                lw      $v1, 0xC0($s0)
                lw      $gp, 0x70+var_50($sp)
                lw      $v0, 0x90($v1)
                lw      $v1, 8($v0)
                la      $t9, i2d_X509
                lw      $a0, 0($v1)
                jalr    $t9 ; i2d_X509
                addiu   $a1, $sp, 0x70+var_48
                blez    $v0, loc_C400
                lw      $gp, 0x70+var_50($sp)
                la      $t9, EVP_DigestUpdate
                move    $a2, $v0
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $s1
                lw      $gp, 0x70+var_50($sp)

loc_C400:                                # CODE XREF: sub_C104+2DC↑j
                addiu   $v0, $s1, 6
                sw      $v0, 0x70+var_44($sp)
                li      $v1, 8
                li      $v0, 1
                sb      $v1, 0($s1)
                sb      $v0, 1($s1)
                lw      $v1, 0x98($s0)
                la      $t9, i2d_X509
                lw      $v0, 0($v1)
                addiu   $a1, $sp, 0x70+var_44
                lw      $a0, 0($v0)
                jalr    $t9 ; i2d_X509
                sw      $s4, 0x70+var_48($sp)
                sw      $v0, 0x70+var_40($sp)
                srl     $v1, $v0, 8
                lw      $v0, 0x70+var_48($sp)
                lw      $gp, 0x70+var_50($sp)
                sb      $v1, 0($v0)
                lw      $v0, 0x70+var_48($sp)
                lw      $a0, 0x70+var_40($sp)
                sb      $a0, 1($v0)
                lw      $v1, 0x98($s0)
                lw      $v0, 0x70+var_48($sp)
                lw      $a0, 0($v1)
                la      $t9, EVP_SignFinal
                lw      $a3, 4($a0)
                lw      $a1, 0x70+var_44($sp)
                addiu   $v0, 2
                move    $a0, $s2
                addiu   $a2, $sp, 0x70+var_40
                jalr    $t9 ; EVP_SignFinal
                sw      $v0, 0x70+var_48($sp)
                lw      $gp, 0x70+var_50($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s2
                lw      $v1, 0x70+var_40($sp)
                lw      $v0, 0x70+var_48($sp)
                srl     $v1, 8
                lw      $gp, 0x70+var_50($sp)
                sb      $v1, 0($v0)
                lw      $a0, 0x70+var_40($sp)
                lw      $v0, 0x70+var_48($sp)
                li      $v1, 0x1053
                sb      $a0, 1($v0)
                lw      $v0, 0x70+var_40($sp)
                lw      $a1, 0x70+var_44($sp)
                sw      $v1, 0x34($s0)
                addu    $a1, $v0
                lw      $v0, 0x70+var_48($sp)
                subu    $a0, $a1, $s1
                addiu   $v0, 2
                sw      $v0, 0x70+var_48($sp)
                sw      $a0, 0x44($s0)
                sw      $a1, 0x70+var_44($sp)
                b       loc_C170
                sw      $zero, 0x48($s0)
 # ---------------------------------------------------------------------------

loc_C4E4:                                # CODE XREF: sub_C104+154↑j
                lw      $a0, 0x70+var_3C($sp)
                beqz    $a0, loc_C504
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $a0, 0x70+var_38($sp)
                bnez    $a0, loc_C564
                lw      $gp, 0x70+var_50($sp)

loc_C504:                                # CODE XREF: sub_C104+3E4↑j
                                         # sub_C104+46C↓j
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x64  # 'd'
                li      $a2, 0x6A  # 'j'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_C210
                lw      $gp, 0x70+var_50($sp)
 # ---------------------------------------------------------------------------

loc_C528:                                # CODE XREF: sub_C104+174↑j
                la      $t9, SSL_use_PrivateKey
                lw      $a1, 0x70+var_38($sp)
                jalr    $t9 ; SSL_use_PrivateKey
                move    $a0, $s0
                bnez    $v0, loc_C284
                lw      $gp, 0x70+var_50($sp)
                b       loc_C284
                move    $s2, $zero
 # ---------------------------------------------------------------------------

loc_C548:                                # CODE XREF: sub_C104+1D0↑j
                la      $t9, ssl2_part_read
                move    $a0, $s0
                jalr    $t9 ; ssl2_part_read
                li      $a1, 0x64  # 'd'
                lw      $gp, 0x70+var_50($sp)
                b       loc_C184
                move    $v1, $v0
 # ---------------------------------------------------------------------------

loc_C564:                                # CODE XREF: sub_C104+15C↑j
                                         # sub_C104+3F8↑j
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                b       loc_C504
                lw      $gp, 0x70+var_50($sp)
 # ---------------------------------------------------------------------------

loc_C578:                                # CODE XREF: sub_C104+218↑j
                move    $a0, $s0
                jalr    $t9 ; ssl2_return_error
                li      $a1, 6
                lw      $gp, 0x70+var_50($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x64  # 'd'
                li      $a2, 0x66  # 'f'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_50($sp)
                b       loc_C184
                li      $v1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_C5B0:                                # CODE XREF: sub_C104+E0↑j
                li      $v0, 4
                li      $v1, 0xFFFFFFFF
                b       loc_C184
                sw      $v0, 0x18($s0)
 # End of function sub_C104


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_connect
ssl2_connect:                            # DATA XREF: LOAD:00003C88↑o
                                         # ssl2_connect+6F4↓o ...

var_70          = -0x70
var_6C          = -0x6C
var_68          = -0x68
var_60          = -0x60
var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x55D90
                addu    $gp, $t9
                addiu   $sp, -0x80
                sw      $ra, 0x80+var_4($sp)
                sw      $fp, 0x80+var_8($sp)
                sw      $s7, 0x80+var_C($sp)
                sw      $s6, 0x80+var_10($sp)
                sw      $s5, 0x80+var_14($sp)
                sw      $s4, 0x80+var_18($sp)
                sw      $s3, 0x80+var_1C($sp)
                sw      $s2, 0x80+var_20($sp)
                sw      $s1, 0x80+var_24($sp)
                sw      $s0, 0x80+var_28($sp)
                sw      $gp, 0x80+var_60($sp)
                la      $t9, time
                move    $s3, $a0
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, RAND_add
                sw      $v0, 0x80+var_58($sp)
                addiu   $a0, $sp, 0x80+var_58
                li      $a1, 4
                move    $a2, $zero
                jalr    $t9 ; RAND_add
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x80+var_60($sp)
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $s7, 0xD0($s3)
                lw      $gp, 0x80+var_60($sp)
                beqz    $s7, loc_D0F4
                sw      $zero, 0($v0)

loc_C65C:                                # CODE XREF: ssl2_connect+B38↓j
                lw      $v0, 0x1C($s3)
                la      $t9, SSL_state
                addiu   $v0, 1
                sw      $v0, 0x1C($s3)
                jalr    $t9 ; SSL_state
                move    $a0, $s3
                andi    $v0, 0x3000
                beqz    $v0, loc_C838
                lw      $gp, 0x80+var_60($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s3
                andi    $v0, 0x4000
                bnez    $v0, loc_C838
                lw      $gp, 0x80+var_60($sp)

loc_C698:                                # CODE XREF: ssl2_connect+284↓j
                lw      $s2, 0x34($s3)
                addiu   $v1, $sp, 0x80+var_54
                slti    $v0, $s2, 0x1042
                addiu   $a0, $sp, 0x80+var_50
                sw      $v0, 0x80+var_38($sp)
                sw      $v1, 0x80+var_34($sp)
                sw      $a0, 0x80+var_30($sp)

loc_C6B4:                                # CODE XREF: ssl2_connect+148↓j
                                         # ssl2_connect+270↓j
                lw      $v0, 0x80+var_38($sp)
                beqz    $v0, loc_C744
                slti    $v0, $s2, 0x1072

loc_C6C0:                                # CODE XREF: ssl2_connect+178↓j
                slti    $v0, $s2, 0x1040
                bnez    $v0, loc_C84C
                slti    $v0, $s2, 0x1012
                li      $v0, 0x1040
                beq     $s2, $v0, loc_CD60
                li      $v1, 3

loc_C6D8:                                # CODE XREF: ssl2_connect+7E8↓j
                la      $t9, ssl2_do_write
                jalr    $t9 ; ssl2_do_write
                move    $a0, $s3
                move    $s0, $v0
                blez    $v0, loc_CB34
                lw      $gp, 0x80+var_60($sp)
                li      $v0, 0x1060
                sw      $v0, 0x34($s3)
                sw      $zero, 0x44($s3)

loc_C6FC:                                # CODE XREF: ssl2_connect+408↓j
                                         # ssl2_connect+66C↓j ...
                beqz    $s7, loc_C828
                nop

loc_C704:                                # CODE XREF: ssl2_connect:loc_C820↓j
                lw      $s0, 0x34($s3)
                beq     $s2, $s0, loc_C6B4
                move    $a0, $s3
                sw      $s2, 0x34($s3)
                li      $a1, 0x1001
                move    $t9, $s7
                jalr    $t9
                li      $a2, 1
                slti    $v0, $s0, 0x1042
                sw      $v0, 0x80+var_38($sp)
                lw      $v0, 0x80+var_38($sp)
                lw      $gp, 0x80+var_60($sp)
                move    $s2, $s0
                bnez    $v0, loc_C6C0
                sw      $s0, 0x34($s3)
                slti    $v0, $s2, 0x1072

loc_C744:                                # CODE XREF: ssl2_connect+F8↑j
                beqz    $v0, loc_C9D0
                li      $v0, 0x1090
                slti    $v0, $s2, 0x1070
                bnez    $v0, loc_CA44
                slti    $v0, $s2, 0x1050
                lw      $v0, 0x3C($s3)
                li      $v1, 0x1070
                beq     $s2, $v1, loc_CE5C
                lw      $s1, 4($v0)

loc_C768:                                # CODE XREF: ssl2_connect:loc_D6AC↓j
                lw      $a1, 0x44($s3)
                li      $s0, 0x11
                subu    $s0, $a1
                la      $t9, ssl2_read
                move    $a2, $s0
                addu    $a1, $s1
                jalr    $t9 ; ssl2_read
                move    $a0, $s3
                slt     $s0, $v0, $s0
                lw      $gp, 0x80+var_60($sp)
                bnez    $s0, loc_D4D0
                move    $a2, $v0
                lw      $v0, 0x44($s3)
                lw      $t9, 0x64($s3)
                addu    $a2, $v0
                beqz    $t9, loc_C7D4
                sw      $a2, 0x44($s3)
                lw      $v0, 0x68($s3)
                lw      $a1, 0($s3)
                move    $a0, $zero
                sw      $a2, 0x80+var_70($sp)
                sw      $v0, 0x80+var_68($sp)
                sw      $s3, 0x80+var_6C($sp)
                move    $a2, $zero
                jalr    $t9
                move    $a3, $s1
                lw      $gp, 0x80+var_60($sp)

loc_C7D4:                                # CODE XREF: ssl2_connect+1E4↑j
                lw      $v0, 0x6C($s3)
                beqz    $v0, loc_CF18
                li      $v1, 0x10
                lw      $v0, 0xF8($s3)
                andi    $v0, 1
                bnez    $v0, loc_C81C
                li      $v0, 3
                lw      $a1, 0xC0($s3)
                lw      $a2, 0x44($a1)
                sltiu   $v0, $a2, 0x21  # '!'
                beqz    $v0, loc_D6B4
                la      $t9, memcmp
                addiu   $a0, $s1, 1
                jalr    $t9 ; memcmp
                addiu   $a1, 0x48  # 'H'
                bnez    $v0, loc_D6B4
                lw      $gp, 0x80+var_60($sp)
                li      $v0, 3

loc_C81C:                                # CODE XREF: ssl2_connect+228↑j
                sw      $v0, 0x34($s3)

loc_C820:                                # CODE XREF: ssl2_connect+99C↓j
                bnez    $s7, loc_C704
                nop

loc_C828:                                # CODE XREF: ssl2_connect:loc_C6FC↑j
                lw      $s2, 0x34($s3)
                slti    $t9, $s2, 0x1042
                b       loc_C6B4
                sw      $t9, 0x80+var_38($sp)
 # ---------------------------------------------------------------------------

loc_C838:                                # CODE XREF: ssl2_connect+B8↑j
                                         # ssl2_connect+D0↑j
                la      $t9, SSL_clear
                jalr    $t9 ; SSL_clear
                move    $a0, $s3
                b       loc_C698
                lw      $gp, 0x80+var_60($sp)
 # ---------------------------------------------------------------------------

loc_C84C:                                # CODE XREF: ssl2_connect+104↑j
                beqz    $v0, loc_CB90
                slti    $v0, $s2, 0x1020
                slti    $v0, $s2, 0x1010
                bnez    $v0, loc_CCC0
                li      $v0, 0x1000
                lw      $v0, 0x3C($s3)
                lw      $a0, 0x34($s3)
                li      $v1, 0x1010
                sw      $zero, 0x30($s3)
                bne     $a0, $v1, loc_C9A8
                lw      $s1, 4($v0)
                lw      $v1, 0xC0($s3)
                beqz    $v1, loc_C894
                la      $t9, ssl_get_new_session
                lw      $v1, 0($v1)
                lw      $v0, 0($s3)
                beq     $v1, $v0, loc_C8A8
                nop

loc_C894:                                # CODE XREF: ssl2_connect+2BC↑j
                move    $a0, $s3
                jalr    $t9 ; ssl_get_new_session
                move    $a1, $zero
                beqz    $v0, loc_D63C
                lw      $gp, 0x80+var_60($sp)

loc_C8A8:                                # CODE XREF: ssl2_connect+2CC↑j
                la      $t9, SSL_get_ciphers
                li      $v1, 2
                li      $v0, 1
                sb      $v1, 2($s1)
                move    $a0, $s3
                sb      $v0, 0($s1)
                jalr    $t9 ; SSL_get_ciphers
                sb      $zero, 1($s1)
                lw      $gp, 0x80+var_60($sp)
                addiu   $s0, $s1, 9
                la      $t9, ssl_cipher_list_to_bytes
                move    $a0, $s3
                move    $a1, $v0
                move    $a2, $s0
                jalr    $t9 ; ssl_cipher_list_to_bytes
                move    $a3, $zero
                move    $a0, $v0
                beqz    $v0, loc_D864
                lw      $gp, 0x80+var_60($sp)
                sra     $v0, 8
                sb      $v0, 3($s1)
                sb      $a0, 4($s1)
                lw      $v0, 0xC0($s3)
                addu    $s0, $a0
                lw      $s4, 0x44($v0)
                addiu   $v0, $s4, -1
                sltiu   $v0, 0x20  # ' '
                bnez    $v0, loc_D5DC
                addiu   $v1, $s1, 5
                sb      $zero, 5($s1)
                addiu   $a0, $s1, 7
                sb      $zero, 1($v1)

loc_C928:                                # CODE XREF: ssl2_connect+1048↓j
                lw      $v1, 0x54($s3)
                li      $v0, 0x10
                sw      $v0, 0x64($v1)
                sb      $v0, 1($a0)
                sb      $zero, 0($a0)
                lw      $a0, 0x54($s3)
                la      $t9, RAND_pseudo_bytes
                addiu   $a0, 0x68  # 'h'
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                blez    $v0, loc_CB30
                lw      $gp, 0x80+var_60($sp)
                lw      $v0, 0x54($s3)
                addiu   $a2, $s0, 0x10
                lw      $a0, 0x68($v0)
                addiu   $v0, 0x68  # 'h'
                lw      $a3, 0xC($v0)
                lw      $v1, 4($v0)
                lw      $a1, 8($v0)
                usw     $a0, 0($s0)
                usw     $v1, 4($s0)
                usw     $a1, 8($s0)
                swl     $a3, 0xF($s0)
                subu    $a2, $s1
                li      $v0, 0x1011
                swr     $a3, 0xC($s0)
                sw      $v0, 0x34($s3)
                sw      $a2, 0x44($s3)
                sw      $zero, 0x48($s3)

loc_C9A8:                                # CODE XREF: ssl2_connect+2B0↑j
                la      $t9, ssl2_do_write
                jalr    $t9 ; ssl2_do_write
                move    $a0, $s3
                move    $s0, $v0
                blez    $v0, loc_CB34
                lw      $gp, 0x80+var_60($sp)
                li      $v0, 0x1020
                sw      $v0, 0x34($s3)
                b       loc_C6FC
                sw      $zero, 0x44($s3)
 # ---------------------------------------------------------------------------

loc_C9D0:                                # CODE XREF: ssl2_connect:loc_C744↑j
                beq     $s2, $v0, loc_CDB0
                slti    $v0, $s2, 0x1091
                beqz    $v0, loc_CC34
                li      $v0, 0x4000
                li      $v0, 0x1080
                beq     $s2, $v0, loc_CDE0
                la      $t9, ssl2_enc_init
                la      $t9, ERR_put_error

loc_C9F0:                                # CODE XREF: ssl2_connect:loc_CA44↓j
                                         # ssl2_connect+4A0↓j ...
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x7B  # '{'
                li      $a2, 0xFF
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                li      $s0, 0xFFFFFFFF

loc_CA10:                                # CODE XREF: ssl2_connect:loc_CB40↓j
                move    $v0, $s0
                lw      $ra, 0x80+var_4($sp)
                lw      $fp, 0x80+var_8($sp)
                lw      $s7, 0x80+var_C($sp)
                lw      $s6, 0x80+var_10($sp)
                lw      $s5, 0x80+var_14($sp)
                lw      $s4, 0x80+var_18($sp)
                lw      $s3, 0x80+var_1C($sp)
                lw      $s2, 0x80+var_20($sp)
                lw      $s1, 0x80+var_24($sp)
                lw      $s0, 0x80+var_28($sp)
                jr      $ra
                addiu   $sp, 0x80
 # ---------------------------------------------------------------------------

loc_CA44:                                # CODE XREF: ssl2_connect+190↑j
                bnez    $v0, loc_C9F0
                la      $t9, ERR_put_error
                slti    $v0, $s2, 0x1054
                bnez    $v0, loc_CDB4
                la      $t9, loc_10000
                addiu   $v0, $s2, -0x1060
                sltiu   $v0, 2
                beqz    $v0, loc_C9F0
                la      $t9, ERR_put_error
                lw      $a0, 0x3C($s3)
                li      $v0, 0x1060
                beq     $s2, $v0, loc_CF8C
                lw      $s1, 4($a0)

loc_CA78:                                # CODE XREF: ssl2_connect+1140↓j
                lw      $v0, 0x54($s3)
                lw      $a1, 0x44($s3)
                lw      $v1, 0x64($v0)
                la      $t9, ssl2_read
                addiu   $s4, $v1, 1
                subu    $s0, $s4, $a1
                move    $a2, $s0
                addu    $a1, $s1
                jalr    $t9 ; ssl2_read
                move    $a0, $s3
                slt     $s0, $v0, $s0
                bnez    $s0, loc_D020
                lw      $gp, 0x80+var_60($sp)
                lw      $t9, 0x64($s3)
                beqz    $t9, loc_CADC
                move    $a0, $zero
                lw      $v0, 0x68($s3)
                lw      $a1, 0($s3)
                sw      $s4, 0x80+var_70($sp)
                sw      $v0, 0x80+var_68($sp)
                sw      $s3, 0x80+var_6C($sp)
                move    $a2, $zero
                jalr    $t9
                move    $a3, $s1
                lw      $gp, 0x80+var_60($sp)

loc_CADC:                                # CODE XREF: ssl2_connect+4F0↑j
                lw      $a1, 0x54($s3)
                la      $t9, memcmp
                lw      $a2, 0x64($a1)
                addiu   $a0, $s1, 1
                jalr    $t9 ; memcmp
                addiu   $a1, 0x68  # 'h'
                beqz    $v0, loc_CDD0
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6E  # 'n'
                li      $a2, 0x88
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)

loc_CB30:                                # CODE XREF: ssl2_connect+390↑j
                                         # ssl2_connect+82C↓j ...
                li      $s0, 0xFFFFFFFF

loc_CB34:                                # CODE XREF: ssl2_connect+128↑j
                                         # ssl2_connect+3F8↑j ...
                lw      $v0, 0x1C($s3)

loc_CB38:                                # CODE XREF: ssl2_connect+950↓j
                                         # ssl2_connect+F2C↓j
                addiu   $v0, -1
                sw      $v0, 0x1C($s3)

loc_CB40:                                # CODE XREF: ssl2_connect+798↓j
                                         # ssl2_connect+9C4↓j ...
                beqz    $s7, loc_CA10
                move    $a0, $s3
                move    $a2, $s0
                move    $t9, $s7
                jalr    $t9
                li      $a1, 0x1002
                move    $v0, $s0
                lw      $gp, 0x80+var_60($sp)
                lw      $ra, 0x80+var_4($sp)
                lw      $fp, 0x80+var_8($sp)
                lw      $s7, 0x80+var_C($sp)
                lw      $s6, 0x80+var_10($sp)
                lw      $s5, 0x80+var_14($sp)
                lw      $s4, 0x80+var_18($sp)
                lw      $s3, 0x80+var_1C($sp)
                lw      $s2, 0x80+var_20($sp)
                lw      $s1, 0x80+var_24($sp)
                lw      $s0, 0x80+var_28($sp)
                jr      $ra
                addiu   $sp, 0x80
 # ---------------------------------------------------------------------------

loc_CB90:                                # CODE XREF: ssl2_connect:loc_C84C↑j
                bnez    $v0, loc_C9F0
                la      $t9, ERR_put_error
                slti    $v0, $s2, 0x1022
                beqz    $v0, loc_CE14
                addiu   $v0, $s2, -0x1030
                lw      $v0, 0x3C($s3)
                li      $v1, 0x1020
                beq     $s2, $v1, loc_D514
                lw      $s4, 4($v0)
                lw      $a1, 0x54($s3)

loc_CBB8:                                # CODE XREF: ssl2_connect+1014↓j
                lw      $v1, 0xE4($a1)
                lw      $v0, 0xE0($a1)
                lw      $a0, 0xD8($a1)
                addu    $v0, $v1
                addiu   $v0, 0xB
                addu    $s1, $v0, $a0
                sltiu   $v1, $s1, 0x4000
                beqz    $v1, loc_D7F0
                la      $t9, ssl2_read
                lw      $a1, 0x44($s3)
                subu    $s0, $s1, $a1
                move    $a0, $s3
                addu    $a1, $s4
                jalr    $t9 ; ssl2_read
                move    $a2, $s0
                beq     $s0, $v0, loc_D040
                lw      $gp, 0x80+var_60($sp)

loc_CBFC:                                # CODE XREF: ssl2_connect+F7C↓j
                la      $t9, ssl2_part_read
                move    $a2, $v0
                move    $a0, $s3
                jalr    $t9 ; ssl2_part_read
                li      $a1, 0x6D  # 'm'
                move    $s0, $v0
                blez    $v0, loc_CB34
                lw      $gp, 0x80+var_60($sp)

loc_CC1C:                                # CODE XREF: ssl2_connect+B2C↓j
                lw      $v0, 0x6C($s3)
                bnez    $v0, loc_CE08
                sw      $zero, 0x44($s3)
                li      $v0, 0x1030
                b       loc_C6FC
                sw      $v0, 0x34($s3)
 # ---------------------------------------------------------------------------

loc_CC34:                                # CODE XREF: ssl2_connect+418↑j
                beq     $s2, $v0, loc_CC44
                li      $v0, 0x5000
                bne     $s2, $v0, loc_C9F0
                la      $t9, ERR_put_error

loc_CC44:                                # CODE XREF: ssl2_connect:loc_CC34↑j
                                         # ssl2_connect:loc_CCC0↓j ...
                beqz    $s7, loc_CC64
                sw      $zero, 0x24($s3)
                move    $a0, $s3
                li      $a1, 0x10
                move    $t9, $s7
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x80+var_60($sp)

loc_CC64:                                # CODE XREF: ssl2_connect:loc_CC44↑j
                lw      $s0, 0x3C($s3)
                li      $v0, 2
                li      $v1, 0x1000
                sw      $v0, 0($s3)
                beqz    $s0, loc_D4F4
                sw      $v1, 4($s3)

loc_CC7C:                                # CODE XREF: ssl2_connect+F44↓j
                la      $t9, BUF_MEM_grow
                move    $a0, $s0
                jalr    $t9 ; BUF_MEM_grow
                li      $a1, 0x3FFF
                beqz    $v0, loc_D7BC
                lw      $gp, 0x80+var_60($sp)
                lw      $v1, 0xDC($s3)
                li      $v0, 0x1010
                sw      $v0, 0x34($s3)
                sw      $zero, 0x44($s3)
                lw      $v0, 0x34($v1)
                sw      $s0, 0x3C($s3)
                addiu   $v0, 1
                sw      $v0, 0x34($v1)
                la      $v0, ssl2_connect
                b       loc_C6FC
                sw      $v0, 0x20($s3)
 # ---------------------------------------------------------------------------

loc_CCC0:                                # CODE XREF: ssl2_connect+298↑j
                beq     $s2, $v0, loc_CC44
                li      $v0, 0x1003
                beq     $s2, $v0, loc_CC44
                li      $v0, 3
                bne     $s2, $v0, loc_C9F0
                la      $t9, ERR_put_error
                lw      $a0, 0x3C($s3)
                beqz    $a0, loc_CCF4
                la      $t9, BUF_MEM_free
                jalr    $t9 ; BUF_MEM_free
                nop
                lw      $gp, 0x80+var_60($sp)
                sw      $zero, 0x3C($s3)

loc_CCF4:                                # CODE XREF: ssl2_connect+71C↑j
                la      $t9, ssl_update_cache
                sw      $zero, 0x44($s3)
                move    $a0, $s3
                jalr    $t9 ; ssl_update_cache
                li      $a1, 1
                lw      $v0, 0x6C($s3)
                beqz    $v0, loc_CF64
                lw      $gp, 0x80+var_60($sp)
                lw      $v1, 0xDC($s3)
                lw      $v0, 0x58($v1)
                addiu   $v0, 1
                sw      $v0, 0x58($v1)
                lw      $v0, 0x3C($v1)
                addiu   $v0, 1
                beqz    $s7, loc_CF78
                sw      $v0, 0x3C($v1)

loc_CD34:                                # CODE XREF: ssl2_connect+9B0↓j
                move    $a0, $s3
                li      $a1, 0x20  # ' '
                move    $t9, $s7
                jalr    $t9
                li      $a2, 1
                lw      $v0, 0x1C($s3)
                lw      $gp, 0x80+var_60($sp)
                addiu   $v0, -1
                li      $s0, 1
                b       loc_CB40
                sw      $v0, 0x1C($s3)
 # ---------------------------------------------------------------------------

loc_CD60:                                # CODE XREF: ssl2_connect+110↑j
                lw      $v0, 0x3C($s3)
                lw      $a0, 4($v0)
                sb      $v1, 0($a0)
                lw      $a1, 0x54($s3)
                lw      $a2, 0x88($a1)
                sltiu   $v0, $a2, 0x11
                beqz    $v0, loc_D88C
                la      $t9, memcpy
                addiu   $a0, 1
                jalr    $t9 ; memcpy
                addiu   $a1, 0x8C
                lw      $a0, 0x54($s3)
                li      $v1, 0x1041
                lw      $gp, 0x80+var_60($sp)
                sw      $v1, 0x34($s3)
                lw      $v0, 0x88($a0)
                addiu   $v0, 1
                sw      $zero, 0x48($s3)
                b       loc_C6D8
                sw      $v0, 0x44($s3)
 # ---------------------------------------------------------------------------

loc_CDB0:                                # CODE XREF: ssl2_connect:loc_C9D0↑j
                la      $t9, loc_10000

loc_CDB4:                                # CODE XREF: ssl2_connect+490↑j
                addiu   $t9, (sub_C104 - 0x10000)
                jalr    $t9 ; sub_C104
                move    $a0, $s3
                lw      $gp, 0x80+var_60($sp)
                move    $s0, $v0

loc_CDC8:                                # CODE XREF: ssl2_connect+A78↓j
                blez    $s0, loc_CB34
                nop

loc_CDD0:                                # CODE XREF: ssl2_connect+534↑j
                li      $v0, 0x1070
                sw      $v0, 0x34($s3)
                b       loc_C6FC
                sw      $zero, 0x44($s3)
 # ---------------------------------------------------------------------------

loc_CDE0:                                # CODE XREF: ssl2_connect+424↑j
                move    $a0, $s3
                jalr    $t9 ; ssl2_enc_init
                li      $a1, 1
                beqz    $v0, loc_CB30
                lw      $gp, 0x80+var_60($sp)
                lw      $a1, 0x54($s3)
                li      $v0, 0x1040
                sw      $zero, 4($a1)
                b       loc_C6FC
                sw      $v0, 0x34($s3)
 # ---------------------------------------------------------------------------

loc_CE08:                                # CODE XREF: ssl2_connect+660↑j
                li      $v0, 0x1080
                b       loc_C6FC
                sw      $v0, 0x34($s3)
 # ---------------------------------------------------------------------------

loc_CE14:                                # CODE XREF: ssl2_connect+5DC↑j
                sltiu   $v0, 2
                beqz    $v0, loc_C9F0
                la      $t9, ERR_put_error
                lw      $v0, 0x3C($s3)
                li      $v1, 0x1030
                lw      $v0, 4($v0)
                beq     $s2, $v1, loc_D100
                sw      $v0, 0x80+var_40($sp)

loc_CE34:                                # CODE XREF: ssl2_connect+D74↓j
                la      $t9, ssl2_do_write
                jalr    $t9 ; ssl2_do_write
                move    $a0, $s3
                move    $s0, $v0
                blez    $v0, loc_CB34
                lw      $gp, 0x80+var_60($sp)
                li      $v0, 0x1080
                sw      $v0, 0x34($s3)
                b       loc_C6FC
                sw      $zero, 0x44($s3)
 # ---------------------------------------------------------------------------

loc_CE5C:                                # CODE XREF: ssl2_connect+1A0↑j
                lw      $a1, 0x44($s3)
                la      $t9, ssl2_read
                li      $s0, 1
                subu    $a2, $s0, $a1
                move    $a0, $s3
                jalr    $t9 ; ssl2_read
                addu    $a1, $s1
                lw      $a2, 0x44($s3)
                subu    $s0, $a2
                slt     $s0, $v0, $s0
                bnez    $s0, loc_D6F0
                lw      $gp, 0x80+var_60($sp)
                addu    $v0, $a2
                sw      $v0, 0x44($s3)
                lbu     $v1, 0($s1)
                li      $v0, 7
                beq     $v1, $v0, loc_D708
                li      $v0, 6
                beq     $v1, $v0, loc_D6AC
                li      $v0, 0x1071
                bnez    $v1, loc_DB18
                li      $a2, 0xC8
                la      $t9, ERR_put_error
                move    $a3, $zero
                li      $a0, 0x14
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                lw      $gp, 0x80+var_60($sp)
                lw      $a1, 0x44($s3)
                li      $a2, 3
                la      $t9, ssl2_read
                subu    $a2, $a1
                move    $a0, $s3
                jalr    $t9 ; ssl2_read
                addu    $a1, $s1, $a1
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ssl2_part_read
                move    $a2, $v0
                move    $a0, $s3
                jalr    $t9 ; ssl2_part_read
                li      $a1, 0x6E  # 'n'
                move    $s0, $v0
                bgtz    $s0, loc_C6FC
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB38
                lw      $v0, 0x1C($s3)
 # ---------------------------------------------------------------------------

loc_CF18:                                # CODE XREF: ssl2_connect+218↑j
                lw      $t0, 0xC0($s3)
                sw      $v1, 0x44($t0)
                addiu   $v0, $s1, 1
                lwl     $a1, 3($v0)
                lwl     $a2, 7($v0)
                lwl     $a3, 0xB($v0)
                lwl     $a0, 0xF($v0)
                lwr     $a1, 0($v0)
                lwr     $a0, 0xC($v0)
                lwr     $a2, 4($v0)
                lwr     $a3, 8($v0)
                addiu   $v1, $t0, 0x48  # 'H'
                li      $v0, 3
                sw      $a1, 0x48($t0)
                sw      $a0, 0xC($v1)
                sw      $a2, 4($v1)
                sw      $a3, 8($v1)
                b       loc_C820
                sw      $v0, 0x34($s3)
 # ---------------------------------------------------------------------------

loc_CF64:                                # CODE XREF: ssl2_connect+74C↑j
                lw      $v1, 0xDC($s3)
                lw      $v0, 0x3C($v1)
                addiu   $v0, 1
                bnez    $s7, loc_CD34
                sw      $v0, 0x3C($v1)

loc_CF78:                                # CODE XREF: ssl2_connect+76C↑j
                lw      $v0, 0x1C($s3)
                li      $s0, 1
                addiu   $v0, -1
                b       loc_CB40
                sw      $v0, 0x1C($s3)
 # ---------------------------------------------------------------------------

loc_CF8C:                                # CODE XREF: ssl2_connect+4B0↑j
                lw      $a1, 0x44($s3)
                la      $t9, ssl2_read
                li      $s0, 1
                subu    $a2, $s0, $a1
                move    $a0, $s3
                jalr    $t9 ; ssl2_read
                addu    $a1, $s1
                lw      $a2, 0x44($s3)
                subu    $s0, $a2
                slt     $s0, $v0, $s0
                bnez    $s0, loc_D020
                lw      $gp, 0x80+var_60($sp)
                addu    $v0, $a2
                li      $v1, 0x1061
                sw      $v0, 0x44($s3)
                sw      $v1, 0x34($s3)
                lbu     $v1, 0($s1)
                li      $v0, 5
                beq     $v1, $v0, loc_D6FC
                nop
                bnez    $v1, loc_DAA8
                la      $t9, ERR_put_error
                move    $a3, $zero
                li      $a0, 0x14
                li      $a1, 0x6E  # 'n'
                li      $a2, 0xC8
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                lw      $gp, 0x80+var_60($sp)
                lw      $a1, 0x44($s3)
                li      $a2, 3
                la      $t9, ssl2_read
                subu    $a2, $a1
                move    $a0, $s3
                jalr    $t9 ; ssl2_read
                addu    $a1, $s1
                lw      $gp, 0x80+var_60($sp)

loc_D020:                                # CODE XREF: ssl2_connect+4E4↑j
                                         # ssl2_connect+9F4↑j
                la      $t9, ssl2_part_read
                move    $a2, $v0
                move    $a0, $s3
                jalr    $t9 ; ssl2_part_read
                li      $a1, 0x6E  # 'n'
                lw      $gp, 0x80+var_60($sp)
                b       loc_CDC8
                move    $s0, $v0
 # ---------------------------------------------------------------------------

loc_D040:                                # CODE XREF: ssl2_connect+634↑j
                lw      $t9, 0x64($s3)
                beqz    $t9, loc_D070
                move    $a0, $zero
                lw      $v0, 0x68($s3)
                lw      $a1, 0($s3)
                sw      $s1, 0x80+var_70($sp)
                sw      $v0, 0x80+var_68($sp)
                sw      $s3, 0x80+var_6C($sp)
                move    $a2, $zero
                jalr    $t9
                move    $a3, $s4
                lw      $gp, 0x80+var_60($sp)

loc_D070:                                # CODE XREF: ssl2_connect+A84↑j
                lw      $v0, 0x6C($s3)
                beqz    $v0, loc_D33C
                addiu   $s0, $s4, 0xB
                lw      $v1, 0x54($s3)
                lw      $v0, 0xE0($v1)
                bnez    $v0, loc_D930
                la      $t9, ERR_put_error
                lw      $v0, 0xDC($v1)
                bnez    $v0, loc_D658
                nop

loc_D098:                                # CODE XREF: ssl2_connect+10A0↓j
                lw      $v0, 0xE4($v1)
                bnez    $v0, loc_D9F0
                la      $t9, ERR_put_error

loc_D0A4:                                # CODE XREF: ssl2_connect+F08↓j
                lw      $v1, 0xC0($s3)
                lw      $v0, 0x90($v1)
                beqz    $v0, loc_D784
                la      $t9, ssl2_return_error
                lw      $v0, 8($v0)
                lw      $a0, 0x94($v1)
                lw      $v1, 0($v0)
                bne     $a0, $v1, loc_D788
                move    $a0, $s3
                lw      $a0, 0x54($s3)
                lw      $a2, 0xD8($a0)
                sltiu   $v0, $a2, 0x11
                beqz    $v0, loc_D8B4
                sw      $a2, 0x88($a0)
                la      $t9, memcpy
                addiu   $a0, 0x8C
                jalr    $t9 ; memcpy
                move    $a1, $s0
                b       loc_CC1C
                lw      $gp, 0x80+var_60($sp)
 # ---------------------------------------------------------------------------

loc_D0F4:                                # CODE XREF: ssl2_connect+94↑j
                lw      $v0, 0xDC($s3)
                b       loc_C65C
                lw      $s7, 0x9C($v0)
 # ---------------------------------------------------------------------------

loc_D100:                                # CODE XREF: ssl2_connect+86C↑j
                lw      $a0, 0xC0($s3)
                la      $t9, ssl_cipher_get_evp
                lw      $a1, 0x80+var_34($sp)
                lw      $a2, 0x80+var_30($sp)
                sw      $zero, 0x80+var_70($sp)
                sw      $zero, 0x80+var_6C($sp)
                jalr    $t9 ; ssl_cipher_get_evp
                move    $a3, $zero
                beqz    $v0, loc_D8EC
                lw      $gp, 0x80+var_60($sp)
                lw      $a0, 0x80+var_40($sp)
                li      $v0, 2
                lw      $s4, 0xC0($s3)
                sb      $v0, 0($a0)
                lw      $v1, 8($s3)
                lw      $v0, 0x80+var_40($sp)
                lw      $t9, 0x4C($v1)
                lw      $a0, 0xAC($s4)
                addiu   $s0, $v0, 1
                jalr    $t9
                move    $a1, $s0
                lw      $gp, 0x80+var_60($sp)
                lw      $a0, 0x80+var_54($sp)
                la      $t9, EVP_CIPHER_iv_length
                jalr    $t9 ; EVP_CIPHER_iv_length
                move    $s5, $v0
                move    $a1, $v0
                slti    $v0, 9
                lw      $gp, 0x80+var_60($sp)
                beqz    $v0, loc_D83C
                sw      $a1, 4($s4)
                blez    $a1, loc_D194
                la      $t9, RAND_pseudo_bytes
                jalr    $t9 ; RAND_pseudo_bytes
                addiu   $a0, $s4, 8
                blez    $v0, loc_CB30
                lw      $gp, 0x80+var_60($sp)

loc_D194:                                # CODE XREF: ssl2_connect+BBC↑j
                la      $t9, EVP_CIPHER_key_length
                jalr    $t9 ; EVP_CIPHER_key_length
                lw      $a0, 0x80+var_54($sp)
                move    $s1, $v0
                lw      $gp, 0x80+var_60($sp)
                blez    $v0, loc_D1D4
                sw      $v0, 0x10($s4)
                slti    $v0, 0x31  # '1'
                beqz    $v0, loc_D840
                la      $t9, ssl2_return_error
                la      $t9, RAND_bytes
                addiu   $a0, $s4, 0x14
                jalr    $t9 ; RAND_bytes
                move    $a1, $s1
                blez    $v0, loc_D63C
                lw      $gp, 0x80+var_60($sp)

loc_D1D4:                                # CODE XREF: ssl2_connect+BE8↑j
                lw      $v1, 0xAC($s4)
                lw      $v0, 0x24($v1)
                andi    $v0, 2
                beqz    $v0, loc_D610
                li      $a0, 8

loc_D1E8:                                # CODE XREF: ssl2_connect+1060↓j
                slt     $v0, $s1, $a0
                bnez    $v0, loc_D954
                subu    $v1, $s1, $a0
                move    $fp, $v1
                sra     $v0, $v1, 8
                andi    $v0, 0xFF
                move    $s1, $a0
                andi    $v1, 0xFF
                move    $a2, $fp

loc_D20C:                                # CODE XREF: ssl2_connect+10E4↓j
                lw      $a0, 0x80+var_40($sp)
                addu    $s5, $s0, $s5
                addiu   $a0, 0xA
                sw      $a0, 0x80+var_3C($sp)
                addiu   $a0, $s4, 0x14
                sw      $a0, 0x80+var_48($sp)
                sb      $v1, 1($s5)
                sb      $v0, 0($s5)
                la      $t9, memcpy
                lw      $a0, 0x80+var_3C($sp)
                lw      $a1, 0x80+var_48($sp)
                jalr    $t9 ; memcpy
                li      $s0, 2
                lw      $v1, 0x54($s3)
                lw      $a1, 0x90($s4)
                lw      $a0, 0xC($v1)
                li      $v0, 1
                lw      $gp, 0x80+var_60($sp)
                beqz    $a1, loc_D818
                movz    $s0, $v0, $a0
                lw      $v0, 8($a1)
                lw      $a0, 0($v0)
                beqz    $a0, loc_D818
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                nop
                move    $s6, $v0
                beqz    $v0, loc_D818
                lw      $gp, 0x80+var_60($sp)
                lw      $v1, 0($v0)
                li      $v0, 6
                bne     $v1, $v0, loc_D990
                lw      $t9, 0x80+var_3C($sp)
                lw      $a3, 0x14($s6)
                addu    $t9, $fp
                sw      $t9, 0x80+var_44($sp)
                lw      $v0, 0x80+var_48($sp)
                la      $t9, RSA_public_encrypt
                lw      $a2, 0x80+var_44($sp)
                sw      $s0, 0x80+var_70($sp)
                addu    $a1, $v0, $fp
                jalr    $t9 ; RSA_public_encrypt
                move    $a0, $s1
                move    $s0, $v0
                bltz    $v0, loc_D714
                lw      $gp, 0x80+var_60($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s6
                beqz    $s0, loc_D744
                lw      $gp, 0x80+var_60($sp)
                sra     $v0, $s0, 8
                sb      $v0, 2($s5)
                sb      $s0, 3($s5)
                lw      $s1, 4($s4)
                sra     $v0, $s1, 8
                slti    $v1, $s1, 9
                sb      $v0, 4($s5)
                beqz    $v1, loc_D83C
                sb      $s1, 5($s5)
                lw      $v1, 0x80+var_44($sp)
                la      $t9, memcpy
                addu    $s0, $v1, $s0
                move    $a0, $s0
                addiu   $a1, $s4, 8
                jalr    $t9 ; memcpy
                move    $a2, $s1
                lw      $a0, 0x80+var_40($sp)
                lw      $gp, 0x80+var_60($sp)
                addu    $s0, $s1
                subu    $s0, $a0
                li      $v0, 0x1031
                sw      $v0, 0x34($s3)
                sw      $s0, 0x44($s3)
                b       loc_CE34
                sw      $zero, 0x48($s3)
 # ---------------------------------------------------------------------------

loc_D33C:                                # CODE XREF: ssl2_connect+AB4↑j
                lw      $v0, 0xC0($s3)
                lw      $v1, 0x44($v0)
                bnez    $v1, loc_D628
                la      $t9, ssl_get_new_session

loc_D34C:                                # CODE XREF: ssl2_connect+1074↓j
                lw      $v0, 0x54($s3)
                la      $t9, ssl2_set_certificate
                lw      $a2, 0xE0($v0)
                lw      $a1, 0xDC($v0)
                move    $a0, $s3
                jalr    $t9 ; ssl2_set_certificate
                move    $a3, $s0
                blez    $v0, loc_DA8C
                lw      $gp, 0x80+var_60($sp)
                lw      $v0, 0x54($s3)
                lw      $a2, 0xE4($v0)
                beqz    $a2, loc_DA50
                lw      $a1, 0xE0($v0)
                lw      $a3, 0xC0($s3)
                la      $t9, ssl_bytes_to_cipher_list
                addu    $s5, $a1, $s0
                addiu   $a3, 0xB4
                move    $a0, $s3
                jalr    $t9 ; ssl_bytes_to_cipher_list
                move    $a1, $s5
                lw      $v1, 0x54($s3)
                lw      $gp, 0x80+var_60($sp)
                move    $s0, $v0
                beqz    $v0, loc_DA14
                lw      $s6, 0xE4($v1)
                la      $a1, ssl_cipher_ptr_id_cmp
                la      $t9, sk_set_cmp_func
                jalr    $t9 ; sk_set_cmp_func
                move    $a0, $v0
                lw      $gp, 0x80+var_60($sp)
                la      $t9, SSL_get_ciphers
                jalr    $t9 ; SSL_get_ciphers
                move    $a0, $s3
                lw      $gp, 0x80+var_60($sp)
                la      $a1, ssl_cipher_ptr_id_cmp
                la      $t9, sk_set_cmp_func
                move    $a0, $v0
                jalr    $t9 ; sk_set_cmp_func
                move    $s4, $v0
                lw      $v1, 0xF8($s3)
                lui     $v0, 0x40  # '@'
                and     $v1, $v0
                beqz    $v1, loc_D68C
                lw      $gp, 0x80+var_60($sp)

loc_D3FC:                                # CODE XREF: ssl2_connect+10D4↓j
                b       loc_D42C
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_D404:                                # CODE XREF: ssl2_connect+E88↓j
                jalr    $t9 ; sk_value
                nop
                lw      $gp, 0x80+var_60($sp)
                la      $t9, sk_find
                move    $a1, $v0
                jalr    $t9 ; sk_find
                move    $a0, $s4
                bgez    $v0, loc_D450
                lw      $gp, 0x80+var_60($sp)
                addiu   $s1, 1

loc_D42C:                                # CODE XREF: ssl2_connect:loc_D3FC↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s0
                lw      $gp, 0x80+var_60($sp)
                slt     $v0, $s1, $v0
                move    $a1, $s1
                move    $a0, $s0
                bnez    $v0, loc_D404
                la      $t9, sk_value

loc_D450:                                # CODE XREF: ssl2_connect+E60↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s0
                slt     $v0, $s1, $v0
                beqz    $v0, loc_D9B4
                lw      $gp, 0x80+var_60($sp)
                la      $t9, sk_value
                move    $a0, $s0
                move    $a1, $s1
                jalr    $t9 ; sk_value
                lw      $s0, 0xC0($s3)
                lw      $a1, 0xC0($s3)
                lw      $gp, 0x80+var_60($sp)
                sw      $v0, 0xAC($s0)
                lw      $v0, 0x94($a1)
                bnez    $v0, loc_D780
                la      $t9, CRYPTO_add_lock
                lw      $v1, 0x90($a1)
                lw      $v0, 8($v1)
                la      $v1, loc_40000
                lw      $a0, 0($v0)
                li      $v0, 0x208
                sw      $a0, 0x94($a1)
                li      $a2, 3
                sw      $v0, 0x80+var_70($sp)
                addiu   $a0, 0x10
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                addiu   $a3, $v1, (aS2ClntC - 0x40000)  # "s2_clnt.c"
                lw      $gp, 0x80+var_60($sp)
                b       loc_D0A4
                addu    $s0, $s6, $s5
 # ---------------------------------------------------------------------------

loc_D4D0:                                # CODE XREF: ssl2_connect+1D0↑j
                la      $t9, ssl2_part_read

loc_D4D4:                                # CODE XREF: ssl2_connect+1134↓j
                move    $a0, $s3
                jalr    $t9 ; ssl2_part_read
                li      $a1, 0x6C  # 'l'
                move    $s0, $v0
                bgtz    $s0, loc_C6FC
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB38
                lw      $v0, 0x1C($s3)
 # ---------------------------------------------------------------------------

loc_D4F4:                                # CODE XREF: ssl2_connect+6B4↑j
                la      $t9, BUF_MEM_new
                jalr    $t9 ; BUF_MEM_new
                nop
                move    $s0, $v0
                bnez    $v0, loc_CC7C
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D514:                                # CODE XREF: ssl2_connect+5EC↑j
                lw      $a1, 0x44($s3)
                la      $t9, ssl2_read
                li      $s0, 0xB
                subu    $a2, $s0, $a1
                move    $a0, $s3
                jalr    $t9 ; ssl2_read
                addu    $a1, $s4
                lw      $v1, 0x44($s3)
                subu    $v1, $s0, $v1
                slt     $v1, $v0, $v1
                bnez    $v1, loc_CBFC
                lw      $gp, 0x80+var_60($sp)
                sw      $s0, 0x44($s3)
                lbu     $v1, 0($s4)
                li      $v0, 4
                bne     $v1, $v0, loc_DAE4
                addiu   $a0, $s4, 1
                lbu     $v0, 1($s4)
                lw      $a1, 0x54($s3)
                sltu    $v0, $zero, $v0
                sw      $v0, 0x6C($s3)
                lbu     $a0, 2($s4)
                sw      $a0, 0xDC($a1)
                lbu     $v1, 3($s4)
                lbu     $a0, 4($s4)
                sll     $v1, 8
                lw      $v0, 0($s3)
                or      $a0, $v1
                slt     $v0, $a0, $v0
                beqz    $v0, loc_D594
                addiu   $a2, $s4, 5
                sw      $a0, 0($s3)

loc_D594:                                # CODE XREF: ssl2_connect+FC8↑j
                lbu     $v0, 5($s4)
                lbu     $v1, 1($a2)
                sll     $v0, 8
                or      $v1, $v0
                sw      $v1, 0xE0($a1)
                lbu     $v0, 7($s4)
                lbu     $v1, 8($s4)
                sll     $v0, 8
                or      $v1, $v0
                sw      $v1, 0xE4($a1)
                lbu     $v0, 9($s4)
                lbu     $v1, 0xA($s4)
                sll     $v0, 8
                or      $v1, $v0
                li      $v0, 0x1021
                sw      $v1, 0xD8($a1)
                b       loc_CBB8
                sw      $v0, 0x34($s3)
 # ---------------------------------------------------------------------------

loc_D5DC:                                # CODE XREF: ssl2_connect+354↑j
                sra     $v0, $s4, 8
                sb      $v0, 5($s1)
                sb      $s4, 1($v1)
                lw      $a1, 0xC0($s3)
                la      $t9, memcpy
                move    $a0, $s0
                addiu   $a1, 0x48  # 'H'
                jalr    $t9 ; memcpy
                move    $a2, $s4
                lw      $gp, 0x80+var_60($sp)
                addu    $s0, $s4
                b       loc_C928
                addiu   $a0, $s1, 7
 # ---------------------------------------------------------------------------

loc_D610:                                # CODE XREF: ssl2_connect+C20↑j
                lw      $v0, 0x20($v1)
                andi    $v0, 2
                beqz    $v0, loc_D69C
                move    $v0, $zero
                b       loc_D1E8
                li      $a0, 5
 # ---------------------------------------------------------------------------

loc_D628:                                # CODE XREF: ssl2_connect+D84↑j
                move    $a0, $s3
                jalr    $t9 ; ssl_get_new_session
                move    $a1, $zero
                bnez    $v0, loc_D34C
                lw      $gp, 0x80+var_60($sp)

loc_D63C:                                # CODE XREF: ssl2_connect+2E0↑j
                                         # ssl2_connect+C0C↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D658:                                # CODE XREF: ssl2_connect+AD0↑j
                lw      $v0, 0xF8($s3)
                andi    $v0, 0x10
                bnez    $v0, loc_D098
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                li      $a2, 0xD9
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D68C:                                # CODE XREF: ssl2_connect+E34↑j
                move    $v0, $s4
                move    $s4, $s0
                b       loc_D3FC
                move    $s0, $v0
 # ---------------------------------------------------------------------------

loc_D69C:                                # CODE XREF: ssl2_connect+1058↑j
                move    $v1, $zero
                move    $a2, $zero
                b       loc_D20C
                move    $fp, $zero
 # ---------------------------------------------------------------------------

loc_D6AC:                                # CODE XREF: ssl2_connect+8E4↑j
                b       loc_C768
                sw      $v0, 0x34($s3)
 # ---------------------------------------------------------------------------

loc_D6B4:                                # CODE XREF: ssl2_connect+23C↑j
                                         # ssl2_connect+250↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6C  # 'l'
                li      $a2, 0xE7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D6F0:                                # CODE XREF: ssl2_connect+8C4↑j
                la      $t9, ssl2_part_read
                b       loc_D4D4
                move    $a2, $v0
 # ---------------------------------------------------------------------------

loc_D6FC:                                # CODE XREF: ssl2_connect+A14↑j
                lw      $a0, 0x3C($s3)
                b       loc_CA78
                lw      $s1, 4($a0)
 # ---------------------------------------------------------------------------

loc_D708:                                # CODE XREF: ssl2_connect+8DC↑j
                li      $v0, 0x1050
                b       loc_C6FC
                sw      $v0, 0x34($s3)
 # ---------------------------------------------------------------------------

loc_D714:                                # CODE XREF: ssl2_connect+CFC↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0xBC
                li      $a2, 4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)

loc_D734:                                # CODE XREF: ssl2_connect+13EC↓j
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s6
                lw      $gp, 0x80+var_60($sp)

loc_D744:                                # CODE XREF: ssl2_connect+D10↑j
                                         # ssl2_connect+1274↓j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x66  # 'f'
                li      $a2, 0xD0
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D780:                                # CODE XREF: ssl2_connect+ECC↑j
                la      $t9, ssl2_return_error

loc_D784:                                # CODE XREF: ssl2_connect+AEC↑j
                move    $a0, $s3

loc_D788:                                # CODE XREF: ssl2_connect+B00↑j
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'

loc_D7A4:                                # CODE XREF: ssl2_connect+129C↓j
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D7BC:                                # CODE XREF: ssl2_connect+6CC↑j
                lw      $v0, 0x3C($s3)
                beq     $v0, $s0, loc_CB30
                nop
                lw      $v0, 0x1C($s3)
                addiu   $v0, -1
                beqz    $s0, loc_D928
                sw      $v0, 0x1C($s3)
                la      $t9, BUF_MEM_free
                jalr    $t9 ; BUF_MEM_free
                move    $a0, $s0
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB40
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D7F0:                                # CODE XREF: ssl2_connect+614↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                li      $a2, 0x128
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D818:                                # CODE XREF: ssl2_connect+C94↑j
                                         # ssl2_connect+CA4↑j ...
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0xBC
                li      $a2, 0xC0
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_D744
                lw      $gp, 0x80+var_60($sp)
 # ---------------------------------------------------------------------------

loc_D83C:                                # CODE XREF: ssl2_connect+BB4↑j
                                         # ssl2_connect+D34↑j
                la      $t9, ssl2_return_error

loc_D840:                                # CODE XREF: ssl2_connect+BF4↑j
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x66  # 'f'
                b       loc_D7A4
                sw      $zero, 0x80+var_70($sp)
 # ---------------------------------------------------------------------------

loc_D864:                                # CODE XREF: ssl2_connect+32C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x65  # 'e'
                li      $a2, 0xB5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D88C:                                # CODE XREF: ssl2_connect+7B8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0xA7
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D8B4:                                # CODE XREF: ssl2_connect+B14↑j
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                li      $a2, 0x12B
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D8EC:                                # CODE XREF: ssl2_connect+B60↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                li      $a1, 1
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x66  # 'f'
                li      $a2, 0xCE
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D928:                                # CODE XREF: ssl2_connect+1210↑j
                b       loc_CB40
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D930:                                # CODE XREF: ssl2_connect+AC4↑j
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                li      $a2, 0xD8
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D954:                                # CODE XREF: ssl2_connect+C2C↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x66  # 'f'
                li      $a2, 0x8B
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D990:                                # CODE XREF: ssl2_connect+CC8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0xBC
                li      $a2, 0xD1
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_D734
                lw      $gp, 0x80+var_60($sp)
 # ---------------------------------------------------------------------------

loc_D9B4:                                # CODE XREF: ssl2_connect+EA0↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                li      $a1, 1
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                li      $a2, 0xB9
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_D9F0:                                # CODE XREF: ssl2_connect+ADC↑j
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                li      $a2, 0xDA
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_DA14:                                # CODE XREF: ssl2_connect+DE8↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_DA50:                                # CODE XREF: ssl2_connect+DB8↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                li      $a1, 1
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                li      $a2, 0xB8
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_DA8C:                                # CODE XREF: ssl2_connect+DA8↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                li      $a1, 4
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_DAA8:                                # CODE XREF: ssl2_connect+A1C↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6E  # 'n'

loc_DACC:                                # CODE XREF: ssl2_connect+1550↓j
                                         # ssl2_connect+1578↓j
                li      $a2, 0xD4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_DAE4:                                # CODE XREF: ssl2_connect+F90↑j
                lbu     $v0, -1($a0)
                beqz    $v0, loc_DB40
                li      $a2, 0xC8
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                b       loc_DACC
                sw      $zero, 0x80+var_70($sp)
 # ---------------------------------------------------------------------------

loc_DB18:                                # CODE XREF: ssl2_connect+8EC↑j
                la      $t9, ssl2_return_error
                move    $a0, $s3
                jalr    $t9 ; ssl2_return_error
                move    $a1, $zero
                lw      $gp, 0x80+var_60($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x6C  # 'l'
                b       loc_DACC
                sw      $zero, 0x80+var_70($sp)
 # ---------------------------------------------------------------------------

loc_DB40:                                # CODE XREF: ssl2_connect+1528↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x6D  # 'm'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_60($sp)
                b       loc_CB34
                li      $s0, 0xFFFFFFFF
 # End of function ssl2_connect


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_default_timeout
ssl2_default_timeout:                    # DATA XREF: LOAD:00004908↑o
                                         # .got:ssl2_default_timeout_ptr↓o
                jr      $ra
                li      $v0, 0x12C
 # End of function ssl2_default_timeout


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_num_ciphers
ssl2_num_ciphers:                        # CODE XREF: ssl23_num_ciphers+30↓p
                                         # DATA XREF: LOAD:00002BC8↑o ...
                jr      $ra
                li      $v0, 6
 # End of function ssl2_num_ciphers


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_get_cipher
ssl2_get_cipher:                         # CODE XREF: ssl23_get_cipher+60↓j
                                         # DATA XREF: LOAD:00003318↑o ...
                li      $gp, 0x547DC
                addu    $gp, $t9
                sltiu   $v0, $a0, 6
                beqz    $v0, locret_DBAC
                nop
                li      $v0, 5
                subu    $v0, $a0
                sll     $v1, $v0, 6
                la      $a0, ssl2_ciphers
                sll     $v0, 4
                subu    $v1, $v0
                jr      $ra
                addu    $v0, $v1, $a0
 # ---------------------------------------------------------------------------

locret_DBAC:                             # CODE XREF: ssl2_get_cipher+10↑j
                jr      $ra
                move    $v0, $zero
 # End of function ssl2_get_cipher


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_ctrl
ssl2_ctrl:                               # DATA XREF: LOAD:00004A18↑o
                                         # .got:ssl2_ctrl_ptr↓o
                li      $v0, 8
                beq     $a1, $v0, locret_DBC8
                nop
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

locret_DBC8:                             # CODE XREF: ssl2_ctrl+4↑j
                jr      $ra
                lw      $v0, 0x6C($a0)
 # End of function ssl2_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_callback_ctrl
ssl2_callback_ctrl:                      # DATA XREF: LOAD:00004A78↑o
                                         # .got:ssl2_callback_ctrl_ptr↓o
                jr      $ra
                move    $v0, $zero
 # End of function ssl2_callback_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_ctx_ctrl
ssl2_ctx_ctrl:                           # DATA XREF: LOAD:000049B8↑o
                                         # .got:ssl2_ctx_ctrl_ptr↓o
                jr      $ra
                move    $v0, $zero
 # End of function ssl2_ctx_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_ctx_callback_ctrl
ssl2_ctx_callback_ctrl:                  # DATA XREF: LOAD:00004918↑o
                                         # .got:ssl2_ctx_callback_ctrl_ptr↓o
                jr      $ra
                move    $v0, $zero
 # End of function ssl2_ctx_callback_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_put_cipher_by_char
ssl2_put_cipher_by_char:                 # DATA XREF: LOAD:00004B28↑o
                                         # .got:ssl2_put_cipher_by_char_ptr↓o
                beqz    $a1, locret_DC1C
                lui     $v1, 0x200
                lw      $a0, 8($a0)
                lui     $v0, 0xFF00
                and     $v0, $a0, $v0
                bne     $v0, $v1, locret_DC24
                sra     $v1, $a0, 8
                sra     $v0, $a0, 16
                sb      $v0, 0($a1)
                li      $v0, 3
                sb      $a0, 2($a1)
                jr      $ra
                sb      $v1, 1($a1)
 # ---------------------------------------------------------------------------

locret_DC1C:                             # CODE XREF: ssl2_put_cipher_by_char↑j
                jr      $ra
                li      $v0, 3
 # ---------------------------------------------------------------------------

locret_DC24:                             # CODE XREF: ssl2_put_cipher_by_char+14↑j
                jr      $ra
                move    $v0, $zero
 # End of function ssl2_put_cipher_by_char


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_shutdown
ssl2_shutdown:                           # DATA XREF: LOAD:00004878↑o
                                         # .got:ssl2_shutdown_ptr↓o
                li      $v0, 3
                sw      $v0, 0x30($a0)
                jr      $ra
                li      $v0, 1
 # End of function ssl2_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_write_error
ssl2_write_error:                        # CODE XREF: ssl2_return_error+28↓j
                                         # ssl2_write:loc_F7E4↓p
                                         # DATA XREF: ...

var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1F          = -0x1F
var_1E          = -0x1E
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x54714
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_8($sp)
                sw      $s3, 0x48+var_C($sp)
                sw      $s2, 0x48+var_10($sp)
                sw      $s1, 0x48+var_14($sp)
                sw      $s0, 0x48+var_18($sp)
                sw      $gp, 0x48+var_28($sp)
                lw      $v0, 0xD8($a0)
                lw      $s0, 0xD4($a0)
                move    $s1, $a0
                sra     $v1, $v0, 8
                sltiu   $a0, $s0, 4
                sb      $v1, 0x48+var_1F($sp)
                sb      $v0, 0x48+var_1E($sp)
                sb      $zero, 0x48+var_20($sp)
                beqz    $a0, loc_DD0C
                sw      $zero, 0xD4($s1)
                li      $s2, 3
                la      $t9, ssl2_write
                subu    $a1, $s2, $s0
                addiu   $s3, $sp, 0x48+var_20
                addu    $a1, $s3, $a1
                move    $a0, $s1
                jalr    $t9 ; ssl2_write
                move    $a2, $s0
                bltz    $v0, loc_DD54
                lw      $gp, 0x48+var_28($sp)

loc_DCB4:                                # CODE XREF: ssl2_write_error+110↓j
                subu    $v0, $s0, $v0
                bnez    $v0, loc_DCF0
                sw      $v0, 0xD4($s1)
                lw      $t9, 0x64($s1)
                beqz    $t9, loc_DCF0
                move    $a3, $s3
                lw      $v0, 0x68($s1)
                lw      $a1, 0($s1)
                sw      $s2, 0x48+var_38($sp)
                sw      $v0, 0x48+var_30($sp)
                sw      $s1, 0x48+var_34($sp)
                li      $a0, 1
                jalr    $t9
                move    $a2, $zero
                lw      $gp, 0x48+var_28($sp)

loc_DCF0:                                # CODE XREF: ssl2_write_error+7C↑j
                                         # ssl2_write_error+88↑j
                lw      $ra, 0x48+var_8($sp)
                lw      $s3, 0x48+var_C($sp)
                lw      $s2, 0x48+var_10($sp)
                lw      $s1, 0x48+var_14($sp)
                lw      $s0, 0x48+var_18($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_DD0C:                                # CODE XREF: ssl2_write_error+48↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aS2LibC - 0x40000)  # "s2_lib.c"
                addiu   $a2, (aError0ErrorInt - 0x40000)  # "error >= 0 && error <= (int)sizeof(buf)"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x210
                lw      $gp, 0x48+var_28($sp)
                li      $s2, 3
                subu    $a1, $s2, $s0
                la      $t9, ssl2_write
                addiu   $s3, $sp, 0x48+var_20
                addu    $a1, $s3, $a1
                move    $a0, $s1
                jalr    $t9 ; ssl2_write
                move    $a2, $s0
                bgez    $v0, loc_DCB4
                lw      $gp, 0x48+var_28($sp)

loc_DD54:                                # CODE XREF: ssl2_write_error+70↑j
                sw      $s0, 0xD4($s1)
                lw      $ra, 0x48+var_8($sp)
                lw      $s3, 0x48+var_C($sp)
                lw      $s2, 0x48+var_10($sp)
                lw      $s1, 0x48+var_14($sp)
                lw      $s0, 0x48+var_18($sp)
                jr      $ra
                addiu   $sp, 0x48
 # End of function ssl2_write_error


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_return_error
ssl2_return_error:                       # CODE XREF: sub_A24C+1D0↑p
                                         # sub_A24C+2C8↑p ...
                li      $gp, 0x545DC
                addu    $gp, $t9
                lw      $v0, 0xD4($a0)
                beqz    $v0, loc_DD94
                li      $v0, 3
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_DD94:                                # CODE XREF: ssl2_return_error+10↑j
                la      $t9, ssl2_write_error
                sw      $a1, 0xD8($a0)
                jr      $t9 ; ssl2_write_error
                sw      $v0, 0xD4($a0)
 # End of function ssl2_return_error


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_generate_key_material
ssl2_generate_key_material:              # CODE XREF: ssl2_enc_init+130↓p
                                         # DATA XREF: LOAD:00003338↑o ...

var_58          = -0x58
var_50          = -0x50
var_48          = -0x48
var_44          = -0x44
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4134        =  0x4134

                li      $gp, 0x545AC
                addu    $gp, $t9
                addiu   $sp, -0x68
                sw      $ra, 0x68+var_4($sp)
                sw      $fp, 0x68+var_8($sp)
                sw      $s7, 0x68+var_C($sp)
                sw      $s6, 0x68+var_10($sp)
                sw      $s5, 0x68+var_14($sp)
                sw      $s4, 0x68+var_18($sp)
                sw      $s3, 0x68+var_1C($sp)
                sw      $s2, 0x68+var_20($sp)
                sw      $s1, 0x68+var_24($sp)
                sw      $s0, 0x68+var_28($sp)
                sw      $gp, 0x68+var_50($sp)
                la      $t9, EVP_md5
                li      $v0, 0x30  # '0'
                sb      $v0, 0x68+var_48($sp)
                jalr    $t9 ; EVP_md5
                move    $s4, $a0
                lw      $gp, 0x68+var_50($sp)
                addiu   $s1, $sp, 0x68+var_44
                la      $t9, EVP_MD_CTX_init
                move    $a0, $s1
                jalr    $t9 ; EVP_MD_CTX_init
                move    $s6, $v0
                lw      $v1, 0xC0($s4)
                lw      $gp, 0x68+var_50($sp)
                lw      $v0, 0x10($v1)
                sltiu   $v0, 0x31  # '1'
                beqz    $v0, loc_DF7C
                lw      $s2, 0x54($s4)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $s6
                move    $s0, $v0
                bltz    $v0, loc_E014
                lw      $gp, 0x68+var_50($sp)
                lw      $v1, 0x54($s4)
                lw      $v0, 0x9C($v1)
                beqz    $v0, loc_DFD0
                subu    $v0, $s2, $v1
                addu    $v0, $s0
                slti    $v0, 0x31  # '1'
                beqz    $v0, loc_DF7C
                addiu   $s3, $s2, 0xA0
                la      $fp, loc_40000
                addu    $s2, $s3, $s0
                move    $s5, $zero
                b       loc_DF2C
                addiu   $s7, $sp, 0x68+var_48
 # ---------------------------------------------------------------------------

loc_DE70:                                # CODE XREF: ssl2_generate_key_material+1AC↓j
                                         # ssl2_generate_key_material+1D0↓j
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0x10($a1)
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, 0x14
                lw      $gp, 0x68+var_50($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                move    $a1, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 1
                lbu     $v0, 0x68+var_48($sp)
                lw      $a1, 0x54($s4)
                lw      $gp, 0x68+var_50($sp)
                addiu   $v0, 1
                sb      $v0, 0x68+var_48($sp)
                lw      $a2, 0x64($a1)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, 0x68  # 'h'
                lw      $gp, 0x68+var_50($sp)
                lw      $a1, 0x54($s4)
                lw      $a2, 0x88($a1)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, 0x8C
                lw      $gp, 0x68+var_50($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a1, $s3
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $zero
                lw      $a0, 0x54($s4)
                lw      $gp, 0x68+var_50($sp)
                addiu   $v0, $a0, 0xA0
                lw      $v1, 0x9C($a0)
                subu    $v0, $s0, $v0
                addu    $v0, $s2
                sltu    $v1, $s5, $v1
                addu    $s3, $s0
                slti    $v0, 0x31  # '1'
                beqz    $v1, loc_DFD0
                addu    $s2, $s0
                beqz    $v0, loc_DF80
                la      $t9, ERR_put_error

loc_DF2C:                                # CODE XREF: ssl2_generate_key_material+C4↑j
                la      $t9, EVP_DigestInit_ex
                move    $a1, $s6
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $a1, 0xC0($s4)
                lw      $gp, 0x68+var_50($sp)
                lw      $v0, 0x10($a1)
                sltiu   $v0, 0x30  # '0'
                bnez    $v0, loc_DE70
                addu    $s5, $s0
                la      $v0, loc_40000
                la      $t9, OpenSSLDie
                li      $a1, 0x1E9
                addiu   $a0, $v0, (aS2LibC - 0x40000)  # "s2_lib.c"
                jalr    $t9 ; OpenSSLDie
                addiu   $a2, $fp, 0x68+arg_4134
                lw      $gp, 0x68+var_50($sp)
                b       loc_DE70
                lw      $a1, 0xC0($s4)
 # ---------------------------------------------------------------------------

loc_DF7C:                                # CODE XREF: ssl2_generate_key_material+78↑j
                                         # ssl2_generate_key_material+B0↑j
                la      $t9, ERR_put_error

loc_DF80:                                # CODE XREF: ssl2_generate_key_material+180↑j
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0xF1
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x68+var_50($sp)
                move    $v0, $zero

loc_DFA0:                                # CODE XREF: ssl2_generate_key_material:loc_E014↓j
                lw      $ra, 0x68+var_4($sp)
                lw      $fp, 0x68+var_8($sp)
                lw      $s7, 0x68+var_C($sp)
                lw      $s6, 0x68+var_10($sp)
                lw      $s5, 0x68+var_14($sp)
                lw      $s4, 0x68+var_18($sp)
                lw      $s3, 0x68+var_1C($sp)
                lw      $s2, 0x68+var_20($sp)
                lw      $s1, 0x68+var_24($sp)
                lw      $s0, 0x68+var_28($sp)
                jr      $ra
                addiu   $sp, 0x68
 # ---------------------------------------------------------------------------

loc_DFD0:                                # CODE XREF: ssl2_generate_key_material+A0↑j
                                         # ssl2_generate_key_material+178↑j
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s1
                lw      $gp, 0x68+var_50($sp)
                lw      $ra, 0x68+var_4($sp)
                lw      $fp, 0x68+var_8($sp)
                lw      $s7, 0x68+var_C($sp)
                lw      $s6, 0x68+var_10($sp)
                lw      $s5, 0x68+var_14($sp)
                lw      $s4, 0x68+var_18($sp)
                lw      $s3, 0x68+var_1C($sp)
                lw      $s2, 0x68+var_20($sp)
                lw      $s1, 0x68+var_24($sp)
                lw      $s0, 0x68+var_28($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x68
 # ---------------------------------------------------------------------------

loc_E014:                                # CODE XREF: ssl2_generate_key_material+90↑j
                b       loc_DFA0
                move    $v0, $zero
 # End of function ssl2_generate_key_material


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_get_cipher_by_char
ssl2_get_cipher_by_char:                 # CODE XREF: ssl2_accept+E70↑p
                                         # ssl23_get_cipher_by_char+50↓j
                                         # DATA XREF: ...

var_40          = -0x40
var_38          = -0x38
var_30          = -0x30
var_8           = -8

                li      $gp, 0x54334
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_8($sp)
                sw      $gp, 0x50+var_40($sp)
                lbu     $v0, 0($a0)
                lbu     $a2, 2($a0)
                lbu     $a1, 1($a0)
                sll     $v0, 16
                lui     $v1, 0x200
                or      $v0, $a2
                or      $v0, $v1
                sll     $a1, 8
                or      $v0, $a1
                la      $t9, OBJ_bsearch_ssl_cipher_id
                la      $a1, ssl2_ciphers
                sw      $v0, 0x50+var_30($sp)
                addiu   $a0, $sp, 0x50+var_38
                jalr    $t9 ; OBJ_bsearch_ssl_cipher_id
                li      $a2, 6
                move    $v1, $v0
                bnez    $v0, loc_E08C
                lw      $gp, 0x50+var_40($sp)
                lw      $ra, 0x50+var_8($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_E08C:                                # CODE XREF: ssl2_get_cipher_by_char+58↑j
                lw      $v0, 0($v0)
                lw      $ra, 0x50+var_8($sp)
                movz    $v1, $zero, $v0
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x50
 # End of function ssl2_get_cipher_by_char


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_clear
ssl2_clear:                              # CODE XREF: ssl2_new+AC↓p
                                         # ssl23_get_client_hello+374↓p ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x542AC
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $s0, 0x54($a0)
                la      $t9, memset
                move    $s1, $a0
                lw      $s3, 0x30($s0)
                lw      $s2, 0x34($s0)
                move    $a0, $s0
                move    $a1, $zero
                jalr    $t9 ; memset
                li      $a2, 0x120
                li      $v1, 1
                li      $v0, 2
                lw      $gp, 0x30+var_20($sp)
                lw      $ra, 0x30+var_8($sp)
                sw      $v1, 4($s0)
                sw      $s2, 0x34($s0)
                sw      $s3, 0x30($s0)
                sw      $v0, 0($s1)
                sw      $s3, 0x4C($s1)
                sw      $zero, 0x50($s1)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                jr      $ra
                addiu   $sp, 0x30
 # End of function ssl2_clear


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_free
ssl2_free:                               # DATA XREF: LOAD:00004A28↑o
                                         # .got:ssl2_free_ptr↓o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x54220
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                beqz    $a0, loc_E1B4
                move    $s1, $a0
                lw      $s0, 0x54($a0)
                lw      $a0, 0x30($s0)
                beqz    $a0, loc_E174
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_E174:                                # CODE XREF: ssl2_free+30↑j
                lw      $a0, 0x34($s0)
                beqz    $a0, loc_E18C
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_E18C:                                # CODE XREF: ssl2_free+48↑j
                la      $t9, OPENSSL_cleanse
                move    $a0, $s0
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x120
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                sw      $zero, 0x54($s1)

loc_E1B4:                                # CODE XREF: ssl2_free+20↑j
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl2_free


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_new
ssl2_new:                                # CODE XREF: ssl23_get_client_hello+470↓p
                                         # ssl23_connect+F54↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x54188
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $s1, loc_40000
                la      $t9, CRYPTO_malloc
                move    $s2, $a0
                addiu   $a1, $s1, (aS2LibC - 0x40000)  # "s2_lib.c"
                li      $a0, 0x120
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x143
                move    $s0, $v0
                beqz    $v0, loc_E2F8
                lw      $gp, 0x28+var_18($sp)
                la      $t9, memset
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; memset
                li      $a2, 0x120
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_malloc
                li      $a0, 0x8001
                addiu   $a1, $s1, (aS2LibC - 0x40000)  # "s2_lib.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x14B
                lw      $gp, 0x28+var_18($sp)
                beqz    $v0, loc_E29C
                sw      $v0, 0x30($s0)
                la      $t9, CRYPTO_malloc
                addiu   $a1, $s1, (aS2LibC - 0x40000)  # "s2_lib.c"
                li      $a0, 0x8002
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x14F
                lw      $gp, 0x28+var_18($sp)
                beqz    $v0, loc_E2B4
                sw      $v0, 0x34($s0)
                la      $t9, ssl2_clear
                sw      $s0, 0x54($s2)
                jalr    $t9 ; ssl2_clear
                move    $a0, $s2
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_E29C:                                # CODE XREF: ssl2_new+7C↑j
                lw      $a0, 0x34($s0)
                beqz    $a0, loc_E2B4
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_E2B4:                                # CODE XREF: ssl2_new+9C↑j
                                         # ssl2_new+D8↑j
                lw      $a0, 0x30($s0)
                beqz    $a0, loc_E2CC
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_E2CC:                                # CODE XREF: ssl2_new+F0↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_E2F8:                                # CODE XREF: ssl2_new+44↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl2_new


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_pending
ssl2_pending:                            # DATA XREF: LOAD:000047F8↑o
                                         # .got:ssl2_pending_ptr↓o

var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x5403C
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $s0, $a0
                andi    $v0, 0x3000
                bnez    $v0, loc_E360
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x54($s0)
                lw      $ra, 0x20+var_4($sp)
                lw      $v0, 0x44($v0)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_E360:                                # CODE XREF: ssl2_pending+2C↑j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x20
 # End of function ssl2_pending


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_mac
ssl2_mac:                                # CODE XREF: sub_EC5C+3FC↓p
                                         # ssl2_write+414↓p
                                         # DATA XREF: ...

var_48          = -0x48
var_40          = -0x40
var_3F          = -0x3F
var_3E          = -0x3E
var_3D          = -0x3D
var_3C          = -0x3C
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x53FDC
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_8($sp)
                sw      $s5, 0x58+var_C($sp)
                sw      $s4, 0x58+var_10($sp)
                sw      $s3, 0x58+var_14($sp)
                sw      $s2, 0x58+var_18($sp)
                sw      $s1, 0x58+var_1C($sp)
                sw      $s0, 0x58+var_20($sp)
                sw      $gp, 0x58+var_48($sp)
                move    $s1, $a0
                beqz    $a2, loc_E4AC
                move    $s5, $a1
                lw      $v0, 0x54($a0)
                lw      $s4, 0x54($v0)
                lw      $a1, 0xD4($v0)
                lw      $s2, 0x60($v0)
                lw      $s3, 0x4C($v0)

loc_E3C4:                                # CODE XREF: ssl2_mac+148↓j
                srl     $v1, $a1, 16
                addiu   $s0, $sp, 0x58+var_3C
                srl     $v0, $a1, 24
                srl     $a0, $a1, 8
                la      $t9, EVP_MD_CTX_init
                sb      $v1, 0x58+var_3F($sp)
                sb      $v0, 0x58+var_40($sp)
                sb      $a0, 0x58+var_3E($sp)
                sb      $a1, 0x58+var_3D($sp)
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s0
                lw      $gp, 0x58+var_48($sp)
                lw      $a1, 0x84($s1)
                la      $t9, EVP_MD_CTX_copy
                jalr    $t9 ; EVP_MD_CTX_copy
                move    $a0, $s0
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_CIPHER_CTX_key_length
                jalr    $t9 ; EVP_CIPHER_CTX_key_length
                lw      $a0, 0x80($s1)
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s2
                move    $a0, $s0
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $v0
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s4
                move    $a2, $s3
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s0
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s0
                addiu   $a1, $sp, 0x58+var_40
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 4
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a1, $s5
                move    $a0, $s0
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $zero
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s0
                lw      $gp, 0x58+var_48($sp)
                lw      $ra, 0x58+var_8($sp)
                lw      $s5, 0x58+var_C($sp)
                lw      $s4, 0x58+var_10($sp)
                lw      $s3, 0x58+var_14($sp)
                lw      $s2, 0x58+var_18($sp)
                lw      $s1, 0x58+var_1C($sp)
                lw      $s0, 0x58+var_20($sp)
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_E4AC:                                # CODE XREF: ssl2_mac+34↑j
                lw      $v0, 0x54($a0)
                lw      $s4, 0x50($v0)
                lw      $a1, 0xD0($v0)
                lw      $s2, 0x5C($v0)
                b       loc_E3C4
                lw      $s3, 0x44($v0)
 # End of function ssl2_mac


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_enc
ssl2_enc:                                # CODE XREF: sub_EC5C+3D4↓p
                                         # ssl2_write+43C↓p
                                         # DATA XREF: ...
                li      $gp, 0x53E8C
                addu    $gp, $t9
                beqz    $a1, loc_E50C
                nop
                lw      $a1, 0x54($a0)
                lw      $a2, 0x8C($a0)
                beqz    $a2, locret_E51C
                lw      $a3, 0x48($a1)

loc_E4E8:                                # CODE XREF: ssl2_enc+50↓j
                lw      $v0, 0($a2)
                li      $v1, 8
                lw      $a0, 4($v0)
                beq     $a0, $v1, loc_E524
                la      $t9, EVP_Cipher
                lw      $a1, 0x58($a1)
                move    $a0, $a2
                jr      $t9 ; EVP_Cipher
                move    $a2, $a1
 # ---------------------------------------------------------------------------

loc_E50C:                                # CODE XREF: ssl2_enc+C↑j
                lw      $a1, 0x54($a0)
                lw      $a2, 0x80($a0)
                bnez    $a2, loc_E4E8
                lw      $a3, 0x40($a1)

locret_E51C:                             # CODE XREF: ssl2_enc+1C↑j
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_E524:                                # CODE XREF: ssl2_enc+30↑j
                addiu   $v0, $a3, 7
                lw      $a1, 0x58($a1)
                srl     $v0, 3
                move    $a0, $a2
                sll     $a3, $v0, 3
                jr      $t9 ; EVP_Cipher
                move    $a2, $a1
 # End of function ssl2_enc


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_enc_init
ssl2_enc_init:                           # CODE XREF: ssl2_accept+920↑p
                                         # ssl2_connect+824↑p
                                         # DATA XREF: ...

var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x53E10
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_4($sp)
                sw      $s4, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_28($sp)
                la      $t9, ssl_cipher_get_evp
                move    $s0, $a0
                lw      $a0, 0xC0($a0)
                move    $s3, $a1
                sw      $zero, 0x40+var_30($sp)
                sw      $zero, 0x40+var_2C($sp)
                addiu   $a1, $sp, 0x40+var_20
                addiu   $a2, $sp, 0x40+var_1C
                jalr    $t9 ; ssl_cipher_get_evp
                move    $a3, $zero
                bnez    $v0, loc_E5F8
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ssl2_return_error
                move    $a0, $s0
                jalr    $t9 ; ssl2_return_error
                li      $a1, 1
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x7C  # '|'
                li      $a2, 0xCE

loc_E5C4:                                # CODE XREF: ssl2_enc_init+298↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                move    $v1, $zero

loc_E5D4:                                # CODE XREF: ssl2_enc_init:loc_E858↓j
                lw      $ra, 0x40+var_4($sp)
                lw      $s4, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_E5F8:                                # CODE XREF: ssl2_enc_init+54↑j
                la      $t9, ssl_replace_hash
                lw      $a1, 0x40+var_1C($sp)
                jalr    $t9 ; ssl_replace_hash
                addiu   $a0, $s0, 0x84
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x40+var_1C($sp)
                la      $t9, ssl_replace_hash
                jalr    $t9 ; ssl_replace_hash
                addiu   $a0, $s0, 0x90
                lw      $s2, 0x80($s0)
                beqz    $s2, loc_E7A0
                lw      $gp, 0x40+var_28($sp)

loc_E628:                                # CODE XREF: ssl2_enc_init+280↓j
                la      $t9, EVP_CIPHER_CTX_init
                jalr    $t9 ; EVP_CIPHER_CTX_init
                move    $a0, $s2
                lw      $s1, 0x8C($s0)
                beqz    $s1, loc_E828
                lw      $gp, 0x40+var_28($sp)

loc_E640:                                # CODE XREF: ssl2_enc_init+308↓j
                la      $t9, EVP_CIPHER_CTX_init
                jalr    $t9 ; EVP_CIPHER_CTX_init
                move    $a0, $s1
                lw      $v0, 0x40+var_20($sp)
                lw      $a0, 0x54($s0)
                lw      $s4, 8($v0)
                lw      $gp, 0x40+var_28($sp)
                sll     $v0, $s4, 1
                sltiu   $v1, $v0, 0x31  # '1'
                beqz    $v1, loc_E7E0
                sw      $v0, 0x9C($a0)

loc_E66C:                                # CODE XREF: ssl2_enc_init+2BC↓j
                la      $t9, ssl2_generate_key_material
                jalr    $t9 ; ssl2_generate_key_material
                move    $a0, $s0
                blez    $v0, loc_E858
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x40+var_20($sp)
                lw      $v0, 0xC($a1)
                slti    $v0, 9
                beqz    $v0, loc_E804
                la      $a0, loc_40000

loc_E694:                                # CODE XREF: ssl2_enc_init+2E0↓j
                lw      $v0, 0x54($s0)
                beqz    $s3, loc_E734
                addiu   $a3, $v0, 0xA0
                lw      $v0, 0xC0($s0)
                la      $t9, EVP_EncryptInit_ex
                addiu   $v0, 8
                move    $a0, $s1
                addu    $a3, $s4
                move    $a2, $zero
                jalr    $t9 ; EVP_EncryptInit_ex
                sw      $v0, 0x40+var_30($sp)
                lw      $gp, 0x40+var_28($sp)
                lw      $v1, 0xC0($s0)
                lw      $a3, 0x54($s0)
                addiu   $v1, 8
                la      $t9, EVP_DecryptInit_ex
                lw      $a1, 0x40+var_20($sp)
                sw      $v1, 0x40+var_30($sp)
                move    $a0, $s2
                addiu   $a3, 0xA0
                jalr    $t9 ; EVP_DecryptInit_ex
                move    $a2, $zero
                lw      $v1, 0x54($s0)
                lw      $gp, 0x40+var_28($sp)
                addiu   $v0, $v1, 0xA0
                move    $s3, $s4
                sw      $v0, 0x5C($v1)
                move    $a1, $v1

loc_E704:                                # CODE XREF: ssl2_enc_init+258↓j
                addu    $v0, $s3
                li      $v1, 1
                lw      $ra, 0x40+var_4($sp)
                lw      $s4, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                sw      $v0, 0x60($a1)
                addiu   $sp, 0x40
                jr      $ra
                move    $v0, $v1
 # ---------------------------------------------------------------------------

loc_E734:                                # CODE XREF: ssl2_enc_init+158↑j
                lw      $v0, 0xC0($s0)
                la      $t9, EVP_EncryptInit_ex
                addiu   $v0, 8
                move    $a0, $s1
                move    $a2, $zero
                jalr    $t9 ; EVP_EncryptInit_ex
                sw      $v0, 0x40+var_30($sp)
                lw      $gp, 0x40+var_28($sp)
                lw      $a3, 0x54($s0)
                lw      $v0, 0xC0($s0)
                addiu   $v0, 8
                la      $t9, EVP_DecryptInit_ex
                lw      $a1, 0x40+var_20($sp)
                addiu   $a3, 0xA0
                move    $a0, $s2
                sw      $v0, 0x40+var_30($sp)
                addu    $a3, $s4
                jalr    $t9 ; EVP_DecryptInit_ex
                move    $a2, $zero
                lw      $v1, 0x54($s0)
                lw      $gp, 0x40+var_28($sp)
                addiu   $v0, $v1, 0xA0
                addu    $a0, $s4, $v0
                move    $s3, $zero
                move    $a1, $v1
                b       loc_E704
                sw      $a0, 0x5C($v1)
 # ---------------------------------------------------------------------------

loc_E7A0:                                # CODE XREF: ssl2_enc_init+E0↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aS2EncC - 0x40000)  # "s2_enc.c"
                li      $a0, 0x8C
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x52  # 'R'
                move    $s2, $v0
                lw      $gp, 0x40+var_28($sp)
                bnez    $v0, loc_E628
                sw      $v0, 0x80($s0)
                la      $t9, ERR_put_error

loc_E7CC:                                # CODE XREF: ssl2_enc_init+310↓j
                li      $a0, 0x14
                li      $a1, 0x7C  # '|'
                li      $a2, 0x41  # 'A'
                b       loc_E5C4
                sw      $zero, 0x40+var_30($sp)
 # ---------------------------------------------------------------------------

loc_E7E0:                                # CODE XREF: ssl2_enc_init+124↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aS2EncC - 0x40000)  # "s2_enc.c"
                addiu   $a2, (aSS2KeyMaterial - 0x40000)  # "s->s2->key_material_length <= sizeof s-"...
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x64  # 'd'
                b       loc_E66C
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_E804:                                # CODE XREF: ssl2_enc_init+14C↑j
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                li      $a1, 0x69  # 'i'
                addiu   $a0, (aS2EncC - 0x40000)  # "s2_enc.c"
                jalr    $t9 ; OpenSSLDie
                addiu   $a2, (aCIvLenIntSizeo - 0x40000)  # "c->iv_len <= (int)sizeof(s->session->ke"...
                lw      $gp, 0x40+var_28($sp)
                b       loc_E694
                lw      $a1, 0x40+var_20($sp)
 # ---------------------------------------------------------------------------

loc_E828:                                # CODE XREF: ssl2_enc_init+F8↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aS2EncC - 0x40000)  # "s2_enc.c"
                li      $a0, 0x8C
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x5C  # '\'
                move    $s1, $v0
                lw      $gp, 0x40+var_28($sp)
                bnez    $v0, loc_E640
                sw      $v0, 0x8C($s0)
                b       loc_E7CC
                la      $t9, ERR_put_error
 # ---------------------------------------------------------------------------

loc_E858:                                # CODE XREF: ssl2_enc_init+138↑j
                b       loc_E5D4
                move    $v1, $zero
 # End of function ssl2_enc_init


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_part_read
ssl2_part_read:                          # CODE XREF: sub_A24C:loc_A544↑p
                                         # ssl2_accept+288↑p ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x53AF0
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                bltz    $a2, loc_E944
                move    $s1, $a0
                lw      $v0, 0x44($a0)
                addu    $v0, $a2, $v0
                slti    $v1, $v0, 3
                bnez    $v1, loc_E940
                sw      $v0, 0x44($a0)
                lw      $v0, 0x3C($a0)
                lw      $s0, 4($v0)
                lbu     $v1, 0($s0)
                bnez    $v1, loc_E940
                li      $v1, 2
                lbu     $v0, 1($s0)
                lbu     $a0, 2($s0)
                sll     $v0, 8
                or      $a0, $v0, $a0
                beq     $a0, $v1, loc_E96C
                slti    $v0, $a0, 3
                bnez    $v0, loc_E95C
                li      $v0, 1
                li      $v0, 4
                beq     $a0, $v0, loc_E974
                li      $v0, 6
                beq     $a0, $v0, loc_E8E8
                li      $a2, 0xCC

loc_E8E4:                                # CODE XREF: ssl2_part_read:loc_E95C↓j
                li      $a2, 0xFD

loc_E8E8:                                # CODE XREF: ssl2_part_read+7C↑j
                                         # ssl2_part_read:loc_E96C↓j ...
                la      $t9, ERR_put_error

loc_E8EC:                                # CODE XREF: ssl2_part_read+104↓j
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $v0, 0x44($s1)
                lw      $gp, 0x30+var_18($sp)
                addiu   $a2, $v0, -3
                blez    $a2, loc_E940
                sw      $a2, 0x44($s1)
                la      $t9, memmove
                move    $a0, $s0
                jalr    $t9 ; memmove
                addiu   $a1, $s0, 3
                lw      $gp, 0x30+var_18($sp)
                move    $a2, $zero
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $a2
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_E940:                                # CODE XREF: ssl2_part_read+34↑j
                                         # ssl2_part_read+48↑j ...
                move    $a2, $zero

loc_E944:                                # CODE XREF: ssl2_part_read+20↑j
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $a2
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_E95C:                                # CODE XREF: ssl2_part_read+68↑j
                bne     $a0, $v0, loc_E8E4
                li      $a2, 0xCB
                b       loc_E8EC
                la      $t9, ERR_put_error
 # ---------------------------------------------------------------------------

loc_E96C:                                # CODE XREF: ssl2_part_read+60↑j
                b       loc_E8E8
                li      $a2, 0xCA
 # ---------------------------------------------------------------------------

loc_E974:                                # CODE XREF: ssl2_part_read+74↑j
                b       loc_E8E8
                li      $a2, 0xC9
 # End of function ssl2_part_read


 # =============== S U B R O U T I N E =======================================


sub_E97C:                                # DATA XREF: sub_EC5C+54↓o

var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x539D4
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_8($sp)
                sw      $s7, 0x48+var_C($sp)
                sw      $s6, 0x48+var_10($sp)
                sw      $s5, 0x48+var_14($sp)
                sw      $s4, 0x48+var_18($sp)
                sw      $s3, 0x48+var_1C($sp)
                sw      $s2, 0x48+var_20($sp)
                sw      $s1, 0x48+var_24($sp)
                sw      $s0, 0x48+var_28($sp)
                sw      $gp, 0x48+var_30($sp)
                lw      $t0, 0x54($a0)
                move    $s2, $a0
                lw      $s0, 0x28($t0)
                move    $s4, $a1
                slt     $v0, $s0, $a1
                move    $s6, $a1
                bnez    $v0, loc_EA38
                move    $s7, $a3
                bnez    $a3, loc_EB7C
                nop
                lw      $v0, 0x30($t0)
                lw      $v1, 0x2C($t0)
                sw      $a1, 0x50($s2)
                addu    $v0, $v1
                sw      $v0, 0x4C($a0)

loc_E9F0:                                # CODE XREF: sub_E97C+208↓j
                lw      $v0, 0x2C($t0)
                lw      $v1, 0x28($t0)
                addu    $v0, $s4
                subu    $v1, $s4
                sw      $v0, 0x2C($t0)
                lw      $ra, 0x48+var_8($sp)
                move    $v0, $s6
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                addiu   $sp, 0x48
                jr      $ra
                sw      $v1, 0x28($t0)
 # ---------------------------------------------------------------------------

loc_EA38:                                # CODE XREF: sub_E97C+50↑j
                lw      $v1, 0x60($a0)
                li      $v0, 0x8002
                movz    $a2, $a1, $v1
                sltu    $v0, $a2, $v0
                li      $s5, 0x8001
                beqz    $s0, loc_EA94
                movn    $s5, $a2, $v0
                beqz    $a3, loc_EB9C
                nop
                lw      $v1, 0x50($a0)

loc_EA60:                                # CODE XREF: sub_E97C:loc_EB8C↓j
                lw      $a1, 0x4C($s2)
                lw      $a0, 0x30($t0)
                beq     $a1, $a0, loc_EA84
                move    $s1, $v1
                la      $t9, memcpy
                jalr    $t9 ; memcpy
                addu    $a2, $v1, $s0
                lw      $gp, 0x48+var_30($sp)
                lw      $t0, 0x54($s2)

loc_EA84:                                # CODE XREF: sub_E97C+EC↑j
                                         # sub_E97C+22C↓j ...
                lw      $v0, 0x30($t0)
                sw      $zero, 0x28($t0)
                b       loc_EAB0
                sw      $v0, 0x4C($s2)
 # ---------------------------------------------------------------------------

loc_EA94:                                # CODE XREF: sub_E97C+D0↑j
                lw      $v1, 0x50($a0)
                bnez    $v1, loc_EB8C
                nop
                lw      $v0, 0x30($t0)

loc_EAA4:                                # CODE XREF: sub_E97C+218↓j
                blez    $s4, loc_EC54
                sw      $v0, 0x4C($s2)
                move    $s1, $zero

loc_EAB0:                                # CODE XREF: sub_E97C+110↑j
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $gp, 0x48+var_30($sp)
                b       loc_EAF8
                move    $s3, $v0
 # ---------------------------------------------------------------------------

loc_EAC8:                                # CODE XREF: sub_E97C+190↓j
                lw      $v0, 0x54($s2)
                li      $v1, 3
                lw      $a1, 0x30($v0)
                sw      $v1, 0x18($s2)
                jalr    $t9 ; BIO_read
                addu    $a1, $a3, $a1
                blez    $v0, loc_EB38
                lw      $gp, 0x48+var_30($sp)
                addu    $s0, $v0
                slt     $v0, $s0, $s4
                beqz    $v0, loc_EBB0
                nop

loc_EAF8:                                # CODE XREF: sub_E97C+144↑j
                lw      $v0, 0xC($s2)
                addu    $a3, $s0, $s1
                la      $t9, BIO_read
                subu    $a2, $s5, $s0
                sw      $zero, 0($s3)
                bnez    $v0, loc_EAC8
                move    $a0, $v0
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x70  # 'p'
                li      $a2, 0xD3
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 0xFFFFFFFF

loc_EB38:                                # CODE XREF: sub_E97C+164↑j
                lw      $v1, 0x54($s2)
                move    $s6, $v0
                lw      $v0, 0x28($v1)
                lw      $ra, 0x48+var_8($sp)
                addu    $v0, $s0
                sw      $v0, 0x28($v1)
                lw      $s7, 0x48+var_C($sp)
                move    $v0, $s6
                lw      $s5, 0x48+var_14($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_EB7C:                                # CODE XREF: sub_E97C+58↑j
                lw      $v0, 0x50($a0)
                addu    $v0, $a1
                b       loc_E9F0
                sw      $v0, 0x50($a0)
 # ---------------------------------------------------------------------------

loc_EB8C:                                # CODE XREF: sub_E97C+11C↑j
                bnez    $a3, loc_EA60
                nop
                b       loc_EAA4
                lw      $v0, 0x30($t0)
 # ---------------------------------------------------------------------------

loc_EB9C:                                # CODE XREF: sub_E97C+D8↑j
                lw      $v0, 0x2C($t0)
                bnez    $v0, loc_EC30
                la      $t9, memcpy
                b       loc_EA84
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_EBB0:                                # CODE XREF: sub_E97C+174↑j
                lw      $t0, 0x54($s2)

loc_EBB4:                                # CODE XREF: sub_E97C:loc_EC54↓j
                slt     $v0, $s4, $s0
                beqz    $v0, loc_EC24
                addu    $v1, $s1, $s4
                subu    $v0, $s0, $s4
                sw      $v0, 0x28($t0)
                sw      $v1, 0x2C($t0)

loc_EBCC:                                # CODE XREF: sub_E97C+2AC↓j
                beqz    $s7, loc_EC18
                li      $v0, 1
                lw      $v0, 0x50($s2)
                addu    $v0, $s4
                sw      $v0, 0x50($s2)
                li      $v0, 1
                sw      $v0, 0x18($s2)

loc_EBE8:                                # CODE XREF: sub_E97C+2A0↓j
                move    $v0, $s6
                lw      $ra, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_EC18:                                # CODE XREF: sub_E97C:loc_EBCC↑j
                sw      $s4, 0x50($s2)
                b       loc_EBE8
                sw      $v0, 0x18($s2)
 # ---------------------------------------------------------------------------

loc_EC24:                                # CODE XREF: sub_E97C+23C↑j
                sw      $zero, 0x28($t0)
                b       loc_EBCC
                sw      $zero, 0x2C($t0)
 # ---------------------------------------------------------------------------

loc_EC30:                                # CODE XREF: sub_E97C+224↑j
                lw      $a0, 0x30($t0)
                addu    $a1, $a0, $v0
                jalr    $t9 ; memcpy
                move    $a2, $s0
                lw      $gp, 0x48+var_30($sp)
                lw      $t0, 0x54($s2)
                move    $s1, $zero
                b       loc_EA84
                sw      $zero, 0x2C($t0)
 # ---------------------------------------------------------------------------

loc_EC54:                                # CODE XREF: sub_E97C:loc_EAA4↑j
                b       loc_EBB4
                move    $s1, $zero
 # End of function sub_E97C


 # =============== S U B R O U T I N E =======================================


sub_EC5C:                                # CODE XREF: ssl2_peek+14↓j
                                         # ssl2_read+14↓j
                                         # DATA XREF: ...

var_50          = -0x50
var_48          = -0x48
var_40          = -0x40
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4284        =  0x4284

                li      $gp, 0x536F4
                addu    $gp, $t9
                addiu   $sp, -0x60
                sw      $ra, 0x60+var_4($sp)
                sw      $fp, 0x60+var_8($sp)
                sw      $s7, 0x60+var_C($sp)
                sw      $s6, 0x60+var_10($sp)
                sw      $s5, 0x60+var_14($sp)
                sw      $s4, 0x60+var_18($sp)
                sw      $s3, 0x60+var_1C($sp)
                sw      $s2, 0x60+var_20($sp)
                sw      $s1, 0x60+var_24($sp)
                sw      $s0, 0x60+var_28($sp)
                sw      $gp, 0x60+var_48($sp)
                la      $v0, loc_10000
                la      $fp, loc_40000
                move    $s1, $a0
                move    $s6, $a1
                move    $s3, $a2
                move    $s7, $a3
                addiu   $s4, $v0, (sub_E97C - 0x10000)
                b       loc_ED0C
                addiu   $s5, $sp, 0x60+var_40
 # ---------------------------------------------------------------------------

loc_ECBC:                                # CODE XREF: sub_EC5C+148↓j
                lbu     $v0, 2($v1)
                sw      $v0, 0x3C($a3)
                lw      $v0, 4($a3)
                beqz    $v0, loc_EDB8
                addiu   $s0, $v1, 3

loc_ECD0:                                # CODE XREF: sub_EC5C+154↓j
                lw      $v0, 0x3C($a3)
                sw      $s0, 0x50($a3)
                bnez    $v0, loc_EE10
                sw      $s0, 0x58($a3)
                move    $s2, $zero

loc_ECE4:                                # CODE XREF: sub_EC5C+1AC↓j
                lw      $v1, 0x40($a3)
                lw      $v0, 4($a3)
                bnez    $v0, loc_ED00
                sw      $v1, 0x44($a3)
                sltu    $v0, $v1, $s2
                beqz    $v0, loc_F02C
                la      $t9, ssl2_enc

loc_ED00:                                # CODE XREF: sub_EC5C+90↑j
                                         # sub_EC5C+45C↓j
                lw      $v0, 0xD0($a3)
                addiu   $v0, 1
                sw      $v0, 0xD0($a3)

loc_ED0C:                                # CODE XREF: sub_EC5C+58↑j
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s1
                andi    $v0, 0x3000
                beqz    $v0, loc_ED30
                lw      $gp, 0x60+var_48($sp)
                lw      $v0, 0x1C($s1)
                beqz    $v0, loc_EF94
                nop

loc_ED30:                                # CODE XREF: sub_EC5C+C0↑j
                                         # sub_EC5C+350↓j
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                li      $s2, 1
                lw      $gp, 0x60+var_48($sp)
                sw      $zero, 0($v0)
                blez    $s3, loc_F0C0
                sw      $s2, 0x18($s1)
                lw      $a3, 0x54($s1)
                lw      $a2, 0x44($a3)
                bnez    $a2, loc_F0F8
                li      $v0, 0xF0
                lw      $v1, 0x38($s1)
                beq     $v1, $v0, loc_EE8C
                nop

loc_ED68:                                # CODE XREF: sub_EC5C+3C8↓j
                li      $v0, 0xF1
                bne     $v1, $v0, loc_EF40
                la      $t9, ERR_put_error

loc_ED74:                                # CODE XREF: sub_EC5C+2DC↓j
                lw      $v0, 0x40($a3)
                lw      $a0, 0($a3)
                addiu   $v0, 2
                lw      $a1, 0x50($s1)
                addu    $v0, $a0
                slt     $v1, $a1, $v0
                bnez    $v1, loc_EE68
                move    $a0, $s1

loc_ED94:                                # CODE XREF: sub_EC5C+228↓j
                li      $v0, 0xF0
                sw      $v0, 0x38($s1)
                lw      $v1, 0x4C($s1)
                lw      $v0, 0($a3)
                bnez    $v0, loc_ECBC
                addiu   $s0, $v1, 2
                lw      $v0, 4($a3)
                bnez    $v0, loc_ECD0
                sw      $zero, 0x3C($a3)

loc_EDB8:                                # CODE XREF: sub_EC5C+6C↑j
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x84($s1)
                lw      $gp, 0x60+var_48($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                move    $s2, $v0
                bltz    $v0, loc_F19C
                lw      $gp, 0x60+var_48($sp)
                slti    $v0, 0x15
                beqz    $v0, loc_F16C
                la      $v0, loc_40000

loc_EDEC:                                # CODE XREF: sub_EC5C+524↓j
                lw      $a3, 0x54($s1)
                addu    $v0, $s0, $s2
                lw      $v1, 0x3C($a3)
                lw      $a0, 0x40($a3)
                addu    $v1, $s2, $v1
                sltu    $v1, $a0, $v1
                sw      $v0, 0x50($a3)
                beqz    $v1, loc_ECE4
                sw      $s0, 0x58($a3)

loc_EE10:                                # CODE XREF: sub_EC5C+7C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x60+var_50($sp)
                li      $a0, 0x14
                li      $a1, 0xEC
                li      $a2, 0x11B

loc_EE24:                                # CODE XREF: sub_EC5C+364↓j
                                         # sub_EC5C+508↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x60+var_48($sp)
                li      $s0, 0xFFFFFFFF

loc_EE34:                                # CODE XREF: sub_EC5C+254↓j
                                         # sub_EC5C+348↓j ...
                move    $v0, $s0
                lw      $ra, 0x60+var_4($sp)
                lw      $fp, 0x60+var_8($sp)
                lw      $s7, 0x60+var_C($sp)
                lw      $s6, 0x60+var_10($sp)
                lw      $s5, 0x60+var_14($sp)
                lw      $s4, 0x60+var_18($sp)
                lw      $s3, 0x60+var_1C($sp)
                lw      $s2, 0x60+var_20($sp)
                lw      $s1, 0x60+var_24($sp)
                lw      $s0, 0x60+var_28($sp)
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_EE68:                                # CODE XREF: sub_EC5C+130↑j
                subu    $a1, $v0, $a1
                move    $a2, $a1
                move    $t9, $s4
                jalr    $t9
                li      $a3, 1
                blez    $v0, loc_F14C
                lw      $gp, 0x60+var_48($sp)
                b       loc_ED94
                lw      $a3, 0x54($s1)
 # ---------------------------------------------------------------------------

loc_EE8C:                                # CODE XREF: sub_EC5C+104↑j
                lw      $v0, 0x104($s1)
                beqz    $v0, loc_EFC8
                move    $a0, $s1
                li      $a1, 5
                li      $a2, 0x8001
                move    $t9, $s4
                jalr    $t9
                move    $a3, $zero
                move    $s0, $v0
                blez    $v0, loc_EE34
                lw      $gp, 0x60+var_48($sp)
                lw      $a0, 0x4C($s1)
                sw      $zero, 0x104($s1)
                lb      $v0, 0($a0)
                bgez    $v0, loc_F188
                la      $t9, ERR_put_error
                lbu     $v1, 2($a0)
                beq     $v1, $s2, loc_EEE0
                li      $v0, 4
                bne     $v1, $v0, loc_F188
                nop

loc_EEE0:                                # CODE XREF: sub_EC5C+274↑j
                lw      $a3, 0x54($s1)
                li      $v0, 0xF1
                sw      $v0, 0x38($s1)
                sw      $zero, 8($a3)
                lbu     $v0, 0($a0)
                lbu     $v1, 1($a0)
                sll     $v0, 8
                or      $v1, $v0
                sw      $v1, 0x40($a3)
                lb      $v0, 0($a0)
                bltz    $v0, loc_F01C
                andi    $v0, $v1, 0x7FFF

loc_EF10:                                # CODE XREF: sub_EC5C+3B8↓j
                andi    $v1, 0x3FFF
                li      $v0, 1
                sw      $v0, 0($a3)
                sw      $v1, 0x40($a3)
                lbu     $v0, 0($a0)
                srl     $v0, 6
                andi    $v0, 1
                sw      $v0, 8($a3)
                lw      $v1, 0x38($s1)
                li      $v0, 0xF1
                beq     $v1, $v0, loc_ED74
                la      $t9, ERR_put_error

loc_EF40:                                # CODE XREF: sub_EC5C+110↑j
                sw      $zero, 0x60+var_50($sp)
                li      $s0, 0xFFFFFFFF
                li      $a0, 0x14
                li      $a1, 0xEC
                li      $a2, 0x7E  # '~'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x60+var_48($sp)
                lw      $ra, 0x60+var_4($sp)
                lw      $fp, 0x60+var_8($sp)
                lw      $s7, 0x60+var_C($sp)
                lw      $s6, 0x60+var_10($sp)
                lw      $s5, 0x60+var_14($sp)
                lw      $s4, 0x60+var_18($sp)
                lw      $s3, 0x60+var_1C($sp)
                lw      $s2, 0x60+var_20($sp)
                lw      $s1, 0x60+var_24($sp)
                lw      $s0, 0x60+var_28($sp)
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_EF94:                                # CODE XREF: sub_EC5C+CC↑j
                lw      $t9, 0x20($s1)
                jalr    $t9
                move    $a0, $s1
                move    $s0, $v0
                bltz    $v0, loc_EE34
                lw      $gp, 0x60+var_48($sp)
                bnez    $v0, loc_ED30
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xEC
                li      $a2, 0xE5
                b       loc_EE24
                sw      $zero, 0x60+var_50($sp)
 # ---------------------------------------------------------------------------

loc_EFC8:                                # CODE XREF: sub_EC5C+234↑j
                li      $a1, 2
                li      $a2, 0x8001
                move    $t9, $s4
                jalr    $t9
                move    $a3, $zero
                move    $s0, $v0
                blez    $v0, loc_EE34
                lw      $gp, 0x60+var_48($sp)
                lw      $a3, 0x54($s1)
                lw      $a0, 0x4C($s1)
                li      $v0, 0xF1
                sw      $v0, 0x38($s1)
                sw      $zero, 8($a3)
                lbu     $v0, 0($a0)
                lbu     $v1, 1($a0)
                sll     $v0, 8
                or      $v1, $v0
                sw      $v1, 0x40($a3)
                lb      $v0, 0($a0)
                bgez    $v0, loc_EF10
                andi    $v0, $v1, 0x7FFF

loc_F01C:                                # CODE XREF: sub_EC5C+2AC↑j
                sw      $v0, 0x40($a3)
                sw      $zero, 0($a3)
                b       loc_ED68
                lw      $v1, 0x38($s1)
 # ---------------------------------------------------------------------------

loc_F02C:                                # CODE XREF: sub_EC5C+9C↑j
                move    $a0, $s1
                jalr    $t9 ; ssl2_enc
                move    $a1, $zero
                lw      $v1, 0x54($s1)
                lw      $gp, 0x60+var_48($sp)
                lw      $v0, 0x44($v1)
                subu    $v0, $s2
                la      $t9, ssl2_mac
                sw      $v0, 0x44($v1)
                move    $a0, $s1
                move    $a1, $s5
                jalr    $t9 ; ssl2_mac
                move    $a2, $zero
                lw      $s0, 0x54($s1)
                lw      $gp, 0x60+var_48($sp)
                lw      $v0, 0x44($s0)
                lw      $v1, 0x3C($s0)
                subu    $v0, $v1
                la      $t9, memcmp
                lw      $a1, 0x58($s0)
                sw      $v0, 0x44($s0)
                move    $a2, $s2
                jalr    $t9 ; memcmp
                move    $a0, $s5
                bnez    $v0, loc_F154
                lw      $gp, 0x60+var_48($sp)
                la      $t9, EVP_CIPHER_CTX_block_size
                lw      $a0, 0x80($s1)
                jalr    $t9 ; EVP_CIPHER_CTX_block_size
                lw      $s0, 0x40($s0)
                divu    $s0, $v0
                teq     $v0, $zero  #7
                mfhi    $v1
                bnez    $v1, loc_F154
                lw      $gp, 0x60+var_48($sp)
                b       loc_ED00
                lw      $a3, 0x54($s1)
 # ---------------------------------------------------------------------------

loc_F0C0:                                # CODE XREF: sub_EC5C+E8↑j
                move    $s0, $s3
                move    $v0, $s0
                lw      $ra, 0x60+var_4($sp)
                lw      $fp, 0x60+var_8($sp)
                lw      $s7, 0x60+var_C($sp)
                lw      $s6, 0x60+var_10($sp)
                lw      $s5, 0x60+var_14($sp)
                lw      $s4, 0x60+var_18($sp)
                lw      $s3, 0x60+var_1C($sp)
                lw      $s2, 0x60+var_20($sp)
                lw      $s1, 0x60+var_24($sp)
                lw      $s0, 0x60+var_28($sp)
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_F0F8:                                # CODE XREF: sub_EC5C+F8↑j
                slt     $v0, $s3, $a2
                move    $s0, $s3
                la      $t9, memcpy
                movz    $s0, $a2, $v0
                lw      $a1, 0x50($a3)
                move    $a0, $s6
                jalr    $t9 ; memcpy
                move    $a2, $s0
                bnez    $s7, loc_EE34
                lw      $gp, 0x60+var_48($sp)
                lw      $v0, 0x54($s1)
                lw      $a0, 0x44($v0)
                lw      $v1, 0x50($v0)
                subu    $a0, $s0
                addu    $v1, $s0
                sw      $v1, 0x50($v0)
                bnez    $a0, loc_EE34
                sw      $a0, 0x44($v0)
                li      $v0, 0xF0
                b       loc_EE34
                sw      $v0, 0x38($s1)
 # ---------------------------------------------------------------------------

loc_F14C:                                # CODE XREF: sub_EC5C+220↑j
                b       loc_EE34
                move    $s0, $v0
 # ---------------------------------------------------------------------------

loc_F154:                                # CODE XREF: sub_EC5C+430↑j
                                         # sub_EC5C+454↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xEC
                li      $a2, 0x71  # 'q'
                b       loc_EE24
                sw      $zero, 0x60+var_50($sp)
 # ---------------------------------------------------------------------------

loc_F16C:                                # CODE XREF: sub_EC5C+188↑j
                la      $t9, OpenSSLDie
                addiu   $a0, $fp, 0x60+arg_4284
                li      $a1, 0xFC
                jalr    $t9 ; OpenSSLDie
                addiu   $a2, $v0, (aMacSizeMaxMacS - 0x40000)  # "mac_size <= MAX_MAC_SIZE"
                b       loc_EDEC
                lw      $gp, 0x60+var_48($sp)
 # ---------------------------------------------------------------------------

loc_F188:                                # CODE XREF: sub_EC5C+268↑j
                                         # sub_EC5C+27C↑j
                li      $a0, 0x14
                li      $a1, 0xEC
                li      $a2, 0xAF
                b       loc_EE24
                sw      $zero, 0x60+var_50($sp)
 # ---------------------------------------------------------------------------

loc_F19C:                                # CODE XREF: sub_EC5C+17C↑j
                b       loc_EE34
                li      $s0, 0xFFFFFFFF
 # End of function sub_EC5C


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_peek
ssl2_peek:                               # DATA XREF: LOAD:00004A08↑o
                                         # .got:ssl2_peek_ptr↓o
                li      $gp, 0x531AC
                addu    $gp, $t9
                la      $t9, loc_10000
                addiu   $t9, (sub_EC5C - 0x10000)
                jr      $t9 ; sub_EC5C
                li      $a3, 1
 # End of function ssl2_peek


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_read
ssl2_read:                               # CODE XREF: sub_A24C+108↑p
                                         # sub_A24C+224↑p ...
                li      $gp, 0x53190
                addu    $gp, $t9
                la      $t9, loc_10000
                addiu   $t9, (sub_EC5C - 0x10000)
                jr      $t9 ; sub_EC5C
                move    $a3, $zero
 # End of function ssl2_read


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_write
ssl2_write:                              # CODE XREF: ssl2_write_error+68↑p
                                         # ssl2_write_error+108↑p ...

var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x53174
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_4($sp)
                sw      $fp, 0x48+var_8($sp)
                sw      $s7, 0x48+var_C($sp)
                sw      $s6, 0x48+var_10($sp)
                sw      $s5, 0x48+var_14($sp)
                sw      $s4, 0x48+var_18($sp)
                sw      $s3, 0x48+var_1C($sp)
                sw      $s2, 0x48+var_20($sp)
                sw      $s1, 0x48+var_24($sp)
                sw      $s0, 0x48+var_28($sp)
                sw      $gp, 0x48+var_30($sp)
                la      $t9, SSL_state
                move    $fp, $a1
                move    $s1, $a2
                jalr    $t9 ; SSL_state
                move    $s0, $a0
                andi    $v0, 0x3000
                beqz    $v0, loc_F244
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x1C($s0)
                beqz    $v0, loc_F710
                nop

loc_F244:                                # CODE XREF: ssl2_write+54↑j
                                         # ssl2_write+54C↓j
                lw      $v0, 0xD4($s0)
                bnez    $v0, loc_F7E4
                la      $t9, ssl2_write_error

loc_F250:                                # CODE XREF: ssl2_write+614↓j
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                move    $s3, $v0
                lw      $gp, 0x48+var_30($sp)
                sw      $zero, 0($v0)
                li      $v0, 1
                blez    $s1, loc_F784
                sw      $v0, 0x18($s0)
                lw      $a3, 0x54($s0)
                lw      $s5, 0x10($a3)
                lw      $v0, 0x20($a3)
                sw      $zero, 0x10($a3)
                subu    $s1, $s5
                beqz    $v0, loc_F3F0
                addu    $s4, $fp, $s5

loc_F290:                                # CODE XREF: ssl2_write+20C↓j
                lw      $v0, 0x14($a3)
                slt     $v0, $s1, $v0
                bnez    $v0, loc_F2BC
                la      $t9, ERR_put_error
                lw      $v0, 0x18($a3)
                beq     $s4, $v0, loc_F364
                nop
                lw      $v0, 0xFC($s0)
                andi    $v0, 2
                bnez    $v0, loc_F364
                nop

loc_F2BC:                                # CODE XREF: ssl2_write+BC↑j
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0xD4
                li      $a2, 0x7F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                li      $v1, 0xFFFFFFFF

loc_F2DC:                                # CODE XREF: ssl2_write+1E0↓j
                lw      $a3, 0x54($s0)

loc_F2E0:                                # CODE XREF: ssl2_write:loc_F34C↓j
                                         # ssl2_write+338↓j
                sw      $s5, 0x10($a3)

loc_F2E4:                                # CODE XREF: ssl2_write+600↓j
                lw      $ra, 0x48+var_4($sp)
                lw      $fp, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_F318:                                # CODE XREF: ssl2_write+194↓j
                li      $v0, 2
                sw      $v0, 0x18($s0)
                lw      $v1, 0x38($a3)
                lw      $a1, 0x1C($a3)
                lw      $a2, 0x20($a3)
                jalr    $t9 ; BIO_write
                addu    $a1, $v1, $a1
                lw      $a3, 0x54($s0)
                move    $v1, $v0
                lw      $v0, 0x20($a3)
                lw      $gp, 0x48+var_30($sp)
                beq     $v0, $v1, loc_F3AC
                subu    $a0, $v0, $v1

loc_F34C:                                # CODE XREF: ssl2_write+1C8↓j
                blez    $v1, loc_F2E0
                nop
                lw      $v0, 0x1C($a3)
                sw      $a0, 0x20($a3)
                addu    $v0, $v1
                sw      $v0, 0x1C($a3)

loc_F364:                                # CODE XREF: ssl2_write+C8↑j
                                         # ssl2_write+D8↑j
                lw      $v0, 0x10($s0)
                la      $t9, BIO_write
                sw      $zero, 0($s3)
                bnez    $v0, loc_F318
                move    $a0, $v0
                la      $t9, ERR_put_error
                li      $a0, 0x14
                move    $a3, $zero
                sw      $zero, 0x48+var_38($sp)
                li      $a1, 0xD4
                jalr    $t9 ; ERR_put_error
                li      $a2, 0x104
                lw      $a3, 0x54($s0)
                li      $v1, 0xFFFFFFFF
                lw      $v0, 0x20($a3)
                lw      $gp, 0x48+var_30($sp)
                bne     $v0, $v1, loc_F34C
                subu    $a0, $v0, $v1

loc_F3AC:                                # CODE XREF: ssl2_write+168↑j
                                         # ssl2_write+330↓j
                li      $v0, 1
                sw      $zero, 0x20($a3)
                sw      $v0, 0x18($s0)
                lw      $v1, 0x24($a3)
                blez    $v1, loc_F2DC
                nop
                beq     $v1, $s1, loc_F650
                nop
                lw      $v0, 0xFC($s0)
                andi    $v0, 1
                bnez    $v0, loc_F650
                subu    $s1, $v1
                lw      $a3, 0x54($s0)
                addu    $s5, $v1
                lw      $v0, 0x20($a3)
                bnez    $v0, loc_F290
                addu    $s4, $fp, $s5

loc_F3F0:                                # CODE XREF: ssl2_write+AC↑j
                lw      $v0, 4($a3)
                beqz    $v0, loc_F5A0
                move    $s6, $zero
                move    $v1, $zero
                li      $v0, 0x8000

loc_F404:                                # CODE XREF: ssl2_write+3FC↓j
                sltu    $v0, $s1, $v0
                li      $s2, 0x7FFF
                movn    $s2, $s1, $v0
                move    $s7, $zero
                sw      $zero, 0($a3)

loc_F418:                                # CODE XREF: ssl2_write+50C↓j
                                         # ssl2_write+52C↓j ...
                lw      $v0, 0x34($a3)
                la      $t9, memcpy
                addiu   $v0, 3
                addu    $a0, $v0, $v1
                sw      $a0, 0x54($a3)
                sw      $s2, 0x48($a3)
                sw      $s7, 0x3C($a3)
                sw      $v0, 0x58($a3)
                move    $a1, $s4
                jalr    $t9 ; memcpy
                move    $a2, $s2
                bnez    $s7, loc_F62C
                lw      $gp, 0x48+var_30($sp)

loc_F44C:                                # CODE XREF: ssl2_write+46C↓j
                lw      $a3, 0x54($s0)
                lw      $v0, 4($a3)
                beqz    $v0, loc_F5E0
                la      $t9, ssl2_mac

loc_F45C:                                # CODE XREF: ssl2_write+448↓j
                lw      $v1, 0x48($a3)
                lw      $v0, 0($a3)
                beqz    $v0, loc_F568
                sw      $v1, 0x20($a3)
                lw      $a1, 0x58($a3)
                srl     $v0, $v1, 8
                andi    $v1, $v0, 0x3F
                sb      $v1, -3($a1)
                lw      $a3, 0x54($s0)
                lw      $v0, 8($a3)
                beqz    $v0, loc_F498
                addiu   $a0, $a1, -3
                ori     $v0, $v1, 0x40  # '@'
                sb      $v0, -3($a1)
                lw      $a3, 0x54($s0)

loc_F498:                                # CODE XREF: ssl2_write+2A8↑j
                lw      $v0, 0x48($a3)
                sb      $v0, 1($a0)
                lw      $v1, 0x54($s0)
                lw      $v0, 0x3C($v1)
                sb      $v0, 2($a0)
                lw      $a3, 0x54($s0)
                lw      $v0, 0x20($a3)
                addiu   $v0, 3
                sw      $v0, 0x20($a3)

loc_F4BC:                                # CODE XREF: ssl2_write+3BC↓j
                lw      $v0, 0xD4($a3)
                sw      $a0, 0x38($a3)
                addiu   $v0, 1
                sw      $v0, 0xD4($a3)
                sw      $s4, 0x18($a3)
                sw      $s2, 0x24($a3)
                sw      $s1, 0x14($a3)
                b       loc_F52C
                sw      $zero, 0x1C($a3)
 # ---------------------------------------------------------------------------

loc_F4E0:                                # CODE XREF: ssl2_write+35C↓j
                li      $v0, 2
                sw      $v0, 0x18($s0)
                lw      $v1, 0x38($a3)
                lw      $a1, 0x1C($a3)
                lw      $a2, 0x20($a3)
                jalr    $t9 ; BIO_write
                addu    $a1, $v1, $a1
                lw      $gp, 0x48+var_30($sp)
                move    $v1, $v0

loc_F504:                                # CODE XREF: ssl2_write+384↓j
                lw      $a3, 0x54($s0)
                lw      $v0, 0x20($a3)
                beq     $v0, $v1, loc_F3AC
                subu    $a0, $v0, $v1
                blez    $v1, loc_F2E0
                nop
                lw      $v0, 0x1C($a3)
                sw      $a0, 0x20($a3)
                addu    $v0, $v1
                sw      $v0, 0x1C($a3)

loc_F52C:                                # CODE XREF: ssl2_write+2FC↑j
                lw      $v0, 0x10($s0)
                la      $t9, BIO_write
                sw      $zero, 0($s3)
                bnez    $v0, loc_F4E0
                move    $a0, $v0
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0xD4
                li      $a2, 0x104
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_F504
                li      $v1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_F568:                                # CODE XREF: ssl2_write+288↑j
                lw      $a0, 0x58($a3)
                srl     $v0, $v1, 8
                li      $v1, 0xFFFFFF80
                or      $v0, $v1
                sb      $v0, -2($a0)
                lw      $v1, 0x54($s0)
                addiu   $a0, -2
                lw      $v0, 0x48($v1)
                sb      $v0, 1($a0)
                lw      $a3, 0x54($s0)
                lw      $v0, 0x20($a3)
                addiu   $v0, 2
                b       loc_F4BC
                sw      $v0, 0x20($a3)
 # ---------------------------------------------------------------------------

loc_F5A0:                                # CODE XREF: ssl2_write+218↑j
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x90($s0)
                lw      $gp, 0x48+var_30($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                move    $s6, $v0
                bltz    $v0, loc_F7D4
                lw      $gp, 0x48+var_30($sp)
                lw      $a3, 0x54($s0)
                lw      $v0, 4($a3)
                beqz    $v0, loc_F688
                move    $v1, $s6
                b       loc_F404
                li      $v0, 0x8000
 # ---------------------------------------------------------------------------

loc_F5E0:                                # CODE XREF: ssl2_write+278↑j
                lw      $a1, 0x58($a3)
                addu    $v0, $s7, $s2
                sw      $v0, 0x4C($a3)
                move    $a0, $s0
                jalr    $t9 ; ssl2_mac
                li      $a2, 1
                lw      $a0, 0x54($s0)
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x48($a0)
                addu    $v1, $s7, $s6
                addu    $v0, $v1
                la      $t9, ssl2_enc
                sw      $v0, 0x48($a0)
                li      $a1, 1
                jalr    $t9 ; ssl2_enc
                move    $a0, $s0
                lw      $gp, 0x48+var_30($sp)
                b       loc_F45C
                lw      $a3, 0x54($s0)
 # ---------------------------------------------------------------------------

loc_F62C:                                # CODE XREF: ssl2_write+268↑j
                lw      $v0, 0x54($s0)
                la      $t9, memset
                lw      $a0, 0x54($v0)
                move    $a1, $zero
                addu    $a0, $s2, $a0
                jalr    $t9 ; memset
                move    $a2, $s7
                b       loc_F44C
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_F650:                                # CODE XREF: ssl2_write+1E8↑j
                                         # ssl2_write+1F8↑j
                addu    $v1, $s5

loc_F654:                                # CODE XREF: ssl2_write+544↓j
                                         # ssl2_write+570↓j ...
                lw      $ra, 0x48+var_4($sp)
                lw      $fp, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_F688:                                # CODE XREF: ssl2_write+3F4↑j
                la      $t9, EVP_CIPHER_CTX_block_size
                jalr    $t9 ; EVP_CIPHER_CTX_block_size
                lw      $a0, 0x80($s0)
                addu    $a2, $s6, $s1
                sltiu   $v1, $a2, 0x4000
                lw      $gp, 0x48+var_30($sp)
                bnez    $v1, loc_F6F0
                move    $a0, $v0
                lw      $a3, 0x54($s0)
                lw      $v1, 8($a3)
                beqz    $v1, loc_F754
                li      $v0, 0x7FFF

loc_F6B8:                                # CODE XREF: ssl2_write+518↓j
                sltiu   $v0, $a0, 2
                bnez    $v0, loc_F7BC
                nop

loc_F6C4:                                # CODE XREF: ssl2_write:loc_F7BC↓j
                divu    $a2, $a0
                teq     $a0, $zero  #7
                mfhi    $s7
                subu    $v0, $a0, $s7
                beqz    $v1, loc_F6FC
                movn    $s7, $v0, $s7
                li      $v0, 1
                move    $v1, $s6
                move    $s2, $s1
                b       loc_F418
                sw      $v0, 0($a3)
 # ---------------------------------------------------------------------------

loc_F6F0:                                # CODE XREF: ssl2_write+4C4↑j
                lw      $a3, 0x54($s0)
                b       loc_F6B8
                lw      $v1, 8($a3)
 # ---------------------------------------------------------------------------

loc_F6FC:                                # CODE XREF: ssl2_write+4F8↑j
                sltu    $v0, $zero, $s7
                move    $v1, $s6
                move    $s2, $s1
                b       loc_F418
                sw      $v0, 0($a3)
 # ---------------------------------------------------------------------------

loc_F710:                                # CODE XREF: ssl2_write+60↑j
                lw      $t9, 0x20($s0)
                jalr    $t9
                move    $a0, $s0
                move    $v1, $v0
                bltz    $v0, loc_F654
                lw      $gp, 0x48+var_30($sp)
                bnez    $v0, loc_F244
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x7F
                li      $a2, 0xE5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_F654
                li      $v1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_F754:                                # CODE XREF: ssl2_write+4D4↑j
                li      $v1, 0x8000
                sltu    $v1, $a2, $v1
                movn    $v0, $a2, $v1
                divu    $v0, $a0
                teq     $a0, $zero  #7
                move    $v1, $s6
                move    $s7, $zero
                sw      $zero, 0($a3)
                mfhi    $a0
                subu    $v0, $a0
                b       loc_F418
                subu    $s2, $v0, $s6
 # ---------------------------------------------------------------------------

loc_F784:                                # CODE XREF: ssl2_write+90↑j
                move    $v1, $s1
                lw      $ra, 0x48+var_4($sp)
                lw      $fp, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_F7BC:                                # CODE XREF: ssl2_write+4E0↑j
                bnez    $v1, loc_F6C4
                move    $s2, $s1
                move    $v1, $s6
                move    $s7, $zero
                b       loc_F418
                sw      $zero, 0($a3)
 # ---------------------------------------------------------------------------

loc_F7D4:                                # CODE XREF: ssl2_write+3E4↑j
                lw      $a3, 0x54($s0)
                li      $v1, 0xFFFFFFFF
                b       loc_F2E4
                sw      $s5, 0x10($a3)
 # ---------------------------------------------------------------------------

loc_F7E4:                                # CODE XREF: ssl2_write+6C↑j
                jalr    $t9 ; ssl2_write_error
                move    $a0, $s0
                lw      $v0, 0xD4($s0)
                beqz    $v0, loc_F250
                lw      $gp, 0x48+var_30($sp)
                b       loc_F654
                li      $v1, 0xFFFFFFFF
 # End of function ssl2_write


 # =============== S U B R O U T I N E =======================================


                .globl ssl2_do_write
ssl2_do_write:                           # CODE XREF: sub_A24C+1EC↑p
                                         # ssl2_accept+12C↑p ...

var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x52B50
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s0, 0x30+var_8($sp)
                sw      $gp, 0x30+var_10($sp)
                lw      $v0, 0x3C($a0)
                lw      $v1, 0x48($a0)
                lw      $a1, 4($v0)
                la      $t9, ssl2_write
                lw      $a2, 0x44($a0)
                move    $s0, $a0
                jalr    $t9 ; ssl2_write
                addu    $a1, $v1
                lw      $v1, 0x44($s0)
                lw      $gp, 0x30+var_10($sp)
                bne     $v0, $v1, loc_F8B0
                move    $a2, $v0
                lw      $t9, 0x64($s0)
                beqz    $t9, loc_F8A0
                lw      $ra, 0x30+var_4($sp)
                lw      $v1, 0x3C($s0)
                lw      $v0, 0x48($s0)
                lw      $a0, 0x68($s0)
                lw      $a3, 4($v1)
                lw      $a1, 0($s0)
                addu    $v0, $a2, $v0
                sw      $v0, 0x30+var_20($sp)
                sw      $a0, 0x30+var_18($sp)
                sw      $s0, 0x30+var_1C($sp)
                li      $a0, 1
                jalr    $t9
                move    $a2, $zero
                lw      $gp, 0x30+var_10($sp)
                li      $v0, 1

loc_F890:                                # CODE XREF: ssl2_do_write+C8↓j
                                         # ssl2_do_write:loc_F8D0↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s0, 0x30+var_8($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_F8A0:                                # CODE XREF: ssl2_do_write+50↑j
                lw      $s0, 0x30+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_F8B0:                                # CODE XREF: ssl2_do_write+44↑j
                bltz    $v0, loc_F8D0
                subu    $v1, $a2
                lw      $v0, 0x48($s0)
                addu    $v0, $a2
                sw      $v0, 0x48($s0)
                move    $v0, $zero
                b       loc_F890
                sw      $v1, 0x44($s0)
 # ---------------------------------------------------------------------------

loc_F8D0:                                # CODE XREF: ssl2_do_write:loc_F8B0↑j
                b       loc_F890
                li      $v0, 0xFFFFFFFF
 # End of function ssl2_do_write


 # =============== S U B R O U T I N E =======================================


                .globl SSLv3_method
SSLv3_method:                            # CODE XREF: sub_F8F0+24↓j
                                         # sub_1F0C8+68↓j
                                         # DATA XREF: ...
                li      $gp, 0x52A78
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58AC8 - 0x60000)
 # End of function SSLv3_method


 # =============== S U B R O U T I N E =======================================


sub_F8F0:                                # DATA XREF: .data.rel.ro:00058B24↓o
                li      $gp, 0x52A60
                addu    $gp, $t9
                li      $v0, 0x300
                beq     $a0, $v0, loc_F910
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_F910:                                # CODE XREF: sub_F8F0+10↑j
                la      $t9, SSLv3_method
                jr      $t9 ; SSLv3_method
                nop
 # End of function sub_F8F0


 # =============== S U B R O U T I N E =======================================


                .globl SSLv3_server_method
SSLv3_server_method:                     # CODE XREF: sub_F934+24↓j
                                         # sub_1F15C+68↓j ...
                li      $gp, 0x52A34
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58B3C - 0x60000)
 # End of function SSLv3_server_method


 # =============== S U B R O U T I N E =======================================


sub_F934:                                # DATA XREF: .data.rel.ro:00058B98↓o
                li      $gp, 0x52A1C
                addu    $gp, $t9
                li      $v0, 0x300
                beq     $a0, $v0, loc_F954
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_F954:                                # CODE XREF: sub_F934+10↑j
                la      $t9, SSLv3_server_method
                jr      $t9 ; SSLv3_server_method
                nop
 # End of function sub_F934


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_check_client_hello
ssl3_check_client_hello:                 # CODE XREF: ssl3_accept+120↓p
                                         # dtls1_accept+808↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x529F0
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s0, 0x30+var_8($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $v1, 0x100($a0)
                lw      $a1, 8($a0)
                addiu   $v0, $sp, 0x30+var_10
                sw      $v1, 0x30+var_20($sp)
                sw      $v0, 0x30+var_1C($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x2181
                li      $a1, 0x2180
                li      $a3, 0xFFFFFFFF
                jalr    $t9
                move    $s0, $a0
                move    $v1, $v0
                lw      $v0, 0x30+var_10($sp)
                beqz    $v0, loc_FA04
                lw      $gp, 0x30+var_18($sp)
                lw      $a0, 0x58($s0)
                li      $v0, 1
                lw      $v1, 0x340($a0)
                beq     $v1, $v0, loc_F9DC
                sw      $v0, 0x34C($a0)

loc_F9CC:                                # CODE XREF: ssl3_check_client_hello+D8↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s0, 0x30+var_8($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_F9DC:                                # CODE XREF: ssl3_check_client_hello+64↑j
                lw      $v1, 0($a0)
                andi    $v0, $v1, 0x40
                bnez    $v0, loc_FA18
                lw      $ra, 0x30+var_4($sp)
                ori     $v0, $v1, 0x40  # '@'
                lw      $s0, 0x30+var_8($sp)
                sw      $v0, 0($a0)
                addiu   $sp, 0x30
                jr      $ra
                li      $v0, 2
 # ---------------------------------------------------------------------------

loc_FA04:                                # CODE XREF: ssl3_check_client_hello+50↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s0, 0x30+var_8($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_FA18:                                # CODE XREF: ssl3_check_client_hello+84↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x130
                li      $a2, 0x15A
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_F9CC
                li      $v0, 0xFFFFFFFF
 # End of function ssl3_check_client_hello


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_next_proto
ssl3_get_next_proto:                     # CODE XREF: ssl3_accept+350↓p
                                         # DATA XREF: LOAD:000035E8↑o ...

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x52910
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s2, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $v0, 0x58($a0)
                lw      $v1, 0x414($v0)
                beqz    $v1, loc_FB74
                move    $s0, $a0
                lw      $a1, 8($a0)
                li      $v0, 0x202
                addiu   $v1, $sp, 0x38+var_18
                sw      $v0, 0x38+var_28($sp)
                sw      $v1, 0x38+var_24($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x2211
                li      $a1, 0x2210
                jalr    $t9
                li      $a3, 0x43  # 'C'
                move    $a0, $v0
                lw      $v0, 0x38+var_18($sp)
                beqz    $v0, loc_FB14
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0x58($s0)
                lw      $v1, 0x180($v0)
                beqz    $v1, loc_FBC4
                la      $t9, ERR_put_error
                slti    $v0, $a0, 2
                bnez    $v0, loc_FAFC
                move    $v0, $zero
                lw      $v1, 0x40($s0)
                lw      $a1, 0x44($s0)
                lbu     $s1, 0($v1)
                addiu   $a0, $s1, 2
                slt     $v0, $a1, $a0
                bnez    $v0, loc_FAF8
                addiu   $s2, $v1, 1
                addu    $v1, $s2, $s1
                lbu     $v0, 0($v1)
                addu    $v0, $a0
                beq     $a1, $v0, loc_FB30
                la      $a1, loc_40000

loc_FAF8:                                # CODE XREF: ssl3_get_next_proto+9C↑j
                move    $v0, $zero

loc_FAFC:                                # CODE XREF: ssl3_get_next_proto+80↑j
                                         # ssl3_get_next_proto+12C↓j ...
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_FB14:                                # CODE XREF: ssl3_get_next_proto+64↑j
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_FB30:                                # CODE XREF: ssl3_get_next_proto+B0↑j
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aS3SrvrC - 0x40000)  # "s3_srvr.c"
                move    $a0, $s1
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xDF6
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_FB9C
                sw      $v0, 0x15C($s0)
                la      $t9, memcpy
                move    $a0, $v0
                move    $a1, $s2
                jalr    $t9 ; memcpy
                move    $a2, $s1
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 1
                b       loc_FAFC
                sb      $s1, 0x160($s0)
 # ---------------------------------------------------------------------------

loc_FB74:                                # CODE XREF: ssl3_get_next_proto+2C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x132
                li      $a2, 0x164

loc_FB88:                                # CODE XREF: ssl3_get_next_proto+190↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_FAFC
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_FB9C:                                # CODE XREF: ssl3_get_next_proto+108↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x132
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_FAFC
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_FBC4:                                # CODE XREF: ssl3_get_next_proto+74↑j
                li      $a0, 0x14
                li      $a1, 0x132
                li      $a2, 0x163
                b       loc_FB88
                sw      $zero, 0x38+var_28($sp)
 # End of function ssl3_get_next_proto


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_cert_status
ssl3_send_cert_status:                   # CODE XREF: ssl3_accept+5E0↓p
                                         # dtls1_accept+384↓p
                                         # DATA XREF: ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x52778
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2200
                beq     $v1, $v0, loc_FC20
                move    $s0, $a0

loc_FC04:                                # CODE XREF: ssl3_send_cert_status+10C↓j
                la      $t9, ssl3_do_write
                move    $a0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_FC20:                                # CODE XREF: ssl3_send_cert_status+24↑j
                lw      $a1, 0x134($a0)
                la      $t9, BUF_MEM_grow
                lw      $a0, 0x3C($a0)
                jalr    $t9 ; BUF_MEM_grow
                addiu   $a1, 8
                bnez    $v0, loc_FC50
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_FC50:                                # CODE XREF: ssl3_send_cert_status+5C↑j
                lw      $v0, 0x3C($s0)
                li      $v1, 0x16
                lw      $a2, 4($v0)
                la      $t9, memcpy
                sb      $v1, 0($a2)
                lw      $v0, 0x134($s0)
                addiu   $a1, $a2, 1
                addiu   $v0, 4
                sra     $v0, 16
                sb      $v0, 1($a2)
                lw      $v1, 0x134($s0)
                addiu   $a3, $a2, 5
                addiu   $v1, 4
                sra     $v1, 8
                sb      $v1, 1($a1)
                lw      $v0, 0x134($s0)
                addiu   $a0, $a2, 8
                addiu   $v0, 4
                sb      $v0, 2($a1)
                lw      $v1, 0x120($s0)
                sb      $v1, 4($a2)
                lh      $a1, 0x136($s0)
                sb      $a1, 5($a2)
                lw      $v0, 0x134($s0)
                sra     $v0, 8
                sb      $v0, 1($a3)
                lw      $v1, 0x134($s0)
                sb      $v1, 2($a3)
                lw      $a1, 0x130($s0)
                jalr    $t9 ; memcpy
                lw      $a2, 0x134($s0)
                lw      $v1, 0x134($s0)
                lw      $gp, 0x20+var_10($sp)
                addiu   $v1, 8
                li      $v0, 0x2201
                sw      $v1, 0x44($s0)
                sw      $v0, 0x34($s0)
                b       loc_FC04
                sw      $zero, 0x48($s0)
 # End of function ssl3_send_cert_status


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_server_done
ssl3_send_server_done:                   # CODE XREF: ssl3_accept+6D8↓p
                                         # DATA XREF: LOAD:00004648↑o ...
                li      $gp, 0x52664
                addu    $gp, $t9
                lw      $v1, 0x34($a0)
                li      $v0, 0x2170
                bne     $v1, $v0, loc_FD38
                la      $t9, ssl3_do_write
                lw      $v0, 0x3C($a0)
                li      $a1, 0xE
                lw      $v1, 4($v0)
                li      $v0, 0x2171
                sb      $a1, 0($v1)
                sb      $zero, 3($v1)
                sb      $zero, 1($v1)
                sb      $zero, 2($v1)
                li      $v1, 4
                sw      $v0, 0x34($a0)
                sw      $v1, 0x44($a0)
                sw      $zero, 0x48($a0)

loc_FD38:                                # CODE XREF: ssl3_send_server_done+14↑j
                jr      $t9 ; ssl3_do_write
                li      $a1, 0x16
 # End of function ssl3_send_server_done


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_hello_request
ssl3_send_hello_request:                 # CODE XREF: ssl3_accept+C04↓p
                                         # DATA XREF: LOAD:00004638↑o ...
                li      $gp, 0x52610
                addu    $gp, $t9
                lw      $v1, 0x34($a0)
                li      $v0, 0x2120
                bne     $v1, $v0, loc_FD88
                la      $t9, ssl3_do_write
                lw      $v1, 0x3C($a0)
                lw      $v0, 4($v1)
                li      $v1, 0x2121
                sb      $zero, 3($v0)
                sb      $zero, 0($v0)
                sb      $zero, 1($v0)
                sb      $zero, 2($v0)
                li      $v0, 4
                sw      $v1, 0x34($a0)
                sw      $v0, 0x44($a0)
                sw      $zero, 0x48($a0)

loc_FD88:                                # CODE XREF: ssl3_send_hello_request+14↑j
                jr      $t9 ; ssl3_do_write
                li      $a1, 0x16
 # End of function ssl3_send_hello_request


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_newsession_ticket
ssl3_send_newsession_ticket:             # CODE XREF: ssl3_accept:loc_13B10↓p
                                         # DATA XREF: LOAD:00003178↑o ...

var_1C8         = -0x1C8
var_1C4         = -0x1C4
var_1C0         = -0x1C0
var_1B8         = -0x1B8
var_1B4         = -0x1B4
var_1B0         = -0x1B0
var_1AC         = -0x1AC
var_198         = -0x198
var_194         = -0x194
var_190         = -0x190
var_18C         = -0x18C
var_188         = -0x188
var_FC          = -0xFC
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x525C0
                addu    $gp, $t9
                addiu   $sp, -0x1D8
                sw      $ra, 0x1D8+var_4($sp)
                sw      $fp, 0x1D8+var_8($sp)
                sw      $s7, 0x1D8+var_C($sp)
                sw      $s6, 0x1D8+var_10($sp)
                sw      $s5, 0x1D8+var_14($sp)
                sw      $s4, 0x1D8+var_18($sp)
                sw      $s3, 0x1D8+var_1C($sp)
                sw      $s2, 0x1D8+var_20($sp)
                sw      $s1, 0x1D8+var_24($sp)
                sw      $s0, 0x1D8+var_28($sp)
                sw      $gp, 0x1D8+var_1C0($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x21F0
                beq     $v1, $v0, loc_FE20
                move    $s2, $a0

loc_FDDC:                                # CODE XREF: ssl3_send_newsession_ticket+44C↓j
                la      $t9, ssl3_do_write
                move    $a0, $s2
                jalr    $t9 ; ssl3_do_write
                li      $a1, 0x16
                lw      $gp, 0x1D8+var_1C0($sp)

loc_FDF0:                                # CODE XREF: ssl3_send_newsession_ticket:loc_FE48↓j
                                         # ssl3_send_newsession_ticket+464↓j
                lw      $ra, 0x1D8+var_4($sp)
                lw      $fp, 0x1D8+var_8($sp)
                lw      $s7, 0x1D8+var_C($sp)
                lw      $s6, 0x1D8+var_10($sp)
                lw      $s5, 0x1D8+var_14($sp)
                lw      $s4, 0x1D8+var_18($sp)
                lw      $s3, 0x1D8+var_1C($sp)
                lw      $s2, 0x1D8+var_20($sp)
                lw      $s1, 0x1D8+var_24($sp)
                lw      $s0, 0x1D8+var_28($sp)
                jr      $ra
                addiu   $sp, 0x1D8
 # ---------------------------------------------------------------------------

loc_FE20:                                # CODE XREF: ssl3_send_newsession_ticket+44↑j
                la      $t9, i2d_SSL_SESSION
                lw      $a0, 0xC0($a0)
                move    $a1, $zero
                jalr    $t9 ; i2d_SSL_SESSION
                lw      $s3, 0x158($s2)
                move    $s0, $v0
                li      $v0, 0xFF00
                slt     $v0, $s0
                beqz    $v0, loc_FE50
                lw      $gp, 0x1D8+var_1C0($sp)

loc_FE48:                                # CODE XREF: ssl3_send_newsession_ticket+DC↓j
                                         # ssl3_send_newsession_ticket+180↓j
                b       loc_FDF0
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_FE50:                                # CODE XREF: ssl3_send_newsession_ticket+B0↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aS3SrvrC - 0x40000)  # "s3_srvr.c"
                move    $a0, $s0
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xD2A
                move    $s4, $v0
                beqz    $v0, loc_FE48
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, i2d_SSL_SESSION
                lw      $a0, 0xC0($s2)
                addiu   $s6, $sp, 0x1D8+var_1B8
                move    $a1, $s6
                jalr    $t9 ; i2d_SSL_SESSION
                sw      $v0, 0x1D8+var_1B8($sp)
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, d2i_SSL_SESSION
                sw      $s4, 0x1D8+var_1B4($sp)
                move    $a0, $zero
                addiu   $a1, $sp, 0x1D8+var_1B4
                jalr    $t9 ; d2i_SSL_SESSION
                move    $a2, $s0
                move    $s1, $v0
                beqz    $v0, loc_101E4
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, i2d_SSL_SESSION
                sw      $zero, 0x44($v0)
                move    $a0, $v0
                jalr    $t9 ; i2d_SSL_SESSION
                move    $a1, $zero
                move    $s5, $v0
                slt     $v0, $s0, $v0
                bnez    $v0, loc_101E4
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, i2d_SSL_SESSION
                move    $a1, $s6
                move    $a0, $s1
                jalr    $t9 ; i2d_SSL_SESSION
                sw      $s4, 0x1D8+var_1B8($sp)
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                move    $a0, $s1

loc_FEFC:                                # DATA XREF: .data.rel.ro:off_59194↓o
                                         # .data.rel.ro:off_59208↓o ...
                lw      $gp, 0x1D8+var_1C0($sp)
                lw      $a0, 0x3C($s2)
                la      $t9, BUF_MEM_grow
                jalr    $t9 ; BUF_MEM_grow
                addiu   $a1, $s5, 0x8A
                beqz    $v0, loc_FE48
                lw      $gp, 0x1D8+var_1C0($sp)
                lw      $v0, 0x3C($s2)
                la      $t9, EVP_CIPHER_CTX_init
                lw      $v1, 4($v0)
                addiu   $s6, $sp, 0x1D8+var_188
                addiu   $a0, $v1, 4
                li      $v0, 4
                sb      $v0, 0($v1)
                sw      $a0, 0x1D8+var_1B8($sp)
                jalr    $t9 ; EVP_CIPHER_CTX_init
                move    $a0, $s6
                lw      $gp, 0x1D8+var_1C0($sp)
                addiu   $s7, $sp, 0x1D8+var_FC
                la      $t9, HMAC_CTX_init
                jalr    $t9 ; HMAC_CTX_init
                move    $a0, $s7
                lw      $t9, 0x138($s3)
                beqz    $t9, loc_1021C
                lw      $gp, 0x1D8+var_1C0($sp)
                li      $v0, 1
                addiu   $fp, $sp, 0x30  # '0'
                sw      $v0, 0x1D8+var_1C4($sp)
                sw      $s7, 0x1D8+var_1C8($sp)
                move    $a0, $s2
                addiu   $a1, $sp, 0x1D8+var_198
                move    $a2, $fp
                jalr    $t9
                move    $a3, $s6
                bltz    $v0, loc_101E4
                lw      $gp, 0x1D8+var_1C0($sp)

loc_FF8C:                                # CODE XREF: ssl3_send_newsession_ticket+524↓j
                lw      $v0, 0x6C($s2)
                bnez    $v0, loc_10214
                lw      $v1, 0x1D8+var_1B8($sp)
                lw      $v0, 0xC0($s2)
                lbu     $v0, 0xA3($v0)

loc_FFA0:                                # CODE XREF: ssl3_send_newsession_ticket:loc_10214↓j
                sb      $v0, 0($v1)
                lw      $v0, 0x6C($s2)
                addiu   $v1, 1
                bnez    $v0, loc_1020C
                sw      $v1, 0x1D8+var_1B8($sp)
                lw      $v0, 0xC0($s2)
                lbu     $v0, 0xA2($v0)

loc_FFBC:                                # CODE XREF: ssl3_send_newsession_ticket:loc_1020C↓j
                sb      $v0, 0($v1)
                lw      $v0, 0x6C($s2)
                addiu   $s0, $v1, 1
                bnez    $v0, loc_10204
                sw      $s0, 0x1D8+var_1B8($sp)
                lw      $v0, 0xC0($s2)
                lbu     $v0, 0xA1($v0)

loc_FFD8:                                # CODE XREF: ssl3_send_newsession_ticket:loc_10204↓j
                sb      $v0, 0($s0)
                lw      $v0, 0x6C($s2)
                addiu   $a2, $s0, 1
                bnez    $v0, loc_101FC
                sw      $a2, 0x1D8+var_1B8($sp)
                lw      $v0, 0xC0($s2)
                lbu     $v0, 0xA0($v0)

loc_FFF4:                                # CODE XREF: ssl3_send_newsession_ticket:loc_101FC↓j
                sb      $v0, 0($a2)
                addiu   $s0, $a2, 3
                lw      $v0, 0x1D8+var_198($sp)

loc_10000:                               # DATA XREF: ssl2_accept:loc_AC04↑o
                                         # ssl2_connect+494↑o ...
                sw      $s0, 0x1D8+var_1B8($sp)
                lw      $v1, 0x1D8+var_194($sp)
                lw      $a0, 0x1D8+var_190($sp)
                lw      $a1, 0x1D8+var_18C($sp)
                usw     $v0, 0($s0)
                usw     $v1, 4($s0)
                usw     $a0, 8($s0)
                usw     $a1, 0xC($s0)
                lw      $s1, 0x1D8+var_1B8($sp)
                la      $t9, EVP_CIPHER_CTX_iv_length
                addiu   $s1, 0x10
                sw      $s1, 0x1D8+var_1B8($sp)
                jalr    $t9 ; EVP_CIPHER_CTX_iv_length
                move    $a0, $s6
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, memcpy
                move    $a1, $fp
                move    $a2, $v0
                jalr    $t9 ; memcpy
                move    $a0, $s1
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, EVP_CIPHER_CTX_iv_length
                jalr    $t9 ; EVP_CIPHER_CTX_iv_length
                move    $a0, $s6
                lw      $v1, 0x1D8+var_1B8($sp)
                lw      $gp, 0x1D8+var_1C0($sp)
                addu    $v0, $v1
                addiu   $s1, $sp, 0x1D8+var_1B0
                la      $t9, EVP_EncryptUpdate
                move    $a3, $s4
                move    $a1, $v0
                move    $a0, $s6
                move    $a2, $s1
                sw      $s5, 0x1D8+var_1C8($sp)
                jalr    $t9 ; EVP_EncryptUpdate
                sw      $v0, 0x1D8+var_1B8($sp)
                lw      $gp, 0x1D8+var_1C0($sp)
                lw      $v1, 0x1D8+var_1B8($sp)
                lw      $v0, 0x1D8+var_1B0($sp)
                addu    $v1, $v0
                la      $t9, EVP_EncryptFinal
                move    $a1, $v1
                move    $a2, $s1
                sw      $v1, 0x1D8+var_1B8($sp)
                jalr    $t9 ; EVP_EncryptFinal
                move    $a0, $s6
                lw      $v1, 0x1D8+var_1B0($sp)
                lw      $gp, 0x1D8+var_1C0($sp)
                lw      $v0, 0x1D8+var_1B8($sp)
                addu    $v0, $v1
                la      $t9, EVP_CIPHER_CTX_cleanup
                move    $a0, $s6
                jalr    $t9 ; EVP_CIPHER_CTX_cleanup
                sw      $v0, 0x1D8+var_1B8($sp)
                lw      $gp, 0x1D8+var_1C0($sp)
                lw      $a2, 0x1D8+var_1B8($sp)
                la      $t9, HMAC_Update
                move    $a1, $s0
                subu    $a2, $s0
                jalr    $t9 ; HMAC_Update
                move    $a0, $s7
                lw      $gp, 0x1D8+var_1C0($sp)
                lw      $a1, 0x1D8+var_1B8($sp)
                la      $t9, HMAC_Final
                addiu   $a2, $sp, 0x1D8+var_1AC
                jalr    $t9 ; HMAC_Final
                move    $a0, $s7
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, HMAC_CTX_cleanup
                jalr    $t9 ; HMAC_CTX_cleanup
                move    $a0, $s7
                lw      $v0, 0x3C($s2)
                lw      $v1, 0x1D8+var_1B8($sp)
                lw      $a1, 4($v0)
                lw      $v0, 0x1D8+var_1AC($sp)
                lw      $gp, 0x1D8+var_1C0($sp)
                addu    $v1, $v0
                subu    $v1, $a1
                addiu   $a0, $v1, -4
                addiu   $v0, $a1, 1
                sra     $a0, 16
                sw      $v0, 0x1D8+var_1B8($sp)
                sw      $v1, 0x1D8+var_1B0($sp)
                sb      $a0, 1($a1)
                lw      $v0, 0x1D8+var_1B0($sp)
                lw      $a0, 0x1D8+var_1B8($sp)
                addiu   $v0, -4
                sra     $v0, 8
                sb      $v0, 1($a0)
                lw      $v1, 0x1D8+var_1B0($sp)
                lw      $v0, 0x1D8+var_1B8($sp)
                addiu   $v1, -4
                sb      $v1, 2($v0)
                lw      $v1, 0x1D8+var_1B0($sp)
                lw      $a0, 0x1D8+var_1B8($sp)
                addiu   $v1, -0xA
                addiu   $v0, $a0, 7
                sra     $v1, 8
                sw      $v0, 0x1D8+var_1B8($sp)
                sb      $v1, 7($a0)
                lw      $v0, 0x1D8+var_1B0($sp)
                lw      $v1, 0x1D8+var_1B8($sp)
                addiu   $v0, -0xA
                sb      $v0, 1($v1)
                lw      $v0, 0x1D8+var_1B8($sp)
                lw      $v1, 0x1D8+var_1B0($sp)
                addiu   $v0, 2
                sw      $v0, 0x1D8+var_1B8($sp)
                la      $t9, CRYPTO_free
                li      $v0, 0x21F1
                sw      $v1, 0x44($s2)
                sw      $v0, 0x34($s2)
                sw      $zero, 0x48($s2)
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s4
                b       loc_FDDC
                lw      $gp, 0x1D8+var_1C0($sp)
 # ---------------------------------------------------------------------------

loc_101E4:                               # CODE XREF: ssl3_send_newsession_ticket+11C↑j
                                         # ssl3_send_newsession_ticket+140↑j ...
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s4
                lw      $gp, 0x1D8+var_1C0($sp)
                b       loc_FDF0
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_101FC:                               # CODE XREF: ssl3_send_newsession_ticket+254↑j
                b       loc_FFF4
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_10204:                               # CODE XREF: ssl3_send_newsession_ticket+238↑j
                b       loc_FFD8
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_1020C:                               # CODE XREF: ssl3_send_newsession_ticket+21C↑j
                b       loc_FFBC
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_10214:                               # CODE XREF: ssl3_send_newsession_ticket+200↑j
                b       loc_FFA0
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_1021C:                               # CODE XREF: ssl3_send_newsession_ticket+1C8↑j
                la      $t9, RAND_pseudo_bytes
                addiu   $fp, $sp, 0x30  # '0'
                move    $a0, $fp
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, EVP_aes_128_cbc
                jalr    $t9 ; EVP_aes_128_cbc
                nop
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, EVP_EncryptInit_ex
                move    $a1, $v0
                move    $a0, $s6
                move    $a2, $zero
                addiu   $a3, $s3, 0x128
                jalr    $t9 ; EVP_EncryptInit_ex
                sw      $fp, 0x1D8+var_1C8($sp)
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, EVP_sha256
                jalr    $t9 ; EVP_sha256
                nop
                lw      $gp, 0x1D8+var_1C0($sp)
                la      $t9, HMAC_Init_ex
                move    $a0, $s7
                addiu   $a1, $s3, 0x118
                li      $a2, 0x10
                sw      $zero, 0x1D8+var_1C8($sp)
                jalr    $t9 ; HMAC_Init_ex
                move    $a3, $v0
                addiu   $v1, $s3, 0x108
                lw      $a1, 0x108($s3)
                lw      $a2, 0xC($v1)
                lw      $v0, 4($v1)
                lw      $a0, 8($v1)
                lw      $gp, 0x1D8+var_1C0($sp)
                sw      $a1, 0x1D8+var_198($sp)
                sw      $v0, 0x1D8+var_194($sp)
                sw      $a0, 0x1D8+var_190($sp)
                b       loc_FF8C
                sw      $a2, 0x1D8+var_18C($sp)
 # End of function ssl3_send_newsession_ticket


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_server_certificate
ssl3_send_server_certificate:            # CODE XREF: ssl3_accept+D04↓p
                                         # DATA XREF: LOAD:00003488↑o ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x52094
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2140
                beq     $v1, $v0, loc_10304
                move    $s0, $a0
                la      $t9, ssl3_do_write
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_10304:                               # CODE XREF: ssl3_send_server_certificate+24↑j
                la      $t9, ssl_get_server_send_cert
                jalr    $t9 ; ssl_get_server_send_cert
                nop
                move    $a1, $v0
                beqz    $v0, loc_10358
                lw      $gp, 0x28+var_10($sp)
                la      $t9, ssl3_output_cert_chain

loc_10320:                               # CODE XREF: ssl3_send_server_certificate+BC↓j
                jalr    $t9 ; ssl3_output_cert_chain
                move    $a0, $s0
                lw      $gp, 0x28+var_10($sp)
                li      $v1, 0x2141
                la      $t9, ssl3_do_write
                sw      $v1, 0x34($s0)
                sw      $v0, 0x44($s0)
                sw      $zero, 0x48($s0)
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_10358:                               # CODE XREF: ssl3_send_server_certificate+58↑j
                lw      $v0, 0x58($s0)
                lw      $a0, 0x344($v0)
                li      $v0, 0x20  # ' '
                lw      $v1, 0x10($a0)
                bne     $v1, $v0, loc_10384
                la      $t9, ERR_put_error
                lw      $v0, 0xC($a0)
                andi    $v0, 0x10
                beqz    $v0, loc_10320
                la      $t9, ssl3_output_cert_chain
                la      $t9, ERR_put_error

loc_10384:                               # CODE XREF: ssl3_send_server_certificate+AC↑j
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0x9A
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl3_send_server_certificate


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_client_certificate
ssl3_get_client_certificate:             # CODE XREF: ssl3_accept:loc_13BF4↓p
                                         # dtls1_accept+828↓p
                                         # DATA XREF: ...

var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x51F9C
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_4($sp)
                sw      $s6, 0x48+var_8($sp)
                sw      $s5, 0x48+var_C($sp)
                sw      $s4, 0x48+var_10($sp)
                sw      $s3, 0x48+var_14($sp)
                sw      $s2, 0x48+var_18($sp)
                sw      $s1, 0x48+var_1C($sp)
                sw      $s0, 0x48+var_20($sp)
                sw      $gp, 0x48+var_30($sp)
                lw      $v1, 0x100($a0)
                lw      $a1, 8($a0)
                addiu   $v0, $sp, 0x48+var_28
                sw      $v1, 0x48+var_38($sp)
                sw      $v0, 0x48+var_34($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x2181
                li      $a1, 0x2180
                li      $a3, 0xFFFFFFFF
                jalr    $t9
                move    $s4, $a0
                move    $s0, $v0
                lw      $v0, 0x48+var_28($sp)
                beqz    $v0, loc_104B0
                lw      $gp, 0x48+var_30($sp)
                lw      $a0, 0x58($s4)
                li      $v0, 0x10
                lw      $v1, 0x340($a0)
                beq     $v1, $v0, loc_104DC
                li      $v0, 0xB
                beq     $v1, $v0, loc_10540
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0x106

loc_10450:                               # CODE XREF: ssl3_get_client_certificate+32C↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                li      $s0, 0xA
                move    $s1, $zero
                move    $s6, $zero

loc_10468:                               # CODE XREF: ssl3_get_client_certificate+1FC↓j
                                         # ssl3_get_client_certificate+31C↓j ...
                la      $t9, ssl3_send_alert
                move    $a0, $s4
                move    $a2, $s0
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                beqz    $s1, loc_105B8
                lw      $gp, 0x48+var_30($sp)

loc_10484:                               # CODE XREF: ssl3_get_client_certificate+2F0↓j
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                move    $a0, $s1
                lw      $gp, 0x48+var_30($sp)
                li      $s0, 0xFFFFFFFF

loc_10498:                               # CODE XREF: ssl3_get_client_certificate:loc_105B8↓j
                                         # ssl3_get_client_certificate+438↓j
                beqz    $s6, loc_104B0
                la      $t9, sk_pop_free
                la      $a1, X509_free
                jalr    $t9 ; sk_pop_free
                move    $a0, $s6
                lw      $gp, 0x48+var_30($sp)

loc_104B0:                               # CODE XREF: ssl3_get_client_certificate+68↑j
                                         # ssl3_get_client_certificate:loc_10498↑j ...
                move    $v0, $s0
                lw      $ra, 0x48+var_4($sp)
                lw      $s6, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_104DC:                               # CODE XREF: ssl3_get_client_certificate+7C↑j
                lw      $v0, 0xC8($s4)
                li      $v1, 3
                andi    $v0, 3
                beq     $v0, $v1, loc_106AC
                la      $t9, ERR_put_error
                lw      $v0, 0($s4)
                slti    $v0, 0x301
                bnez    $v0, loc_1050C
                li      $s0, 1
                lw      $v0, 0x388($a0)
                bnez    $v0, loc_106D8
                li      $a1, 0x89

loc_1050C:                               # CODE XREF: ssl3_get_client_certificate+144↑j
                li      $v0, 1
                sw      $v0, 0x34C($a0)
                lw      $ra, 0x48+var_4($sp)
                move    $v0, $s0
                lw      $s6, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_10540:                               # CODE XREF: ssl3_get_client_certificate+84↑j
                lw      $v0, 0x40($s4)
                la      $t9, sk_new_null
                jalr    $t9 ; sk_new_null
                sw      $v0, 0x48+var_24($sp)
                move    $s6, $v0
                beqz    $v0, loc_106E8
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x48+var_24($sp)
                lbu     $v0, 0($a1)
                lbu     $a0, 2($a1)
                lbu     $v1, 1($a1)
                sll     $v0, 16
                or      $a0, $v0
                sll     $v1, 8
                or      $s3, $a0, $v1
                addiu   $v0, $s3, 3
                addiu   $v1, $a1, 3
                beq     $v0, $s0, loc_105C0
                sw      $v1, 0x48+var_24($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0x9F

loc_105A0:                               # CODE XREF: ssl3_get_client_certificate+410↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                li      $s0, 0x32  # '2'
                b       loc_10468
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_105B8:                               # CODE XREF: ssl3_get_client_certificate+C8↑j
                b       loc_10498
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_105C0:                               # CODE XREF: ssl3_get_client_certificate+1D0↑j
                beqz    $s3, loc_10710
                addiu   $s1, $a1, 6
                lbu     $v0, 3($a1)
                lbu     $a0, 1($v1)
                lbu     $v1, 2($v1)
                sll     $v0, 16
                or      $v1, $v0
                sll     $a0, 8
                or      $s0, $v1, $a0
                addiu   $s2, $s0, 3
                sltu    $v0, $s3, $s2
                bnez    $v0, loc_107B4
                sw      $s1, 0x48+var_24($sp)
                b       loc_10638
                addiu   $s5, $sp, 0x48+var_24
 # ---------------------------------------------------------------------------

loc_105FC:                               # CODE XREF: ssl3_get_client_certificate+2CC↓j
                beqz    $v1, loc_10710
                lw      $a1, 0x48+var_24($sp)
                lbu     $v0, 0($a1)
                lbu     $a0, 2($a1)
                lbu     $v1, 1($a1)
                sll     $v0, 16
                or      $a0, $v0
                sll     $v1, 8
                or      $s0, $a0, $v1
                addiu   $v0, $s0, 3
                addu    $s2, $v0
                addiu   $s1, $a1, 3
                sltu    $v0, $s3, $s2
                bnez    $v0, loc_107B4
                sw      $s1, 0x48+var_24($sp)

loc_10638:                               # CODE XREF: ssl3_get_client_certificate+240↑j
                la      $t9, d2i_X509
                move    $a0, $zero
                move    $a1, $s5
                jalr    $t9 ; d2i_X509
                move    $a2, $s0
                lw      $gp, 0x48+var_30($sp)
                addu    $v1, $s1, $s0
                move    $a0, $s6
                move    $s1, $v0
                move    $a1, $v0
                beqz    $v0, loc_107CC
                la      $t9, sk_push
                lw      $v0, 0x48+var_24($sp)
                bne     $v1, $v0, loc_107F4
                li      $a2, 0x87
                jalr    $t9 ; sk_push
                nop
                lw      $gp, 0x48+var_30($sp)
                bnez    $v0, loc_105FC
                sltu    $v1, $s2, $s3
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_10484
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_106AC:                               # CODE XREF: ssl3_get_client_certificate+134↑j
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0xC7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                li      $s0, 0x28  # '('
                move    $s1, $zero
                b       loc_10468
                move    $s6, $zero
 # ---------------------------------------------------------------------------

loc_106D8:                               # CODE XREF: ssl3_get_client_certificate+150↑j
                li      $a0, 0x14
                li      $a2, 0xE9
                b       loc_10450
                sw      $zero, 0x48+var_38($sp)
 # ---------------------------------------------------------------------------

loc_106E8:                               # CODE XREF: ssl3_get_client_certificate+1A0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_104B0
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_10710:                               # CODE XREF: ssl3_get_client_certificate:loc_105C0↑j
                                         # ssl3_get_client_certificate:loc_105FC↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s6
                blez    $v0, loc_10818
                lw      $gp, 0x48+var_30($sp)
                la      $t9, ssl_verify_cert_chain
                move    $a0, $s4
                jalr    $t9 ; ssl_verify_cert_chain
                move    $a1, $s6
                blez    $v0, loc_1089C
                lw      $gp, 0x48+var_30($sp)

loc_1073C:                               # CODE XREF: ssl3_get_client_certificate+48C↓j
                                         # ssl3_get_client_certificate+49C↓j
                lw      $s0, 0xC0($s4)
                lw      $a0, 0x94($s0)
                beqz    $a0, loc_1075C
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x48+var_30($sp)
                lw      $s0, 0xC0($s4)

loc_1075C:                               # CODE XREF: ssl3_get_client_certificate+390↑j
                la      $t9, sk_shift
                jalr    $t9 ; sk_shift
                move    $a0, $s6
                lw      $gp, 0x48+var_30($sp)
                sw      $v0, 0x94($s0)
                lw      $s0, 0xC0($s4)
                lw      $v0, 0xE4($s4)
                lw      $a0, 0x90($s0)
                beqz    $a0, loc_10864
                sw      $v0, 0x98($s0)

loc_10784:                               # CODE XREF: ssl3_get_client_certificate+4CC↓j
                lw      $a0, 0($a0)
                beqz    $a0, loc_107A4
                la      $t9, sk_pop_free
                la      $a1, X509_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x48+var_30($sp)
                lw      $s0, 0xC0($s4)

loc_107A4:                               # CODE XREF: ssl3_get_client_certificate+3D4↑j
                lw      $v0, 0x90($s0)
                li      $s0, 1
                b       loc_104B0
                sw      $s6, 0($v0)
 # ---------------------------------------------------------------------------

loc_107B4:                               # CODE XREF: ssl3_get_client_certificate+238↑j
                                         # ssl3_get_client_certificate+27C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0x87
                b       loc_105A0
                sw      $zero, 0x48+var_38($sp)
 # ---------------------------------------------------------------------------

loc_107CC:                               # CODE XREF: ssl3_get_client_certificate+2AC↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0xD

loc_107E0:                               # CODE XREF: ssl3_get_client_certificate+4E0↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_10498
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_107F4:                               # CODE XREF: ssl3_get_client_certificate+2B8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x89
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_10468
                li      $s0, 0x32  # '2'
 # ---------------------------------------------------------------------------

loc_10818:                               # CODE XREF: ssl3_get_client_certificate+368↑j
                lw      $v1, 0($s4)
                li      $v0, 0x300
                beq     $v1, $v0, loc_108D8
                li      $v1, 3
                lw      $v0, 0xC8($s4)
                andi    $v0, 3
                beq     $v0, $v1, loc_10904
                la      $t9, ERR_put_error
                lw      $v0, 0x58($s4)
                lw      $v1, 0x178($v0)
                beqz    $v1, loc_1073C
                la      $t9, ssl3_digest_cached_records
                jalr    $t9 ; ssl3_digest_cached_records
                move    $a0, $s4
                bnez    $v0, loc_1073C
                lw      $gp, 0x48+var_30($sp)
                li      $s0, 0x50  # 'P'
                b       loc_10468
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_10864:                               # CODE XREF: ssl3_get_client_certificate+3C8↑j
                la      $t9, ssl_sess_cert_new
                jalr    $t9 ; ssl_sess_cert_new
                nop
                lw      $gp, 0x48+var_30($sp)
                sw      $v0, 0x90($s0)
                lw      $s0, 0xC0($s4)
                lw      $a0, 0x90($s0)
                bnez    $a0, loc_10784
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0x41  # 'A'
                b       loc_107E0
                sw      $zero, 0x48+var_38($sp)
 # ---------------------------------------------------------------------------

loc_1089C:                               # CODE XREF: ssl3_get_client_certificate+380↑j
                la      $t9, ssl_verify_alarm_type
                lw      $a0, 0xE4($s4)
                jalr    $t9 ; ssl_verify_alarm_type
                move    $s1, $zero
                lw      $gp, 0x48+var_30($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0xB2
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                move    $s0, $v0
                b       loc_10468
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_108D8:                               # CODE XREF: ssl3_get_client_certificate+46C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0xB0

loc_108EC:                               # CODE XREF: ssl3_get_client_certificate+55C↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                li      $s0, 0x28  # '('
                b       loc_10468
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_10904:                               # CODE XREF: ssl3_get_client_certificate+47C↑j
                li      $a0, 0x14
                li      $a1, 0x89
                li      $a2, 0xC7
                b       loc_108EC
                sw      $zero, 0x48+var_38($sp)
 # End of function ssl3_get_client_certificate


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_cert_verify
ssl3_get_cert_verify:                    # CODE XREF: ssl3_accept+3EC↓p
                                         # dtls1_accept+96C↓p
                                         # DATA XREF: ...

var_90          = -0x90
var_8C          = -0x8C
var_88          = -0x88
var_80          = -0x80
var_7C          = -0x7C
var_78          = -0x78
var_61          = -0x61
var_60          = -0x60
var_21          = -0x21
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x51A38
                addu    $gp, $t9
                addiu   $sp, -0xA0
                sw      $ra, 0xA0+var_4($sp)
                sw      $s6, 0xA0+var_8($sp)
                sw      $s5, 0xA0+var_C($sp)
                sw      $s4, 0xA0+var_10($sp)
                sw      $s3, 0xA0+var_14($sp)
                sw      $s2, 0xA0+var_18($sp)
                sw      $s1, 0xA0+var_1C($sp)
                sw      $s0, 0xA0+var_20($sp)
                sw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_MD_CTX_init
                addiu   $s5, $sp, 0xA0+var_78
                move    $s2, $a0
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s5
                lw      $a0, 8($s2)
                li      $v0, 0x204
                addiu   $v1, $sp, 0xA0+var_80
                sw      $v0, 0xA0+var_90($sp)
                sw      $v1, 0xA0+var_8C($sp)
                lw      $t9, 0x30($a0)
                li      $a1, 0x21A0
                move    $a0, $s2
                li      $a2, 0x21A1
                jalr    $t9
                li      $a3, 0xFFFFFFFF
                move    $s1, $v0
                lw      $v0, 0xA0+var_80($sp)
                beqz    $v0, loc_10B78
                lw      $gp, 0xA0+var_88($sp)
                lw      $v0, 0xC0($s2)
                lw      $s0, 0x94($v0)
                beqz    $s0, loc_10A7C
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                move    $a0, $s0
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, X509_certificate_type
                move    $a0, $s0
                move    $a1, $v0
                jalr    $t9 ; X509_certificate_type
                move    $s4, $v0
                lw      $a0, 0x58($s2)
                move    $a1, $v0
                lw      $v1, 0x340($a0)
                li      $v0, 0xF
                beq     $v1, $v0, loc_10A94
                lw      $gp, 0xA0+var_88($sp)

loc_109E4:                               # CODE XREF: ssl3_get_cert_verify+174↓j
                li      $v0, 1
                beqz    $s0, loc_109FC
                sw      $v0, 0x34C($a0)
                andi    $v0, $a1, 0x10
                bnez    $v0, loc_10BA8
                la      $t9, ERR_put_error

loc_109FC:                               # CODE XREF: ssl3_get_cert_verify+D0↑j
                                         # ssl3_get_cert_verify:loc_10D9C↓j
                li      $s0, 1

loc_10A00:                               # CODE XREF: ssl3_get_cert_verify+2C8↓j
                lw      $a0, 0x178($a0)
                beqz    $a0, loc_10A30
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                nop
                lw      $a0, 0x58($s2)
                li      $v1, 0xFFFFFFDF
                lw      $v0, 0($a0)
                lw      $gp, 0xA0+var_88($sp)
                and     $v0, $v1
                sw      $zero, 0x178($a0)
                sw      $v0, 0($a0)

loc_10A30:                               # CODE XREF: ssl3_get_cert_verify+EC↑j
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s5
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s4
                move    $v0, $s0
                lw      $gp, 0xA0+var_88($sp)
                lw      $ra, 0xA0+var_4($sp)
                lw      $s6, 0xA0+var_8($sp)
                lw      $s5, 0xA0+var_C($sp)
                lw      $s4, 0xA0+var_10($sp)
                lw      $s3, 0xA0+var_14($sp)
                lw      $s2, 0xA0+var_18($sp)
                lw      $s1, 0xA0+var_1C($sp)
                lw      $s0, 0xA0+var_20($sp)
                jr      $ra
                addiu   $sp, 0xA0
 # ---------------------------------------------------------------------------

loc_10A7C:                               # CODE XREF: ssl3_get_cert_verify+8C↑j
                lw      $a0, 0x58($s2)
                li      $v0, 0xF
                lw      $v1, 0x340($a0)
                move    $s4, $zero
                bne     $v1, $v0, loc_109E4
                move    $a1, $zero

loc_10A94:                               # CODE XREF: ssl3_get_cert_verify+C4↑j
                beqz    $s0, loc_10CC0
                andi    $v0, $a1, 0x10
                beqz    $v0, loc_10BE8
                la      $t9, ERR_put_error
                lw      $v0, 0x180($a0)
                bnez    $v0, loc_10C78
                li      $v0, 0x40  # '@'
                beq     $s1, $v0, loc_10C8C
                lw      $s3, 0x40($s2)

loc_10AB8:                               # CODE XREF: ssl3_get_cert_verify+380↓j
                lw      $a0, 0($s2)
                li      $v0, 3
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_10C0C
                slti    $v0, $a0, 0x303
                move    $s6, $zero

loc_10AD0:                               # CODE XREF: ssl3_get_cert_verify:loc_10C0C↓j
                                         # ssl3_get_cert_verify+5DC↓j
                lbu     $v0, 0($s3)
                lbu     $v1, 1($s3)
                sll     $v0, 8
                or      $s0, $v1, $v0
                addiu   $s1, -2
                slt     $v0, $s1, $s0
                bnez    $v0, loc_10CA8
                addiu   $s3, 2

loc_10AF0:                               # CODE XREF: ssl3_get_cert_verify+388↓j
                la      $t9, EVP_PKEY_size
                jalr    $t9 ; EVP_PKEY_size
                move    $a0, $s4
                move    $v1, $v0
                slt     $v0, $s0
                bnez    $v0, loc_10C60
                lw      $gp, 0xA0+var_88($sp)
                slt     $v0, $v1, $s1
                bnez    $v0, loc_10C64
                la      $t9, ERR_put_error
                blez    $s1, loc_10C64
                li      $v0, 3
                lw      $a0, 0($s2)
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_10CD8
                slti    $v0, $a0, 0x303

loc_10B30:                               # CODE XREF: ssl3_get_cert_verify:loc_10CD8↓j
                lw      $v1, 0($s4)
                li      $v0, 6
                beq     $v1, $v0, loc_10D64
                li      $v0, 0x74  # 't'
                beq     $v1, $v0, loc_10E90
                addiu   $v0, $v1, -0x32B
                sltiu   $v0, 2
                bnez    $v0, loc_10DC8
                la      $t9, ERR_put_error
                li      $a2, 0x44  # 'D'
                sw      $zero, 0xA0+var_90($sp)
                li      $a0, 0x14
                li      $a1, 0x88
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xA0+var_88($sp)
                b       loc_10BC8
                li      $a2, 0x2B  # '+'
 # ---------------------------------------------------------------------------

loc_10B78:                               # CODE XREF: ssl3_get_cert_verify+7C↑j
                move    $s0, $s1
                move    $v0, $s0
                lw      $ra, 0xA0+var_4($sp)
                lw      $s6, 0xA0+var_8($sp)
                lw      $s5, 0xA0+var_C($sp)
                lw      $s4, 0xA0+var_10($sp)
                lw      $s3, 0xA0+var_14($sp)
                lw      $s2, 0xA0+var_18($sp)
                lw      $s1, 0xA0+var_1C($sp)
                lw      $s0, 0xA0+var_20($sp)
                jr      $ra
                addiu   $sp, 0xA0
 # ---------------------------------------------------------------------------

loc_10BA8:                               # CODE XREF: ssl3_get_cert_verify+DC↑j
                sw      $zero, 0xA0+var_90($sp)
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0xAE

loc_10BB8:                               # CODE XREF: ssl3_get_cert_verify+36C↓j
                                         # ssl3_get_cert_verify+3B8↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xA0+var_88($sp)
                li      $a2, 0xA

loc_10BC8:                               # CODE XREF: ssl3_get_cert_verify+258↑j
                                         # ssl3_get_cert_verify+2EC↓j ...
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0xA0+var_88($sp)
                lw      $a0, 0x58($s2)
                b       loc_10A00
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_10BE8:                               # CODE XREF: ssl3_get_cert_verify+184↑j
                li      $a2, 0xDC
                sw      $zero, 0xA0+var_90($sp)
                li      $a0, 0x14
                li      $a1, 0x88
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xA0+var_88($sp)
                b       loc_10BC8
                li      $a2, 0x2F  # '/'
 # ---------------------------------------------------------------------------

loc_10C0C:                               # CODE XREF: ssl3_get_cert_verify+1AC↑j
                bnez    $v0, loc_10AD0
                move    $s6, $zero
                la      $t9, tls12_get_sigid
                jalr    $t9 ; tls12_get_sigid
                move    $a0, $s4
                move    $v1, $v0
                li      $v0, 0xFFFFFFFF
                beq     $v1, $v0, loc_10EFC
                lw      $gp, 0xA0+var_88($sp)
                lbu     $v0, 1($s3)
                beq     $v1, $v0, loc_10ED8
                la      $t9, ERR_put_error
                sw      $zero, 0xA0+var_90($sp)
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x172

loc_10C4C:                               # CODE XREF: ssl3_get_cert_verify+358↓j
                                         # ssl3_get_cert_verify+3A0↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xA0+var_88($sp)
                b       loc_10BC8
                li      $a2, 0x32  # '2'
 # ---------------------------------------------------------------------------

loc_10C60:                               # CODE XREF: ssl3_get_cert_verify+1EC↑j
                la      $t9, ERR_put_error

loc_10C64:                               # CODE XREF: ssl3_get_cert_verify+1F8↑j
                                         # ssl3_get_cert_verify+200↑j
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x109
                b       loc_10C4C
                sw      $zero, 0xA0+var_90($sp)
 # ---------------------------------------------------------------------------

loc_10C78:                               # CODE XREF: ssl3_get_cert_verify+190↑j
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x85
                b       loc_10BB8
                sw      $zero, 0xA0+var_90($sp)
 # ---------------------------------------------------------------------------

loc_10C8C:                               # CODE XREF: ssl3_get_cert_verify+198↑j
                lw      $v0, 0($s4)
                addiu   $v0, -0x32B
                sltiu   $v0, 2
                beqz    $v0, loc_10AB8
                li      $s0, 0x40  # '@'
                b       loc_10AF0
                move    $s6, $zero
 # ---------------------------------------------------------------------------

loc_10CA8:                               # CODE XREF: ssl3_get_cert_verify+1D0↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x9F
                b       loc_10C4C
                sw      $zero, 0xA0+var_90($sp)
 # ---------------------------------------------------------------------------

loc_10CC0:                               # CODE XREF: ssl3_get_cert_verify:loc_10A94↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0xBA
                b       loc_10BB8
                sw      $zero, 0xA0+var_90($sp)
 # ---------------------------------------------------------------------------

loc_10CD8:                               # CODE XREF: ssl3_get_cert_verify+210↑j
                bnez    $v0, loc_10B30
                la      $t9, BIO_ctrl
                lw      $v0, 0x58($s2)
                lw      $a0, 0x178($v0)
                li      $a1, 3
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                addiu   $a3, $sp, 0xA0+var_7C
                move    $s1, $v0
                blez    $v0, loc_10EFC
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_DigestInit_ex
                move    $a1, $s6
                move    $a0, $s5
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                beqz    $v0, loc_10D3C
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_DigestUpdate
                lw      $a1, 0xA0+var_7C($sp)
                move    $a2, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s5
                bnez    $v0, loc_10F44
                lw      $gp, 0xA0+var_88($sp)

loc_10D3C:                               # CODE XREF: ssl3_get_cert_verify+400↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xA0+var_90($sp)
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 6

loc_10D50:                               # CODE XREF: ssl3_get_cert_verify+5F4↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xA0+var_88($sp)
                b       loc_10BC8
                li      $a2, 0x50  # 'P'
 # ---------------------------------------------------------------------------

loc_10D64:                               # CODE XREF: ssl3_get_cert_verify+220↑j
                sw      $s0, 0xA0+var_90($sp)
                lw      $a1, 0x58($s2)
                lw      $v0, 0x14($s4)
                la      $t9, RSA_verify
                sw      $v0, 0xA0+var_8C($sp)
                addiu   $a1, 0x1B4
                move    $a3, $s3
                li      $a0, 0x72  # 'r'
                jalr    $t9 ; RSA_verify
                li      $a2, 0x24  # '$'
                bltz    $v0, loc_10F2C
                lw      $gp, 0xA0+var_88($sp)
                beqz    $v0, loc_10DA4
                la      $t9, ERR_put_error

loc_10D9C:                               # CODE XREF: ssl3_get_cert_verify+558↓j
                                         # ssl3_get_cert_verify+5A0↓j ...
                b       loc_109FC
                lw      $a0, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_10DA4:                               # CODE XREF: ssl3_get_cert_verify+47C↑j
                sw      $zero, 0xA0+var_90($sp)
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x7A  # 'z'

loc_10DB4:                               # CODE XREF: ssl3_get_cert_verify+570↓j
                                         # ssl3_get_cert_verify+5B8↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xA0+var_88($sp)
                b       loc_10BC8
                li      $a2, 0x33  # '3'
 # ---------------------------------------------------------------------------

loc_10DC8:                               # CODE XREF: ssl3_get_cert_verify+234↑j
                la      $t9, EVP_PKEY_CTX_new
                move    $a0, $s4
                jalr    $t9 ; EVP_PKEY_CTX_new
                move    $a1, $zero
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_PKEY_verify_init
                move    $a0, $v0
                jalr    $t9 ; EVP_PKEY_verify_init
                move    $s1, $v0
                li      $v0, 0x40  # '@'
                beq     $s0, $v0, loc_10E18
                lw      $gp, 0xA0+var_88($sp)
                la      $v0, stderr
                la      $a1, loc_40000
                la      $t9, fprintf
                lw      $a0, (stderr - 0x5B0A8)($v0)
                addiu   $a1, (aGostSignatureL - 0x40000)  # "GOST signature length is %d"
                jalr    $t9 ; fprintf
                move    $a2, $s0
                lw      $gp, 0xA0+var_88($sp)

loc_10E18:                               # CODE XREF: ssl3_get_cert_verify+4D8↑j
                move    $a1, $s3
                addiu   $v1, $sp, 0xA0+var_21
                addiu   $a0, $sp, 0xA0+var_61

loc_10E24:                               # CODE XREF: ssl3_get_cert_verify+518↓j
                lbu     $v0, 0($a1)
                sb      $v0, 0($v1)
                addiu   $v1, -1
                bne     $v1, $a0, loc_10E24
                addiu   $a1, 1
                lw      $a3, 0x58($s2)
                la      $t9, EVP_PKEY_verify
                li      $v0, 0x20  # ' '
                addiu   $a1, $sp, 0xA0+var_60
                addiu   $a3, 0x1B4
                move    $a0, $s1
                li      $a2, 0x40  # '@'
                jalr    $t9 ; EVP_PKEY_verify
                sw      $v0, 0xA0+var_90($sp)
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_PKEY_CTX_free
                move    $s0, $v0
                jalr    $t9 ; EVP_PKEY_CTX_free
                move    $a0, $s1
                bgtz    $s0, loc_10D9C
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x131
                b       loc_10DB4
                sw      $zero, 0xA0+var_90($sp)
 # ---------------------------------------------------------------------------

loc_10E90:                               # CODE XREF: ssl3_get_cert_verify+228↑j
                lw      $a0, 4($s4)
                sw      $s0, 0xA0+var_90($sp)
                lw      $a1, 0x58($s2)
                lw      $v0, 0x14($s4)
                la      $t9, DSA_verify
                sw      $v0, 0xA0+var_8C($sp)
                addiu   $a1, 0x1C4
                move    $a3, $s3
                jalr    $t9 ; DSA_verify
                li      $a2, 0x14
                bgtz    $v0, loc_10D9C
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x70  # 'p'
                b       loc_10DB4
                sw      $zero, 0xA0+var_90($sp)
 # ---------------------------------------------------------------------------

loc_10ED8:                               # CODE XREF: ssl3_get_cert_verify+31C↑j
                la      $t9, tls12_get_hash
                jalr    $t9 ; tls12_get_hash
                lbu     $a0, 0($s3)
                move    $s6, $v0
                beqz    $v0, loc_10F14
                lw      $gp, 0xA0+var_88($sp)
                addiu   $s3, 2
                b       loc_10AD0
                addiu   $s1, -2
 # ---------------------------------------------------------------------------

loc_10EFC:                               # CODE XREF: ssl3_get_cert_verify+310↑j
                                         # ssl3_get_cert_verify+3E4↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x44  # 'D'
                b       loc_10D50
                sw      $zero, 0xA0+var_90($sp)
 # ---------------------------------------------------------------------------

loc_10F14:                               # CODE XREF: ssl3_get_cert_verify+5D0↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x170
                b       loc_10C4C
                sw      $zero, 0xA0+var_90($sp)
 # ---------------------------------------------------------------------------

loc_10F2C:                               # CODE XREF: ssl3_get_cert_verify+474↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x76  # 'v'
                b       loc_10DB4
                sw      $zero, 0xA0+var_90($sp)
 # ---------------------------------------------------------------------------

loc_10F44:                               # CODE XREF: ssl3_get_cert_verify+41C↑j
                la      $t9, EVP_VerifyFinal
                move    $a1, $s3
                move    $a2, $s0
                move    $a0, $s5
                jalr    $t9 ; EVP_VerifyFinal
                move    $a3, $s4
                bgtz    $v0, loc_10D9C
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x88
                li      $a2, 0x7B  # '{'
                b       loc_10DB4
                sw      $zero, 0xA0+var_90($sp)
 # End of function ssl3_get_cert_verify


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_client_key_exchange
ssl3_get_client_key_exchange:            # CODE XREF: ssl3_accept+76C↓p
                                         # dtls1_accept+41C↓p
                                         # DATA XREF: ...

var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x513D4
                addu    $gp, $t9
                addiu   $sp, -0x60
                sw      $ra, 0x60+var_4($sp)
                sw      $s4, 0x60+var_8($sp)
                sw      $s3, 0x60+var_C($sp)
                sw      $s2, 0x60+var_10($sp)
                sw      $s1, 0x60+var_14($sp)
                sw      $s0, 0x60+var_18($sp)
                sw      $gp, 0x60+var_48($sp)
                lw      $a1, 8($a0)
                li      $v0, 0x800
                addiu   $v1, $sp, 0x60+var_40
                sw      $v0, 0x60+var_50($sp)
                sw      $v1, 0x60+var_4C($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x2191
                li      $a1, 0x2190
                li      $a3, 0x10
                jalr    $t9
                move    $s2, $a0
                move    $a2, $v0
                lw      $v0, 0x60+var_40($sp)
                beqz    $v0, loc_112C0
                lw      $gp, 0x60+var_48($sp)
                lw      $a0, 0x58($s2)
                lw      $a1, 0x344($a0)
                lw      $v1, 0xC($a1)
                andi    $v0, $v1, 1
                beqz    $v0, loc_11160
                lw      $s1, 0x40($s2)
                lw      $v0, 0x368($a0)
                beqz    $v0, loc_112E8
                nop
                lw      $a3, 0x98($s2)
                beqz    $a3, loc_11470
                la      $t9, ERR_put_error
                lw      $a3, 0x18($a3)
                beqz    $a3, loc_11474
                li      $a0, 0x14

loc_11020:                               # CODE XREF: ssl3_get_client_key_exchange+50C↓j
                lw      $v0, 0($s2)
                slti    $v0, 0x301
                bnez    $v0, loc_1105C
                nop
                lbu     $v0, 0($s1)
                lbu     $v1, 1($s1)
                sll     $v0, 8
                or      $v1, $v0
                addiu   $a0, $v1, 2
                beq     $a2, $a0, loc_11504
                addiu   $s1, 2
                lw      $v0, 0xF8($s2)
                andi    $v0, 0x100
                beqz    $v0, loc_11538
                addiu   $s1, -2

loc_1105C:                               # CODE XREF: ssl3_get_client_key_exchange+AC↑j
                                         # ssl3_get_client_key_exchange:loc_11504↓j
                la      $t9, RSA_private_decrypt
                li      $v0, 1
                move    $a0, $a2
                sw      $v0, 0x60+var_50($sp)
                move    $a1, $s1
                jalr    $t9 ; RSA_private_decrypt
                move    $a2, $s1
                li      $v1, 0x30  # '0'
                bne     $v0, $v1, loc_11530
                lw      $gp, 0x60+var_48($sp)
                lw      $a0, 0x108($s2)
                lbu     $a1, 0($s1)
                sra     $v0, $a0, 8
                beq     $a1, $v0, loc_11498
                addiu   $s0, $s1, 1

loc_11098:                               # CODE XREF: ssl3_get_client_key_exchange+524↓j
                lw      $v0, 0xF8($s2)
                lui     $v1, 0x80
                and     $v0, $v1
                beqz    $v0, loc_110C0
                la      $t9, ERR_clear_error
                lw      $a0, 0($s2)
                sra     $v0, $a0, 8
                beq     $a1, $v0, loc_1145C
                andi    $v0, $a0, 0xFF

loc_110BC:                               # CODE XREF: ssl3_get_client_key_exchange:loc_11530↓j
                la      $t9, ERR_clear_error

loc_110C0:                               # CODE XREF: ssl3_get_client_key_exchange+128↑j
                                         # ssl3_get_client_key_exchange+4E4↓j
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $v0, 0x108($s2)
                lw      $gp, 0x60+var_48($sp)
                sra     $v0, 8
                sb      $v0, 0($s1)
                lw      $v1, 0x108($s2)
                la      $t9, RAND_pseudo_bytes
                sb      $v1, 0($s0)
                addiu   $a0, $s1, 2
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x2E  # '.'
                blez    $v0, loc_11514
                lw      $gp, 0x60+var_48($sp)
                lw      $v0, 8($s2)

loc_110FC:                               # CODE XREF: ssl3_get_client_key_exchange+4EC↓j
                                         # ssl3_get_client_key_exchange+52C↓j
                lw      $s0, 0xC0($s2)
                lw      $v1, 0x64($v0)
                move    $a0, $s2
                lw      $t9, 0xC($v1)
                addiu   $a1, $s0, 0x14
                move    $a2, $s1
                jalr    $t9
                li      $a3, 0x30  # '0'
                lw      $gp, 0x60+var_48($sp)
                la      $t9, OPENSSL_cleanse
                sw      $v0, 0x10($s0)
                move    $a0, $s1
                li      $s0, 1
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x30  # '0'
                move    $v0, $s0
                lw      $gp, 0x60+var_48($sp)
                lw      $ra, 0x60+var_4($sp)
                lw      $s4, 0x60+var_8($sp)
                lw      $s3, 0x60+var_C($sp)
                lw      $s2, 0x60+var_10($sp)
                lw      $s1, 0x60+var_14($sp)
                lw      $s0, 0x60+var_18($sp)
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_11160:                               # CODE XREF: ssl3_get_client_key_exchange+78↑j
                andi    $v0, $v1, 0x400
                bnez    $v0, loc_11364
                andi    $v0, $v1, 0x200
                beqz    $v0, loc_11440
                la      $t9, ERR_put_error
                lw      $v1, 0x10($a1)
                andi    $v0, $v1, 0x100
                beqz    $v0, loc_1142C
                andi    $v0, $v1, 0x200
                lw      $v0, 0x98($s2)
                lw      $a0, 0x6C($v0)

loc_1118C:                               # CODE XREF: ssl3_get_client_key_exchange+4BC↓j
                                         # ssl3_get_client_key_exchange:loc_11454↓j
                la      $t9, EVP_PKEY_CTX_new
                li      $v0, 0x20  # ' '
                move    $a1, $zero
                jalr    $t9 ; EVP_PKEY_CTX_new
                sw      $v0, 0x60+var_3C($sp)
                lw      $gp, 0x60+var_48($sp)
                la      $t9, EVP_PKEY_decrypt_init
                move    $a0, $v0
                jalr    $t9 ; EVP_PKEY_decrypt_init
                move    $s3, $v0
                lw      $gp, 0x60+var_48($sp)
                lw      $v1, 0xC0($s2)
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                lw      $a0, 0x94($v1)
                move    $s4, $v0
                beqz    $v0, loc_111EC
                lw      $gp, 0x60+var_48($sp)
                la      $t9, EVP_PKEY_derive_set_peer
                move    $a0, $s3
                jalr    $t9 ; EVP_PKEY_derive_set_peer
                move    $a1, $v0
                blez    $v0, loc_1151C
                lw      $gp, 0x60+var_48($sp)

loc_111EC:                               # CODE XREF: ssl3_get_client_key_exchange+250↑j
                                         # ssl3_get_client_key_exchange+5AC↓j
                lbu     $v1, 0($s1)
                li      $v0, 0x30  # '0'
                bne     $v1, $v0, loc_114B0
                li      $v0, 0x81
                lbu     $v1, 1($s1)
                beq     $v1, $v0, loc_114F8
                nop
                sll     $v0, $v1, 24
                sra     $v0, 24
                bltz    $v0, loc_114B0
                addiu   $a3, $s1, 2
                move    $v0, $v1

loc_1121C:                               # CODE XREF: ssl3_get_client_key_exchange+580↓j
                la      $t9, EVP_PKEY_decrypt
                addiu   $s1, $sp, 0x60+var_38
                sw      $v0, 0x60+var_50($sp)
                move    $a0, $s3
                move    $a1, $s1
                jalr    $t9 ; EVP_PKEY_decrypt
                addiu   $a2, $sp, 0x60+var_3C
                blez    $v0, loc_114B0
                lw      $gp, 0x60+var_48($sp)
                lw      $v0, 8($s2)
                lw      $s0, 0xC0($s2)
                lw      $v1, 0x64($v0)
                move    $a0, $s2
                lw      $t9, 0xC($v1)
                move    $a2, $s1
                addiu   $a1, $s0, 0x14
                jalr    $t9
                li      $a3, 0x20  # ' '
                lw      $gp, 0x60+var_48($sp)
                sw      $v0, 0x10($s0)
                la      $t9, EVP_PKEY_CTX_ctrl
                li      $v0, 2
                sw      $v0, 0x60+var_50($sp)
                sw      $zero, 0x60+var_4C($sp)
                move    $a0, $s3
                li      $a1, 0xFFFFFFFF
                li      $a2, 0xFFFFFFFF
                jalr    $t9 ; EVP_PKEY_CTX_ctrl
                li      $a3, 2
                blez    $v0, loc_1150C
                lw      $gp, 0x60+var_48($sp)
                li      $s0, 2

loc_1129C:                               # CODE XREF: ssl3_get_client_key_exchange:loc_1150C↓j
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s4
                lw      $gp, 0x60+var_48($sp)
                la      $t9, EVP_PKEY_CTX_free
                jalr    $t9 ; EVP_PKEY_CTX_free
                move    $a0, $s3
                b       loc_112C4
                lw      $gp, 0x60+var_48($sp)
 # ---------------------------------------------------------------------------

loc_112C0:                               # CODE XREF: ssl3_get_client_key_exchange+60↑j
                move    $s0, $a2

loc_112C4:                               # CODE XREF: ssl3_get_client_key_exchange+33C↑j
                                         # ssl3_get_client_key_exchange+4A8↓j ...
                move    $v0, $s0
                lw      $ra, 0x60+var_4($sp)
                lw      $s4, 0x60+var_8($sp)
                lw      $s3, 0x60+var_C($sp)
                lw      $s2, 0x60+var_10($sp)
                lw      $s1, 0x60+var_14($sp)
                lw      $s0, 0x60+var_18($sp)
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_112E8:                               # CODE XREF: ssl3_get_client_key_exchange+84↑j
                lw      $v0, 0x98($s2)
                lw      $a3, 0x24($v0)
                beqz    $a3, loc_11304
                li      $v0, 6
                lw      $v1, 0($a3)
                beq     $v1, $v0, loc_11484
                nop

loc_11304:                               # CODE XREF: ssl3_get_client_key_exchange+374↑j
                la      $t9, ERR_put_error

loc_11308:                               # CODE XREF: ssl3_get_client_key_exchange+514↓j
                sw      $zero, 0x60+var_50($sp)
                li      $a0, 0x14
                li      $a1, 0x8B
                li      $a2, 0xA8

loc_11318:                               # CODE XREF: ssl3_get_client_key_exchange+4D0↓j
                                         # ssl3_get_client_key_exchange+500↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x60+var_48($sp)
                li      $a2, 0x28  # '('

loc_11328:                               # CODE XREF: ssl3_get_client_key_exchange+428↓j
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                li      $s0, 0xFFFFFFFF
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                move    $v0, $s0
                lw      $gp, 0x60+var_48($sp)
                lw      $ra, 0x60+var_4($sp)
                lw      $s4, 0x60+var_8($sp)
                lw      $s3, 0x60+var_C($sp)
                lw      $s2, 0x60+var_10($sp)
                lw      $s1, 0x60+var_14($sp)
                lw      $s0, 0x60+var_18($sp)
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_11364:                               # CODE XREF: ssl3_get_client_key_exchange+1E8↑j
                lbu     $v0, 0($s1)
                lbu     $a0, 1($s1)
                sll     $v0, 8
                or      $a1, $a0, $v0
                addiu   $v1, $a1, 2
                slt     $v1, $a2, $v1
                beqz    $v1, loc_113AC
                la      $t9, BN_bin2bn
                la      $t9, ERR_put_error
                li      $a2, 0x15B
                sw      $zero, 0x60+var_50($sp)
                li      $a0, 0x14
                li      $a1, 0x8B
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x60+var_48($sp)
                b       loc_11328
                li      $a2, 0x32  # '2'
 # ---------------------------------------------------------------------------

loc_113AC:                               # CODE XREF: ssl3_get_client_key_exchange+400↑j
                addiu   $a0, $s1, 2
                jalr    $t9 ; BN_bin2bn
                move    $a2, $zero
                lw      $gp, 0x60+var_48($sp)
                beqz    $v0, loc_1158C
                sw      $v0, 0x1A0($s2)
                lw      $s0, 0xC0($s2)
                lw      $a0, 0xD8($s0)
                beqz    $a0, loc_113E4
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x60+var_48($sp)
                lw      $s0, 0xC0($s2)

loc_113E4:                               # CODE XREF: ssl3_get_client_key_exchange+450↑j
                la      $t9, BUF_strdup
                jalr    $t9 ; BUF_strdup
                lw      $a0, 0x18C($s2)
                lw      $s1, 0xC0($s2)
                lw      $gp, 0x60+var_48($sp)
                sw      $v0, 0xD8($s0)
                lw      $v0, 0xD8($s1)
                beqz    $v0, loc_11560
                la      $t9, ERR_put_error
                la      $t9, SRP_generate_server_master_secret
                move    $a0, $s2
                jalr    $t9 ; SRP_generate_server_master_secret
                addiu   $a1, $s1, 0x14
                lw      $gp, 0x60+var_48($sp)
                bltz    $v0, loc_11574
                sw      $v0, 0x10($s1)
                b       loc_112C4
                li      $s0, 1
 # ---------------------------------------------------------------------------

loc_1142C:                               # CODE XREF: ssl3_get_client_key_exchange+200↑j
                beqz    $v0, loc_11454
                nop
                lw      $v0, 0x98($s2)
                b       loc_1118C
                lw      $a0, 0x78($v0)
 # ---------------------------------------------------------------------------

loc_11440:                               # CODE XREF: ssl3_get_client_key_exchange+1F0↑j
                li      $a0, 0x14
                li      $a1, 0x8B
                li      $a2, 0xF9
                b       loc_11318
                sw      $zero, 0x60+var_50($sp)
 # ---------------------------------------------------------------------------

loc_11454:                               # CODE XREF: ssl3_get_client_key_exchange:loc_1142C↑j
                b       loc_1118C
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_1145C:                               # CODE XREF: ssl3_get_client_key_exchange+138↑j
                lbu     $v1, 0($s0)
                bne     $v1, $v0, loc_110C0
                la      $t9, ERR_clear_error
                b       loc_110FC
                lw      $v0, 8($s2)
 # ---------------------------------------------------------------------------

loc_11470:                               # CODE XREF: ssl3_get_client_key_exchange+90↑j
                li      $a0, 0x14

loc_11474:                               # CODE XREF: ssl3_get_client_key_exchange+9C↑j
                li      $a1, 0x8B
                li      $a2, 0xAD
                b       loc_11318
                sw      $zero, 0x60+var_50($sp)
 # ---------------------------------------------------------------------------

loc_11484:                               # CODE XREF: ssl3_get_client_key_exchange+380↑j
                lw      $a3, 0x14($a3)
                bnez    $a3, loc_11020
                nop
                b       loc_11308
                la      $t9, ERR_put_error
 # ---------------------------------------------------------------------------

loc_11498:                               # CODE XREF: ssl3_get_client_key_exchange+114↑j
                lbu     $v1, 1($s1)
                andi    $v0, $a0, 0xFF
                bne     $v1, $v0, loc_11098
                nop
                b       loc_110FC
                lw      $v0, 8($s2)
 # ---------------------------------------------------------------------------

loc_114B0:                               # CODE XREF: ssl3_get_client_key_exchange+278↑j
                                         # ssl3_get_client_key_exchange+294↑j ...
                la      $t9, ERR_put_error
                li      $a1, 0x8B
                li      $a2, 0x93
                move    $a3, $zero
                li      $a0, 0x14
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x60+var_50($sp)
                lw      $gp, 0x60+var_48($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s4
                lw      $gp, 0x60+var_48($sp)
                la      $t9, EVP_PKEY_CTX_free
                jalr    $t9 ; EVP_PKEY_CTX_free
                move    $a0, $s3
                lw      $gp, 0x60+var_48($sp)
                b       loc_112C4
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_114F8:                               # CODE XREF: ssl3_get_client_key_exchange+284↑j
                lbu     $v0, 2($s1)
                b       loc_1121C
                addiu   $a3, $s1, 3
 # ---------------------------------------------------------------------------

loc_11504:                               # CODE XREF: ssl3_get_client_key_exchange+C8↑j
                b       loc_1105C
                move    $a2, $v1
 # ---------------------------------------------------------------------------

loc_1150C:                               # CODE XREF: ssl3_get_client_key_exchange+314↑j
                b       loc_1129C
                li      $s0, 1
 # ---------------------------------------------------------------------------

loc_11514:                               # CODE XREF: ssl3_get_client_key_exchange+174↑j
                b       loc_112C4
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1151C:                               # CODE XREF: ssl3_get_client_key_exchange+268↑j
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                b       loc_111EC
                lw      $gp, 0x60+var_48($sp)
 # ---------------------------------------------------------------------------

loc_11530:                               # CODE XREF: ssl3_get_client_key_exchange+100↑j
                b       loc_110BC
                addiu   $s0, $s1, 1
 # ---------------------------------------------------------------------------

loc_11538:                               # CODE XREF: ssl3_get_client_key_exchange+D8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x60+var_50($sp)
                li      $a0, 0x14
                li      $a1, 0x8B
                li      $a2, 0xEA

loc_1154C:                               # CODE XREF: ssl3_get_client_key_exchange+5F0↓j
                                         # ssl3_get_client_key_exchange+608↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x60+var_48($sp)
                b       loc_112C4
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_11560:                               # CODE XREF: ssl3_get_client_key_exchange+484↑j
                li      $a0, 0x14
                li      $a1, 0x8B
                li      $a2, 0x41  # 'A'
                b       loc_1154C
                sw      $zero, 0x60+var_50($sp)
 # ---------------------------------------------------------------------------

loc_11574:                               # CODE XREF: ssl3_get_client_key_exchange+4A0↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8B
                li      $a2, 0x44  # 'D'
                b       loc_1154C
                sw      $zero, 0x60+var_50($sp)
 # ---------------------------------------------------------------------------

loc_1158C:                               # CODE XREF: ssl3_get_client_key_exchange+440↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8B
                li      $a2, 3
                b       loc_1154C
                sw      $zero, 0x60+var_50($sp)
 # End of function ssl3_get_client_key_exchange


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_certificate_request
ssl3_send_certificate_request:           # CODE XREF: ssl3_accept+9F0↓p
                                         # DATA XREF: LOAD:000043C8↑o ...

var_48          = -0x48
var_40          = -0x40
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x50DAC
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_4($sp)
                sw      $fp, 0x58+var_8($sp)
                sw      $s7, 0x58+var_C($sp)
                sw      $s6, 0x58+var_10($sp)
                sw      $s5, 0x58+var_14($sp)
                sw      $s4, 0x58+var_18($sp)
                sw      $s3, 0x58+var_1C($sp)
                sw      $s2, 0x58+var_20($sp)
                sw      $s1, 0x58+var_24($sp)
                sw      $s0, 0x58+var_28($sp)
                sw      $gp, 0x58+var_40($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2160
                beq     $v1, $v0, loc_11634
                move    $s7, $a0

loc_115F0:                               # CODE XREF: ssl3_send_certificate_request+278↓j
                la      $t9, ssl3_do_write
                move    $a0, $s7
                jalr    $t9 ; ssl3_do_write
                li      $a1, 0x16
                lw      $gp, 0x58+var_40($sp)

loc_11604:                               # CODE XREF: ssl3_send_certificate_request+2D8↓j
                lw      $ra, 0x58+var_4($sp)
                lw      $fp, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_11634:                               # CODE XREF: ssl3_send_certificate_request+44↑j
                lw      $s6, 0x3C($a0)
                la      $t9, ssl3_get_req_cert_type
                lw      $s0, 4($s6)
                addiu   $s1, $s0, 5
                sw      $s1, 0x58+var_38($sp)
                jalr    $t9 ; ssl3_get_req_cert_type
                move    $a1, $s1
                lw      $gp, 0x58+var_40($sp)
                sb      $v0, 4($s0)
                lw      $s1, 0x58+var_38($sp)
                lw      $a0, 0($s7)
                addu    $s1, $v0, $s1
                move    $s2, $v0
                addiu   $v0, 1
                sw      $v0, 0x58+var_30($sp)
                sra     $v1, $a0, 8
                li      $v0, 3
                beq     $v1, $v0, loc_11884
                sw      $s1, 0x58+var_38($sp)

loc_11680:                               # CODE XREF: ssl3_send_certificate_request+32C↓j
                la      $t9, SSL_get_client_CA_list

loc_11684:                               # CODE XREF: ssl3_send_certificate_request+2E4↓j
                addiu   $s1, 2
                sw      $s1, 0x58+var_38($sp)
                jalr    $t9 ; SSL_get_client_CA_list
                move    $a0, $s7
                lw      $a1, 0x58+var_30($sp)
                lw      $gp, 0x58+var_40($sp)
                move    $s4, $v0
                beqz    $v0, loc_1178C
                addiu   $s3, $a1, 2
                addiu   $t9, $sp, 0x58+var_38
                move    $fp, $zero
                move    $s5, $zero
                sw      $t9, 0x58+var_2C($sp)

loc_116B8:                               # CODE XREF: ssl3_send_certificate_request+1E0↓j
                                         # ssl3_send_certificate_request+2A0↓j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s4
                lw      $gp, 0x58+var_40($sp)
                slt     $v0, $s5, $v0
                move    $a1, $s5
                move    $a0, $s4
                beqz    $v0, loc_1184C
                la      $t9, sk_value
                jalr    $t9 ; sk_value
                nop
                lw      $gp, 0x58+var_40($sp)
                la      $t9, i2d_X509_NAME
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; i2d_X509_NAME
                move    $s2, $v0
                lw      $gp, 0x58+var_40($sp)
                addiu   $a1, $s3, 6
                la      $t9, BUF_MEM_grow_clean
                addu    $a1, $v0
                move    $a0, $s6
                jalr    $t9 ; BUF_MEM_grow_clean
                move    $s0, $v0
                lw      $gp, 0x58+var_40($sp)
                sra     $a3, $s0, 8
                move    $a0, $s2
                lw      $a1, 0x58+var_2C($sp)
                beqz    $v0, loc_1185C
                la      $t9, i2d_X509_NAME
                lw      $v0, 4($s6)
                lw      $a2, 0xF8($s7)
                addiu   $v0, 4
                lui     $v1, 0x2000
                addu    $s1, $v0, $s3
                and     $a2, $v1
                bnez    $a2, loc_11824
                sw      $s1, 0x58+var_38($sp)
                sb      $a3, 0($s1)
                lw      $v0, 0x58+var_38($sp)
                move    $a0, $s2
                sb      $s0, 1($v0)
                lw      $v0, 0x58+var_38($sp)
                lw      $a1, 0x58+var_2C($sp)
                addiu   $s1, $v0, 2
                jalr    $t9 ; i2d_X509_NAME
                sw      $s1, 0x58+var_38($sp)
                addiu   $v1, $s0, 2
                lw      $gp, 0x58+var_40($sp)
                addu    $fp, $v1
                addu    $s3, $v1
                b       loc_116B8
                addiu   $s5, 1
 # ---------------------------------------------------------------------------

loc_1178C:                               # CODE XREF: ssl3_send_certificate_request+FC↑j
                move    $v1, $zero
                move    $a0, $zero

loc_11794:                               # CODE XREF: ssl3_send_certificate_request+2B0↓j
                lw      $v0, 4($s6)
                lw      $a1, 0x58+var_30($sp)
                addiu   $v0, 4
                addu    $s1, $v0, $a1
                sw      $s1, 0x58+var_38($sp)
                sb      $v1, 0($s1)
                lw      $v0, 0x58+var_38($sp)
                sra     $a2, $s3, 16
                sb      $a0, 1($v0)
                lw      $v1, 4($s6)
                li      $v0, 0xD
                addiu   $a0, $v1, 1
                sra     $a1, $s3, 8
                sb      $a2, 1($v1)
                sb      $v0, 0($v1)
                sb      $a1, 1($a0)
                sb      $s3, 2($a0)
                lw      $v0, 0x3C($s7)
                addiu   $a0, $s3, 4
                lw      $v1, 4($v0)
                sw      $a0, 0x44($s7)
                addu    $s1, $v1, $a0
                li      $v1, 0xE
                sw      $zero, 0x48($s7)
                sb      $v1, 0($s1)
                sb      $zero, 1($s1)
                sb      $zero, 2($s1)
                sb      $zero, 3($s1)
                lw      $v1, 0x44($s7)
                addiu   $v0, $s1, 4
                addiu   $v1, 4
                sw      $v0, 0x58+var_38($sp)
                li      $v0, 0x2161
                sw      $v1, 0x44($s7)
                b       loc_115F0
                sw      $v0, 0x34($s7)
 # ---------------------------------------------------------------------------

loc_11824:                               # CODE XREF: ssl3_send_certificate_request+1A4↑j
                jalr    $t9 ; i2d_X509_NAME
                addu    $fp, $s0
                lw      $gp, 0x58+var_40($sp)
                addiu   $v1, $s0, -2
                sra     $v0, $v1, 8
                addu    $s3, $s0
                addiu   $s5, 1
                sb      $v1, 1($s1)
                b       loc_116B8
                sb      $v0, 0($s1)
 # ---------------------------------------------------------------------------

loc_1184C:                               # CODE XREF: ssl3_send_certificate_request+130↑j
                sra     $v0, $fp, 8
                andi    $v1, $v0, 0xFF
                b       loc_11794
                andi    $a0, $fp, 0xFF
 # ---------------------------------------------------------------------------

loc_1185C:                               # CODE XREF: ssl3_send_certificate_request+184↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x58+var_48($sp)
                li      $a0, 0x14
                li      $a1, 0x96
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x58+var_40($sp)
                b       loc_11604
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_11884:                               # CODE XREF: ssl3_send_certificate_request+D4↑j
                slti    $v0, $a0, 0x303
                bnez    $v0, loc_11684
                la      $t9, SSL_get_client_CA_list
                la      $t9, tls12_get_req_sig_algs
                addiu   $a1, $s1, 2
                jalr    $t9 ; tls12_get_req_sig_algs
                move    $a0, $s7
                lw      $v1, 0x58+var_38($sp)
                sra     $a0, $v0, 8
                lw      $gp, 0x58+var_40($sp)
                sb      $a0, 0($v1)
                lw      $v1, 0x58+var_38($sp)
                addiu   $a1, $s2, 3
                sb      $v0, 1($v1)
                lw      $s1, 0x58+var_38($sp)
                addu    $a1, $v0
                addiu   $v1, $s1, 4
                addu    $s1, $v1, $v0
                sw      $a1, 0x58+var_30($sp)
                b       loc_11680
                sw      $s1, 0x58+var_38($sp)
 # End of function ssl3_send_certificate_request


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_server_key_exchange
ssl3_send_server_key_exchange:           # CODE XREF: ssl3_accept:loc_13B5C↓p
                                         # DATA XREF: LOAD:00002398↑o ...

var_C0          = -0xC0
var_B0          = -0xB0
var_AC          = -0xAC
var_A8          = -0xA8
var_A0          = -0xA0
var_9C          = -0x9C
var_98          = -0x98
var_94          = -0x94
var_90          = -0x90
var_8C          = -0x8C
var_88          = -0x88
var_7C          = -0x7C
var_74          = -0x74
var_5C          = -0x5C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x50A78
                addu    $gp, $t9
                addiu   $sp, -0xC0
                sw      $ra, 0xC0+var_4($sp)
                sw      $fp, 0xC0+var_8($sp)
                sw      $s7, 0xC0+var_C($sp)
                sw      $s6, 0xC0+var_10($sp)
                sw      $s5, 0xC0+var_14($sp)
                sw      $s4, 0xC0+var_18($sp)
                sw      $s3, 0xC0+var_1C($sp)
                sw      $s2, 0xC0+var_20($sp)
                sw      $s1, 0xC0+var_24($sp)
                sw      $s0, 0xC0+var_28($sp)
                sw      $gp, 0xC0+var_A8($sp)
                la      $t9, EVP_MD_CTX_init
                addiu   $s7, $sp, 0xC0+var_74
                move    $s4, $a0
                sw      $zero, 0xC0+var_9C($sp)
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s7
                lw      $v1, 0x34($s4)
                li      $v0, 0x2150
                beq     $v1, $v0, loc_11998
                lw      $gp, 0xC0+var_A8($sp)

loc_1193C:                               # CODE XREF: ssl3_send_server_key_exchange+504↓j
                la      $t9, EVP_MD_CTX_cleanup
                li      $v0, 0x2151
                move    $a0, $s7
                jalr    $t9 ; EVP_MD_CTX_cleanup
                sw      $v0, 0x34($s4)
                lw      $gp, 0xC0+var_A8($sp)
                la      $t9, ssl3_do_write
                move    $a0, $s4
                jalr    $t9 ; ssl3_do_write
                li      $a1, 0x16
                lw      $gp, 0xC0+var_A8($sp)
                lw      $ra, 0xC0+var_4($sp)
                lw      $fp, 0xC0+var_8($sp)
                lw      $s7, 0xC0+var_C($sp)
                lw      $s6, 0xC0+var_10($sp)
                lw      $s5, 0xC0+var_14($sp)
                lw      $s4, 0xC0+var_18($sp)
                lw      $s3, 0xC0+var_1C($sp)
                lw      $s2, 0xC0+var_20($sp)
                lw      $s1, 0xC0+var_24($sp)
                lw      $s0, 0xC0+var_28($sp)
                jr      $ra
                addiu   $sp, 0xC0
 # ---------------------------------------------------------------------------

loc_11998:                               # CODE XREF: ssl3_send_server_key_exchange+5C↑j
                lw      $a1, 0x58($s4)
                lw      $a0, 0x3C($s4)
                lw      $v1, 0x344($a1)
                sw      $zero, 0xC0+var_88($sp)
                lw      $s2, 0xC($v1)
                sw      $zero, 0xC0+var_8C($sp)
                andi    $v0, $s2, 1
                lw      $s1, 0x98($s4)
                beqz    $v0, loc_11BBC
                sw      $a0, 0xC0+var_38($sp)
                lw      $s0, 0x18($s1)
                beqz    $s0, loc_11E28
                nop

loc_119CC:                               # CODE XREF: ssl3_send_server_key_exchange+598↓j
                lw      $v0, 0x10($s0)
                li      $v1, 1
                sw      $v0, 0xC0+var_94($sp)
                lw      $a0, 0x14($s0)
                sw      $v1, 0x368($a1)
                move    $s3, $v0
                sw      $a0, 0xC0+var_90($sp)
                beqz    $v0, loc_1208C
                sw      $zero, 0xC0+var_98($sp)
                andi    $v0, $s2, 0x400

loc_119F4:                               # CODE XREF: ssl3_send_server_key_exchange+330↓j
                beqz    $v0, loc_12128
                move    $a0, $s3
                move    $s5, $zero
                move    $s0, $zero
                b       loc_11A3C
                addiu   $s1, $sp, 0xC0+var_A0
 # ---------------------------------------------------------------------------

loc_11A0C:                               # CODE XREF: ssl3_send_server_key_exchange+19C↓j
                lw      $v0, 0x1C($a2)
                addiu   $v1, $a1, 1
                addiu   $v0, 2
                sll     $s0, $v1, 2
                addu    $s5, $v0
                addu    $v0, $s0, $s1
                lw      $a0, 0xC($v0)
                sw      $v1, 0xC0+var_98($sp)
                beqz    $a0, loc_11AA4
                slti    $v0, $v1, 4

loc_11A34:                               # CODE XREF: ssl3_send_server_key_exchange+1C4↓j
                beqz    $v0, loc_11AA4
                nop

loc_11A3C:                               # CODE XREF: ssl3_send_server_key_exchange+12C↑j
                la      $t9, BN_num_bits
                jalr    $t9 ; BN_num_bits
                nop
                addiu   $a0, $v0, 7
                lw      $a1, 0xC0+var_98($sp)
                addiu   $v0, 0xE
                slti    $v1, $a0, 0
                movn    $a0, $v0, $v1
                sll     $v0, $a1, 2
                addu    $v1, $s0, $s1
                addu    $a2, $v0, $s1
                sra     $a0, 3
                li      $v0, 2
                lw      $gp, 0xC0+var_A8($sp)
                bne     $a1, $v0, loc_11A0C
                sw      $a0, 0x1C($v1)
                lw      $v0, 0xC0+var_7C($sp)
                addiu   $v1, $a1, 1
                addiu   $v0, 1
                sll     $s0, $v1, 2
                addu    $s5, $v0
                addu    $v0, $s0, $s1
                lw      $a0, 0xC($v0)
                sw      $v1, 0xC0+var_98($sp)
                bnez    $a0, loc_11A34
                slti    $v0, $v1, 4

loc_11AA4:                               # CODE XREF: ssl3_send_server_key_exchange+154↑j
                                         # ssl3_send_server_key_exchange:loc_11A34↑j ...
                lw      $a1, 0x58($s4)

loc_11AA8:                               # CODE XREF: ssl3_send_server_key_exchange:loc_1208C↓j
                                         # ssl3_send_server_key_exchange+8C4↓j
                lw      $a1, 0x344($a1)
                lw      $v0, 0x10($a1)
                andi    $v0, 4
                bnez    $v0, loc_11ACC
                move    $fp, $zero
                lw      $v0, 0xC($a1)
                andi    $v0, 0x100
                beqz    $v0, loc_11C88
                la      $t9, ssl_get_sign_pkey

loc_11ACC:                               # CODE XREF: ssl3_send_server_key_exchange+1DC↑j
                move    $v0, $zero

loc_11AD0:                               # CODE XREF: ssl3_send_server_key_exchange+3D4↓j
                la      $t9, BUF_MEM_grow_clean
                addiu   $s6, $s5, 4
                lw      $a0, 0xC0+var_38($sp)
                jalr    $t9 ; BUF_MEM_grow_clean
                addu    $a1, $v0, $s6
                beqz    $v0, loc_11E04
                lw      $gp, 0xC0+var_A8($sp)
                lw      $v0, 0x3C($s4)
                sw      $zero, 0xC0+var_98($sp)
                lw      $v0, 4($v0)
                sw      $v0, 0xC0+var_34($sp)
                addiu   $v0, 4
                beqz    $s3, loc_11CB4
                sw      $v0, 0xC0+var_30($sp)
                andi    $v0, $s2, 0x400
                beqz    $v0, loc_121A4
                lbu     $s2, 0xC0+var_7C($sp)
                lw      $s3, 0xC0+var_30($sp)
                move    $a2, $zero
                b       loc_11B9C
                addiu   $s1, $sp, 0xC0+var_A0
 # ---------------------------------------------------------------------------

loc_11B24:                               # CODE XREF: ssl3_send_server_key_exchange+2D0↓j
                lw      $v0, 0x1C($v1)
                sra     $v0, 8
                sb      $v0, 0($s3)
                lw      $v1, 0xC0+var_98($sp)
                sll     $v1, 2
                addu    $v1, $s1
                lw      $v0, 0x1C($v1)
                sb      $v0, 1($s3)

loc_11B44:                               # CODE XREF: ssl3_send_server_key_exchange+2DC↓j
                lw      $v0, 0xC0+var_98($sp)
                la      $t9, BN_bn2bin
                sll     $v0, 2
                addu    $v0, $s1
                lw      $a0, 0xC($v0)
                jalr    $t9 ; BN_bn2bin
                move    $a1, $s0
                lw      $v1, 0xC0+var_98($sp)
                lw      $gp, 0xC0+var_A8($sp)
                addiu   $a2, $v1, 1
                sll     $v0, $a2, 2
                sll     $v1, 2
                addu    $v0, $s1
                addu    $v1, $s1
                lw      $a0, 0x1C($v1)
                lw      $a1, 0xC($v0)
                slti    $v0, $a2, 4
                addu    $s3, $s0, $a0
                beqz    $a1, loc_11CB8
                sw      $a2, 0xC0+var_98($sp)
                beqz    $v0, loc_11CB8
                nop

loc_11B9C:                               # CODE XREF: ssl3_send_server_key_exchange+244↑j
                sll     $v0, $a2, 2
                addu    $v1, $v0, $s1
                li      $v0, 2
                bne     $a2, $v0, loc_11B24
                addiu   $s0, $s3, 2
                addiu   $s0, $s3, 1
                b       loc_11B44
                sb      $s2, 0($s3)
 # ---------------------------------------------------------------------------

loc_11BBC:                               # CODE XREF: ssl3_send_server_key_exchange+E0↑j
                andi    $v0, $s2, 0x400
                beqz    $v0, loc_11C10
                la      $t9, ERR_put_error
                lw      $v1, 0x190($s4)
                beqz    $v1, loc_11DE4
                nop
                lw      $a0, 0x194($s4)
                beqz    $a0, loc_11DE4
                nop
                lw      $a1, 0x198($s4)
                beqz    $a1, loc_11DE4
                nop
                lw      $a2, 0x19C($s4)
                beqz    $a2, loc_11DE4
                move    $s3, $v1
                sw      $a0, 0xC0+var_90($sp)
                sw      $a1, 0xC0+var_8C($sp)
                sw      $a2, 0xC0+var_88($sp)
                sw      $v1, 0xC0+var_94($sp)
                b       loc_119F4
                sw      $zero, 0xC0+var_98($sp)
 # ---------------------------------------------------------------------------

loc_11C10:                               # CODE XREF: ssl3_send_server_key_exchange+2E8↑j
                sw      $zero, 0xC0+var_B0($sp)
                li      $a0, 0x14
                li      $a1, 0x9B
                li      $a2, 0xFA

loc_11C20:                               # CODE XREF: ssl3_send_server_key_exchange+7CC↓j
                                         # ssl3_send_server_key_exchange+7E4↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xC0+var_A8($sp)
                li      $a2, 0x28  # '('

loc_11C30:                               # CODE XREF: ssl3_send_server_key_exchange:loc_11E78↓j
                                         # ssl3_send_server_key_exchange+80C↓j
                la      $t9, ssl3_send_alert
                move    $a0, $s4
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0xC0+var_A8($sp)

loc_11C44:                               # CODE XREF: ssl3_send_server_key_exchange+524↓j
                                         # ssl3_send_server_key_exchange+548↓j ...
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s7
                lw      $gp, 0xC0+var_A8($sp)
                lw      $ra, 0xC0+var_4($sp)
                lw      $fp, 0xC0+var_8($sp)
                lw      $s7, 0xC0+var_C($sp)
                lw      $s6, 0xC0+var_10($sp)
                lw      $s5, 0xC0+var_14($sp)
                lw      $s4, 0xC0+var_18($sp)
                lw      $s3, 0xC0+var_1C($sp)
                lw      $s2, 0xC0+var_20($sp)
                lw      $s1, 0xC0+var_24($sp)
                lw      $s0, 0xC0+var_28($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0xC0
 # ---------------------------------------------------------------------------

loc_11C88:                               # CODE XREF: ssl3_send_server_key_exchange+1EC↑j
                move    $a0, $s4
                jalr    $t9 ; ssl_get_sign_pkey
                addiu   $a2, $sp, 0xC0+var_9C
                move    $fp, $v0
                beqz    $v0, loc_11E78
                lw      $gp, 0xC0+var_A8($sp)
                la      $t9, EVP_PKEY_size
                jalr    $t9 ; EVP_PKEY_size
                move    $a0, $v0
                b       loc_11AD0
                lw      $gp, 0xC0+var_A8($sp)
 # ---------------------------------------------------------------------------

loc_11CB4:                               # CODE XREF: ssl3_send_server_key_exchange+228↑j
                move    $s3, $v0

loc_11CB8:                               # CODE XREF: ssl3_send_server_key_exchange+2B4↑j
                                         # ssl3_send_server_key_exchange+2BC↑j ...
                beqz    $fp, loc_11DAC
                li      $v0, 6
                lw      $v1, 0xC0+var_C0($fp)
                beq     $v1, $v0, loc_11EB8
                li      $v0, 3

loc_11CCC:                               # CODE XREF: ssl3_send_server_key_exchange+5F4↓j
                lw      $a1, 0xC0+var_9C($sp)
                beqz    $a1, loc_12094
                li      $v0, 3
                lw      $a0, 0($s4)
                sra     $v1, $a0, 8
                bne     $v1, $v0, loc_11CF8
                la      $t9, EVP_DigestInit_ex
                slti    $v0, $a0, 0x303
                beqz    $v0, loc_11E94
                la      $t9, tls12_get_sigandhash

loc_11CF4:                               # CODE XREF: ssl3_send_server_key_exchange+5D8↓j
                la      $t9, EVP_DigestInit_ex

loc_11CF8:                               # CODE XREF: ssl3_send_server_key_exchange+408↑j
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0xC0+var_30($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s5
                lw      $gp, 0xC0+var_A8($sp)
                la      $t9, EVP_SignFinal
                move    $a3, $fp
                move    $a0, $s7
                addiu   $a1, $s3, 2
                jalr    $t9 ; EVP_SignFinal
                addiu   $a2, $sp, 0xC0+var_98
                beqz    $v0, loc_12068
                lw      $gp, 0xC0+var_A8($sp)
                lw      $v0, 0xC0+var_98($sp)
                sra     $v0, 8
                sb      $v0, 0($s3)
                lw      $v1, 0xC0+var_98($sp)
                sb      $v1, 1($s3)
                lw      $a1, 0($s4)
                lw      $v0, 0xC0+var_98($sp)
                sra     $a0, $a1, 8
                addiu   $v0, 2
                li      $v1, 3
                beq     $a0, $v1, loc_11E80
                addu    $s5, $v0

loc_11DA8:                               # CODE XREF: ssl3_send_server_key_exchange+5B4↓j
                addiu   $s6, $s5, 4

loc_11DAC:                               # CODE XREF: ssl3_send_server_key_exchange:loc_11CB8↑j
                                         # ssl3_send_server_key_exchange+5AC↓j ...
                lw      $v1, 0xC0+var_34($sp)
                lw      $v0, 0xC0+var_34($sp)
                addiu   $a0, $v1, 1
                sra     $v1, $s5, 16
                sb      $v1, 1($v0)
                lw      $v1, 0xC0+var_34($sp)
                sra     $a1, $s5, 8
                li      $v0, 0xC
                sb      $v0, 0($v1)
                sb      $s5, 2($a0)
                sb      $a1, 1($a0)
                sw      $s6, 0x44($s4)
                b       loc_1193C
                sw      $zero, 0x48($s4)
 # ---------------------------------------------------------------------------

loc_11DE4:                               # CODE XREF: ssl3_send_server_key_exchange+2F4↑j
                                         # ssl3_send_server_key_exchange+300↑j ...
                sw      $zero, 0xC0+var_B0($sp)
                li      $a0, 0x14
                li      $a1, 0x9B
                li      $a2, 0x166
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_11C44
                lw      $gp, 0xC0+var_A8($sp)
 # ---------------------------------------------------------------------------

loc_11E04:                               # CODE XREF: ssl3_send_server_key_exchange+20C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xC0+var_B0($sp)
                li      $a0, 0x14
                li      $a1, 0x9B
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_11C44
                lw      $gp, 0xC0+var_A8($sp)
 # ---------------------------------------------------------------------------

loc_11E28:                               # CODE XREF: ssl3_send_server_key_exchange+EC↑j
                lw      $t9, 0x1C($s1)
                beqz    $t9, loc_120EC
                li      $v0, 0x400
                lw      $a1, 0x20($v1)
                andi    $v1, $a1, 8
                li      $a2, 0x200
                movz    $a2, $v0, $v1
                andi    $a1, 2
                jalr    $t9
                move    $a0, $s4
                move    $s0, $v0
                beqz    $v0, loc_120AC
                lw      $gp, 0xC0+var_A8($sp)
                la      $t9, RSA_up_ref
                jalr    $t9 ; RSA_up_ref
                move    $a0, $v0
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0x58($s4)
                b       loc_119CC
                sw      $s0, 0x18($s1)
 # ---------------------------------------------------------------------------

loc_11E78:                               # CODE XREF: ssl3_send_server_key_exchange+3C0↑j
                b       loc_11C30
                li      $a2, 0x32  # '2'
 # ---------------------------------------------------------------------------

loc_11E80:                               # CODE XREF: ssl3_send_server_key_exchange+4C8↑j
                slti    $v0, $a1, 0x303
                bnez    $v0, loc_11DAC
                addiu   $s6, $s5, 4
                b       loc_11DA8
                addiu   $s5, 2
 # ---------------------------------------------------------------------------

loc_11E94:                               # CODE XREF: ssl3_send_server_key_exchange+414↑j
                move    $a2, $a1
                move    $a0, $s3
                jalr    $t9 ; tls12_get_sigandhash
                move    $a1, $fp
                beqz    $v0, loc_120C4
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0xC0+var_9C($sp)
                b       loc_11CF4
                addiu   $s3, 2
 # ---------------------------------------------------------------------------

loc_11EB8:                               # CODE XREF: ssl3_send_server_key_exchange+3EC↑j
                lw      $a0, 0($s4)
                sra     $v1, $a0, 8
                bne     $v1, $v0, loc_11ED4
                la      $t9, EVP_MD_CTX_set_flags
                slti    $v0, $a0, 0x303
                beqz    $v0, loc_11CCC
                nop

loc_11ED4:                               # CODE XREF: ssl3_send_server_key_exchange+5E8↑j
                move    $a0, $s7
                jalr    $t9 ; EVP_MD_CTX_set_flags
                li      $a1, 8
                lw      $gp, 0xC0+var_A8($sp)
                lw      $v0, 0xDC($s4)
                lw      $a1, 0x8C($v0)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0xC0+var_30($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s5
                lw      $gp, 0xC0+var_A8($sp)
                addiu   $s0, $sp, 0xC0+var_5C
                la      $t9, EVP_DigestFinal_ex
                addiu   $s1, $sp, 0xC0+var_98
                move    $a2, $s1
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a1, $s0
                lw      $gp, 0xC0+var_A8($sp)
                la      $t9, EVP_MD_CTX_set_flags
                move    $a0, $s7
                li      $a1, 8
                jalr    $t9 ; EVP_MD_CTX_set_flags
                lw      $s2, 0xC0+var_98($sp)
                lw      $gp, 0xC0+var_A8($sp)
                lw      $v0, 0xDC($s4)
                lw      $a1, 0x90($v0)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC0+var_A8($sp)
                lw      $a1, 0xC0+var_30($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s5
                lw      $gp, 0xC0+var_A8($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a2, $s1
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestFinal_ex
                addu    $a1, $s0, $s2
                addiu   $v1, $sp, 0xC0+var_A0
                lw      $gp, 0xC0+var_A8($sp)
                sw      $v1, 0xC0+var_B0($sp)
                lw      $v0, 0xC0+var_AC($fp)
                lw      $a2, 0xC0+var_98($sp)
                la      $t9, RSA_sign
                sw      $v0, 0xC0+var_AC($sp)
                addu    $a2, $s2, $a2
                move    $a1, $s0
                li      $a0, 0x72  # 'r'
                jalr    $t9 ; RSA_sign
                addiu   $a3, $s3, 2
                blez    $v0, loc_12104
                lw      $gp, 0xC0+var_A8($sp)
                lw      $v0, 0xC0+var_A0($sp)
                srl     $v0, 8
                sb      $v0, 0($s3)
                lw      $v1, 0xC0+var_A0($sp)
                sb      $v1, 1($s3)
                lw      $v0, 0xC0+var_A0($sp)
                addiu   $v0, 2
                addu    $s5, $v0, $s5
                b       loc_11DAC
                addiu   $s6, $s5, 4
 # ---------------------------------------------------------------------------

loc_12068:                               # CODE XREF: ssl3_send_server_key_exchange+498↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xC0+var_B0($sp)
                li      $a0, 0x14
                li      $a1, 0x9B
                li      $a2, 6
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_11C44
                lw      $gp, 0xC0+var_A8($sp)
 # ---------------------------------------------------------------------------

loc_1208C:                               # CODE XREF: ssl3_send_server_key_exchange+110↑j
                b       loc_11AA8
                move    $s5, $zero
 # ---------------------------------------------------------------------------

loc_12094:                               # CODE XREF: ssl3_send_server_key_exchange+3F8↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x9B
                li      $a2, 0xFB
                b       loc_11C20
                sw      $zero, 0xC0+var_B0($sp)
 # ---------------------------------------------------------------------------

loc_120AC:                               # CODE XREF: ssl3_send_server_key_exchange+57C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x9B
                li      $a2, 0x11A
                b       loc_11C20
                sw      $zero, 0xC0+var_B0($sp)
 # ---------------------------------------------------------------------------

loc_120C4:                               # CODE XREF: ssl3_send_server_key_exchange+5CC↑j
                la      $t9, ERR_put_error
                li      $a2, 0x44  # 'D'
                sw      $zero, 0xC0+var_B0($sp)
                li      $a0, 0x14
                li      $a1, 0x9B
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xC0+var_A8($sp)
                b       loc_11C30
                li      $a2, 0x50  # 'P'
 # ---------------------------------------------------------------------------

loc_120EC:                               # CODE XREF: ssl3_send_server_key_exchange+554↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x9B
                li      $a2, 0xAC
                b       loc_11C20
                sw      $zero, 0xC0+var_B0($sp)
 # ---------------------------------------------------------------------------

loc_12104:                               # CODE XREF: ssl3_send_server_key_exchange+760↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xC0+var_B0($sp)
                li      $a0, 0x14
                li      $a1, 0x9B
                li      $a2, 4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_11C44
                lw      $gp, 0xC0+var_A8($sp)
 # ---------------------------------------------------------------------------

loc_12128:                               # CODE XREF: ssl3_send_server_key_exchange:loc_119F4↑j
                move    $s5, $zero
                addiu   $s1, $sp, 0xC0+var_A0
                move    $s0, $zero
                la      $t9, BN_num_bits

loc_12138:                               # CODE XREF: ssl3_send_server_key_exchange+8BC↓j
                jalr    $t9 ; BN_num_bits
                nop
                addiu   $a0, $v0, 7
                lw      $a1, 0xC0+var_98($sp)
                addiu   $v0, 0xE
                slti    $v1, $a0, 0
                movn    $a0, $v0, $v1
                addiu   $a2, $a1, 1
                addu    $v0, $s0, $s1
                sra     $a0, 3
                sll     $a1, 2
                lw      $gp, 0xC0+var_A8($sp)
                addu    $a1, $s1
                sw      $a0, 0x1C($v0)
                sll     $s0, $a2, 2
                addu    $v0, $s0, $s1
                lw      $v1, 0x1C($a1)
                lw      $a0, 0xC($v0)
                addiu   $v1, 2
                slti    $v0, $a2, 4
                addu    $s5, $v1
                beqz    $a0, loc_11AA4
                sw      $a2, 0xC0+var_98($sp)
                bnez    $v0, loc_12138
                la      $t9, BN_num_bits
                b       loc_11AA8
                lw      $a1, 0x58($s4)
 # ---------------------------------------------------------------------------

loc_121A4:                               # CODE XREF: ssl3_send_server_key_exchange+234↑j
                lw      $s3, 0xC0+var_30($sp)
                addiu   $s1, $sp, 0xC0+var_A0
                move    $a3, $zero
                addu    $v1, $a3, $s1

loc_121B4:                               # CODE XREF: ssl3_send_server_key_exchange+950↓j
                lw      $v0, 0x1C($v1)
                la      $t9, BN_bn2bin
                sra     $v0, 8
                sb      $v0, 0($s3)
                lw      $v0, 0xC0+var_98($sp)
                addiu   $s0, $s3, 2
                sll     $v0, 2
                addu    $v0, $s1
                lw      $v1, 0x1C($v0)
                move    $a1, $s0
                sb      $v1, 1($s3)
                lw      $v0, 0xC0+var_98($sp)
                sll     $v0, 2
                addu    $v0, $s1
                jalr    $t9 ; BN_bn2bin
                lw      $a0, 0xC($v0)
                lw      $v1, 0xC0+var_98($sp)
                lw      $gp, 0xC0+var_A8($sp)
                addiu   $a0, $v1, 1
                sll     $a3, $a0, 2
                sll     $v1, 2
                addu    $v0, $a3, $s1
                addu    $v1, $s1
                lw      $a1, 0x1C($v1)
                lw      $a2, 0xC($v0)
                slti    $v0, $a0, 4
                addu    $s3, $s0, $a1
                beqz    $a2, loc_11CB8
                sw      $a0, 0xC0+var_98($sp)
                bnez    $v0, loc_121B4
                addu    $v1, $a3, $s1
                b       loc_11CB8
                nop
 # End of function ssl3_send_server_key_exchange


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_server_hello
ssl3_send_server_hello:                  # CODE XREF: ssl3_accept+2F8↓p
                                         # DATA XREF: LOAD:00002CD8↑o ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x50118
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s4, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2130
                beq     $v1, $v0, loc_122A0
                move    $s1, $a0
                la      $t9, ssl3_do_write
                move    $a0, $s1
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_122A0:                               # CODE XREF: ssl3_send_server_hello+34↑j
                lw      $v1, 0x3C($a0)
                lw      $v0, 0($a0)
                lw      $s3, 4($v1)
                sra     $v0, 8
                sb      $v0, 4($s3)
                lw      $v1, 0($a0)
                addiu   $s0, $s3, 6
                sb      $v1, 5($s3)
                lw      $v0, 0x58($a0)
                lw      $a2, 0xA0($v0)
                addiu   $v0, 0xA0
                lw      $t2, 0x1C($v0)
                lw      $t0, 0x14($v0)
                lw      $t1, 0x18($v0)
                lw      $a3, 0x10($v0)
                lw      $v1, 4($v0)
                lw      $a0, 8($v0)
                lw      $a1, 0xC($v0)
                usw     $a2, 0($s0)
                usw     $v1, 4($s0)
                usw     $a0, 8($s0)
                usw     $a1, 0xC($s0)
                usw     $a3, 0x10($s0)
                usw     $t0, 0x14($s0)
                usw     $t1, 0x18($s0)
                usw     $t2, 0x1C($s0)
                lw      $v1, 0xDC($s1)
                lw      $v0, 0x20($v1)
                andi    $v0, 2
                beqz    $v0, loc_1243C
                addiu   $s4, $s3, 4

loc_1233C:                               # CODE XREF: ssl3_send_server_hello+208↓j
                lw      $v0, 0xC0($s1)

loc_12340:                               # CODE XREF: ssl3_send_server_hello+214↓j
                lw      $s2, 0x44($v0)
                slti    $v0, $s2, 0x21  # '!'
                beqz    $v0, loc_12460
                la      $t9, memcpy
                sb      $s2, 0x20($s0)
                lw      $a1, 0xC0($s1)
                addiu   $s0, 0x21  # '!'
                move    $a0, $s0
                move    $a2, $s2
                jalr    $t9 ; memcpy
                addiu   $a1, 0x48  # 'H'
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 0x58($s1)
                addu    $s0, $s2
                la      $t9, ssl3_put_cipher_by_char
                lw      $a0, 0x344($v1)
                jalr    $t9 ; ssl3_put_cipher_by_char
                move    $a1, $s0
                lw      $v1, 0x58($s1)
                addu    $a2, $s0, $v0
                lw      $v0, 0x384($v1)
                beqz    $v0, loc_12454
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0($v0)
                addiu   $s0, $a2, 1
                sb      $v0, 0($a2)

loc_123A8:                               # CODE XREF: ssl3_send_server_hello+220↓j
                la      $t9, ssl_prepare_serverhello_tlsext
                jalr    $t9 ; ssl_prepare_serverhello_tlsext
                move    $a0, $s1
                blez    $v0, loc_124A4
                lw      $gp, 0x38+var_20($sp)
                la      $t9, ssl_add_serverhello_tlsext
                move    $a1, $s0
                move    $a0, $s1
                jalr    $t9 ; ssl_add_serverhello_tlsext
                addiu   $a2, $s3, 0x4000
                beqz    $v0, loc_12460
                lw      $gp, 0x38+var_20($sp)
                subu    $v1, $v0, $s4
                addiu   $a1, $s3, 1
                subu    $a3, $v0, $s3
                srl     $a0, $v1, 16
                li      $v0, 2
                srl     $a2, $v1, 8
                sb      $v0, 0($s3)
                sb      $a0, 1($s3)
                li      $v0, 0x2131
                sb      $v1, 2($a1)
                sb      $a2, 1($a1)
                la      $t9, ssl3_do_write
                sw      $v0, 0x34($s1)
                sw      $a3, 0x44($s1)
                sw      $zero, 0x48($s1)
                move    $a0, $s1
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1243C:                               # CODE XREF: ssl3_send_server_hello+FC↑j
                lw      $v0, 0x6C($s1)
                bnez    $v0, loc_1233C
                nop
                lw      $v0, 0xC0($s1)
                b       loc_12340
                sw      $zero, 0x44($v0)
 # ---------------------------------------------------------------------------

loc_12454:                               # CODE XREF: ssl3_send_server_hello+15C↑j
                addiu   $s0, $a2, 1
                b       loc_123A8
                sb      $zero, 0($a2)
 # ---------------------------------------------------------------------------

loc_12460:                               # CODE XREF: ssl3_send_server_hello+110↑j
                                         # ssl3_send_server_hello+198↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xF2
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)

loc_12480:                               # CODE XREF: ssl3_send_server_hello+288↓j
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_124A4:                               # CODE XREF: ssl3_send_server_hello+17C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xF2
                li      $a2, 0x113
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_12480
                lw      $gp, 0x38+var_20($sp)
 # End of function ssl3_send_server_hello


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_client_hello
ssl3_get_client_hello:                   # CODE XREF: ssl3_accept+8F8↓p
                                         # dtls1_accept+B70↓p
                                         # DATA XREF: ...

var_68          = -0x68
var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x4FE88
                addu    $gp, $t9
                addiu   $sp, -0x68
                sw      $ra, 0x68+var_4($sp)
                sw      $fp, 0x68+var_8($sp)
                sw      $s7, 0x68+var_C($sp)
                sw      $s6, 0x68+var_10($sp)
                sw      $s5, 0x68+var_14($sp)
                sw      $s4, 0x68+var_18($sp)
                sw      $s3, 0x68+var_1C($sp)
                sw      $s2, 0x68+var_20($sp)
                sw      $s1, 0x68+var_24($sp)
                sw      $s0, 0x68+var_28($sp)
                sw      $gp, 0x68+var_50($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2110
                move    $s1, $a0
                beq     $v1, $v0, loc_128C0
                sw      $zero, 0x68+var_3C($sp)

loc_12518:                               # CODE XREF: ssl3_get_client_hello+3FC↓j
                lw      $a1, 8($s1)
                li      $v0, 0x4000
                addiu   $v1, $sp, 0x68+var_48
                sw      $v0, 0x68+var_58($sp)
                sw      $v1, 0x68+var_54($sp)
                lw      $t9, 0x30($a1)
                li      $v0, 1
                sw      $v0, 0x104($s1)
                li      $a1, 0x2111
                li      $a2, 0x2112
                jalr    $t9
                li      $a3, 1
                move    $s3, $v0
                lw      $v0, 0x68+var_48($sp)
                beqz    $v0, loc_12888
                lw      $gp, 0x68+var_50($sp)
                lw      $t4, 0x40($s1)
                sw      $zero, 0x104($s1)
                sw      $t4, 0x68+var_40($sp)
                lbu     $v0, 0($t4)
                lbu     $v1, 1($t4)
                sll     $v0, 8
                lw      $a0, 0($s1)
                or      $v1, $v0
                move    $s5, $t4
                li      $v0, 0xFEFF
                addiu   $t4, 2
                sw      $t4, 0x68+var_40($sp)
                beq     $a0, $v0, loc_1263C
                sw      $v1, 0x108($s1)
                slt     $v0, $v1, $a0
                beqz    $v0, loc_1264C
                la      $t9, SSL_ctrl
                la      $t9, ERR_put_error

loc_125A0:                               # CODE XREF: ssl3_get_client_hello+178↓j
                li      $a0, 0x14
                sw      $zero, 0x68+var_58($sp)
                li      $a1, 0x8A
                li      $a2, 0x10B
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $a0, 0x108($s1)
                li      $v0, 3
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_12C20
                lw      $gp, 0x68+var_50($sp)

loc_125CC:                               # CODE XREF: ssl3_get_client_hello:loc_12C20↓j
                li      $v0, 0x46  # 'F'
                li      $s4, 0xFFFFFFFF
                sw      $v0, 0x68+var_44($sp)

loc_125D8:                               # CODE XREF: ssl3_get_client_hello+37C↓j
                                         # ssl3_get_client_hello+780↓j ...
                la      $t9, ssl3_send_alert
                lw      $a2, 0x68+var_44($sp)
                move    $a0, $s1
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x68+var_50($sp)

loc_125F0:                               # CODE XREF: ssl3_get_client_hello+2EC↓j
                                         # ssl3_get_client_hello:loc_12880↓j ...
                lw      $a0, 0x68+var_3C($sp)

loc_125F4:                               # CODE XREF: ssl3_get_client_hello:loc_12C08↓j
                                         # ssl3_get_client_hello+748↓j
                beqz    $a0, loc_12608
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x68+var_50($sp)

loc_12608:                               # CODE XREF: ssl3_get_client_hello:loc_125F4↑j
                                         # ssl3_get_client_hello+1B4↓j
                move    $v0, $s4
                lw      $ra, 0x68+var_4($sp)
                lw      $fp, 0x68+var_8($sp)
                lw      $s7, 0x68+var_C($sp)
                lw      $s6, 0x68+var_10($sp)
                lw      $s5, 0x68+var_14($sp)
                lw      $s4, 0x68+var_18($sp)
                lw      $s3, 0x68+var_1C($sp)
                lw      $s2, 0x68+var_20($sp)
                lw      $s1, 0x68+var_24($sp)
                lw      $s0, 0x68+var_28($sp)
                jr      $ra
                addiu   $sp, 0x68
 # ---------------------------------------------------------------------------

loc_1263C:                               # CODE XREF: ssl3_get_client_hello+C0↑j
                slt     $v0, $a0, $v1
                bnez    $v0, loc_125A0
                la      $t9, ERR_put_error
                la      $t9, SSL_ctrl

loc_1264C:                               # CODE XREF: ssl3_get_client_hello+CC↑j
                move    $a0, $s1
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                jalr    $t9 ; SSL_ctrl
                move    $a3, $zero
                andi    $v0, 0x2000
                beqz    $v0, loc_12C18
                lw      $gp, 0x68+var_50($sp)
                lw      $t4, 0x68+var_40($sp)
                lbu     $v0, 0x20($t4)
                addu    $v0, $t4
                lbu     $v1, 0x21($v0)
                beqz    $v1, loc_12608
                li      $s4, 1

loc_12684:                               # CODE XREF: ssl3_get_client_hello:loc_12C18↓j
                lwl     $a0, 3($t4)
                lwl     $a1, 7($t4)
                lwl     $a2, 0xB($t4)
                lwl     $a3, 0xF($t4)
                lwl     $t0, 0x13($t4)
                lwl     $t1, 0x17($t4)
                lwl     $t2, 0x1B($t4)
                lwl     $v1, 0x1F($t4)
                lw      $t3, 0x58($s1)
                lwr     $v1, 0x1C($t4)
                lwr     $a1, 4($t4)
                lwr     $a2, 8($t4)
                lwr     $a3, 0xC($t4)
                lwr     $t0, 0x10($t4)
                lwr     $t1, 0x14($t4)
                lwr     $t2, 0x18($t4)
                lwr     $a0, 0($t4)
                addiu   $v0, $t3, 0xC0
                sw      $a0, 0xC0($t3)
                sw      $v1, 0x1C($v0)
                sw      $a1, 4($v0)
                sw      $a2, 8($v0)
                sw      $a3, 0xC($v0)
                sw      $t0, 0x10($v0)
                sw      $t1, 0x14($v0)
                sw      $t2, 0x18($v0)
                move    $v1, $t4
                lw      $v0, 0x28($s1)
                addiu   $t4, 0x20  # ' '
                sw      $t4, 0x68+var_40($sp)
                addiu   $t4, $v1, 0x21  # '!'
                lbu     $s2, 0x20($v1)
                sw      $t4, 0x68+var_40($sp)
                beqz    $v0, loc_1284C
                sw      $zero, 0x6C($s1)
                lw      $v0, 0xF8($s1)
                lui     $v1, 1
                and     $v0, $v1
                beqz    $v0, loc_12850
                la      $t9, ssl_get_prev_session
                la      $t9, ssl_get_new_session

loc_12728:                               # CODE XREF: ssl3_get_client_hello+3B0↓j
                move    $a0, $s1
                jalr    $t9 ; ssl_get_new_session
                li      $a1, 1
                beqz    $v0, loc_12880
                lw      $gp, 0x68+var_50($sp)

loc_1273C:                               # CODE XREF: ssl3_get_client_hello:loc_128CC↓j
                lw      $t4, 0x68+var_40($sp)
                lw      $v1, 0($s1)
                addu    $t4, $s2
                li      $v0, 0xFEFF
                beq     $v1, $v0, loc_12CC0
                sw      $t4, 0x68+var_40($sp)
                li      $v0, 0x100
                beq     $v1, $v0, loc_12CC0
                li      $s4, 0xFFFFFFFF

loc_12760:                               # CODE XREF: ssl3_get_client_hello+83C↓j
                lbu     $v0, 0($t4)
                lbu     $v1, 1($t4)
                sll     $v0, 8
                addiu   $t4, 2
                or      $s0, $v1, $v0
                bnez    $s0, loc_12784
                sw      $t4, 0x68+var_40($sp)
                bnez    $s2, loc_12C28
                la      $t9, ERR_put_error

loc_12784:                               # CODE XREF: ssl3_get_client_hello+2AC↑j
                addu    $s6, $s5, $s3
                addu    $v0, $t4, $s0
                sltu    $v0, $s6
                beqz    $v0, loc_12C54
                la      $t9, ERR_put_error
                blez    $s0, loc_127C0
                la      $t9, ssl_bytes_to_cipher_list
                move    $a1, $t4
                move    $a0, $s1
                move    $a2, $s0
                jalr    $t9 ; ssl_bytes_to_cipher_list
                addiu   $a3, $sp, 0x68+var_3C
                beqz    $v0, loc_125F0
                lw      $gp, 0x68+var_50($sp)
                lw      $t4, 0x68+var_40($sp)

loc_127C0:                               # CODE XREF: ssl3_get_client_hello+2D0↑j
                lw      $v0, 0x6C($s1)
                addu    $t4, $s0
                beqz    $v0, loc_128D8
                sw      $t4, 0x68+var_40($sp)
                blez    $s0, loc_128D8
                move    $s0, $zero
                lw      $v1, 0xC0($s1)
                lw      $v0, 0xAC($v1)
                b       loc_127FC
                lw      $s2, 8($v0)
 # ---------------------------------------------------------------------------

loc_127E8:                               # CODE XREF: ssl3_get_client_hello+350↓j
                jalr    $t9 ; sk_value
                lw      $a0, 0x68+var_3C($sp)
                lw      $v1, 8($v0)
                beq     $v1, $s2, loc_128D4
                lw      $gp, 0x68+var_50($sp)

loc_127FC:                               # CODE XREF: ssl3_get_client_hello+318↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                lw      $a0, 0x68+var_3C($sp)
                lw      $gp, 0x68+var_50($sp)
                slt     $v0, $s0, $v0
                move    $a1, $s0
                addiu   $s0, 1
                bnez    $v0, loc_127E8
                la      $t9, sk_value
                la      $t9, ERR_put_error
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0xD7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_1284C:                               # CODE XREF: ssl3_get_client_hello+240↑j
                la      $t9, ssl_get_prev_session

loc_12850:                               # CODE XREF: ssl3_get_client_hello+254↑j
                lw      $a1, 0x68+var_40($sp)
                move    $a0, $s1
                move    $a2, $s2
                jalr    $t9 ; ssl_get_prev_session
                addu    $a3, $s5, $s3
                move    $v1, $v0
                li      $v0, 1
                beq     $v1, $v0, loc_128CC
                lw      $gp, 0x68+var_50($sp)
                li      $v0, 0xFFFFFFFF
                bne     $v1, $v0, loc_12728
                la      $t9, ssl_get_new_session

loc_12880:                               # CODE XREF: ssl3_get_client_hello+26C↑j
                b       loc_125F0
                li      $s4, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_12888:                               # CODE XREF: ssl3_get_client_hello+88↑j
                move    $s4, $s3
                move    $v0, $s4
                lw      $ra, 0x68+var_4($sp)
                lw      $fp, 0x68+var_8($sp)
                lw      $s7, 0x68+var_C($sp)
                lw      $s6, 0x68+var_10($sp)
                lw      $s5, 0x68+var_14($sp)
                lw      $s4, 0x68+var_18($sp)
                lw      $s3, 0x68+var_1C($sp)
                lw      $s2, 0x68+var_20($sp)
                lw      $s1, 0x68+var_24($sp)
                lw      $s0, 0x68+var_28($sp)
                jr      $ra
                addiu   $sp, 0x68
 # ---------------------------------------------------------------------------

loc_128C0:                               # CODE XREF: ssl3_get_client_hello+48↑j
                li      $v0, 0x2111
                b       loc_12518
                sw      $v0, 0x34($a0)
 # ---------------------------------------------------------------------------

loc_128CC:                               # CODE XREF: ssl3_get_client_hello+3A4↑j
                b       loc_1273C
                sw      $v1, 0x6C($s1)
 # ---------------------------------------------------------------------------

loc_128D4:                               # CODE XREF: ssl3_get_client_hello+32C↑j
                lw      $t4, 0x68+var_40($sp)

loc_128D8:                               # CODE XREF: ssl3_get_client_hello+300↑j
                                         # ssl3_get_client_hello+308↑j
                lbu     $s7, 0($t4)
                sw      $t4, 0x68+var_30($sp)
                addiu   $t4, 1
                addu    $a1, $t4, $s7
                sltu    $v0, $s6, $a1
                move    $fp, $t4
                bnez    $v0, loc_12C50
                sw      $t4, 0x68+var_40($sp)
                beqz    $s7, loc_12DA4
                lw      $v1, 0x68+var_30($sp)
                lbu     $v0, 1($v1)
                beqz    $v0, loc_12924
                addiu   $v0, $v1, -1
                addu    $a0, $v0, $s7

loc_12910:                               # CODE XREF: ssl3_get_client_hello+454↓j
                beq     $v1, $a0, loc_12DA8
                la      $t9, ERR_put_error
                lbu     $v0, 2($v1)
                bnez    $v0, loc_12910
                addiu   $v1, 1

loc_12924:                               # CODE XREF: ssl3_get_client_hello+43C↑j
                lw      $v0, 0($s1)
                slti    $v0, 0x300
                bnez    $v0, loc_1295C
                sw      $a1, 0x68+var_40($sp)
                la      $t9, ssl_parse_clienthello_tlsext
                addiu   $v0, $sp, 0x68+var_44
                sw      $v0, 0x68+var_58($sp)
                move    $a2, $s5
                move    $a3, $s3
                move    $a0, $s1
                jalr    $t9 ; ssl_parse_clienthello_tlsext
                addiu   $a1, $sp, 0x68+var_40
                beqz    $v0, loc_12F38
                lw      $gp, 0x68+var_50($sp)

loc_1295C:                               # CODE XREF: ssl3_get_client_hello+464↑j
                la      $t9, ssl_check_clienthello_tlsext
                jalr    $t9 ; ssl_check_clienthello_tlsext
                move    $a0, $s1
                blez    $v0, loc_12F14
                lw      $gp, 0x68+var_50($sp)
                la      $t9, time
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x68+var_50($sp)
                lw      $a0, 0x58($s1)
                srl     $a1, $v0, 16
                la      $t9, RAND_pseudo_bytes
                srl     $v1, $v0, 24
                srl     $a2, $v0, 8
                sb      $a1, 0xA1($a0)
                sb      $v1, 0xA0($a0)
                sb      $a2, 0xA2($a0)
                sb      $v0, 0xA3($a0)
                li      $a1, 0x1C
                jalr    $t9 ; RAND_pseudo_bytes
                addiu   $a0, 0xA4
                blez    $v0, loc_12F5C
                lw      $gp, 0x68+var_50($sp)
                lw      $v0, 0x6C($s1)
                bnez    $v0, loc_12AA4
                nop
                lw      $v0, 0($s1)
                slti    $v0, 0x301
                bnez    $v0, loc_12AA4
                nop
                lw      $t9, 0x150($s1)
                beqz    $t9, loc_12AA4
                li      $v0, 0x30  # '0'
                lw      $a1, 0xC0($s1)
                lw      $a0, 0x154($s1)
                addiu   $v1, $sp, 0x68+var_38
                lw      $a3, 0x68+var_3C($sp)
                sw      $v0, 0x10($a1)
                addiu   $a2, $a1, 0x10
                sw      $a0, 0x68+var_54($sp)
                sw      $v1, 0x68+var_58($sp)
                sw      $zero, 0x68+var_38($sp)
                move    $a0, $s1
                jalr    $t9
                addiu   $a1, 0x14
                beqz    $v0, loc_12AA4
                lw      $gp, 0x68+var_50($sp)
                lw      $a0, 0xC0($s1)
                lw      $s0, 0x68+var_3C($sp)
                lw      $v1, 0x68+var_38($sp)
                li      $v0, 1
                sw      $s0, 0xB4($a0)
                sw      $v0, 0x6C($s1)
                sw      $zero, 0x98($a0)
                beqz    $v1, loc_13048
                sw      $zero, 0x68+var_3C($sp)
                sw      $v1, 0x68+var_38($sp)

loc_12A40:                               # CODE XREF: ssl3_get_client_hello+BB4↓j
                lw      $v0, 0x74($s1)
                beqz    $v0, loc_12A5C
                sw      $v1, 0xAC($a0)
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                move    $a0, $v0
                lw      $gp, 0x68+var_50($sp)

loc_12A5C:                               # CODE XREF: ssl3_get_client_hello+57C↑j
                lw      $a0, 0x78($s1)
                beqz    $a0, loc_12A74
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x68+var_50($sp)

loc_12A74:                               # CODE XREF: ssl3_get_client_hello+598↑j
                lw      $v0, 0xC0($s1)
                la      $t9, sk_dup
                jalr    $t9 ; sk_dup
                lw      $a0, 0xB4($v0)
                lw      $gp, 0x68+var_50($sp)
                lw      $v1, 0xC0($s1)
                sw      $v0, 0x74($s1)
                la      $t9, sk_dup
                jalr    $t9 ; sk_dup
                lw      $a0, 0xB4($v1)
                lw      $gp, 0x68+var_50($sp)
                sw      $v0, 0x78($s1)

loc_12AA4:                               # CODE XREF: ssl3_get_client_hello+4F4↑j
                                         # ssl3_get_client_hello+504↑j ...
                lw      $a0, 0xC0($s1)
                lw      $v0, 0x58($s1)
                lw      $s2, 0xA8($a0)
                beqz    $s2, loc_12DD4
                sw      $zero, 0x384($v0)
                lw      $v0, 0xF8($s1)
                lui     $v1, 2
                and     $v0, $v1
                bnez    $v0, loc_12F68
                li      $v0, 0x50  # 'P'
                move    $s3, $zero
                b       loc_12AF4
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_12AD8:                               # CODE XREF: ssl3_get_client_hello+64C↓j
                lw      $v0, 0xDC($s1)
                jalr    $t9 ; sk_value
                lw      $a0, 0x98($v0)
                move    $s3, $v0
                lw      $v0, 0($v0)
                beq     $v0, $s2, loc_12F98
                lw      $gp, 0x68+var_50($sp)

loc_12AF4:                               # CODE XREF: ssl3_get_client_hello+608↑j
                lw      $v0, 0xDC($s1)
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                lw      $a0, 0x98($v0)
                lw      $gp, 0x68+var_50($sp)
                slt     $v0, $s0, $v0
                move    $a1, $s0
                addiu   $s0, 1
                bnez    $v0, loc_12AD8
                la      $t9, sk_value
                lw      $v0, 0x58($s1)
                lw      $v0, 0x384($v0)

loc_12B24:                               # CODE XREF: ssl3_get_client_hello+AD8↓j
                beqz    $v0, loc_13020
                li      $v0, 0x50  # 'P'
                lbu     $v0, 0x68+var_68($fp)
                beq     $v0, $s2, loc_12B58
                nop
                lw      $v1, 0x68+var_30($sp)
                addiu   $v0, $v1, -1
                addu    $a0, $v0, $s7

loc_12B44:                               # CODE XREF: ssl3_get_client_hello+688↓j
                beq     $v1, $a0, loc_12FA8
                li      $v0, 0x2F  # '/'
                lbu     $v0, 2($v1)
                bne     $v0, $s2, loc_12B44
                addiu   $v1, 1

loc_12B58:                               # CODE XREF: ssl3_get_client_hello+668↑j
                                         # ssl3_get_client_hello:loc_12E7C↓j ...
                lw      $v0, 0x6C($s1)
                bnez    $v0, loc_12E8C
                nop
                beqz    $s3, loc_12E84
                lw      $a0, 0xC0($s1)
                lw      $v0, 0($s3)

loc_12B70:                               # CODE XREF: ssl3_get_client_hello+920↓j
                                         # ssl3_get_client_hello:loc_12E84↓j
                lw      $v1, 0xB4($a0)
                beqz    $v1, loc_12B90
                sw      $v0, 0xA8($a0)
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                move    $a0, $v1
                lw      $gp, 0x68+var_50($sp)
                lw      $a0, 0xC0($s1)

loc_12B90:                               # CODE XREF: ssl3_get_client_hello+6AC↑j
                lw      $s0, 0x68+var_3C($sp)
                beqz    $s0, loc_12FE0
                sw      $s0, 0xB4($a0)
                la      $t9, SSL_get_ciphers
                move    $a0, $s1
                jalr    $t9 ; SSL_get_ciphers
                sw      $zero, 0x68+var_3C($sp)
                lw      $gp, 0x68+var_50($sp)
                la      $t9, ssl3_choose_cipher
                move    $a1, $s0
                move    $a2, $v0
                jalr    $t9 ; ssl3_choose_cipher
                move    $a0, $s1
                move    $v1, $v0
                beqz    $v0, loc_12C94
                lw      $gp, 0x68+var_50($sp)

loc_12BD0:                               # CODE XREF: ssl3_get_client_hello:loc_12F90↓j
                lw      $v0, 0x58($s1)
                sw      $v1, 0x344($v0)

loc_12BD8:                               # CODE XREF: ssl3_get_client_hello+A44↓j
                                         # ssl3_get_client_hello+B50↓j ...
                lw      $a0, 0($s1)
                li      $v0, 3
                sra     $v1, $a0, 8
                bne     $v1, $v0, loc_12C7C
                la      $t9, ssl3_digest_cached_records
                slti    $v0, $a0, 0x303
                bnez    $v0, loc_12C7C
                nop
                lw      $v0, 0xC8($s1)
                andi    $v0, 1
                beqz    $v0, loc_12C7C
                nop

loc_12C08:                               # CODE XREF: ssl3_get_client_hello+7C4↓j
                bgez    $s4, loc_125F4
                lw      $a0, 0x68+var_3C($sp)
                b       loc_125F4
                li      $s4, 1
 # ---------------------------------------------------------------------------

loc_12C18:                               # CODE XREF: ssl3_get_client_hello+19C↑j
                b       loc_12684
                lw      $t4, 0x68+var_40($sp)
 # ---------------------------------------------------------------------------

loc_12C20:                               # CODE XREF: ssl3_get_client_hello+FC↑j
                b       loc_125CC
                sw      $a0, 0($s1)
 # ---------------------------------------------------------------------------

loc_12C28:                               # CODE XREF: ssl3_get_client_hello+2B4↑j
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0xB7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_12C50:                               # CODE XREF: ssl3_get_client_hello+428↑j
                la      $t9, ERR_put_error

loc_12C54:                               # CODE XREF: ssl3_get_client_hello+2C8↑j
                li      $v0, 0x32  # '2'
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0x9F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_12C7C:                               # CODE XREF: ssl3_get_client_hello+71C↑j
                                         # ssl3_get_client_hello+728↑j ...
                jalr    $t9 ; ssl3_digest_cached_records
                move    $a0, $s1
                beqz    $v0, loc_125D8
                lw      $gp, 0x68+var_50($sp)
                b       loc_12C08
                nop
 # ---------------------------------------------------------------------------

loc_12C94:                               # CODE XREF: ssl3_get_client_hello+700↑j
                                         # ssl3_get_client_hello+BAC↓j
                la      $t9, ERR_put_error
                li      $v0, 0x28  # '('
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0xC1
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_12CC0:                               # CODE XREF: ssl3_get_client_hello+284↑j
                                         # ssl3_get_client_hello+290↑j
                lbu     $s0, 0($t4)
                la      $t9, SSL_ctrl
                addiu   $t4, 1
                sw      $t4, 0x68+var_40($sp)
                move    $a0, $s1
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                jalr    $t9 ; SSL_ctrl
                move    $a3, $zero
                andi    $v0, 0x2000
                beqz    $v0, loc_12CF8
                lw      $gp, 0x68+var_50($sp)
                bnez    $s0, loc_12D0C
                la      $t9, memcpy

loc_12CF8:                               # CODE XREF: ssl3_get_client_hello+820↑j
                li      $s4, 0xFFFFFFFF

loc_12CFC:                               # CODE XREF: ssl3_get_client_hello:loc_12D4C↓j
                lw      $t4, 0x68+var_40($sp)
                addu    $t4, $s0
                b       loc_12760
                sw      $t4, 0x68+var_40($sp)
 # ---------------------------------------------------------------------------

loc_12D0C:                               # CODE XREF: ssl3_get_client_hello+828↑j
                lw      $a0, 0x5C($s1)
                lw      $a1, 0x68+var_40($sp)
                addiu   $a0, 0x104
                jalr    $t9 ; memcpy
                move    $a2, $s0
                lw      $v1, 0xDC($s1)
                lw      $t9, 0x7C($v1)
                beqz    $t9, loc_12D54
                lw      $gp, 0x68+var_50($sp)
                lw      $a1, 0x5C($s1)
                move    $a0, $s1
                addiu   $a1, 0x104
                jalr    $t9
                move    $a2, $s0
                beqz    $v0, loc_12D74
                lw      $gp, 0x68+var_50($sp)

loc_12D4C:                               # CODE XREF: ssl3_get_client_hello+8A4↓j
                b       loc_12CFC
                li      $s4, 2
 # ---------------------------------------------------------------------------

loc_12D54:                               # CODE XREF: ssl3_get_client_hello+860↑j
                lw      $a1, 0x5C($s1)
                la      $t9, memcmp
                lw      $a2, 0x204($a1)
                addiu   $a0, $a1, 0x104
                jalr    $t9 ; memcmp
                addiu   $a1, 4
                beqz    $v0, loc_12D4C
                lw      $gp, 0x68+var_50($sp)

loc_12D74:                               # CODE XREF: ssl3_get_client_hello+87C↑j
                la      $t9, ERR_put_error
                li      $v0, 0x28  # '('
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0x134
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x68+var_50($sp)
                b       loc_125D8
                li      $s4, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_12DA4:                               # CODE XREF: ssl3_get_client_hello+430↑j
                la      $t9, ERR_put_error

loc_12DA8:                               # CODE XREF: ssl3_get_client_hello:loc_12910↑j
                li      $v0, 0x32  # '2'
                sw      $a1, 0x68+var_40($sp)
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0xBB
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_12DD4:                               # CODE XREF: ssl3_get_client_hello+5E8↑j
                lw      $v0, 0x6C($s1)
                bnez    $v0, loc_12E90
                lui     $v1, 2
                lw      $v0, 0xF8($s1)
                and     $v0, $v1
                bnez    $v0, loc_12B70
                move    $v0, $zero
                lw      $v0, 0xDC($s1)
                lw      $v0, 0x98($v0)
                beqz    $v0, loc_12E84
                nop
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $v0
                move    $s2, $v0
                blez    $v0, loc_12E7C
                lw      $gp, 0x68+var_50($sp)
                move    $s0, $zero

loc_12E1C:                               # CODE XREF: ssl3_get_client_hello+9AC↓j
                lw      $v0, 0xDC($s1)
                la      $t9, sk_value
                lw      $a0, 0x98($v0)
                jalr    $t9 ; sk_value
                move    $a1, $s0
                move    $a2, $v0
                lw      $a1, 0($v0)
                lbu     $v0, 0x68+var_68($fp)
                beq     $v0, $a1, loc_12FD0
                lw      $gp, 0x68+var_50($sp)
                b       loc_12E58
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_12E4C:                               # CODE XREF: ssl3_get_client_hello+9A0↓j
                lbu     $v0, 1($v1)
                beq     $v0, $a1, loc_12FD0
                nop

loc_12E58:                               # CODE XREF: ssl3_get_client_hello+97C↑j
                lw      $v0, 0x68+var_30($sp)
                addiu   $a0, 1
                addu    $v1, $a0, $v0
                slt     $v0, $a0, $s7
                bnez    $v0, loc_12E4C
                nop
                addiu   $s0, 1
                bne     $s0, $s2, loc_12E1C
                nop

loc_12E7C:                               # CODE XREF: ssl3_get_client_hello+948↑j
                b       loc_12B58
                move    $s3, $zero
 # ---------------------------------------------------------------------------

loc_12E84:                               # CODE XREF: ssl3_get_client_hello+69C↑j
                                         # ssl3_get_client_hello+930↑j
                b       loc_12B70
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_12E8C:                               # CODE XREF: ssl3_get_client_hello+694↑j
                lw      $a0, 0xC0($s1)

loc_12E90:                               # CODE XREF: ssl3_get_client_hello+910↑j
                lw      $v0, 0xF8($s1)
                lui     $v1, 0x4000
                and     $v0, $v1
                beqz    $v0, loc_12F90
                move    $s0, $zero
                lw      $s2, 0xB4($a0)
                move    $s5, $zero
                b       loc_12ED8
                move    $s3, $zero
 # ---------------------------------------------------------------------------

loc_12EB4:                               # CODE XREF: ssl3_get_client_hello+A30↓j
                jalr    $t9 ; sk_value
                nop
                lw      $a0, 0x14($v0)
                lw      $v1, 0x20($v0)
                andi    $a0, 0x20
                andi    $v1, 2
                lw      $gp, 0x68+var_50($sp)
                movn    $s3, $v0, $v1
                movn    $s5, $v0, $a0

loc_12ED8:                               # CODE XREF: ssl3_get_client_hello+9E4↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s2
                lw      $gp, 0x68+var_50($sp)
                slt     $v0, $s0, $v0
                move    $a1, $s0
                move    $a0, $s2
                addiu   $s0, 1
                bnez    $v0, loc_12EB4
                la      $t9, sk_value
                beqz    $s5, loc_1300C
                nop
                lw      $v0, 0x58($s1)
                b       loc_12BD8
                sw      $s5, 0x344($v0)
 # ---------------------------------------------------------------------------

loc_12F14:                               # CODE XREF: ssl3_get_client_hello+4A0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0xE2
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125F0
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_12F38:                               # CODE XREF: ssl3_get_client_hello+48C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0xE3
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_12F5C:                               # CODE XREF: ssl3_get_client_hello+4E8↑j
                li      $v0, 0x50  # 'P'
                b       loc_125D8
                sw      $v0, 0x68+var_44($sp)
 # ---------------------------------------------------------------------------

loc_12F68:                               # CODE XREF: ssl3_get_client_hello+5FC↑j
                la      $t9, ERR_put_error
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0x154
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_12F90:                               # CODE XREF: ssl3_get_client_hello+9D4↑j
                b       loc_12BD0
                lw      $v1, 0xAC($a0)
 # ---------------------------------------------------------------------------

loc_12F98:                               # CODE XREF: ssl3_get_client_hello+624↑j
                lw      $v0, 0x58($s1)
                sw      $s3, 0x384($v0)
                b       loc_12B24
                move    $v0, $s3
 # ---------------------------------------------------------------------------

loc_12FA8:                               # CODE XREF: ssl3_get_client_hello:loc_12B44↑j
                la      $t9, ERR_put_error
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0x156
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_12FD0:                               # CODE XREF: ssl3_get_client_hello+974↑j
                                         # ssl3_get_client_hello+988↑j
                lw      $v0, 0x58($s1)
                move    $s3, $a2
                b       loc_12B58
                sw      $a2, 0x384($v0)
 # ---------------------------------------------------------------------------

loc_12FE0:                               # CODE XREF: ssl3_get_client_hello+6CC↑j
                la      $t9, ERR_put_error
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0xB6
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_1300C:                               # CODE XREF: ssl3_get_client_hello+A38↑j
                beqz    $s3, loc_13084
                nop
                lw      $v0, 0x58($s1)
                b       loc_12BD8
                sw      $s3, 0x344($v0)
 # ---------------------------------------------------------------------------

loc_13020:                               # CODE XREF: ssl3_get_client_hello:loc_12B24↑j
                la      $t9, ERR_put_error
                sw      $v0, 0x68+var_44($sp)
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x8A
                li      $a2, 0x155
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_125D8
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_13048:                               # CODE XREF: ssl3_get_client_hello+56C↑j
                la      $t9, SSL_get_ciphers
                jalr    $t9 ; SSL_get_ciphers
                move    $a0, $s1
                lw      $gp, 0x68+var_50($sp)
                la      $t9, ssl3_choose_cipher
                move    $a1, $s0
                move    $a2, $v0
                jalr    $t9 ; ssl3_choose_cipher
                move    $a0, $s1
                move    $v1, $v0
                lw      $gp, 0x68+var_50($sp)
                beqz    $v0, loc_12C94
                sw      $v0, 0x68+var_38($sp)
                b       loc_12A40
                lw      $a0, 0xC0($s1)
 # ---------------------------------------------------------------------------

loc_13084:                               # CODE XREF: ssl3_get_client_hello:loc_1300C↑j
                lw      $v0, 0xC0($s1)
                lw      $a0, 0x58($s1)
                lw      $v1, 0xAC($v0)
                b       loc_12BD8
                sw      $v1, 0x344($a0)
 # End of function ssl3_get_client_hello


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_accept
ssl3_accept:                             # DATA XREF: LOAD:00002668↑o
                                         # ssl3_accept+DD4↓o ...

var_40          = -0x40
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4F2B8
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_8($sp)
                sw      $s7, 0x50+var_C($sp)
                sw      $s6, 0x50+var_10($sp)
                sw      $s5, 0x50+var_14($sp)
                sw      $s4, 0x50+var_18($sp)
                sw      $s3, 0x50+var_1C($sp)
                sw      $s2, 0x50+var_20($sp)
                sw      $s1, 0x50+var_24($sp)
                sw      $s0, 0x50+var_28($sp)
                sw      $gp, 0x50+var_38($sp)
                la      $t9, time
                move    $s2, $a0
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x50+var_38($sp)
                la      $t9, RAND_add
                sw      $v0, 0x50+var_30($sp)
                addiu   $a0, $sp, 0x50+var_30
                li      $a1, 4
                move    $a2, $zero
                jalr    $t9 ; RAND_add
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x50+var_38($sp)
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $s6, 0xD0($s2)
                lw      $gp, 0x50+var_38($sp)
                beqz    $s6, loc_13CE4
                sw      $zero, 0($v0)

loc_13130:                               # CODE XREF: ssl3_accept+C50↓j
                lw      $v0, 0x1C($s2)
                la      $t9, SSL_state
                addiu   $v0, 1
                sw      $v0, 0x1C($s2)
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x3000
                beqz    $v0, loc_13290
                lw      $gp, 0x50+var_38($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x4000
                bnez    $v0, loc_13290
                lw      $gp, 0x50+var_38($sp)

loc_1316C:                               # CODE XREF: ssl3_accept+204↓j
                lw      $v0, 0x98($s2)
                beqz    $v0, loc_13F18
                la      $t9, ERR_put_error
                lw      $v0, 0x170($s2)
                beqz    $v0, loc_13194
                nop
                lw      $v0, 0x174($s2)
                sw      $zero, 0x170($s2)
                addiu   $v0, 1
                sw      $v0, 0x174($s2)

loc_13194:                               # CODE XREF: ssl3_accept+E4↑j
                lw      $s0, 0x34($s2)
                addiu   $s7, $sp, 0x50+var_2C
                slti    $s5, $s0, 0x2182

loc_131A0:                               # CODE XREF: ssl3_accept+3A4↓j
                                         # ssl3_accept+3CC↓j
                beqz    $s5, loc_13214
                slti    $v0, $s0, 0x21E2
                slti    $v0, $s0, 0x2180

loc_131AC:                               # CODE XREF: ssl3_accept+170↓j
                bnez    $v0, loc_13378
                slti    $v0, $s0, 0x2132
                la      $t9, ssl3_check_client_hello
                jalr    $t9 ; ssl3_check_client_hello
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                li      $v0, 2
                beq     $s1, $v0, loc_13D28
                li      $v0, 0x2112
                lw      $a2, 0x58($s2)
                lw      $v0, 0x388($a2)
                bnez    $v0, loc_13BF4
                la      $t9, ssl3_get_client_certificate

loc_131E8:                               # CODE XREF: ssl3_accept+B70↓j
                li      $v0, 0x2190
                sw      $v0, 0x34($s2)
                sw      $zero, 0x44($s2)
                lw      $v0, 0x34C($a2)
                beqz    $v0, loc_1341C
                move    $a1, $zero

loc_13200:                               # CODE XREF: ssl3_accept:loc_13414↓j
                                         # ssl3_accept:loc_1341C↓j ...
                lw      $s0, 0x34($s2)
                slti    $s5, $s0, 0x2182
                bnez    $s5, loc_131AC
                slti    $v0, $s0, 0x2180
                slti    $v0, $s0, 0x21E2

loc_13214:                               # CODE XREF: ssl3_accept:loc_131A0↑j
                beqz    $v0, loc_133D0
                slti    $v0, $s0, 0x2212
                slti    $v0, $s0, 0x21E0
                bnez    $v0, loc_1346C
                slti    $v0, $s0, 0x21A2
                lw      $v0, 8($s2)
                la      $t9, ssl3_send_finished
                lw      $v1, 0x64($v0)
                move    $a0, $s2
                lw      $v0, 0x2C($v1)
                lw      $a3, 0x28($v1)
                li      $a1, 0x21E0
                sw      $v0, 0x50+var_40($sp)
                jalr    $t9 ; ssl3_send_finished
                li      $a2, 0x21E1
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x6C($s2)
                li      $v0, 0x2100
                beqz    $v1, loc_13B7C
                sw      $v0, 0x34($s2)
                lw      $a2, 0x58($s2)
                lw      $v0, 0x414($a2)
                beqz    $v0, loc_13D38
                li      $v0, 0x21C0
                li      $v0, 0x2210
                sw      $v0, 0x348($a2)
                move    $a1, $zero

loc_13288:                               # CODE XREF: ssl3_accept:loc_133C8↓j
                                         # ssl3_accept+418↓j ...
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_13290:                               # CODE XREF: ssl3_accept+B4↑j
                                         # ssl3_accept+CC↑j
                la      $t9, SSL_clear
                jalr    $t9 ; SSL_clear
                move    $a0, $s2
                b       loc_1316C
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_132A4:                               # CODE XREF: ssl3_accept+2EC↓j
                beqz    $v0, loc_1394C
                slti    $v0, $s0, 0x2120
                slti    $v0, $s0, 0x2110
                beqz    $v0, loc_13980
                li      $s3, 4
                li      $v0, 0x2000
                beq     $s0, $v0, loc_13588
                slti    $v0, $s0, 0x2001
                beqz    $v0, loc_13D44
                li      $v0, 0x2003
                li      $v0, 3
                bne     $s0, $v0, loc_134D4
                la      $t9, ERR_put_error
                la      $t9, ssl3_cleanup_key_block
                jalr    $t9 ; ssl3_cleanup_key_block
                move    $a0, $s2
                lw      $gp, 0x50+var_38($sp)
                la      $t9, BUF_MEM_free
                jalr    $t9 ; BUF_MEM_free
                lw      $a0, 0x3C($s2)
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ssl_free_wbio_buffer
                sw      $zero, 0x3C($s2)
                jalr    $t9 ; ssl_free_wbio_buffer
                move    $a0, $s2
                lw      $v1, 0x178($s2)
                li      $v0, 2
                lw      $gp, 0x50+var_38($sp)
                beq     $v1, $v0, loc_13E48
                sw      $zero, 0x44($s2)
                li      $s1, 1

loc_13320:                               # CODE XREF: ssl3_accept+12C↑j
                                         # ssl3_accept+1BC↑j ...
                lw      $v0, 0x1C($s2)
                addiu   $v0, -1
                beqz    $s6, loc_13348
                sw      $v0, 0x1C($s2)

loc_13330:                               # CODE XREF: ssl3_accept+E08↓j
                move    $a0, $s2
                li      $a1, 0x2002
                move    $t9, $s6
                jalr    $t9
                move    $a2, $s1
                lw      $gp, 0x50+var_38($sp)

loc_13348:                               # CODE XREF: ssl3_accept+290↑j
                                         # ssl3_accept+E3C↓j ...
                move    $v0, $s1
                lw      $ra, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_13378:                               # CODE XREF: ssl3_accept:loc_131AC↑j
                beqz    $v0, loc_134F8
                slti    $v0, $s0, 0x2152
                slti    $v0, $s0, 0x2130
                bnez    $v0, loc_132A4
                slti    $v0, $s0, 0x2113
                la      $t9, ssl3_send_server_hello
                jalr    $t9 ; ssl3_send_server_hello
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x6C($s2)
                beqz    $v0, loc_13B90
                li      $v0, 0x2140

loc_133B0:                               # CODE XREF: ssl3_accept+A64↓j
                lw      $v0, 0x138($s2)
                beqz    $v0, loc_13B9C
                li      $v0, 0x21D0
                li      $v0, 0x21F0
                lw      $a2, 0x58($s2)
                sw      $v0, 0x34($s2)

loc_133C8:                               # CODE XREF: ssl3_accept+A70↓j
                                         # ssl3_accept+AFC↓j ...
                b       loc_13288
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_133D0:                               # CODE XREF: ssl3_accept:loc_13214↑j
                beqz    $v0, loc_134B8
                li      $v0, 0x4000
                slti    $v0, $s0, 0x2210
                bnez    $v0, loc_13650
                slti    $v0, $s0, 0x21F0
                la      $t9, ssl3_get_next_proto
                jalr    $t9 ; ssl3_get_next_proto
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                li      $v0, 0x21C0
                lw      $a2, 0x58($s2)
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                sw      $zero, 0x44($s2)

loc_13410:                               # CODE XREF: ssl3_accept:loc_13288↑j
                                         # ssl3_accept+4E4↓j ...
                lw      $v0, 0x34C($a2)

loc_13414:                               # CODE XREF: ssl3_accept+85C↓j
                bnez    $v0, loc_13200
                nop

loc_1341C:                               # CODE XREF: ssl3_accept+160↑j
                bnez    $a1, loc_13200
                nop
                lw      $v0, 0xE0($s2)
                bnez    $v0, loc_137A4
                la      $t9, BIO_ctrl

loc_13430:                               # CODE XREF: ssl3_accept+720↓j
                beqz    $s6, loc_13200
                nop
                lw      $s1, 0x34($s2)
                beq     $s0, $s1, loc_131A0
                li      $a1, 0x2001
                sw      $s0, 0x34($s2)
                move    $a0, $s2
                move    $t9, $s6
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x50+var_38($sp)
                move    $s0, $s1
                slti    $s5, $s1, 0x2182
                b       loc_131A0
                sw      $s1, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_1346C:                               # CODE XREF: ssl3_accept+188↑j
                beqz    $v0, loc_136A4
                slti    $v0, $s0, 0x21C0
                slti    $v0, $s0, 0x21A0
                bnez    $v0, loc_137F4
                addiu   $v0, $s0, -0x2190
                la      $t9, ssl3_get_cert_verify
                jalr    $t9 ; ssl3_get_cert_verify
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)

loc_13498:                               # CODE XREF: ssl3_accept+784↓j
                lw      $a2, 0x58($s2)
                lw      $v0, 0x414($a2)
                beqz    $v0, loc_13B3C
                li      $v0, 0x21C0
                li      $v0, 0x2210
                move    $a1, $zero
                b       loc_13288
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_134B8:                               # CODE XREF: ssl3_accept:loc_133D0↑j
                beq     $s0, $v0, loc_13588
                li      $v0, 0x6000
                beq     $s0, $v0, loc_13588
                li      $v0, 0x3004
                beq     $s0, $v0, loc_13584
                li      $v0, 1
                la      $t9, ERR_put_error

loc_134D4:                               # CODE XREF: ssl3_accept+238↑j
                                         # ssl3_accept:loc_13650↓j ...
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x80
                li      $a2, 0xFF

loc_134E4:                               # CODE XREF: ssl3_accept+DA8↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                b       loc_13320
                li      $s1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_134F8:                               # CODE XREF: ssl3_accept:loc_13378↑j
                beqz    $v0, loc_1374C
                slti    $v0, $s0, 0x2160
                slti    $v0, $s0, 0x2150
                bnez    $v0, loc_138FC
                addiu   $v0, $s0, -0x2140
                lw      $a2, 0x58($s2)
                lw      $v0, 0xF8($s2)
                lui     $v1, 0x20  # ' '
                lw      $a0, 0x344($a2)
                and     $v0, $v1
                beqz    $v0, loc_13B48
                lw      $v1, 0xC($a0)
                li      $v0, 1
                bnez    $v0, loc_13B58
                sw      $v0, 0x368($a2)
                andi    $v0, $v1, 0x48E

loc_13538:                               # CODE XREF: ssl3_accept+AB8↓j
                bnez    $v0, loc_13B5C
                la      $t9, ssl3_send_server_key_exchange
                andi    $v0, $v1, 1
                beqz    $v0, loc_13574
                li      $a1, 1
                lw      $v0, 0x98($s2)
                lw      $a0, 0x24($v0)
                beqz    $a0, loc_13B5C
                nop
                lw      $v1, 0x344($a2)
                lw      $v0, 0x20($v1)
                andi    $v0, 2
                bnez    $v0, loc_13DF0
                nop

loc_13570:                               # CODE XREF: ssl3_accept+D88↓j
                li      $a1, 1

loc_13574:                               # CODE XREF: ssl3_accept+4AC↑j
                                         # ssl3_accept+ADC↓j
                li      $v0, 0x2160
                sw      $v0, 0x34($s2)
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_13584:                               # CODE XREF: ssl3_accept+430↑j
                sw      $v0, 0x178($s2)

loc_13588:                               # CODE XREF: ssl3_accept+224↑j
                                         # ssl3_accept:loc_134B8↑j ...
                li      $v0, 1
                beqz    $s6, loc_135AC
                sw      $v0, 0x24($s2)
                move    $a0, $s2
                li      $a1, 0x10
                move    $t9, $s6
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x50+var_38($sp)

loc_135AC:                               # CODE XREF: ssl3_accept+4F4↑j
                lw      $v0, 0($s2)
                li      $v1, 3
                sra     $v0, 8
                bne     $v0, $v1, loc_13EDC
                li      $v0, 0x2000
                lw      $v1, 0x3C($s2)
                beqz    $v1, loc_13CF0
                sw      $v0, 4($s2)

loc_135CC:                               # CODE XREF: ssl3_accept+C88↓j
                la      $t9, ssl3_setup_buffers
                jalr    $t9 ; ssl3_setup_buffers
                move    $a0, $s2
                beqz    $v0, loc_13C90
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                li      $v1, 0xFFFFFFBF
                lw      $v0, 0($a2)
                lw      $a0, 0x34($s2)
                and     $v0, $v1
                sw      $v0, 0($a2)
                li      $v0, 0x3004
                beq     $a0, $v0, loc_137C8
                sw      $zero, 0x44($s2)
                la      $t9, ssl_init_wbio_buffer
                move    $a0, $s2
                jalr    $t9 ; ssl_init_wbio_buffer
                li      $a1, 1
                beqz    $v0, loc_13C90
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ssl3_init_finished_mac
                jalr    $t9 ; ssl3_init_finished_mac
                move    $a0, $s2
                lw      $a0, 0xDC($s2)
                li      $v0, 0x2110
                lw      $gp, 0x50+var_38($sp)
                sw      $v0, 0x34($s2)
                lw      $v1, 0x40($a0)
                lw      $a2, 0x58($s2)
                addiu   $v1, 1
                move    $a1, $zero
                b       loc_13410
                sw      $v1, 0x40($a0)
 # ---------------------------------------------------------------------------

loc_13650:                               # CODE XREF: ssl3_accept+344↑j
                bnez    $v0, loc_134D4
                la      $t9, ERR_put_error
                slti    $v0, $s0, 0x21F2
                bnez    $v0, loc_13B10
                la      $t9, ssl3_send_newsession_ticket
                addiu   $v0, $s0, -0x2200
                sltiu   $v0, 2
                beqz    $v0, loc_134D4
                la      $t9, ERR_put_error
                la      $t9, ssl3_send_cert_status
                jalr    $t9 ; ssl3_send_cert_status
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x2150
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_136A4:                               # CODE XREF: ssl3_accept:loc_1346C↑j
                bnez    $v0, loc_134D4
                la      $t9, ERR_put_error
                slti    $v0, $s0, 0x21C2
                bnez    $v0, loc_13ADC
                la      $t9, ssl3_get_finished
                addiu   $v0, $s0, -0x21D0
                sltiu   $v0, 2
                beqz    $v0, loc_134D4
                la      $t9, ERR_put_error
                lw      $v0, 8($s2)
                lw      $v1, 0x58($s2)
                lw      $a0, 0x64($v0)
                lw      $a1, 0x344($v1)
                lw      $v0, 0xC0($s2)
                lw      $t9, 8($a0)
                sw      $a1, 0xAC($v0)
                jalr    $t9
                move    $a0, $s2
                beqz    $v0, loc_13C90
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ssl3_send_change_cipher_spec
                move    $a0, $s2
                li      $a1, 0x21D0
                jalr    $t9 ; ssl3_send_change_cipher_spec
                li      $a2, 0x21D1
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 8($s2)
                li      $v1, 0x21E0
                lw      $a0, 0x64($v0)
                sw      $v1, 0x34($s2)
                lw      $t9, 0x10($a0)
                sw      $zero, 0x44($s2)
                move    $a0, $s2
                jalr    $t9
                li      $a1, 0x22  # '"'
                beqz    $v0, loc_13C90
                lw      $gp, 0x50+var_38($sp)

loc_13740:                               # CODE XREF: ssl3_accept+B8C↓j
                lw      $a2, 0x58($s2)
                b       loc_13410
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_1374C:                               # CODE XREF: ssl3_accept:loc_134F8↑j
                bnez    $v0, loc_134D4
                la      $t9, ERR_put_error
                slti    $v0, $s0, 0x2162
                bnez    $v0, loc_13A1C
                addiu   $v0, $s0, -0x2170
                sltiu   $v0, 2
                beqz    $v0, loc_134D4
                nop
                la      $t9, ssl3_send_server_done
                jalr    $t9 ; ssl3_send_server_done
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x2180
                li      $v1, 0x2100
                move    $a1, $zero
                sw      $v0, 0x348($a2)
                sw      $v1, 0x34($s2)
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_137A4:                               # CODE XREF: ssl3_accept+390↑j
                lw      $a0, 0x10($s2)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                bgtz    $v0, loc_13430
                lw      $gp, 0x50+var_38($sp)
                b       loc_13320
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_137C8:                               # CODE XREF: ssl3_accept+564↑j
                lw      $v0, 0x410($a2)
                beqz    $v0, loc_13BA8
                lui     $v1, 4

loc_137D4:                               # CODE XREF: ssl3_accept+B18↓j
                lw      $v0, 0xDC($s2)
                li      $a0, 0x2120
                lw      $v1, 0x44($v0)
                move    $a1, $zero
                addiu   $v1, 1
                sw      $v1, 0x44($v0)
                b       loc_13410
                sw      $a0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_137F4:                               # CODE XREF: ssl3_accept+3E0↑j
                sltiu   $v0, 2
                beqz    $v0, loc_134D4
                la      $t9, ERR_put_error
                la      $t9, ssl3_get_client_key_exchange
                jalr    $t9 ; ssl3_get_client_key_exchange
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                li      $v0, 2
                beq     $s1, $v0, loc_13498
                li      $v0, 3
                lw      $a0, 0($s2)
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_13C10
                slti    $v0, $a0, 0x303

loc_13834:                               # CODE XREF: ssl3_accept:loc_13C10↓j
                lw      $a2, 0x58($s2)
                li      $v0, 0x21A0
                lw      $v1, 0x178($a2)
                sw      $v0, 0x34($s2)
                bnez    $v1, loc_13DD4
                sw      $zero, 0x44($s2)

loc_1384C:                               # CODE XREF: ssl3_accept+D50↓j
                move    $s4, $zero
                move    $s3, $zero

loc_13854:                               # CODE XREF: ssl3_accept+854↓j
                lw      $v0, 0x17C($a2)
                la      $t9, EVP_MD_CTX_md
                addu    $v0, $s3, $v0
                lw      $v1, 0($v0)
                beqz    $v1, loc_138E4
                move    $a0, $v1
                lw      $v0, 8($s2)
                lw      $v1, 0x64($v0)
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $s1, 0x1C($v1)
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_type
                jalr    $t9 ; EVP_MD_type
                move    $a0, $v0
                lw      $a2, 0x58($s2)
                move    $a1, $v0
                addiu   $a2, 0x1B4
                addu    $a2, $s4
                move    $t9, $s1
                jalr    $t9
                move    $a0, $s2
                lw      $v1, 0x58($s2)
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x17C($v1)
                addu    $v0, $s3, $v0
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0($v0)
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                addu    $s4, $v0
                bltz    $v0, loc_13C90
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)

loc_138E4:                               # CODE XREF: ssl3_accept+7CC↑j
                addiu   $s3, 4
                li      $v0, 0x18
                bne     $s3, $v0, loc_13854
                move    $a1, $zero
                b       loc_13414
                lw      $v0, 0x34C($a2)
 # ---------------------------------------------------------------------------

loc_138FC:                               # CODE XREF: ssl3_accept+46C↑j
                sltiu   $v0, 2
                beqz    $v0, loc_134D4
                la      $t9, ERR_put_error
                lw      $a2, 0x58($s2)
                lw      $v1, 0x344($a2)
                lw      $a0, 0x10($v1)
                andi    $v0, $a0, 4
                bnez    $v0, loc_1393C
                li      $v0, 0x2150
                lw      $v0, 0xC($v1)
                andi    $v0, 0x100
                bnez    $v0, loc_1393C
                li      $v0, 0x2150
                andi    $v0, $a0, 0x20
                beqz    $v0, loc_13D98
                li      $v0, 0x2150

loc_1393C:                               # CODE XREF: ssl3_accept+880↑j
                                         # ssl3_accept+890↑j
                li      $a1, 1
                sw      $v0, 0x34($s2)
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_1394C:                               # CODE XREF: ssl3_accept:loc_132A4↑j
                bnez    $v0, loc_134D4
                la      $t9, ERR_put_error
                slti    $v0, $s0, 0x2122
                bnez    $v0, loc_13C98
                la      $t9, ssl3_send_hello_request
                li      $v0, 0x2122
                bne     $s0, $v0, loc_134D4
                la      $t9, ERR_put_error
                lw      $a2, 0x58($s2)
                li      $v0, 3
                move    $a1, $zero
                b       loc_13410
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_13980:                               # CODE XREF: ssl3_accept+218↑j
                lw      $v0, 0x18($s2)
                beq     $v0, $s3, loc_139A4
                sw      $zero, 0x30($s2)
                la      $t9, ssl3_get_client_hello
                jalr    $t9 ; ssl3_get_client_hello
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)

loc_139A4:                               # CODE XREF: ssl3_accept+8EC↑j
                lw      $v0, 0x58($s2)
                li      $v1, 0x70  # 'p'
                lw      $a0, 0x344($v0)
                sw      $v1, 0x50+var_2C($sp)
                lw      $v0, 0xC($a0)
                andi    $v0, 0x400
                beqz    $v0, loc_139FC
                nop
                lw      $v0, 0x180($s2)
                beqz    $v0, loc_139FC
                nop
                lw      $v0, 0x18C($s2)
                beqz    $v0, loc_13C64
                la      $t9, SSL_srp_server_param_with_username
                move    $a0, $s2
                jalr    $t9 ; SSL_srp_server_param_with_username
                move    $a1, $s7
                move    $s1, $v0
                bltz    $v0, loc_13F2C
                lw      $gp, 0x50+var_38($sp)
                bnez    $v0, loc_13C70
                la      $t9, ssl3_send_alert

loc_139FC:                               # CODE XREF: ssl3_accept+924↑j
                                         # ssl3_accept+930↑j
                lw      $a2, 0x58($s2)
                li      $v0, 2
                li      $v1, 0x2130
                move    $a1, $zero
                sw      $v0, 0x178($s2)
                sw      $v1, 0x34($s2)
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_13A1C:                               # CODE XREF: ssl3_accept+6C0↑j
                lw      $a0, 0xC8($s2)
                andi    $v0, $a0, 1
                beqz    $v0, loc_13ABC
                nop
                lw      $v0, 0xC0($s2)
                lw      $v1, 0x94($v0)
                beqz    $v1, loc_13A44
                andi    $v0, $a0, 4
                bnez    $v0, loc_13ABC
                nop

loc_13A44:                               # CODE XREF: ssl3_accept+99C↑j
                lw      $a2, 0x58($s2)
                lw      $a1, 0x344($a2)
                lw      $v1, 0x10($a1)
                andi    $v0, $v1, 4
                beqz    $v0, loc_13A68
                andi    $v0, $v1, 0x20
                andi    $v0, $a0, 2
                beqz    $v0, loc_13AC0
                andi    $v0, $v1, 0x20

loc_13A68:                               # CODE XREF: ssl3_accept+9BC↑j
                bnez    $v0, loc_13AC0
                nop
                lw      $v0, 0xC($a1)
                andi    $v0, 0x100
                bnez    $v0, loc_13AC0
                la      $t9, ssl3_send_certificate_request
                li      $v0, 1
                sw      $v0, 0x388($a2)
                jalr    $t9 ; ssl3_send_certificate_request
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x2100
                li      $v1, 0x2180
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                sw      $v1, 0x348($a2)
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_13ABC:                               # CODE XREF: ssl3_accept+98C↑j
                                         # ssl3_accept+9A4↑j
                lw      $a2, 0x58($s2)

loc_13AC0:                               # CODE XREF: ssl3_accept+9C8↑j
                                         # ssl3_accept:loc_13A68↑j ...
                lw      $v1, 0x178($a2)
                li      $v0, 0x2170
                sw      $zero, 0x388($a2)
                bnez    $v1, loc_13EA8
                sw      $v0, 0x34($s2)
                b       loc_13410
                li      $a1, 1
 # ---------------------------------------------------------------------------

loc_13ADC:                               # CODE XREF: ssl3_accept+618↑j
                move    $a0, $s2
                li      $a1, 0x21C0
                jalr    $t9 ; ssl3_get_finished
                li      $a2, 0x21C1
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x6C($s2)
                beqz    $v0, loc_133B0
                li      $v0, 3
                lw      $a2, 0x58($s2)
                b       loc_133C8
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_13B10:                               # CODE XREF: ssl3_accept+5C4↑j
                jalr    $t9 ; ssl3_send_newsession_ticket
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x21D0
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_13B3C:                               # CODE XREF: ssl3_accept+408↑j
                move    $a1, $zero
                b       loc_13288
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_13B48:                               # CODE XREF: ssl3_accept+488↑j
                sw      $zero, 0x368($a2)
                lw      $v0, 0x368($a2)
                beqz    $v0, loc_13538
                andi    $v0, $v1, 0x48E

loc_13B58:                               # CODE XREF: ssl3_accept+494↑j
                la      $t9, ssl3_send_server_key_exchange

loc_13B5C:                               # CODE XREF: ssl3_accept:loc_13538↑j
                                         # ssl3_accept+4BC↑j ...
                jalr    $t9 ; ssl3_send_server_key_exchange
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                b       loc_13574
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_13B7C:                               # CODE XREF: ssl3_accept+1CC↑j
                lw      $a2, 0x58($s2)
                li      $v0, 3
                move    $a1, $zero
                b       loc_13288
                sw      $v0, 0x348($a2)
 # ---------------------------------------------------------------------------

loc_13B90:                               # CODE XREF: ssl3_accept+310↑j
                lw      $a2, 0x58($s2)
                b       loc_133C8
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_13B9C:                               # CODE XREF: ssl3_accept+31C↑j
                lw      $a2, 0x58($s2)
                b       loc_133C8
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_13BA8:                               # CODE XREF: ssl3_accept+734↑j
                lw      $v0, 0xF8($s2)
                and     $v0, $v1
                bnez    $v0, loc_137D4
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x80
                li      $a2, 0x152
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x28  # '('
                lw      $gp, 0x50+var_38($sp)
                b       loc_13320
                li      $s1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_13BF4:                               # CODE XREF: ssl3_accept+148↑j
                jalr    $t9 ; ssl3_get_client_certificate
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                b       loc_131E8
                lw      $a2, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_13C10:                               # CODE XREF: ssl3_accept+794↑j
                bnez    $v0, loc_13834
                li      $v1, 0x21A0
                lw      $v0, 0xC0($s2)
                lw      $a0, 0x94($v0)
                sw      $v1, 0x34($s2)
                beqz    $a0, loc_13740
                sw      $zero, 0x44($s2)
                lw      $v1, 0x58($s2)
                lw      $v0, 0x178($v1)
                beqz    $v0, loc_13EDC
                la      $t9, ssl3_digest_cached_records
                lw      $v0, 0($v1)
                ori     $v0, 0x20  # ' '
                sw      $v0, 0($v1)
                jalr    $t9 ; ssl3_digest_cached_records
                move    $a0, $s2
                beqz    $v0, loc_13F34
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                b       loc_13410
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_13C64:                               # CODE XREF: ssl3_accept+93C↑j
                li      $v0, 0x73  # 's'
                sw      $v0, 0x50+var_2C($sp)
                la      $t9, ssl3_send_alert

loc_13C70:                               # CODE XREF: ssl3_accept+95C↑j
                lw      $a2, 0x50+var_2C($sp)
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $v1, 0x50+var_2C($sp)
                li      $v0, 0x73  # 's'
                bne     $v1, $v0, loc_13E30
                lw      $gp, 0x50+var_38($sp)

loc_13C90:                               # CODE XREF: ssl3_accept+540↑j
                                         # ssl3_accept+57C↑j ...
                b       loc_13320
                li      $s1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_13C98:                               # CODE XREF: ssl3_accept+8C0↑j
                sw      $zero, 0x30($s2)
                jalr    $t9 ; ssl3_send_hello_request
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $a0, 0x58($s2)
                la      $t9, ssl3_init_finished_mac
                li      $v0, 0x2122
                li      $v1, 0x2100
                sw      $v0, 0x348($a0)
                sw      $v1, 0x34($s2)
                sw      $zero, 0x44($s2)
                jalr    $t9 ; ssl3_init_finished_mac
                move    $a0, $s2
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                b       loc_13410
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_13CE4:                               # CODE XREF: ssl3_accept+90↑j
                lw      $v0, 0xDC($s2)
                b       loc_13130
                lw      $s6, 0x9C($v0)
 # ---------------------------------------------------------------------------

loc_13CF0:                               # CODE XREF: ssl3_accept+52C↑j
                la      $t9, BUF_MEM_new
                jalr    $t9 ; BUF_MEM_new
                nop
                move    $s1, $v0
                beqz    $v0, loc_13C90
                lw      $gp, 0x50+var_38($sp)
                la      $t9, BUF_MEM_grow
                move    $a0, $v0
                jalr    $t9 ; BUF_MEM_grow
                li      $a1, 0x4000
                beqz    $v0, loc_13C90
                lw      $gp, 0x50+var_38($sp)
                b       loc_135CC
                sw      $s1, 0x3C($s2)
 # ---------------------------------------------------------------------------

loc_13D28:                               # CODE XREF: ssl3_accept+138↑j
                lw      $a2, 0x58($s2)
                move    $a1, $zero
                b       loc_13410
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_13D38:                               # CODE XREF: ssl3_accept+1DC↑j
                move    $a1, $zero
                b       loc_13288
                sw      $v0, 0x348($a2)
 # ---------------------------------------------------------------------------

loc_13D44:                               # CODE XREF: ssl3_accept+22C↑j
                beq     $s0, $v0, loc_13588
                li      $v0, 0x2100
                bne     $s0, $v0, loc_134D4
                la      $t9, ERR_put_error
                la      $t9, BIO_ctrl
                li      $v0, 2
                lw      $a0, 0x10($s2)
                sw      $v0, 0x18($s2)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                blez    $v0, loc_13C90
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 1
                sw      $v0, 0x18($s2)
                lw      $v1, 0x348($a2)
                move    $a1, $zero
                b       loc_13410
                sw      $v1, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_13D98:                               # CODE XREF: ssl3_accept+89C↑j
                la      $t9, ssl3_send_server_certificate
                jalr    $t9 ; ssl3_send_server_certificate
                move    $a0, $s2
                move    $s1, $v0
                blez    $v0, loc_13320
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x124($s2)
                beqz    $v0, loc_13F04
                li      $v0, 0x2150
                lw      $a2, 0x58($s2)
                li      $v0, 0x2200
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_13DD4:                               # CODE XREF: ssl3_accept+7AC↑j
                la      $t9, ssl3_digest_cached_records
                jalr    $t9 ; ssl3_digest_cached_records
                move    $a0, $s2
                beqz    $v0, loc_13F34
                lw      $gp, 0x50+var_38($sp)
                b       loc_1384C
                lw      $a2, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_13DF0:                               # CODE XREF: ssl3_accept+4D0↑j
                la      $t9, EVP_PKEY_size
                jalr    $t9 ; EVP_PKEY_size
                nop
                lw      $a2, 0x58($s2)
                li      $a1, 0x200
                lw      $a0, 0x344($a2)
                sll     $v0, 3
                lw      $v1, 0x20($a0)
                li      $a0, 0x400
                andi    $v1, 8
                movz    $a1, $a0, $v1
                slt     $a1, $v0
                beqz    $a1, loc_13570
                lw      $gp, 0x50+var_38($sp)
                b       loc_13B5C
                la      $t9, ssl3_send_server_key_exchange
 # ---------------------------------------------------------------------------

loc_13E30:                               # CODE XREF: ssl3_accept+BF0↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x80
                li      $a2, 0xE2
                b       loc_134E4
                sw      $zero, 0x50+var_40($sp)
 # ---------------------------------------------------------------------------

loc_13E48:                               # CODE XREF: ssl3_accept+27C↑j
                la      $t9, ssl_update_cache
                move    $a0, $s2
                sw      $zero, 0x178($s2)
                sw      $zero, 0x28($s2)
                jalr    $t9 ; ssl_update_cache
                li      $a1, 2
                lw      $a0, 0xDC($s2)
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x48($a0)
                la      $v1, ssl3_accept
                addiu   $v0, 1
                sw      $v1, 0x20($s2)
                beqz    $s6, loc_13EC8
                sw      $v0, 0x48($a0)
                move    $a0, $s2
                li      $a1, 0x20  # ' '
                move    $t9, $s6
                jalr    $t9
                li      $a2, 1
                lw      $v0, 0x1C($s2)
                li      $s1, 1
                addiu   $v0, -1
                b       loc_13330
                sw      $v0, 0x1C($s2)
 # ---------------------------------------------------------------------------

loc_13EA8:                               # CODE XREF: ssl3_accept+A34↑j
                la      $t9, ssl3_digest_cached_records
                jalr    $t9 ; ssl3_digest_cached_records
                move    $a0, $s2
                beqz    $v0, loc_13F34
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x58($s2)
                b       loc_13410
                li      $a1, 1
 # ---------------------------------------------------------------------------

loc_13EC8:                               # CODE XREF: ssl3_accept+DE0↑j
                lw      $v0, 0x1C($s2)
                li      $s1, 1
                addiu   $v0, -1
                b       loc_13348
                sw      $v0, 0x1C($s2)
 # ---------------------------------------------------------------------------

loc_13EDC:                               # CODE XREF: ssl3_accept+520↑j
                                         # ssl3_accept+B9C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x80
                li      $a2, 0x44  # 'D'

loc_13EF0:                               # CODE XREF: ssl3_accept+E8C↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                b       loc_13348
                li      $s1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_13F04:                               # CODE XREF: ssl3_accept+D1C↑j
                lw      $a2, 0x58($s2)
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_13410
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_13F18:                               # CODE XREF: ssl3_accept+D8↑j
                li      $a0, 0x14
                li      $a1, 0x80
                li      $a2, 0xB3
                b       loc_13EF0
                sw      $zero, 0x50+var_40($sp)
 # ---------------------------------------------------------------------------

loc_13F2C:                               # CODE XREF: ssl3_accept+954↑j
                b       loc_13320
                sw      $s3, 0x18($s2)
 # ---------------------------------------------------------------------------

loc_13F34:                               # CODE XREF: ssl3_accept+BB8↑j
                                         # ssl3_accept+D48↑j ...
                b       loc_13348
                li      $s1, 0xFFFFFFFF
 # End of function ssl3_accept


 # =============== S U B R O U T I N E =======================================


                .globl SSLv3_client_method
SSLv3_client_method:                     # CODE XREF: sub_13F54+24↓j
                                         # sub_1FE04+68↓j
                                         # DATA XREF: ...
                li      $gp, 0x4E414
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58BB0 - 0x60000)
 # End of function SSLv3_client_method


 # =============== S U B R O U T I N E =======================================


sub_13F54:                               # DATA XREF: .data.rel.ro:00058C0C↓o
                li      $gp, 0x4E3FC
                addu    $gp, $t9
                li      $v0, 0x300
                beq     $a0, $v0, loc_13F74
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_13F74:                               # CODE XREF: sub_13F54+10↑j
                la      $t9, SSLv3_client_method
                jr      $t9 ; SSLv3_client_method
                nop
 # End of function sub_13F54


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_check_finished
ssl3_check_finished:                     # CODE XREF: ssl3_connect:loc_17E84↓p
                                         # dtls1_connect+6AC↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s0, 0x30+var_8($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $v0, 0xC0($a0)
                lw      $v1, 0xCC($v0)
                beqz    $v1, loc_14024
                move    $s0, $a0
                lw      $v1, 0x100($a0)
                lw      $a1, 8($a0)
                addiu   $v0, $sp, 0x30+var_10
                sw      $v1, 0x30+var_20($sp)
                sw      $v0, 0x30+var_1C($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x1131
                li      $a1, 0x1130
                jalr    $t9
                li      $a3, 0xFFFFFFFF
                move    $v1, $v0
                lw      $v0, 0x30+var_10($sp)
                beqz    $v0, loc_14004
                lw      $gp, 0x30+var_18($sp)
                lw      $v0, 0x58($s0)
                li      $v1, 1
                lw      $a1, 0x340($v0)
                li      $a0, 0x14
                bne     $a1, $a0, loc_14018
                sw      $v1, 0x34C($v0)
                lw      $ra, 0x30+var_4($sp)

loc_13FF4:                               # CODE XREF: ssl3_check_finished+9C↓j
                lw      $s0, 0x30+var_8($sp)
                li      $v0, 2
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_14004:                               # CODE XREF: ssl3_check_finished+50↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s0, 0x30+var_8($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_14018:                               # CODE XREF: ssl3_check_finished+68↑j
                li      $v0, 4
                beq     $a1, $v0, loc_13FF4
                lw      $ra, 0x30+var_4($sp)

loc_14024:                               # CODE XREF: ssl3_check_finished+18↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s0, 0x30+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # End of function ssl3_check_finished


 # =============== S U B R O U T I N E =======================================


                .globl ssl_do_client_cert_cb
ssl_do_client_cert_cb:                   # CODE XREF: ssl3_send_client_certificate+AC↓p
                                         # dtls1_send_client_certificate+AC↓p
                                         # DATA XREF: ...
                lw      $v0, 0xDC($a0)
                lw      $t9, 0x74($v0)
                beqz    $t9, locret_14050
                nop
                jr      $t9
                nop
 # ---------------------------------------------------------------------------

locret_14050:                            # CODE XREF: ssl_do_client_cert_cb+8↑j
                jr      $ra
                move    $v0, $zero
 # End of function ssl_do_client_cert_cb


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_next_proto
ssl3_send_next_proto:                    # CODE XREF: ssl3_connect:loc_17E5C↓p
                                         # DATA XREF: LOAD:000046E8↑o ...

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x4E2F8
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s6, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x1200
                beq     $v1, $v0, loc_140D0
                move    $s6, $a0
                la      $t9, ssl3_do_write
                move    $a0, $s6
                lw      $ra, 0x38+var_4($sp)
                lw      $s6, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_140D0:                               # CODE XREF: ssl3_send_next_proto+3C↑j
                lw      $v0, 0x3C($a0)
                lbu     $s2, 0x160($a0)
                lw      $s4, 4($v0)
                addiu   $s5, $s2, 2
                sb      $s2, 4($s4)
                la      $t9, memcpy
                addiu   $s1, $s4, 5
                lw      $a1, 0x15C($a0)
                andi    $v0, $s5, 0x1F
                move    $a0, $s1
                move    $a2, $s2
                li      $s0, 0x20  # ' '
                jalr    $t9 ; memcpy
                subu    $s0, $v0
                lw      $gp, 0x38+var_28($sp)
                addu    $s1, $s2
                la      $t9, memset
                andi    $s3, $s0, 0xFF
                addiu   $a0, $s4, 6
                sb      $s3, 0($s1)
                addu    $a0, $s2
                move    $a1, $zero
                move    $a2, $s0
                jalr    $t9 ; memset
                addu    $s0, $s2
                lw      $gp, 0x38+var_28($sp)
                addiu   $v1, $s0, 2
                addiu   $a0, $s4, 1
                addu    $s3, $s5
                srl     $a1, $v1, 8
                li      $v0, 0x43  # 'C'
                srl     $v1, 16
                sb      $v0, 0($s4)
                sb      $v1, 1($s4)
                addiu   $s0, 6
                sb      $a1, 1($a0)
                sb      $s3, 2($a0)
                li      $v0, 0x1201
                la      $t9, ssl3_do_write
                sw      $s0, 0x44($s6)
                sw      $v0, 0x34($s6)
                sw      $zero, 0x48($s6)
                move    $a0, $s6
                lw      $ra, 0x38+var_4($sp)
                lw      $s6, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x38
 # End of function ssl3_send_next_proto


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_check_cert_and_algorithm
ssl3_check_cert_and_algorithm:           # CODE XREF: ssl3_connect+600↓p
                                         # dtls1_connect+860↓p
                                         # DATA XREF: ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4E1A8
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x58($a0)
                move    $s5, $a0
                lw      $v1, 0x344($v0)
                lw      $s2, 0x10($v1)
                andi    $v0, $s2, 0x2C
                bnez    $v0, loc_142D4
                lw      $s3, 0xC($v1)
                andi    $v0, $s3, 0x100
                bnez    $v0, loc_142D8
                li      $v0, 1
                lw      $v0, 0xC0($a0)
                lw      $v1, 0x90($v0)
                beqz    $v1, loc_143FC
                la      $t9, X509_get_pubkey
                lw      $v0, 4($v1)
                sll     $s0, $v0, 4
                sll     $v0, 2
                subu    $s0, $v0
                addu    $s0, $v1
                lw      $a0, 0xC($s0)
                jalr    $t9 ; X509_get_pubkey
                lw      $s4, 0x6C($v1)
                lw      $gp, 0x40+var_28($sp)
                lw      $a0, 0xC($s0)
                la      $t9, X509_certificate_type
                move    $a1, $v0
                jalr    $t9 ; X509_certificate_type
                move    $s1, $v0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, EVP_PKEY_free
                move    $a0, $s1
                jalr    $t9 ; EVP_PKEY_free
                move    $s0, $v0
                andi    $v0, $s2, 1
                beqz    $v0, loc_142FC
                lw      $gp, 0x40+var_28($sp)
                andi    $v1, $s0, 0x11
                li      $v0, 0x11
                beq     $v1, $v0, loc_142FC
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x82
                li      $a2, 0xAA
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)

loc_14294:                               # CODE XREF: ssl3_check_cert_and_algorithm+188↓j
                                         # ssl3_check_cert_and_algorithm+218↓j ...
                la      $t9, ssl3_send_alert
                move    $a0, $s5
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x28  # '('
                lw      $gp, 0x40+var_28($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_142D4:                               # CODE XREF: ssl3_check_cert_and_algorithm+44↑j
                                         # ssl3_check_cert_and_algorithm+1A8↓j ...
                li      $v0, 1

loc_142D8:                               # CODE XREF: ssl3_check_cert_and_algorithm+50↑j
                                         # ssl3_check_cert_and_algorithm+274↓j
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_142FC:                               # CODE XREF: ssl3_check_cert_and_algorithm+B8↑j
                                         # ssl3_check_cert_and_algorithm+C8↑j
                andi    $v0, $s2, 2
                beqz    $v0, loc_14338
                andi    $a1, $s3, 1
                andi    $v1, $s0, 0x12
                li      $v0, 0x12
                beq     $v1, $v0, loc_14338
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x82
                li      $a2, 0xA5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_14294
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_14338:                               # CODE XREF: ssl3_check_cert_and_algorithm+158↑j
                                         # ssl3_check_cert_and_algorithm+168↑j
                bnez    $a1, loc_143C8
                andi    $v1, $s0, 0x21

loc_14340:                               # CODE XREF: ssl3_check_cert_and_algorithm+224↓j
                                         # ssl3_check_cert_and_algorithm+22C↓j
                lw      $v0, 0x58($s5)
                lw      $a0, 0x344($v0)
                lw      $v1, 0x20($a0)
                andi    $v1, 2
                beqz    $v1, loc_142D4
                andi    $v0, $s0, 0x1000
                bnez    $v0, loc_142D4
                nop
                beqz    $a1, loc_14424
                la      $t9, ERR_put_error
                beqz    $s4, loc_143A4
                la      $t9, RSA_size
                jalr    $t9 ; RSA_size
                move    $a0, $s4
                lw      $v1, 0x58($s5)
                li      $a1, 0x200
                lw      $a0, 0x344($v1)
                sll     $v0, 3
                lw      $v1, 0x20($a0)
                li      $a0, 0x400
                andi    $v1, 8
                movz    $a1, $a0, $v1
                slt     $a1, $v0
                beqz    $a1, loc_142D4
                lw      $gp, 0x40+var_28($sp)

loc_143A4:                               # CODE XREF: ssl3_check_cert_and_algorithm+1C0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x82
                li      $a2, 0xA7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_14294
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_143C8:                               # CODE XREF: ssl3_check_cert_and_algorithm:loc_14338↑j
                li      $v0, 0x21  # '!'
                beq     $v1, $v0, loc_14340
                nop
                bnez    $s4, loc_14340
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x82
                li      $a2, 0xA9
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_14294
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_143FC:                               # CODE XREF: ssl3_check_cert_and_algorithm+60↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x82
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                b       loc_142D8
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_14424:                               # CODE XREF: ssl3_check_cert_and_algorithm+1B8↑j
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x82
                li      $a2, 0xFA
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_14294
                lw      $gp, 0x40+var_28($sp)
 # End of function ssl3_check_cert_and_algorithm


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_server_done
ssl3_get_server_done:                    # CODE XREF: ssl3_connect+3F0↓p
                                         # dtls1_connect+48C↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x4DF0C
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s0, 0x30+var_8($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $a1, 8($a0)
                addiu   $v1, $sp, 0x30+var_10
                li      $v0, 0x1E
                sw      $v1, 0x30+var_1C($sp)
                sw      $v0, 0x30+var_20($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x1161
                li      $a1, 0x1160
                li      $a3, 0xE
                jalr    $t9
                move    $s0, $a0
                move    $v1, $v0
                lw      $v0, 0x30+var_10($sp)
                beqz    $v0, loc_144B8
                lw      $gp, 0x30+var_18($sp)
                bgtz    $v1, loc_144CC
                la      $t9, ssl3_send_alert
                li      $v0, 1

loc_144A8:                               # CODE XREF: ssl3_get_server_done+BC↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s0, 0x30+var_8($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_144B8:                               # CODE XREF: ssl3_get_server_done+50↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s0, 0x30+var_8($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_144CC:                               # CODE XREF: ssl3_get_server_done+58↑j
                move    $a0, $s0
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x32  # '2'
                lw      $gp, 0x30+var_18($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x91
                li      $a2, 0x9F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_144A8
                li      $v0, 0xFFFFFFFF
 # End of function ssl3_get_server_done


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_client_certificate
ssl3_send_client_certificate:            # CODE XREF: ssl3_connect+95C↓p
                                         # DATA XREF: LOAD:00003D78↑o ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4DE48
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x1170
                move    $s0, $a0
                sw      $zero, 0x38+var_18($sp)
                beq     $v1, $v0, loc_14584
                sw      $zero, 0x38+var_14($sp)
                li      $v0, 0x1171
                beq     $v1, $v0, loc_145A8
                li      $v0, 0x1172
                beq     $v1, $v0, loc_146E0
                nop

loc_14554:                               # CODE XREF: ssl3_send_client_certificate+190↓j
                la      $t9, ssl3_do_write
                move    $a0, $s0
                jalr    $t9 ; ssl3_do_write
                li      $a1, 0x16
                lw      $gp, 0x38+var_20($sp)
                move    $v1, $v0

loc_1456C:                               # CODE XREF: ssl3_send_client_certificate+248↓j
                                         # ssl3_send_client_certificate+258↓j
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_14584:                               # CODE XREF: ssl3_send_client_certificate+30↑j
                lw      $v0, 0x98($a0)
                beqz    $v0, loc_145A0
                nop
                lw      $v1, 0($v0)
                lw      $v0, 0($v1)
                bnez    $v0, loc_1464C
                nop

loc_145A0:                               # CODE XREF: ssl3_send_client_certificate+80↑j
                                         # ssl3_send_client_certificate+148↓j
                li      $v0, 0x1171
                sw      $v0, 0x34($s0)

loc_145A8:                               # CODE XREF: ssl3_send_client_certificate+3C↑j
                la      $t9, ssl_do_client_cert_cb
                move    $a0, $s0
                addiu   $a1, $sp, 0x38+var_18
                jalr    $t9 ; ssl_do_client_cert_cb
                addiu   $a2, $sp, 0x38+var_14
                move    $s1, $v0
                bltz    $v0, loc_14758
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 1
                beq     $s1, $v0, loc_146AC
                sw      $v0, 0x18($s0)

loc_145D4:                               # CODE XREF: ssl3_send_client_certificate+1D0↓j
                                         # ssl3_send_client_certificate+1F0↓j ...
                lw      $a0, 0x38+var_18($sp)
                beqz    $a0, loc_145EC
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_145EC:                               # CODE XREF: ssl3_send_client_certificate+D0↑j
                lw      $a0, 0x38+var_14($sp)
                beqz    $a0, loc_14604
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_14604:                               # CODE XREF: ssl3_send_client_certificate+E8↑j
                bnez    $s1, loc_146A0
                li      $v0, 0x1172
                lw      $v1, 0($s0)
                li      $v0, 0x300
                beq     $v1, $v0, loc_14730
                li      $v0, 2
                lw      $v1, 0x58($s0)
                sw      $v0, 0x350($v1)
                li      $v0, 0x1172
                sw      $v0, 0x34($s0)

loc_1462C:                               # CODE XREF: ssl3_send_client_certificate+19C↓j
                li      $v0, 0x1173
                sw      $v0, 0x34($s0)
                lw      $v1, 0x350($v1)
                li      $v0, 2
                bne     $v1, $v0, loc_14678
                nop

loc_14644:                               # CODE XREF: ssl3_send_client_certificate+168↓j
                b       loc_14684
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_1464C:                               # CODE XREF: ssl3_send_client_certificate+90↑j
                lw      $v0, 4($v1)
                beqz    $v0, loc_145A0
                li      $v0, 0x1172
                lw      $v1, 0x58($a0)
                sw      $v0, 0x34($a0)

loc_14660:                               # CODE XREF: ssl3_send_client_certificate:loc_146E0↓j
                li      $v0, 0x1173
                sw      $v0, 0x34($s0)
                lw      $v1, 0x350($v1)
                li      $v0, 2
                beq     $v1, $v0, loc_14644
                nop

loc_14678:                               # CODE XREF: ssl3_send_client_certificate+134↑j
                lw      $v0, 0x98($s0)
                lw      $v1, 0($v0)
                lw      $a1, 0($v1)

loc_14684:                               # CODE XREF: ssl3_send_client_certificate:loc_14644↑j
                la      $t9, ssl3_output_cert_chain
                jalr    $t9 ; ssl3_output_cert_chain
                move    $a0, $s0
                lw      $gp, 0x38+var_20($sp)
                sw      $v0, 0x44($s0)
                b       loc_14554
                sw      $zero, 0x48($s0)
 # ---------------------------------------------------------------------------

loc_146A0:                               # CODE XREF: ssl3_send_client_certificate:loc_14604↑j
                lw      $v1, 0x58($s0)
                b       loc_1462C
                sw      $v0, 0x34($s0)
 # ---------------------------------------------------------------------------

loc_146AC:                               # CODE XREF: ssl3_send_client_certificate+C4↑j
                lw      $v0, 0x38+var_14($sp)
                beqz    $v0, loc_14708
                lw      $a1, 0x38+var_18($sp)
                beqz    $a1, loc_14708
                la      $t9, SSL_use_certificate
                li      $v0, 0x1171
                sw      $v0, 0x34($s0)
                jalr    $t9 ; SSL_use_certificate
                move    $a0, $s0
                bnez    $v0, loc_146E8
                lw      $gp, 0x38+var_20($sp)
                b       loc_145D4
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_146E0:                               # CODE XREF: ssl3_send_client_certificate+44↑j
                b       loc_14660
                lw      $v1, 0x58($a0)
 # ---------------------------------------------------------------------------

loc_146E8:                               # CODE XREF: ssl3_send_client_certificate+1C8↑j
                la      $t9, SSL_use_PrivateKey
                lw      $a1, 0x38+var_14($sp)
                jalr    $t9 ; SSL_use_PrivateKey
                move    $a0, $s0
                bnez    $v0, loc_145D4
                lw      $gp, 0x38+var_20($sp)
                b       loc_145D4
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_14708:                               # CODE XREF: ssl3_send_client_certificate+1A8↑j
                                         # ssl3_send_client_certificate+1B0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x97
                li      $a2, 0x6A  # 'j'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_145D4
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_14730:                               # CODE XREF: ssl3_send_client_certificate+10C↑j
                lw      $v0, 0x58($s0)
                la      $t9, ssl3_send_alert
                sw      $zero, 0x350($v0)
                move    $a0, $s0
                li      $a1, 1
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x29  # ')'
                lw      $gp, 0x38+var_20($sp)
                b       loc_1456C
                li      $v1, 1
 # ---------------------------------------------------------------------------

loc_14758:                               # CODE XREF: ssl3_send_client_certificate+B8↑j
                li      $v0, 4
                li      $v1, 0xFFFFFFFF
                b       loc_1456C
                sw      $v0, 0x18($s0)
 # End of function ssl3_send_client_certificate


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_client_verify
ssl3_send_client_verify:                 # CODE XREF: ssl3_connect+638↓p
                                         # DATA XREF: LOAD:000042B8↑o ...

var_C8          = -0xC8
var_C4          = -0xC4
var_C0          = -0xC0
var_B8          = -0xB8
var_B4          = -0xB4
var_B0          = -0xB0
var_AC          = -0xAC
var_A8          = -0xA8
var_90          = -0x90
var_80          = -0x80
var_6D          = -0x6D
var_6C          = -0x6C
var_2D          = -0x2D
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4DBE8
                addu    $gp, $t9
                addiu   $sp, -0xD8
                sw      $ra, 0xD8+var_8($sp)
                sw      $s7, 0xD8+var_C($sp)
                sw      $s6, 0xD8+var_10($sp)
                sw      $s5, 0xD8+var_14($sp)
                sw      $s4, 0xD8+var_18($sp)
                sw      $s3, 0xD8+var_1C($sp)
                sw      $s2, 0xD8+var_20($sp)
                sw      $s1, 0xD8+var_24($sp)
                sw      $s0, 0xD8+var_28($sp)
                sw      $gp, 0xD8+var_C0($sp)
                la      $t9, EVP_MD_CTX_init
                addiu   $s3, $sp, 0xD8+var_A8
                move    $s1, $a0
                sw      $zero, 0xD8+var_B8($sp)
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s3
                lw      $v1, 0x34($s1)
                li      $v0, 0x1190
                beq     $v1, $v0, loc_1482C
                lw      $gp, 0xD8+var_C0($sp)
                move    $s5, $zero

loc_147CC:                               # CODE XREF: ssl3_send_client_verify+3A4↓j
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s3
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, EVP_PKEY_CTX_free
                jalr    $t9 ; EVP_PKEY_CTX_free
                move    $a0, $s5
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, ssl3_do_write
                move    $a0, $s1
                jalr    $t9 ; ssl3_do_write
                li      $a1, 0x16
                lw      $gp, 0xD8+var_C0($sp)
                lw      $ra, 0xD8+var_8($sp)
                lw      $s7, 0xD8+var_C($sp)
                lw      $s6, 0xD8+var_10($sp)
                lw      $s5, 0xD8+var_14($sp)
                lw      $s4, 0xD8+var_18($sp)
                lw      $s3, 0xD8+var_1C($sp)
                lw      $s2, 0xD8+var_20($sp)
                lw      $s1, 0xD8+var_24($sp)
                lw      $s0, 0xD8+var_28($sp)
                jr      $ra
                addiu   $sp, 0xD8
 # ---------------------------------------------------------------------------

loc_1482C:                               # CODE XREF: ssl3_send_client_verify+58↑j
                lw      $v0, 0x98($s1)
                lw      $a2, 0x3C($s1)
                lw      $v1, 0($v0)
                la      $t9, EVP_PKEY_CTX_new
                lw      $s2, 4($v1)
                move    $a1, $zero
                move    $a0, $s2
                jalr    $t9 ; EVP_PKEY_CTX_new
                lw      $s6, 4($a2)
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, EVP_PKEY_sign_init
                move    $a0, $v0
                jalr    $t9 ; EVP_PKEY_sign_init
                move    $s5, $v0
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, EVP_sha1
                jalr    $t9 ; EVP_sha1
                addiu   $s4, $s6, 4
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, EVP_PKEY_CTX_ctrl
                sw      $v0, 0xD8+var_C4($sp)
                sw      $zero, 0xD8+var_C8($sp)
                move    $a0, $s5
                li      $a1, 0xFFFFFFFF
                li      $a2, 0xF8
                jalr    $t9 ; EVP_PKEY_CTX_ctrl
                li      $a3, 1
                blez    $v0, loc_14BC8
                lw      $gp, 0xD8+var_C0($sp)
                lw      $a0, 0($s1)
                li      $v0, 3
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_1497C
                slti    $v0, $a0, 0x303

loc_148B4:                               # CODE XREF: ssl3_send_client_verify:loc_1497C↓j
                lw      $v0, 8($s1)
                move    $a0, $s1
                lw      $v1, 0x64($v0)
                li      $a1, 0x40  # '@'
                lw      $t9, 0x1C($v1)
                jalr    $t9
                addiu   $a2, $sp, 0xD8+var_80
                lw      $gp, 0xD8+var_C0($sp)

loc_148D4:                               # CODE XREF: ssl3_send_client_verify+46C↓j
                lw      $a0, 0($s1)
                li      $v0, 3
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_14A30
                slti    $v0, $a0, 0x303

loc_148E8:                               # CODE XREF: ssl3_send_client_verify:loc_14A30↓j
                lw      $v1, 0($s2)
                li      $v0, 6
                beq     $v1, $v0, loc_14B14
                li      $v0, 0x74  # 't'
                beq     $v1, $v0, loc_14B80
                addiu   $v0, $v1, -0x32B
                sltiu   $v0, 2
                bnez    $v0, loc_14A40
                addiu   $s0, $sp, 0xD8+var_90

loc_1490C:                               # CODE XREF: ssl3_send_client_verify+248↓j
                                         # ssl3_send_client_verify+264↓j ...
                la      $t9, ERR_put_error
                sw      $zero, 0xD8+var_C8($sp)
                li      $a0, 0x14
                li      $a1, 0x99
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xD8+var_C0($sp)

loc_1492C:                               # CODE XREF: ssl3_send_client_verify+2C0↓j
                                         # ssl3_send_client_verify+490↓j ...
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s3
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, EVP_PKEY_CTX_free
                jalr    $t9 ; EVP_PKEY_CTX_free
                move    $a0, $s5
                lw      $gp, 0xD8+var_C0($sp)
                lw      $ra, 0xD8+var_8($sp)
                lw      $s7, 0xD8+var_C($sp)
                lw      $s6, 0xD8+var_10($sp)
                lw      $s5, 0xD8+var_14($sp)
                lw      $s4, 0xD8+var_18($sp)
                lw      $s3, 0xD8+var_1C($sp)
                lw      $s2, 0xD8+var_20($sp)
                lw      $s1, 0xD8+var_24($sp)
                lw      $s0, 0xD8+var_28($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0xD8
 # ---------------------------------------------------------------------------

loc_1497C:                               # CODE XREF: ssl3_send_client_verify+144↑j
                bnez    $v0, loc_148B4
                nop
                lw      $v0, 0x98($s1)

loc_14988:                               # CODE XREF: ssl3_send_client_verify+2D0↓j
                lw      $v1, 0x58($s1)
                la      $t9, BIO_ctrl
                lw      $t0, 0($v0)
                lw      $a0, 0x178($v1)
                li      $a1, 3
                move    $a2, $zero
                addiu   $a3, $sp, 0xD8+var_B0
                jalr    $t9 ; BIO_ctrl
                lw      $s0, 8($t0)
                move    $s7, $v0
                blez    $v0, loc_1490C
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, tls12_get_sigandhash
                move    $a0, $s4
                move    $a1, $s2
                jalr    $t9 ; tls12_get_sigandhash
                move    $a2, $s0
                beqz    $v0, loc_1490C
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, EVP_DigestInit_ex
                move    $a1, $s0
                move    $a0, $s3
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                beqz    $v0, loc_14A0C
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, EVP_DigestUpdate
                lw      $a1, 0xD8+var_B0($sp)
                move    $a2, $s7
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s3
                bnez    $v0, loc_14C24
                lw      $gp, 0xD8+var_C0($sp)

loc_14A0C:                               # CODE XREF: ssl3_send_client_verify+280↑j
                                         # ssl3_send_client_verify+4D8↓j
                la      $t9, ERR_put_error
                sw      $zero, 0xD8+var_C8($sp)
                li      $a0, 0x14
                li      $a1, 0x99
                li      $a2, 6
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_1492C
                lw      $gp, 0xD8+var_C0($sp)
 # ---------------------------------------------------------------------------

loc_14A30:                               # CODE XREF: ssl3_send_client_verify+178↑j
                bnez    $v0, loc_148E8
                nop
                b       loc_14988
                lw      $v0, 0x98($s1)
 # ---------------------------------------------------------------------------

loc_14A40:                               # CODE XREF: ssl3_send_client_verify+19C↑j
                lw      $v1, 8($s1)
                lw      $v0, 0x64($v1)
                li      $v1, 0x40  # '@'
                lw      $t9, 0x1C($v0)
                sw      $v1, 0xD8+var_AC($sp)
                move    $a0, $s1
                li      $a1, 0x329
                jalr    $t9
                move    $a2, $s0
                lw      $gp, 0xD8+var_C0($sp)
                li      $v0, 0x20  # ' '
                la      $t9, EVP_PKEY_sign
                sw      $v0, 0xD8+var_C8($sp)
                move    $a3, $s0
                move    $a0, $s5
                addiu   $a1, $sp, 0xD8+var_6C
                jalr    $t9 ; EVP_PKEY_sign
                addiu   $a2, $sp, 0xD8+var_AC
                blez    $v0, loc_1490C
                lw      $gp, 0xD8+var_C0($sp)
                sw      $zero, 0xD8+var_B4($sp)
                move    $v0, $zero
                addiu   $a2, $s4, 2
                addiu   $a0, $sp, 0xD8+var_2D
                addiu   $a3, $sp, 0xD8+var_6D

loc_14AA4:                               # CODE XREF: ssl3_send_client_verify+35C↓j
                lbu     $v1, 0($a0)
                addu    $v0, $a2
                sb      $v1, 0($v0)
                lw      $v0, 0xD8+var_B4($sp)
                addiu   $a0, -1
                addiu   $a1, $v0, 1
                move    $v1, $v0
                sw      $a1, 0xD8+var_B4($sp)
                bne     $a0, $a3, loc_14AA4
                move    $v0, $a1
                sra     $v0, $a1, 8
                addiu   $a3, $v1, 3
                sb      $a1, 1($s4)
                sb      $v0, 0($s4)

loc_14ADC:                               # CODE XREF: ssl3_send_client_verify+410↓j
                                         # ssl3_send_client_verify+458↓j ...
                li      $v0, 0xF
                sb      $v0, 0($s6)
                addiu   $a1, $s6, 1
                addiu   $a2, $a3, 4
                srl     $v1, $a3, 16
                srl     $a0, $a3, 8
                li      $v0, 0x1191
                sb      $v1, 1($s6)
                sb      $a0, 1($a1)
                sb      $a3, 2($a1)
                sw      $v0, 0x34($s1)
                sw      $a2, 0x44($s1)
                b       loc_147CC
                sw      $zero, 0x48($s1)
 # ---------------------------------------------------------------------------

loc_14B14:                               # CODE XREF: ssl3_send_client_verify+188↑j
                lw      $v0, 8($s1)
                addiu   $s0, $sp, 0xD8+var_90
                lw      $v1, 0x64($v0)
                move    $a0, $s1
                lw      $t9, 0x1C($v1)
                li      $a1, 4
                jalr    $t9
                move    $a2, $s0
                addiu   $v1, $sp, 0xD8+var_B8
                lw      $gp, 0xD8+var_C0($sp)
                sw      $v1, 0xD8+var_C8($sp)
                lw      $v0, 0x14($s2)
                la      $t9, RSA_sign
                sw      $v0, 0xD8+var_C4($sp)
                move    $a1, $s0
                li      $a0, 0x72  # 'r'
                li      $a2, 0x24  # '$'
                jalr    $t9 ; RSA_sign
                addiu   $a3, $s4, 2
                blez    $v0, loc_14C00
                lw      $gp, 0xD8+var_C0($sp)
                lw      $v0, 0xD8+var_B8($sp)
                srl     $v1, $v0, 8
                addiu   $a3, $v0, 2
                sb      $v1, 0($s4)
                b       loc_14ADC
                sb      $v0, 1($s4)
 # ---------------------------------------------------------------------------

loc_14B80:                               # CODE XREF: ssl3_send_client_verify+190↑j
                addiu   $v0, $sp, 0xD8+var_B4
                lw      $a0, 4($s2)
                sw      $v0, 0xD8+var_C8($sp)
                lw      $v1, 0x14($s2)
                la      $t9, DSA_sign
                sw      $v1, 0xD8+var_C4($sp)
                addiu   $a1, $sp, 0xD8+var_80
                li      $a2, 0x14
                jalr    $t9 ; DSA_sign
                addiu   $a3, $s4, 2
                beqz    $v0, loc_14BDC
                lw      $gp, 0xD8+var_C0($sp)
                lw      $v0, 0xD8+var_B4($sp)
                sra     $v1, $v0, 8
                addiu   $a3, $v0, 2
                sb      $v1, 0($s4)
                b       loc_14ADC
                sb      $v0, 1($s4)
 # ---------------------------------------------------------------------------

loc_14BC8:                               # CODE XREF: ssl3_send_client_verify+130↑j
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                b       loc_148D4
                lw      $gp, 0xD8+var_C0($sp)
 # ---------------------------------------------------------------------------

loc_14BDC:                               # CODE XREF: ssl3_send_client_verify+440↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xD8+var_C8($sp)
                li      $a0, 0x14
                li      $a1, 0x99
                li      $a2, 0xA
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_1492C
                lw      $gp, 0xD8+var_C0($sp)
 # ---------------------------------------------------------------------------

loc_14C00:                               # CODE XREF: ssl3_send_client_verify+3F8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xD8+var_C8($sp)
                li      $a0, 0x14
                li      $a1, 0x99
                li      $a2, 4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_1492C
                lw      $gp, 0xD8+var_C0($sp)
 # ---------------------------------------------------------------------------

loc_14C24:                               # CODE XREF: ssl3_send_client_verify+29C↑j
                la      $t9, EVP_SignFinal
                move    $a3, $s2
                move    $a0, $s3
                addiu   $a1, $s4, 4
                jalr    $t9 ; EVP_SignFinal
                addiu   $a2, $sp, 0xD8+var_B8
                lw      $gp, 0xD8+var_C0($sp)
                beqz    $v0, loc_14A0C
                addiu   $v1, $s4, 2
                lw      $s0, 0xD8+var_B8($sp)
                la      $t9, ssl3_digest_cached_records
                srl     $v0, $s0, 8
                sb      $v0, 2($s4)
                move    $a0, $s1
                jalr    $t9 ; ssl3_digest_cached_records
                sb      $s0, 1($v1)
                beqz    $v0, loc_1492C
                lw      $gp, 0xD8+var_C0($sp)
                b       loc_14ADC
                addiu   $a3, $s0, 4
 # End of function ssl3_send_client_verify


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_client_key_exchange
ssl3_send_client_key_exchange:           # CODE XREF: ssl3_connect+100↓p
                                         # DATA XREF: LOAD:00002ED8↑o ...

var_1B0         = -0x1B0
var_1AC         = -0x1AC
var_1A8         = -0x1A8
var_1A0         = -0x1A0
var_19C         = -0x19C
var_198         = -0x198
var_178         = -0x178
var_158         = -0x158
var_157         = -0x157
var_156         = -0x156
var_128         = -0x128
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4D6DC
                addu    $gp, $t9
                addiu   $sp, -0x1C0
                sw      $ra, 0x1C0+var_8($sp)
                sw      $s7, 0x1C0+var_C($sp)
                sw      $s6, 0x1C0+var_10($sp)
                sw      $s5, 0x1C0+var_14($sp)
                sw      $s4, 0x1C0+var_18($sp)
                sw      $s3, 0x1C0+var_1C($sp)
                sw      $s2, 0x1C0+var_20($sp)
                sw      $s1, 0x1C0+var_24($sp)
                sw      $s0, 0x1C0+var_28($sp)
                sw      $gp, 0x1C0+var_1A8($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x1180
                beq     $v1, $v0, loc_14CFC
                move    $s2, $a0

loc_14CBC:                               # CODE XREF: ssl3_send_client_key_exchange+224↓j
                la      $t9, ssl3_do_write
                move    $a0, $s2
                jalr    $t9 ; ssl3_do_write
                li      $a1, 0x16
                lw      $gp, 0x1C0+var_1A8($sp)

loc_14CD0:                               # CODE XREF: ssl3_send_client_key_exchange:loc_15234↓j
                lw      $ra, 0x1C0+var_8($sp)
                lw      $s7, 0x1C0+var_C($sp)
                lw      $s6, 0x1C0+var_10($sp)
                lw      $s5, 0x1C0+var_14($sp)
                lw      $s4, 0x1C0+var_18($sp)
                lw      $s3, 0x1C0+var_1C($sp)
                lw      $s2, 0x1C0+var_20($sp)
                lw      $s1, 0x1C0+var_24($sp)
                lw      $s0, 0x1C0+var_28($sp)
                jr      $ra
                addiu   $sp, 0x1C0
 # ---------------------------------------------------------------------------

loc_14CFC:                               # CODE XREF: ssl3_send_client_key_exchange+40↑j
                lw      $v0, 0x58($a0)
                lw      $v1, 0x3C($a0)
                lw      $a1, 0x344($v0)
                lw      $s4, 4($v1)
                lw      $v1, 0xC($a1)
                andi    $v0, $v1, 1
                beqz    $v0, loc_14DA4
                addiu   $s3, $s4, 4
                lw      $v0, 0xC0($a0)
                lw      $v0, 0x90($v0)
                lw      $s0, 0x6C($v0)
                bnez    $s0, loc_15130
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                lw      $a0, 0xC($v0)
                move    $a0, $v0
                beqz    $v0, loc_14D54
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $v1, 0($v0)
                li      $v0, 6
                beq     $v1, $v0, loc_15118
                nop

loc_14D54:                               # CODE XREF: ssl3_send_client_key_exchange+C8↑j
                                         # ssl3_send_client_key_exchange+148↓j ...
                la      $t9, ERR_put_error
                sw      $zero, 0x1C0+var_1B0($sp)
                li      $a0, 0x14
                li      $a1, 0x98
                li      $a2, 0x44  # 'D'

loc_14D68:                               # CODE XREF: ssl3_send_client_key_exchange+5B8↓j
                                         # ssl3_send_client_key_exchange+5EC↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $ra, 0x1C0+var_8($sp)
                lw      $s7, 0x1C0+var_C($sp)
                lw      $s6, 0x1C0+var_10($sp)
                lw      $s5, 0x1C0+var_14($sp)
                lw      $s4, 0x1C0+var_18($sp)
                lw      $s3, 0x1C0+var_1C($sp)
                lw      $s2, 0x1C0+var_20($sp)
                lw      $s1, 0x1C0+var_24($sp)
                lw      $s0, 0x1C0+var_28($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x1C0
 # ---------------------------------------------------------------------------

loc_14DA4:                               # CODE XREF: ssl3_send_client_key_exchange+A0↑j
                andi    $v0, $v1, 0x200
                bnez    $v0, loc_14EA0
                andi    $v0, $v1, 0x400
                beqz    $v0, loc_1523C
                la      $t9, ssl3_send_alert
                lw      $a0, 0x1A0($a0)
                beqz    $a0, loc_14D54
                la      $t9, BN_num_bits
                jalr    $t9 ; BN_num_bits
                nop
                addiu   $v1, $v0, 7
                slti    $a0, $v1, 0
                addiu   $v0, 0xE
                movn    $v1, $v0, $a0
                lw      $gp, 0x1C0+var_1A8($sp)
                sra     $v0, $v1, 11
                sra     $s5, $v1, 3
                sb      $v0, 4($s4)
                sb      $s5, 1($s3)
                lw      $a0, 0x1A0($s2)
                la      $t9, BN_bn2bin
                jalr    $t9 ; BN_bn2bin
                addiu   $a1, $s4, 6
                lw      $s1, 0xC0($s2)
                lw      $a0, 0xD8($s1)
                beqz    $a0, loc_14E24
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $s1, 0xC0($s2)

loc_14E24:                               # CODE XREF: ssl3_send_client_key_exchange+194↑j
                la      $t9, BUF_strdup
                jalr    $t9 ; BUF_strdup
                lw      $a0, 0x18C($s2)
                lw      $s0, 0xC0($s2)
                lw      $gp, 0x1C0+var_1A8($sp)
                sw      $v0, 0xD8($s1)
                lw      $v0, 0xD8($s0)
                beqz    $v0, loc_15268
                la      $t9, ERR_put_error
                la      $t9, SRP_generate_client_master_secret
                move    $a0, $s2
                jalr    $t9 ; SRP_generate_client_master_secret
                addiu   $a1, $s0, 0x14
                lw      $gp, 0x1C0+var_1A8($sp)
                bltz    $v0, loc_14D54
                sw      $v0, 0x10($s0)
                addiu   $s1, $s5, 2

loc_14E68:                               # CODE XREF: ssl3_send_client_key_exchange+49C↓j
                                         # ssl3_send_client_key_exchange+588↓j
                li      $v0, 0x10
                sb      $v0, 0($s4)
                addiu   $a1, $s4, 1
                addiu   $a2, $s1, 4
                sra     $v1, $s1, 16
                sra     $a0, $s1, 8
                li      $v0, 0x1181
                sb      $v1, 1($s4)
                sb      $a0, 1($a1)
                sb      $s1, 2($a1)
                sw      $v0, 0x34($s2)
                sw      $a2, 0x44($s2)
                b       loc_14CBC
                sw      $zero, 0x48($s2)
 # ---------------------------------------------------------------------------

loc_14EA0:                               # CODE XREF: ssl3_send_client_key_exchange+134↑j
                lw      $v0, 0xC0($a0)
                lw      $v0, 0x90($v0)
                lw      $a0, 0x60($v0)
                beqz    $a0, loc_15214
                nop

loc_14EB4:                               # CODE XREF: ssl3_send_client_key_exchange+5A4↓j
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                addiu   $s6, $sp, 0x1C0+var_198
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, EVP_PKEY_CTX_new
                move    $a1, $zero
                move    $a0, $v0
                jalr    $t9 ; EVP_PKEY_CTX_new
                move    $s7, $v0
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, EVP_PKEY_encrypt_init
                move    $a0, $v0
                jalr    $t9 ; EVP_PKEY_encrypt_init
                move    $s5, $v0
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, RAND_bytes
                move    $a0, $s6
                jalr    $t9 ; RAND_bytes
                li      $a1, 0x20  # ' '
                lw      $v1, 0x58($s2)
                lw      $v0, 0x350($v1)
                beqz    $v0, loc_14F44
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $v0, 0x98($s2)
                lw      $v1, 0($v0)
                lw      $a1, 4($v1)
                beqz    $a1, loc_14F44
                la      $t9, EVP_PKEY_derive_set_peer
                jalr    $t9 ; EVP_PKEY_derive_set_peer
                move    $a0, $s5
                bgtz    $v0, loc_14F44
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x1C0+var_1A8($sp)

loc_14F44:                               # CODE XREF: ssl3_send_client_key_exchange+294↑j
                                         # ssl3_send_client_key_exchange+2A8↑j ...
                la      $t9, EVP_MD_CTX_create
                jalr    $t9 ; EVP_MD_CTX_create
                addiu   $s1, $sp, 0x1C0+var_178
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, OBJ_nid2sn
                li      $a0, 0x329
                jalr    $t9 ; OBJ_nid2sn
                move    $s0, $v0
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, EVP_get_digestbyname
                jalr    $t9 ; EVP_get_digestbyname
                move    $a0, $v0
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, EVP_DigestInit
                move    $a1, $v0
                jalr    $t9 ; EVP_DigestInit
                move    $a0, $s0
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $s0
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $s0
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a1, $s1
                addiu   $a2, $sp, 0x1C0+var_19C
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a0, $s0
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, EVP_MD_CTX_destroy
                jalr    $t9 ; EVP_MD_CTX_destroy
                move    $a0, $s0
                lw      $gp, 0x1C0+var_1A8($sp)
                li      $v0, 8
                la      $t9, EVP_PKEY_CTX_ctrl
                sw      $v0, 0x1C0+var_1B0($sp)
                sw      $s1, 0x1C0+var_1AC($sp)
                move    $a0, $s5
                li      $a1, 0xFFFFFFFF
                li      $a2, 0x100
                jalr    $t9 ; EVP_PKEY_CTX_ctrl
                li      $a3, 8
                bltz    $v0, loc_15250
                lw      $gp, 0x1C0+var_1A8($sp)
                li      $v0, 0x30  # '0'
                sb      $v0, 0($s3)
                la      $t9, EVP_PKEY_encrypt
                li      $a2, 0xFF
                li      $v0, 0x20  # ' '
                addiu   $s0, $sp, 0x1C0+var_128
                sw      $a2, 0x1C0+var_1A0($sp)
                sw      $v0, 0x1C0+var_1B0($sp)
                move    $a0, $s5
                move    $a1, $s0
                addiu   $a2, $sp, 0x1C0+var_1A0
                jalr    $t9 ; EVP_PKEY_encrypt
                move    $a3, $s6
                bltz    $v0, loc_15250
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $v1, 0x1C0+var_1A0($sp)
                sltiu   $v0, $v1, 0x80
                bnez    $v0, loc_15204
                addiu   $a0, $s3, 2
                li      $v0, 0xFFFFFF81
                sb      $v0, 1($s3)
                lw      $v0, 0x1C0+var_1A0($sp)
                addiu   $a0, $s3, 3
                sb      $v0, 2($s3)
                lw      $a2, 0x1C0+var_1A0($sp)
                addiu   $s1, $a2, 3

loc_15080:                               # CODE XREF: ssl3_send_client_key_exchange+598↓j
                la      $t9, memcpy
                jalr    $t9 ; memcpy
                move    $a1, $s0
                lw      $gp, 0x1C0+var_1A8($sp)
                li      $v0, 2
                la      $t9, EVP_PKEY_CTX_ctrl
                sw      $v0, 0x1C0+var_1B0($sp)
                sw      $zero, 0x1C0+var_1AC($sp)
                move    $a0, $s5
                li      $a1, 0xFFFFFFFF
                li      $a2, 0xFFFFFFFF
                jalr    $t9 ; EVP_PKEY_CTX_ctrl
                li      $a3, 2
                blez    $v0, loc_150CC
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $v1, 0x58($s2)
                lw      $v0, 0($v1)
                ori     $v0, 0x10
                sw      $v0, 0($v1)

loc_150CC:                               # CODE XREF: ssl3_send_client_key_exchange+440↑j
                la      $t9, EVP_PKEY_CTX_free
                jalr    $t9 ; EVP_PKEY_CTX_free
                move    $a0, $s5
                lw      $v0, 8($s2)
                lw      $s0, 0xC0($s2)
                lw      $v1, 0x64($v0)
                move    $a2, $s6
                lw      $t9, 0xC($v1)
                move    $a0, $s2
                addiu   $a1, $s0, 0x14
                jalr    $t9
                li      $a3, 0x20  # ' '
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, EVP_PKEY_free
                sw      $v0, 0x10($s0)
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s7
                b       loc_14E68
                lw      $gp, 0x1C0+var_1A8($sp)
 # ---------------------------------------------------------------------------

loc_15118:                               # CODE XREF: ssl3_send_client_key_exchange+D8↑j
                lw      $s0, 0x14($a0)
                beqz    $s0, loc_14D54
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x1C0+var_1A8($sp)

loc_15130:                               # CODE XREF: ssl3_send_client_key_exchange+B4↑j
                lw      $v0, 0x108($s2)
                la      $t9, RAND_bytes
                sra     $v1, $v0, 8
                sb      $v1, 0x1C0+var_158($sp)
                sb      $v0, 0x1C0+var_157($sp)
                addiu   $a0, $sp, 0x1C0+var_156
                jalr    $t9 ; RAND_bytes
                li      $a1, 0x2E  # '.'
                blez    $v0, loc_15234
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $a0, 0xC0($s2)
                li      $v1, 0x30  # '0'
                sw      $v1, 0x10($a0)
                lw      $v0, 0($s2)
                slti    $v0, 0x301
                bnez    $v0, loc_15178
                move    $a2, $s3
                addiu   $a2, $s3, 2

loc_15178:                               # CODE XREF: ssl3_send_client_key_exchange+4F8↑j
                la      $t9, RSA_public_encrypt
                li      $v0, 1
                addiu   $s5, $sp, 0x1C0+var_158
                sw      $v0, 0x1C0+var_1B0($sp)
                move    $a3, $s0
                li      $a0, 0x30  # '0'
                jalr    $t9 ; RSA_public_encrypt
                move    $a1, $s5
                move    $s1, $v0
                blez    $v0, loc_1527C
                lw      $gp, 0x1C0+var_1A8($sp)
                lw      $v0, 0($s2)
                slti    $v0, 0x301
                bnez    $v0, loc_151C0
                sra     $v0, $s1, 8
                sb      $s1, 1($s3)
                sb      $v0, 0($s3)
                addiu   $s1, 2

loc_151C0:                               # CODE XREF: ssl3_send_client_key_exchange+538↑j
                lw      $v0, 8($s2)
                lw      $s0, 0xC0($s2)
                lw      $v1, 0x64($v0)
                move    $a0, $s2
                lw      $t9, 0xC($v1)
                addiu   $a1, $s0, 0x14
                move    $a2, $s5
                jalr    $t9
                li      $a3, 0x30  # '0'
                lw      $gp, 0x1C0+var_1A8($sp)
                la      $t9, OPENSSL_cleanse
                sw      $v0, 0x10($s0)
                move    $a0, $s5
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x30  # '0'
                b       loc_14E68
                lw      $gp, 0x1C0+var_1A8($sp)
 # ---------------------------------------------------------------------------

loc_15204:                               # CODE XREF: ssl3_send_client_key_exchange+3E8↑j
                sb      $v1, 1($s3)
                lw      $a2, 0x1C0+var_1A0($sp)
                b       loc_15080
                addiu   $s1, $a2, 2
 # ---------------------------------------------------------------------------

loc_15214:                               # CODE XREF: ssl3_send_client_key_exchange+238↑j
                lw      $a0, 0x54($v0)
                bnez    $a0, loc_14EB4
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x98
                li      $a2, 0x14A
                b       loc_14D68
                sw      $zero, 0x1C0+var_1B0($sp)
 # ---------------------------------------------------------------------------

loc_15234:                               # CODE XREF: ssl3_send_client_key_exchange+4DC↑j
                b       loc_14CD0
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1523C:                               # CODE XREF: ssl3_send_client_key_exchange+13C↑j
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x28  # '('
                b       loc_14D54
                lw      $gp, 0x1C0+var_1A8($sp)
 # ---------------------------------------------------------------------------

loc_15250:                               # CODE XREF: ssl3_send_client_key_exchange+39C↑j
                                         # ssl3_send_client_key_exchange+3D8↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x98
                li      $a2, 0x112
                b       loc_14D68
                sw      $zero, 0x1C0+var_1B0($sp)
 # ---------------------------------------------------------------------------

loc_15268:                               # CODE XREF: ssl3_send_client_key_exchange+1CC↑j
                li      $a0, 0x14
                li      $a1, 0x98
                li      $a2, 0x41  # 'A'
                b       loc_14D68
                sw      $zero, 0x1C0+var_1B0($sp)
 # ---------------------------------------------------------------------------

loc_1527C:                               # CODE XREF: ssl3_send_client_key_exchange+528↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x98
                li      $a2, 0x77  # 'w'
                b       loc_14D68
                sw      $zero, 0x1C0+var_1B0($sp)
 # End of function ssl3_send_client_key_exchange


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_cert_status
ssl3_get_cert_status:                    # CODE XREF: ssl3_connect+330↓p
                                         # dtls1_connect:loc_29E38↓p
                                         # DATA XREF: ...

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x4D0BC
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s2, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $a1, 8($a0)
                li      $v0, 0x4000
                addiu   $v1, $sp, 0x38+var_18
                sw      $v0, 0x38+var_28($sp)
                sw      $v1, 0x38+var_24($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x11F1
                li      $a1, 0x11F0
                li      $a3, 0x16
                jalr    $t9
                move    $s2, $a0
                move    $a2, $v0
                lw      $v0, 0x38+var_18($sp)
                beqz    $v0, loc_153A4
                lw      $gp, 0x38+var_20($sp)
                sltiu   $v0, $a2, 4
                bnez    $v0, loc_1538C
                li      $v0, 1
                lw      $s0, 0x40($s2)
                lbu     $v1, 0($s0)
                beq     $v1, $v0, loc_15360
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x121
                li      $a2, 0x149

loc_15320:                               # CODE XREF: ssl3_get_cert_status+108↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                li      $a2, 0x32  # '2'

loc_15330:                               # CODE XREF: ssl3_get_cert_status+1B8↓j
                                         # ssl3_get_cert_status+1E0↓j
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 0xFFFFFFFF

loc_15348:                               # CODE XREF: ssl3_get_cert_status:loc_15424↓j
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_15360:                               # CODE XREF: ssl3_get_cert_status+74↑j
                addiu   $a1, $s0, 1
                lbu     $v0, 1($s0)
                lbu     $a0, 1($a1)
                lbu     $v1, 2($a1)
                sll     $v0, 16
                or      $v1, $v0
                sll     $a0, 8
                or      $s1, $v1, $a0
                addiu   $v0, $s1, 4
                beq     $v0, $a2, loc_153C0
                nop

loc_1538C:                               # CODE XREF: ssl3_get_cert_status+64↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x121
                li      $a2, 0x9F
                b       loc_15320
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_153A4:                               # CODE XREF: ssl3_get_cert_status+58↑j
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                move    $v0, $a2
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_153C0:                               # CODE XREF: ssl3_get_cert_status+F0↑j
                lw      $a0, 0x130($s2)
                beqz    $a0, loc_153D8
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_153D8:                               # CODE XREF: ssl3_get_cert_status+130↑j
                la      $t9, BUF_memdup
                addiu   $a0, $s0, 4
                jalr    $t9 ; BUF_memdup
                move    $a1, $s1
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_1542C
                sw      $v0, 0x130($s2)
                lw      $v0, 0xDC($s2)
                sw      $s1, 0x134($s2)
                lw      $t9, 0x13C($v0)
                beqz    $t9, loc_15424
                nop
                lw      $a1, 0x140($v0)
                jalr    $t9
                move    $a0, $s2
                beqz    $v0, loc_15454
                lw      $gp, 0x38+var_20($sp)
                bltz    $v0, loc_15430
                la      $t9, ERR_put_error

loc_15424:                               # CODE XREF: ssl3_get_cert_status+16C↑j
                b       loc_15348
                li      $v0, 1
 # ---------------------------------------------------------------------------

loc_1542C:                               # CODE XREF: ssl3_get_cert_status+158↑j
                la      $t9, ERR_put_error

loc_15430:                               # CODE XREF: ssl3_get_cert_status+188↑j
                li      $a2, 0x41  # 'A'
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x121
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_15330
                li      $a2, 0x50  # 'P'
 # ---------------------------------------------------------------------------

loc_15454:                               # CODE XREF: ssl3_get_cert_status+180↑j
                la      $t9, ERR_put_error
                li      $a2, 0x148
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x121
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_15330
                li      $a2, 0x71  # 'q'
 # End of function ssl3_get_cert_status


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_new_session_ticket
ssl3_get_new_session_ticket:             # CODE XREF: ssl3_connect+190↓p
                                         # dtls1_connect+358↓p
                                         # DATA XREF: ...

var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4CED4
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_28($sp)
                lw      $a1, 8($a0)
                li      $v0, 0x4000
                addiu   $v1, $sp, 0x40+var_20
                sw      $v0, 0x40+var_30($sp)
                sw      $v1, 0x40+var_2C($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x11E1
                li      $a1, 0x11E0
                li      $a3, 0xFFFFFFFF
                jalr    $t9
                move    $s3, $a0
                move    $a1, $v0
                lw      $v0, 0x40+var_20($sp)
                beqz    $v0, loc_155BC
                lw      $gp, 0x40+var_28($sp)
                lw      $a0, 0x58($s3)
                li      $v0, 0x14
                lw      $v1, 0x340($a0)
                beq     $v1, $v0, loc_155E0
                li      $v0, 1
                li      $v0, 4
                bne     $v1, $v0, loc_156C8
                slti    $v0, $a1, 6
                bnez    $v0, loc_15564
                la      $t9, ERR_put_error
                lw      $s1, 0x40($s3)
                lw      $s0, 0xC0($s3)
                lbu     $v1, 0($s1)
                sll     $v1, 24
                sw      $v1, 0xD4($s0)
                lbu     $v0, 1($s1)
                sll     $v0, 16
                or      $v1, $v0
                sw      $v1, 0xD4($s0)
                lbu     $v0, 2($s1)
                sll     $v0, 8
                or      $v1, $v0
                sw      $v1, 0xD4($s0)
                lbu     $v0, 3($s1)
                or      $v1, $v0
                sw      $v1, 0xD4($s0)
                lbu     $v0, 4($s1)
                lbu     $a0, 5($s1)
                sll     $v0, 8
                or      $s2, $a0, $v0
                addiu   $v1, $s2, 6
                beq     $a1, $v1, loc_15608
                nop

loc_15564:                               # CODE XREF: ssl3_get_new_session_ticket+84↑j
                li      $a2, 0x9F
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x11B
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                li      $a2, 0x32  # '2'

loc_15584:                               # CODE XREF: ssl3_get_new_session_ticket+26C↓j
                la      $t9, ssl3_send_alert
                move    $a0, $s3
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x40+var_28($sp)
                li      $v1, 0xFFFFFFFF

loc_1559C:                               # CODE XREF: ssl3_get_new_session_ticket+294↓j
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_155BC:                               # CODE XREF: ssl3_get_new_session_ticket+5C↑j
                move    $v1, $a1
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_155E0:                               # CODE XREF: ssl3_get_new_session_ticket+70↑j
                li      $v1, 1
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                sw      $v0, 0x34C($a0)
                addiu   $sp, 0x40
                jr      $ra
                move    $v0, $v1
 # ---------------------------------------------------------------------------

loc_15608:                               # CODE XREF: ssl3_get_new_session_ticket+E0↑j
                lw      $a0, 0xCC($s0)
                beqz    $a0, loc_15628
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $s0, 0xC0($s3)
                lw      $gp, 0x40+var_28($sp)
                sw      $zero, 0xD0($s0)

loc_15628:                               # CODE XREF: ssl3_get_new_session_ticket+190↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                move    $a0, $s2
                addiu   $a1, (aS3ClntC - 0x40000)  # "s3_clnt.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x823
                lw      $v1, 0xC0($s3)
                lw      $gp, 0x40+var_28($sp)
                sw      $v0, 0xCC($s0)
                lw      $a0, 0xCC($v1)
                beqz    $a0, loc_156F0
                la      $t9, memcpy
                addiu   $s1, 6
                move    $a1, $s1
                jalr    $t9 ; memcpy
                move    $a2, $s2
                lw      $gp, 0x40+var_28($sp)
                lw      $s0, 0xC0($s3)
                la      $t9, EVP_sha256
                jalr    $t9 ; EVP_sha256
                sw      $s2, 0xD0($s0)
                lw      $gp, 0x40+var_28($sp)
                la      $t9, EVP_Digest
                sw      $v0, 0x40+var_30($sp)
                sw      $zero, 0x40+var_2C($sp)
                move    $a0, $s1
                move    $a1, $s2
                addiu   $a3, $s0, 0x44  # 'D'
                jalr    $t9 ; EVP_Digest
                addiu   $a2, $s0, 0x48  # 'H'
                lw      $gp, 0x40+var_28($sp)
                li      $v1, 1
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_156C8:                               # CODE XREF: ssl3_get_new_session_ticket+7C↑j
                la      $t9, ERR_put_error
                li      $a2, 0x72  # 'r'
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x11B
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                b       loc_15584
                li      $a2, 0xA
 # ---------------------------------------------------------------------------

loc_156F0:                               # CODE XREF: ssl3_get_new_session_ticket+1D4↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x11B
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                b       loc_1559C
                li      $v1, 0xFFFFFFFF
 # End of function ssl3_get_new_session_ticket


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_certificate_request
ssl3_get_certificate_request:            # CODE XREF: ssl3_connect:loc_17F8C↓p
                                         # dtls1_connect:loc_29EF0↓p
                                         # DATA XREF: ...

var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4CC38
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_8($sp)
                sw      $s7, 0x50+var_C($sp)
                sw      $s6, 0x50+var_10($sp)
                sw      $s5, 0x50+var_14($sp)
                sw      $s4, 0x50+var_18($sp)
                sw      $s3, 0x50+var_1C($sp)
                sw      $s2, 0x50+var_20($sp)
                sw      $s1, 0x50+var_24($sp)
                sw      $s0, 0x50+var_28($sp)
                sw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x100($a0)
                lw      $a1, 8($a0)
                addiu   $v0, $sp, 0x50+var_30
                sw      $v1, 0x50+var_40($sp)
                sw      $v0, 0x50+var_3C($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x1151
                li      $a1, 0x1150
                li      $a3, 0xFFFFFFFF
                jalr    $t9
                move    $s3, $a0
                move    $s1, $v0
                lw      $v0, 0x50+var_30($sp)
                beqz    $v0, loc_15810
                lw      $gp, 0x50+var_38($sp)
                lw      $a0, 0x58($s3)
                li      $v0, 0xE
                lw      $v1, 0x340($a0)
                beq     $v1, $v0, loc_15944
                sw      $zero, 0x350($a0)
                li      $v0, 0xD
                beq     $v1, $v0, loc_15840
                la      $t9, ssl3_send_alert
                move    $a0, $s3
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0xA
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0x106

loc_157D4:                               # CODE XREF: ssl3_get_certificate_request+3A8↓j
                                         # ssl3_get_certificate_request+480↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                move    $v0, $zero

loc_157E4:                               # CODE XREF: ssl3_get_certificate_request+224↓j
                                         # ssl3_get_certificate_request:loc_15B80↓j
                lw      $ra, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_15810:                               # CODE XREF: ssl3_get_certificate_request+6C↑j
                move    $v0, $s1
                lw      $ra, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_15840:                               # CODE XREF: ssl3_get_certificate_request+8C↑j
                lw      $v0, 0($s3)
                slti    $v0, 0x301
                bnez    $v0, loc_15864
                nop
                lw      $v1, 0x344($a0)
                lw      $v0, 0x10($v1)
                andi    $v0, 4
                bnez    $v0, loc_15A9C
                la      $t9, ssl3_send_alert

loc_15864:                               # CODE XREF: ssl3_get_certificate_request+130↑j
                la      $a0, loc_10000
                la      $t9, sk_new
                addiu   $a0, (sub_15CD8 - 0x10000)
                jalr    $t9 ; sk_new
                lw      $s0, 0x40($s3)
                move    $s7, $v0
                beqz    $v0, loc_15B88
                lw      $gp, 0x50+var_38($sp)
                lbu     $v1, 0($s0)
                li      $s5, 9
                sltiu   $v0, $v1, 0xA
                movn    $s5, $v1, $v0
                beqz    $s5, loc_158BC
                addiu   $a2, $s0, 1
                move    $a1, $zero

loc_158A0:                               # CODE XREF: ssl3_get_certificate_request+19C↓j
                lw      $v0, 0x58($s3)
                addu    $v1, $s0, $a1
                lbu     $a0, 1($v1)
                addu    $v0, $a1, $v0
                addiu   $a1, 1
                bne     $a1, $s5, loc_158A0
                sb      $a0, 0x358($v0)

loc_158BC:                               # CODE XREF: ssl3_get_certificate_request+17C↑j
                lw      $a0, 0($s3)
                li      $v0, 3
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_15AC8
                addu    $a1, $a2, $s5

loc_158D0:                               # CODE XREF: ssl3_get_certificate_request+3B4↓j
                                         # ssl3_get_certificate_request+408↓j
                lbu     $v0, 0($a1)
                lbu     $a0, 1($a1)
                sll     $v0, 8
                addiu   $a2, $a1, 2
                or      $s4, $a0, $v0
                subu    $v1, $a2, $s0
                addu    $v1, $s4
                beq     $v1, $s1, loc_159C8
                la      $t9, ssl3_send_alert
                move    $a0, $s3
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x32  # '2'
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0x9F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)

loc_15928:                               # CODE XREF: ssl3_get_certificate_request+37C↓j
                                         # ssl3_get_certificate_request+4BC↓j ...
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                move    $a0, $s7
                lw      $gp, 0x50+var_38($sp)
                b       loc_157E4
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_15944:                               # CODE XREF: ssl3_get_certificate_request+80↑j
                lw      $v1, 0x178($a0)
                li      $v0, 1
                beqz    $v1, loc_15998
                sw      $v0, 0x34C($a0)
                la      $t9, ssl3_digest_cached_records
                jalr    $t9 ; ssl3_digest_cached_records
                move    $a0, $s3
                bnez    $v0, loc_15998
                lw      $gp, 0x50+var_38($sp)
                lw      $ra, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_15998:                               # CODE XREF: ssl3_get_certificate_request+234↑j
                                         # ssl3_get_certificate_request+248↑j
                lw      $ra, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_159C8:                               # CODE XREF: ssl3_get_certificate_request+1D4↑j
                beqz    $s4, loc_15B4C
                nop
                lbu     $v0, 2($a1)
                lbu     $v1, 1($a2)
                sll     $v0, 8
                or      $s0, $v1, $v0
                addiu   $s1, $s0, 2
                sltu    $v0, $s4, $s1
                bnez    $v0, loc_15B28
                addiu   $s2, $a1, 4
                b       loc_15A20
                addiu   $s6, $sp, 0x50+var_2C
 # ---------------------------------------------------------------------------

loc_159F8:                               # CODE XREF: ssl3_get_certificate_request+358↓j
                beqz    $v1, loc_15B4C
                nop
                lbu     $v0, 0($s0)
                lbu     $v1, 1($s0)
                sll     $v0, 8
                or      $s0, $v1, $v0
                addu    $s1, $a0, $s0
                sltu    $v0, $s4, $s1
                bnez    $v0, loc_15B28
                nop

loc_15A20:                               # CODE XREF: ssl3_get_certificate_request+2D8↑j
                la      $t9, d2i_X509_NAME
                sw      $s2, 0x50+var_2C($sp)
                move    $a2, $s0
                move    $a0, $zero
                jalr    $t9 ; d2i_X509_NAME
                move    $a1, $s6
                lw      $gp, 0x50+var_38($sp)
                addu    $s0, $s2, $s0
                move    $a0, $s7
                move    $a1, $v0
                addiu   $s2, $s0, 2
                beqz    $v0, loc_15BDC
                la      $t9, sk_push
                lw      $v0, 0x50+var_2C($sp)
                bne     $s0, $v0, loc_15C2C
                nop
                jalr    $t9 ; sk_push
                nop
                lw      $gp, 0x50+var_38($sp)
                addiu   $a0, $s1, 2
                bnez    $v0, loc_159F8
                sltu    $v1, $s1, $s4
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_15928
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_15A9C:                               # CODE XREF: ssl3_get_certificate_request+144↑j
                move    $a0, $s3
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0xA
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0xE8
                b       loc_157D4
                sw      $zero, 0x50+var_40($sp)
 # ---------------------------------------------------------------------------

loc_15AC8:                               # CODE XREF: ssl3_get_certificate_request+1B0↑j
                slti    $v0, $a0, 0x303
                bnez    $v0, loc_158D0
                addiu   $s4, $a1, 2
                lbu     $v0, 0($a1)
                lbu     $a0, 1($a1)
                sll     $v0, 8
                or      $s2, $a0, $v0
                subu    $v1, $s4, $s0
                addu    $v1, $s2, $v1
                addiu   $v1, 2
                sltu    $v1, $s1, $v1
                bnez    $v1, loc_15C68
                la      $t9, ssl3_send_alert
                andi    $v0, $s2, 1
                bnez    $v0, loc_15BA8
                move    $a0, $s3
                la      $t9, tls1_process_sigalgs
                move    $a1, $s4
                jalr    $t9 ; tls1_process_sigalgs
                move    $a2, $s2
                beqz    $v0, loc_15BA0
                lw      $gp, 0x50+var_38($sp)
                b       loc_158D0
                addu    $a1, $s4, $s2
 # ---------------------------------------------------------------------------

loc_15B28:                               # CODE XREF: ssl3_get_certificate_request+2D0↑j
                                         # ssl3_get_certificate_request+300↑j
                lw      $v0, 0xF8($s3)
                lui     $v1, 0x2000
                and     $v0, $v1
                beqz    $v0, loc_15CA0
                la      $t9, ssl3_send_alert
                la      $t9, ERR_clear_error

loc_15B40:                               # CODE XREF: ssl3_get_certificate_request+4D0↓j
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x50+var_38($sp)

loc_15B4C:                               # CODE XREF: ssl3_get_certificate_request:loc_159C8↑j
                                         # ssl3_get_certificate_request:loc_159F8↑j
                lw      $v1, 0x58($s3)
                li      $v0, 1
                lw      $a0, 0x364($v1)
                sw      $v0, 0x350($v1)
                beqz    $a0, loc_15B80
                sw      $s5, 0x354($v1)
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($s3)
                li      $v0, 1

loc_15B80:                               # CODE XREF: ssl3_get_certificate_request+444↑j
                b       loc_157E4
                sw      $s7, 0x364($v1)
 # ---------------------------------------------------------------------------

loc_15B88:                               # CODE XREF: ssl3_get_certificate_request+164↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0x41  # 'A'
                b       loc_157D4
                sw      $zero, 0x50+var_40($sp)
 # ---------------------------------------------------------------------------

loc_15BA0:                               # CODE XREF: ssl3_get_certificate_request+400↑j
                la      $t9, ssl3_send_alert
                move    $a0, $s3

loc_15BA8:                               # CODE XREF: ssl3_get_certificate_request+3E8↑j
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x32  # '2'
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0x168
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_15928
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_15BDC:                               # CODE XREF: ssl3_get_certificate_request+334↑j
                lw      $v0, 0xF8($s3)
                lui     $v1, 0x2000
                and     $v0, $v1
                bnez    $v0, loc_15B40
                la      $t9, ERR_clear_error
                la      $t9, ssl3_send_alert
                move    $a0, $s3
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x32  # '2'
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0xD
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_15928
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_15C2C:                               # CODE XREF: ssl3_get_certificate_request+340↑j
                la      $t9, ssl3_send_alert
                move    $a0, $s3
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x32  # '2'
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0x83
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_15928
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_15C68:                               # CODE XREF: ssl3_get_certificate_request+3DC↑j
                move    $a0, $s3
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x32  # '2'
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0x92
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_15928
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_15CA0:                               # CODE XREF: ssl3_get_certificate_request+41C↑j
                move    $a0, $s3
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x32  # '2'
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x87
                li      $a2, 0x84
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_15928
                lw      $gp, 0x50+var_38($sp)
 # End of function ssl3_get_certificate_request


 # =============== S U B R O U T I N E =======================================


sub_15CD8:                               # DATA XREF: ssl3_get_certificate_request+154↑o
                li      $gp, 0x4C678
                addu    $gp, $t9
                lw      $a0, 0($a0)
                la      $t9, X509_NAME_cmp
                jr      $t9 ; X509_NAME_cmp
                lw      $a1, 0($a1)
 # End of function sub_15CD8


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_key_exchange
ssl3_get_key_exchange:                   # CODE XREF: ssl3_connect+5DC↓p
                                         # dtls1_connect:loc_29F1C↓p
                                         # DATA XREF: ...

var_E8          = -0xE8
var_E4          = -0xE4
var_E0          = -0xE0
var_D8          = -0xD8
var_D4          = -0xD4
var_D0          = -0xD0
var_B8          = -0xB8
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x4C65C
                addu    $gp, $t9
                addiu   $sp, -0xF8
                sw      $ra, 0xF8+var_4($sp)
                sw      $fp, 0xF8+var_8($sp)
                sw      $s7, 0xF8+var_C($sp)
                sw      $s6, 0xF8+var_10($sp)
                sw      $s5, 0xF8+var_14($sp)
                sw      $s4, 0xF8+var_18($sp)
                sw      $s3, 0xF8+var_1C($sp)
                sw      $s2, 0xF8+var_20($sp)
                sw      $s1, 0xF8+var_24($sp)
                sw      $s0, 0xF8+var_28($sp)
                sw      $gp, 0xF8+var_E0($sp)
                lw      $v1, 0x100($a0)
                lw      $a1, 8($a0)
                addiu   $v0, $sp, 0xF8+var_D4
                sw      $v1, 0xF8+var_E8($sp)
                sw      $v0, 0xF8+var_E4($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x1141
                li      $a1, 0x1140
                li      $a3, 0xFFFFFFFF
                jalr    $t9
                move    $s2, $a0
                move    $s1, $v0
                lw      $v0, 0xF8+var_D4($sp)
                beqz    $v0, loc_15DBC
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a1, 0x58($s2)
                li      $v0, 0xC
                lw      $v1, 0x340($a1)
                beq     $v1, $v0, loc_15DF4
                li      $v0, 1
                li      $v1, 1
                sw      $v0, 0x34C($a1)

loc_15D88:                               # CODE XREF: ssl3_get_key_exchange+2FC↓j
                lw      $ra, 0xF8+var_4($sp)
                lw      $fp, 0xF8+var_8($sp)
                lw      $s7, 0xF8+var_C($sp)
                lw      $s6, 0xF8+var_10($sp)
                lw      $s5, 0xF8+var_14($sp)
                lw      $s4, 0xF8+var_18($sp)
                lw      $s3, 0xF8+var_1C($sp)
                lw      $s2, 0xF8+var_20($sp)
                lw      $s1, 0xF8+var_24($sp)
                lw      $s0, 0xF8+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0xF8
 # ---------------------------------------------------------------------------

loc_15DBC:                               # CODE XREF: ssl3_get_key_exchange+70↑j
                move    $v1, $s1
                lw      $ra, 0xF8+var_4($sp)
                lw      $fp, 0xF8+var_8($sp)
                lw      $s7, 0xF8+var_C($sp)
                lw      $s6, 0xF8+var_10($sp)
                lw      $s5, 0xF8+var_14($sp)
                lw      $s4, 0xF8+var_18($sp)
                lw      $s3, 0xF8+var_1C($sp)
                lw      $s2, 0xF8+var_20($sp)
                lw      $s1, 0xF8+var_24($sp)
                lw      $s0, 0xF8+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0xF8
 # ---------------------------------------------------------------------------

loc_15DF4:                               # CODE XREF: ssl3_get_key_exchange+84↑j
                lw      $s0, 0xC0($s2)
                lw      $a0, 0x90($s0)
                beqz    $a0, loc_160F0
                lw      $s5, 0x40($s2)
                lw      $a0, 0x6C($a0)
                beqz    $a0, loc_15E2C
                la      $t9, RSA_free
                jalr    $t9 ; RSA_free
                nop
                lw      $v0, 0xC0($s2)
                lw      $a1, 0x58($s2)
                lw      $v1, 0x90($v0)
                lw      $gp, 0xF8+var_E0($sp)
                sw      $zero, 0x6C($v1)

loc_15E2C:                               # CODE XREF: ssl3_get_key_exchange+114↑j
                                         # ssl3_get_key_exchange+410↓j
                lw      $v0, 0x344($a1)
                la      $t9, EVP_MD_CTX_init
                lw      $s4, 0xC($v0)
                addiu   $s7, $sp, 0xF8+var_D0
                move    $a0, $s7
                jalr    $t9 ; EVP_MD_CTX_init
                lw      $s6, 0x10($v0)
                andi    $v0, $s4, 0x400
                beqz    $v0, loc_15F70
                lw      $gp, 0xF8+var_E0($sp)
                lbu     $v0, 0($s5)
                lbu     $a0, 1($s5)
                sll     $v0, 8
                or      $s0, $a0, $v0
                addiu   $v1, $s0, 2
                slt     $v1, $s1, $v1
                bnez    $v1, loc_15FF8
                sw      $s0, 0xF8+var_D8($sp)
                la      $t9, BN_bin2bn
                addiu   $s3, $s5, 2
                move    $a0, $s3
                move    $a1, $s0
                jalr    $t9 ; BN_bin2bn
                move    $a2, $zero
                lw      $gp, 0xF8+var_E0($sp)
                beqz    $v0, loc_161D8
                sw      $v0, 0x190($s2)
                lw      $v1, 0xF8+var_D8($sp)
                addiu   $a0, $s0, 4
                addu    $a2, $s3, $v1
                lbu     $v0, 0($a2)
                lbu     $v1, 1($a2)
                sll     $v0, 8
                or      $a1, $v1, $v0
                addu    $s0, $a0, $a1
                slt     $v0, $s1, $s0
                beqz    $v0, loc_16098
                sw      $a1, 0xF8+var_D8($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0xF8+var_E8($sp)
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x15D

loc_15ED8:                               # CODE XREF: ssl3_get_key_exchange+314↓j
                                         # ssl3_get_key_exchange+3F4↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xF8+var_E0($sp)
                sw      $zero, 0xF8+var_38($sp)
                li      $a2, 0x32  # '2'
                move    $fp, $zero

loc_15EF0:                               # CODE XREF: ssl3_get_key_exchange+374↓j
                                         # ssl3_get_key_exchange+39C↓j ...
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                lw      $a0, 0xF8+var_38($sp)
                beqz    $fp, loc_15F28
                lw      $gp, 0xF8+var_E0($sp)

loc_15F18:                               # CODE XREF: ssl3_get_key_exchange+7F0↓j
                la      $t9, RSA_free
                jalr    $t9 ; RSA_free
                move    $a0, $fp
                lw      $gp, 0xF8+var_E0($sp)

loc_15F28:                               # CODE XREF: ssl3_get_key_exchange+21C↑j
                                         # ssl3_get_key_exchange+2CC↓j
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s7
                lw      $gp, 0xF8+var_E0($sp)
                li      $v1, 0xFFFFFFFF
                lw      $ra, 0xF8+var_4($sp)
                lw      $fp, 0xF8+var_8($sp)
                lw      $s7, 0xF8+var_C($sp)
                lw      $s6, 0xF8+var_10($sp)
                lw      $s5, 0xF8+var_14($sp)
                lw      $s4, 0xF8+var_18($sp)
                lw      $s3, 0xF8+var_1C($sp)
                lw      $s2, 0xF8+var_20($sp)
                lw      $s1, 0xF8+var_24($sp)
                lw      $s0, 0xF8+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0xF8
 # ---------------------------------------------------------------------------

loc_15F70:                               # CODE XREF: ssl3_get_key_exchange+158↑j
                andi    $v0, $s4, 1
                bnez    $v0, loc_16010
                la      $t9, RSA_new

loc_15F7C:                               # CODE XREF: ssl3_get_key_exchange+788↓j
                sw      $zero, 0xF8+var_38($sp)

loc_15F80:                               # CODE XREF: ssl3_get_key_exchange:loc_16260↓j
                andi    $v0, $s6, 4
                bnez    $v0, loc_15FC8
                andi    $v0, $s4, 0x100
                bnez    $v0, loc_15FC8
                nop

loc_15F94:                               # CODE XREF: ssl3_get_key_exchange+868↓j
                la      $t9, ERR_put_error
                sw      $zero, 0xF8+var_E8($sp)
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xF8+var_E0($sp)

loc_15FB4:                               # CODE XREF: ssl3_get_key_exchange+504↓j
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                lw      $a0, 0xF8+var_38($sp)
                b       loc_15F28
                lw      $gp, 0xF8+var_E0($sp)
 # ---------------------------------------------------------------------------

loc_15FC8:                               # CODE XREF: ssl3_get_key_exchange+290↑j
                                         # ssl3_get_key_exchange+298↑j
                bnez    $s1, loc_16070
                la      $t9, ERR_put_error

loc_15FD0:                               # CODE XREF: ssl3_get_key_exchange+910↓j
                la      $t9, EVP_PKEY_free

loc_15FD4:                               # CODE XREF: ssl3_get_key_exchange+71C↓j
                jalr    $t9 ; EVP_PKEY_free
                lw      $a0, 0xF8+var_38($sp)
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s7
                lw      $gp, 0xF8+var_E0($sp)
                b       loc_15D88
                li      $v1, 1
 # ---------------------------------------------------------------------------

loc_15FF8:                               # CODE XREF: ssl3_get_key_exchange+178↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x15E
                b       loc_15ED8
                sw      $zero, 0xF8+var_E8($sp)
 # ---------------------------------------------------------------------------

loc_16010:                               # CODE XREF: ssl3_get_key_exchange+280↑j
                jalr    $t9 ; RSA_new
                nop
                move    $fp, $v0
                beqz    $v0, loc_164EC
                lw      $gp, 0xF8+var_E0($sp)
                lbu     $v0, 0($s5)
                lbu     $a0, 1($s5)
                sll     $v0, 8
                or      $s0, $a0, $v0
                addiu   $v1, $s0, 2
                slt     $v1, $s1, $v1
                beqz    $v1, loc_1610C
                sw      $s0, 0xF8+var_D8($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0xF8+var_E8($sp)
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x79  # 'y'

loc_16058:                               # CODE XREF: ssl3_get_key_exchange+478↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xF8+var_E0($sp)
                li      $a2, 0x32  # '2'
                b       loc_15EF0
                sw      $zero, 0xF8+var_38($sp)
 # ---------------------------------------------------------------------------

loc_16070:                               # CODE XREF: ssl3_get_key_exchange:loc_15FC8↑j
                sw      $zero, 0xF8+var_E8($sp)
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x99

loc_16080:                               # CODE XREF: ssl3_get_key_exchange+7BC↓j
                                         # ssl3_get_key_exchange+888↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xF8+var_E0($sp)
                move    $fp, $zero
                b       loc_15EF0
                li      $a2, 0x32  # '2'
 # ---------------------------------------------------------------------------

loc_16098:                               # CODE XREF: ssl3_get_key_exchange+1C8↑j
                la      $t9, BN_bin2bn
                addiu   $s3, $a2, 2
                move    $a0, $s3
                jalr    $t9 ; BN_bin2bn
                move    $a2, $zero
                lw      $gp, 0xF8+var_E0($sp)
                beqz    $v0, loc_161D8
                sw      $v0, 0x194($s2)
                lw      $v0, 0xF8+var_D8($sp)
                addu    $a0, $s3, $v0
                lbu     $a1, 0($a0)
                addiu   $v0, $a1, 1
                addu    $s0, $v0, $s0
                slt     $v1, $s1, $s0
                beqz    $v1, loc_16174
                sw      $a1, 0xF8+var_D8($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x15F
                b       loc_15ED8
                sw      $zero, 0xF8+var_E8($sp)
 # ---------------------------------------------------------------------------

loc_160F0:                               # CODE XREF: ssl3_get_key_exchange+108↑j
                la      $t9, ssl_sess_cert_new
                jalr    $t9 ; ssl_sess_cert_new
                nop
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a1, 0x58($s2)
                b       loc_15E2C
                sw      $v0, 0x90($s0)
 # ---------------------------------------------------------------------------

loc_1610C:                               # CODE XREF: ssl3_get_key_exchange+348↑j
                la      $t9, BN_bin2bn
                addiu   $s3, $s5, 2
                lw      $a2, 0xF8+var_E8($fp)
                move    $a0, $s3
                jalr    $t9 ; BN_bin2bn
                move    $a1, $s0
                lw      $gp, 0xF8+var_E0($sp)
                beqz    $v0, loc_16504
                sw      $v0, 0xF8+var_E8($fp)
                lw      $v1, 0xF8+var_D8($sp)
                addiu   $a0, $s0, 4
                addu    $a3, $s3, $v1
                lbu     $v0, 0($a3)
                lbu     $v1, 1($a3)
                sll     $v0, 8
                or      $a1, $v1, $v0
                addu    $s3, $a0, $a1
                slt     $v0, $s1, $s3
                beqz    $v0, loc_16200
                sw      $a1, 0xF8+var_D8($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x78  # 'x'
                b       loc_16058
                sw      $zero, 0xF8+var_E8($sp)
 # ---------------------------------------------------------------------------

loc_16174:                               # CODE XREF: ssl3_get_key_exchange+3DC↑j
                la      $t9, BN_bin2bn
                addiu   $s3, $a0, 1
                move    $a0, $s3
                jalr    $t9 ; BN_bin2bn
                move    $a2, $zero
                lw      $gp, 0xF8+var_E0($sp)
                beqz    $v0, loc_161D8
                sw      $v0, 0x198($s2)
                lw      $v1, 0xF8+var_D8($sp)
                addiu   $a0, $s0, 2
                addu    $a3, $s3, $v1
                lbu     $v0, 0($a3)
                lbu     $v1, 1($a3)
                sll     $v0, 8
                or      $a1, $v1, $v0
                addu    $s3, $a0, $a1
                slt     $v0, $s1, $s3
                beqz    $v0, loc_16444
                sw      $a1, 0xF8+var_D8($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x15C
                b       loc_15ED8
                sw      $zero, 0xF8+var_E8($sp)
 # ---------------------------------------------------------------------------

loc_161D8:                               # CODE XREF: ssl3_get_key_exchange+19C↑j
                                         # ssl3_get_key_exchange+3BC↑j ...
                la      $t9, ERR_put_error
                sw      $zero, 0xF8+var_E8($sp)
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 3

loc_161EC:                               # CODE XREF: ssl3_get_key_exchange+808↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xF8+var_E0($sp)
                b       loc_15FB4
                sw      $zero, 0xF8+var_38($sp)
 # ---------------------------------------------------------------------------

loc_16200:                               # CODE XREF: ssl3_get_key_exchange+460↑j
                la      $t9, BN_bin2bn
                addiu   $s0, $a3, 2
                lw      $a2, 0xF8+var_E4($fp)
                jalr    $t9 ; BN_bin2bn
                move    $a0, $s0
                lw      $gp, 0xF8+var_E0($sp)
                beqz    $v0, loc_16504
                sw      $v0, 0xF8+var_E4($fp)
                andi    $v0, $s6, 1
                beqz    $v0, loc_164B8
                lw      $a0, 0xF8+var_D8($sp)
                lw      $v0, 0xC0($s2)
                la      $t9, X509_get_pubkey
                lw      $v1, 0x90($v0)
                addu    $s0, $a0
                lw      $a0, 0xC($v1)
                jalr    $t9 ; X509_get_pubkey
                subu    $s1, $s3
                lw      $v1, 0xC0($s2)
                sw      $v0, 0xF8+var_38($sp)
                lw      $v0, 0x90($v1)
                lw      $gp, 0xF8+var_E0($sp)
                sw      $fp, 0x6C($v0)
                lw      $v0, 0xF8+var_38($sp)

loc_16260:                               # CODE XREF: ssl3_get_key_exchange+7A4↓j
                                         # ssl3_get_key_exchange+84C↓j
                beqz    $v0, loc_15F80
                li      $v0, 3
                lw      $a0, 0($s2)
                sra     $v1, $a0, 8
                bne     $v1, $v0, loc_16284
                la      $t9, EVP_sha1
                slti    $v0, $a0, 0x303
                beqz    $v0, loc_16548
                nop

loc_16284:                               # CODE XREF: ssl3_get_key_exchange+57C↑j
                jalr    $t9 ; EVP_sha1
                nop
                lw      $gp, 0xF8+var_E0($sp)
                move    $s4, $v0

loc_16294:                               # CODE XREF: ssl3_get_key_exchange+93C↓j
                lbu     $v0, 0($s0)
                lbu     $v1, 1($s0)
                sll     $v0, 8
                or      $v1, $v0
                la      $t9, EVP_PKEY_size
                lw      $a0, 0xF8+var_38($sp)
                jalr    $t9 ; EVP_PKEY_size
                sw      $v1, 0xF8+var_D8($sp)
                lw      $s6, 0xF8+var_D8($sp)
                addiu   $v1, $s1, -2
                bne     $s6, $v1, loc_164A0
                lw      $gp, 0xF8+var_E0($sp)
                slt     $v0, $s6
                bnez    $v0, loc_164A4
                la      $t9, ERR_put_error
                blez    $s6, loc_164A4
                lw      $v0, 0xF8+var_38($sp)
                lw      $v1, 0($v0)
                li      $v0, 6
                bne     $v1, $v0, loc_16584
                addiu   $s0, 2
                lw      $a0, 0($s2)
                li      $v0, 3
                sra     $v1, $a0, 8
                bne     $v1, $v0, loc_1630C
                addiu   $v1, $sp, 0xF8+var_B8
                slti    $v0, $a0, 0x303
                beqz    $v0, loc_16588
                la      $t9, EVP_DigestInit_ex
                addiu   $v1, $sp, 0xF8+var_B8

loc_1630C:                               # CODE XREF: ssl3_get_key_exchange+600↑j
                sw      $v1, 0xF8+var_30($sp)
                addiu   $s4, $sp, 0xF8+var_D8
                sw      $v1, 0xF8+var_34($sp)
                move    $s1, $zero
                li      $fp, 2

loc_16320:                               # CODE XREF: ssl3_get_key_exchange+6E0↓j
                la      $t9, EVP_MD_CTX_set_flags
                move    $a0, $s7
                jalr    $t9 ; EVP_MD_CTX_set_flags
                li      $a1, 8
                li      $v0, 2
                beq     $fp, $v0, loc_16638
                lw      $gp, 0xF8+var_E0($sp)
                lw      $v0, 0xDC($s2)
                lw      $a1, 0x90($v0)

loc_16344:                               # CODE XREF: ssl3_get_key_exchange+948↓j
                la      $t9, EVP_DigestInit_ex
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s7
                move    $a1, $s5
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s3
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a1, 0xF8+var_34($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $s4
                lw      $v1, 0xF8+var_D8($sp)
                lw      $v0, 0xF8+var_34($sp)
                addiu   $fp, -1
                addu    $v0, $v1
                lw      $gp, 0xF8+var_E0($sp)
                sw      $v0, 0xF8+var_34($sp)
                bnez    $fp, loc_16320
                addu    $s1, $v1
                lw      $v1, 0xF8+var_38($sp)
                sw      $s6, 0xF8+var_E8($sp)
                lw      $v0, 0x14($v1)
                la      $t9, RSA_verify
                lw      $a1, 0xF8+var_30($sp)
                sw      $v0, 0xF8+var_E4($sp)
                move    $a2, $s1
                move    $a3, $s0
                jalr    $t9 ; RSA_verify
                li      $a0, 0x72  # 'r'
                sw      $v0, 0xF8+var_D8($sp)
                bltz    $v0, loc_16644
                lw      $gp, 0xF8+var_E0($sp)
                bnez    $v0, loc_15FD4
                la      $t9, EVP_PKEY_free
                la      $t9, ERR_put_error

loc_1641C:                               # CODE XREF: ssl3_get_key_exchange+918↓j
                sw      $zero, 0xF8+var_E8($sp)
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x7B  # '{'

loc_1642C:                               # CODE XREF: ssl3_get_key_exchange+960↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xF8+var_E0($sp)
                move    $fp, $zero
                b       loc_15EF0
                li      $a2, 0x33  # '3'
 # ---------------------------------------------------------------------------

loc_16444:                               # CODE XREF: ssl3_get_key_exchange+4C4↑j
                la      $t9, BN_bin2bn
                addiu   $s0, $a3, 2
                move    $a0, $s0
                jalr    $t9 ; BN_bin2bn
                move    $a2, $zero
                lw      $gp, 0xF8+var_E0($sp)
                beqz    $v0, loc_161D8
                sw      $v0, 0x19C($s2)
                lw      $v0, 0xF8+var_D8($sp)
                andi    $v1, $s6, 1
                addu    $s0, $v0
                bnez    $v1, loc_16528
                subu    $s1, $s3
                andi    $v0, $s6, 2
                beqz    $v0, loc_15F7C
                la      $t9, X509_get_pubkey
                lw      $v0, 0xC0($s2)
                lw      $v1, 0x90($v0)
                jalr    $t9 ; X509_get_pubkey
                lw      $a0, 0x24($v1)
                lw      $gp, 0xF8+var_E0($sp)
                b       loc_16260
                sw      $v0, 0xF8+var_38($sp)
 # ---------------------------------------------------------------------------

loc_164A0:                               # CODE XREF: ssl3_get_key_exchange+5C8↑j
                la      $t9, ERR_put_error

loc_164A4:                               # CODE XREF: ssl3_get_key_exchange+5D4↑j
                                         # ssl3_get_key_exchange+5DC↑j
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x108
                b       loc_16080
                sw      $zero, 0xF8+var_E8($sp)
 # ---------------------------------------------------------------------------

loc_164B8:                               # CODE XREF: ssl3_get_key_exchange+530↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xF8+var_E8($sp)
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xF8+var_E0($sp)

loc_164D8:                               # CODE XREF: ssl3_get_key_exchange+82C↓j
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $zero
                b       loc_15F18
                lw      $gp, 0xF8+var_E0($sp)
 # ---------------------------------------------------------------------------

loc_164EC:                               # CODE XREF: ssl3_get_key_exchange+328↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x41  # 'A'
                b       loc_161EC
                sw      $zero, 0xF8+var_E8($sp)
 # ---------------------------------------------------------------------------

loc_16504:                               # CODE XREF: ssl3_get_key_exchange+434↑j
                                         # ssl3_get_key_exchange+524↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xF8+var_E8($sp)
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 3
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_164D8
                lw      $gp, 0xF8+var_E0($sp)
 # ---------------------------------------------------------------------------

loc_16528:                               # CODE XREF: ssl3_get_key_exchange+77C↑j
                lw      $v0, 0xC0($s2)
                la      $t9, X509_get_pubkey
                lw      $v1, 0x90($v0)
                jalr    $t9 ; X509_get_pubkey
                lw      $a0, 0xC($v1)
                lw      $gp, 0xF8+var_E0($sp)
                b       loc_16260
                sw      $v0, 0xF8+var_38($sp)
 # ---------------------------------------------------------------------------

loc_16548:                               # CODE XREF: ssl3_get_key_exchange+588↑j
                la      $t9, tls12_get_sigid
                jalr    $t9 ; tls12_get_sigid
                lw      $a0, 0xF8+var_38($sp)
                move    $v1, $v0
                li      $v0, 0xFFFFFFFF
                beq     $v1, $v0, loc_15F94
                lw      $gp, 0xF8+var_E0($sp)
                lbu     $v0, 1($s0)
                beq     $v1, $v0, loc_16614
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x172
                b       loc_16080
                sw      $zero, 0xF8+var_E8($sp)
 # ---------------------------------------------------------------------------

loc_16584:                               # CODE XREF: ssl3_get_key_exchange+5EC↑j
                la      $t9, EVP_DigestInit_ex

loc_16588:                               # CODE XREF: ssl3_get_key_exchange+60C↑j
                move    $a1, $s4
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $s7
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s5
                move    $a2, $s3
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s7
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a3, 0xF8+var_38($sp)
                la      $t9, EVP_VerifyFinal
                move    $a1, $s0
                move    $a2, $s6
                jalr    $t9 ; EVP_VerifyFinal
                move    $a0, $s7
                bgtz    $v0, loc_15FD0
                lw      $gp, 0xF8+var_E0($sp)
                b       loc_1641C
                la      $t9, ERR_put_error
 # ---------------------------------------------------------------------------

loc_16614:                               # CODE XREF: ssl3_get_key_exchange+874↑j
                la      $t9, tls12_get_hash
                jalr    $t9 ; tls12_get_hash
                lbu     $a0, 0($s0)
                move    $s4, $v0
                beqz    $v0, loc_1665C
                lw      $gp, 0xF8+var_E0($sp)
                addiu   $s0, 2
                b       loc_16294
                addiu   $s1, -2
 # ---------------------------------------------------------------------------

loc_16638:                               # CODE XREF: ssl3_get_key_exchange+640↑j
                lw      $v0, 0xDC($s2)
                b       loc_16344
                lw      $a1, 0x8C($v0)
 # ---------------------------------------------------------------------------

loc_16644:                               # CODE XREF: ssl3_get_key_exchange+714↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x76  # 'v'
                b       loc_1642C
                sw      $zero, 0xF8+var_E8($sp)
 # ---------------------------------------------------------------------------

loc_1665C:                               # CODE XREF: ssl3_get_key_exchange+930↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8D
                li      $a2, 0x170
                b       loc_16080
                sw      $zero, 0xF8+var_E8($sp)
 # End of function ssl3_get_key_exchange


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_server_certificate
ssl3_get_server_certificate:             # CODE XREF: ssl3_connect+914↓p
                                         # dtls1_connect+9D0↓p
                                         # DATA XREF: ...

var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4BCDC
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_8($sp)
                sw      $s7, 0x50+var_C($sp)
                sw      $s6, 0x50+var_10($sp)
                sw      $s5, 0x50+var_14($sp)
                sw      $s4, 0x50+var_18($sp)
                sw      $s3, 0x50+var_1C($sp)
                sw      $s2, 0x50+var_20($sp)
                sw      $s1, 0x50+var_24($sp)
                sw      $s0, 0x50+var_28($sp)
                sw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x100($a0)
                lw      $a1, 8($a0)
                addiu   $v0, $sp, 0x50+var_30
                sw      $v1, 0x50+var_40($sp)
                sw      $v0, 0x50+var_3C($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x1131
                li      $a1, 0x1130
                li      $a3, 0xFFFFFFFF
                jalr    $t9
                move    $s5, $a0
                move    $s0, $v0
                lw      $v0, 0x50+var_30($sp)
                beqz    $v0, loc_167A4
                lw      $gp, 0x50+var_38($sp)
                lw      $a1, 0x58($s5)
                li      $v0, 0xC
                lw      $a0, 0x340($a1)
                beq     $a0, $v0, loc_167D4
                nop
                lw      $v1, 0x344($a1)
                lw      $v0, 0x10($v1)
                andi    $v0, 0x20
                beqz    $v0, loc_1671C
                li      $v0, 0xB
                li      $v0, 0xE
                beq     $a0, $v0, loc_167D4
                li      $v0, 0xB

loc_1671C:                               # CODE XREF: ssl3_get_server_certificate+94↑j
                beq     $a0, $v0, loc_16810
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x90
                li      $a2, 0x72  # 'r'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                li      $s0, 0xA
                move    $s7, $zero
                move    $s6, $zero
                move    $s4, $zero

loc_16750:                               # CODE XREF: ssl3_get_server_certificate+2CC↓j
                                         # ssl3_get_server_certificate+2F8↓j ...
                la      $t9, ssl3_send_alert
                move    $a2, $s0
                move    $a0, $s5
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x50+var_38($sp)
                move    $s1, $s6
                li      $s0, 0xFFFFFFFF

loc_16770:                               # CODE XREF: ssl3_get_server_certificate+458↓j
                                         # ssl3_get_server_certificate+48C↓j ...
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s4
                lw      $gp, 0x50+var_38($sp)
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                move    $a0, $s7
                lw      $gp, 0x50+var_38($sp)
                la      $a1, X509_free
                la      $t9, sk_pop_free
                jalr    $t9 ; sk_pop_free
                move    $a0, $s1
                lw      $gp, 0x50+var_38($sp)

loc_167A4:                               # CODE XREF: ssl3_get_server_certificate+6C↑j
                move    $v0, $s0
                lw      $ra, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_167D4:                               # CODE XREF: ssl3_get_server_certificate+80↑j
                                         # ssl3_get_server_certificate+A0↑j
                li      $s0, 1
                li      $v0, 1
                sw      $v0, 0x34C($a1)
                lw      $ra, 0x50+var_8($sp)
                move    $v0, $s0
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_16810:                               # CODE XREF: ssl3_get_server_certificate:loc_1671C↑j
                la      $t9, sk_new_null
                jalr    $t9 ; sk_new_null
                lw      $s4, 0x40($s5)
                move    $s6, $v0
                beqz    $v0, loc_16AD4
                lw      $gp, 0x50+var_38($sp)
                lbu     $v0, 0($s4)
                lbu     $a0, 2($s4)
                lbu     $v1, 1($s4)
                sll     $v0, 16
                or      $a0, $v0
                sll     $v1, 8
                or      $s3, $a0, $v1
                addiu   $v0, $s3, 3
                bne     $v0, $s0, loc_16948
                la      $t9, ERR_put_error
                beqz    $s3, loc_16974
                addiu   $a1, $s4, 3
                lbu     $v0, 3($s4)
                lbu     $a0, 1($a1)
                lbu     $v1, 2($a1)
                sll     $v0, 16
                or      $v1, $v0
                sll     $a0, 8
                or      $s1, $v1, $a0
                addiu   $s2, $s1, 3
                sltu    $v0, $s3, $s2
                bnez    $v0, loc_16B10
                li      $a0, 0x14
                addiu   $s0, $s4, 6
                b       loc_168E8
                addiu   $s4, $sp, 0x50+var_2C
 # ---------------------------------------------------------------------------

loc_16890:                               # CODE XREF: ssl3_get_server_certificate+2A0↓j
                lw      $v0, 0x50+var_2C($sp)
                bne     $v1, $v0, loc_16B20
                li      $a2, 0x87
                jalr    $t9 ; sk_push
                nop
                lw      $gp, 0x50+var_38($sp)
                beqz    $v0, loc_16B48
                sltu    $v1, $s2, $s3
                beqz    $v1, loc_16974
                lw      $a1, 0x50+var_2C($sp)
                lbu     $v0, 0($a1)
                lbu     $a0, 2($a1)
                lbu     $v1, 1($a1)
                sll     $v0, 16
                or      $a0, $v0
                sll     $v1, 8
                or      $s1, $a0, $v1
                addiu   $v0, $s1, 3
                addu    $s2, $v0
                sltu    $v0, $s3, $s2
                bnez    $v0, loc_16B08
                addiu   $s0, $a1, 3

loc_168E8:                               # CODE XREF: ssl3_get_server_certificate+214↑j
                la      $t9, d2i_X509
                move    $a1, $s4
                move    $a0, $zero
                sw      $s0, 0x50+var_2C($sp)
                jalr    $t9 ; d2i_X509
                move    $a2, $s1
                lw      $gp, 0x50+var_38($sp)
                move    $a0, $s6
                addu    $v1, $s0, $s1
                move    $s7, $v0
                move    $a1, $v0
                bnez    $v0, loc_16890
                la      $t9, sk_push
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x90
                li      $a2, 0xD
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                li      $s0, 0x2A  # '*'
                b       loc_16750
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_16948:                               # CODE XREF: ssl3_get_server_certificate+1D4↑j
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x90
                li      $a2, 0x9F

loc_16958:                               # CODE XREF: ssl3_get_server_certificate+4A4↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                li      $s0, 0x32  # '2'
                move    $s7, $zero
                b       loc_16750
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_16974:                               # CODE XREF: ssl3_get_server_certificate+1DC↑j
                                         # ssl3_get_server_certificate+23C↑j
                la      $t9, ssl_verify_cert_chain
                move    $a0, $s5
                jalr    $t9 ; ssl_verify_cert_chain
                move    $a1, $s6
                lw      $v1, 0xC8($s5)
                beqz    $v1, loc_16998
                lw      $gp, 0x50+var_38($sp)
                blez    $v0, loc_16C5C
                la      $t9, ssl_verify_alarm_type

loc_16998:                               # CODE XREF: ssl3_get_server_certificate+314↑j
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ssl_sess_cert_new
                jalr    $t9 ; ssl_sess_cert_new
                nop
                move    $s0, $v0
                beqz    $v0, loc_16B78
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0xC0($s5)
                lw      $a0, 0x90($v1)
                beqz    $a0, loc_169E0
                la      $t9, ssl_sess_cert_free
                jalr    $t9 ; ssl_sess_cert_free
                nop
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0xC0($s5)

loc_169E0:                               # CODE XREF: ssl3_get_server_certificate+354↑j
                la      $t9, sk_value
                sw      $s0, 0x90($v1)
                move    $a0, $s6
                move    $a1, $zero
                jalr    $t9 ; sk_value
                sw      $s6, 0($s0)
                lw      $gp, 0x50+var_38($sp)
                la      $t9, X509_get_pubkey
                move    $a0, $v0
                jalr    $t9 ; X509_get_pubkey
                move    $s2, $v0
                lw      $v1, 0x58($s5)
                move    $s4, $v0
                lw      $v1, 0x344($v1)
                lw      $v0, 0xC($v1)
                andi    $v0, 0x10
                beqz    $v0, loc_16A38
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x10($v1)
                andi    $v0, 0x20
                bnez    $v0, loc_16A80
                la      $t9, ssl_cert_type

loc_16A38:                               # CODE XREF: ssl3_get_server_certificate+3AC↑j
                beqz    $s4, loc_16A50
                la      $t9, EVP_PKEY_missing_parameters
                jalr    $t9 ; EVP_PKEY_missing_parameters
                move    $a0, $s4
                beqz    $v0, loc_16B8C
                lw      $gp, 0x50+var_38($sp)

loc_16A50:                               # CODE XREF: ssl3_get_server_certificate:loc_16A38↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x90
                li      $a2, 0xEF

loc_16A64:                               # CODE XREF: ssl3_get_server_certificate+634↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                li      $s0, 2
                move    $s7, $zero
                b       loc_16750
                move    $s6, $zero
 # ---------------------------------------------------------------------------

loc_16A80:                               # CODE XREF: ssl3_get_server_certificate+3BC↑j
                move    $a0, $s2
                jalr    $t9 ; ssl_cert_type
                move    $a1, $s4
                lw      $v1, 0xC0($s5)
                lw      $gp, 0x50+var_38($sp)
                lw      $a0, 0x94($v1)
                sw      $v0, 4($s0)
                beqz    $a0, loc_16AB8
                sw      $zero, 8($s0)
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0xC0($s5)

loc_16AB8:                               # CODE XREF: ssl3_get_server_certificate+428↑j
                sw      $zero, 0x94($v1)

loc_16ABC:                               # CODE XREF: ssl3_get_server_certificate+5E0↓j
                lw      $v0, 0xE4($s5)
                li      $s0, 1
                move    $s7, $zero
                move    $s1, $zero
                b       loc_16770
                sw      $v0, 0x98($v1)
 # ---------------------------------------------------------------------------

loc_16AD4:                               # CODE XREF: ssl3_get_server_certificate+1AC↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x90
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                move    $s1, $zero
                li      $s0, 0xFFFFFFFF
                move    $s7, $zero
                b       loc_16770
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_16B08:                               # CODE XREF: ssl3_get_server_certificate+26C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14

loc_16B10:                               # CODE XREF: ssl3_get_server_certificate+208↑j
                li      $a1, 0x90
                li      $a2, 0x87
                b       loc_16958
                sw      $zero, 0x50+var_40($sp)
 # ---------------------------------------------------------------------------

loc_16B20:                               # CODE XREF: ssl3_get_server_certificate+220↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x90
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                li      $s0, 0x32  # '2'
                b       loc_16750
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_16B48:                               # CODE XREF: ssl3_get_server_certificate+234↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x90
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                move    $s1, $s6
                li      $s0, 0xFFFFFFFF
                b       loc_16770
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_16B78:                               # CODE XREF: ssl3_get_server_certificate+344↑j
                move    $s1, $s6
                li      $s0, 0xFFFFFFFF
                move    $s7, $zero
                b       loc_16770
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_16B8C:                               # CODE XREF: ssl3_get_server_certificate+3D4↑j
                la      $t9, ssl_cert_type
                move    $a0, $s2
                jalr    $t9 ; ssl_cert_type
                move    $a1, $s4
                move    $s1, $v0
                bltz    $v0, loc_16C98
                lw      $gp, 0x50+var_38($sp)
                la      $s7, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x4C4
                addiu   $s6, $s2, 0x10
                sw      $s1, 4($s0)
                move    $a0, $s6
                sw      $v0, 0x50+var_40($sp)
                li      $a1, 1
                li      $a2, 3
                jalr    $t9 ; CRYPTO_add_lock
                addiu   $a3, $s7, (aS3ClntC - 0x40000)  # "s3_clnt.c"
                sll     $v1, $s1, 4
                sll     $v0, $s1, 2
                subu    $s3, $v1, $v0
                addu    $s1, $s3, $s0
                lw      $a0, 0xC($s1)
                beqz    $a0, loc_16C00
                lw      $gp, 0x50+var_38($sp)
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x50+var_38($sp)

loc_16C00:                               # CODE XREF: ssl3_get_server_certificate+574↑j
                lw      $v1, 0xC0($s5)
                sw      $s2, 0xC($s1)
                addu    $v0, $s0, $s3
                lw      $a0, 0x94($v1)
                addiu   $v0, 0xC
                beqz    $a0, loc_16C2C
                sw      $v0, 8($s0)
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x50+var_38($sp)

loc_16C2C:                               # CODE XREF: ssl3_get_server_certificate+5A0↑j
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x4CE
                sw      $v0, 0x50+var_40($sp)
                move    $a0, $s6
                addiu   $a3, $s7, (aS3ClntC - 0x40000)  # "s3_clnt.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 3
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0xC0($s5)
                b       loc_16ABC
                sw      $s2, 0x94($v1)
 # ---------------------------------------------------------------------------

loc_16C5C:                               # CODE XREF: ssl3_get_server_certificate+31C↑j
                lw      $a0, 0xE4($s5)
                jalr    $t9 ; ssl_verify_alarm_type
                move    $s7, $zero
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x90
                li      $a2, 0x86
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                move    $s0, $v0
                lw      $gp, 0x50+var_38($sp)
                b       loc_16750
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_16C98:                               # CODE XREF: ssl3_get_server_certificate+52C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x90
                li      $a2, 0xF7
                b       loc_16A64
                sw      $zero, 0x50+var_40($sp)
 # End of function ssl3_get_server_certificate


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_server_hello
ssl3_get_server_hello:                   # CODE XREF: ssl3_connect+8B8↓p
                                         # dtls1_connect+C14↓p
                                         # DATA XREF: ...

var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4B6A0
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_8($sp)
                sw      $s5, 0x50+var_C($sp)
                sw      $s4, 0x50+var_10($sp)
                sw      $s3, 0x50+var_14($sp)
                sw      $s2, 0x50+var_18($sp)
                sw      $s1, 0x50+var_1C($sp)
                sw      $s0, 0x50+var_20($sp)
                sw      $gp, 0x50+var_38($sp)
                lw      $a1, 8($a0)
                li      $v0, 0x4E20
                addiu   $v1, $sp, 0x50+var_28
                sw      $v0, 0x50+var_40($sp)
                sw      $v1, 0x50+var_3C($sp)
                lw      $t9, 0x30($a1)
                li      $a2, 0x1121
                li      $a1, 0x1120
                li      $a3, 0xFFFFFFFF
                jalr    $t9
                move    $s1, $a0
                move    $s2, $v0
                lw      $v0, 0x50+var_28($sp)
                bnez    $v0, loc_16D48
                lw      $gp, 0x50+var_38($sp)
                move    $a3, $s2

loc_16D20:                               # CODE XREF: ssl3_get_server_hello+1E4↓j
                                         # ssl3_get_server_hello:loc_173C0↓j ...
                lw      $ra, 0x50+var_8($sp)
                lw      $s5, 0x50+var_C($sp)
                lw      $s4, 0x50+var_10($sp)
                lw      $s3, 0x50+var_14($sp)
                lw      $s2, 0x50+var_18($sp)
                lw      $s1, 0x50+var_1C($sp)
                lw      $s0, 0x50+var_20($sp)
                move    $v0, $a3
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_16D48:                               # CODE XREF: ssl3_get_server_hello+64↑j
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s1
                li      $v1, 0xFEFF
                beq     $v0, $v1, loc_16DF8
                lw      $gp, 0x50+var_38($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s1
                li      $v1, 0x100
                beq     $v0, $v1, loc_16DF8
                lw      $gp, 0x50+var_38($sp)
                lw      $t3, 0x58($s1)
                li      $v0, 2
                lw      $v1, 0x340($t3)
                beq     $v1, $v0, loc_16E14
                nop

loc_16D8C:                               # CODE XREF: ssl3_get_server_hello+1D8↓j
                la      $t9, ERR_put_error

loc_16D90:                               # CODE XREF: ssl3_get_server_hello+15C↓j
                li      $v0, 0xA
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0x72  # 'r'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)

loc_16DB4:                               # CODE XREF: ssl3_get_server_hello+1C8↓j
                                         # ssl3_get_server_hello+318↓j ...
                la      $t9, ssl3_send_alert
                lw      $a2, 0x50+var_2C($sp)
                move    $a0, $s1
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x50+var_38($sp)
                li      $a3, 0xFFFFFFFF
                lw      $ra, 0x50+var_8($sp)
                lw      $s5, 0x50+var_C($sp)
                lw      $s4, 0x50+var_10($sp)
                lw      $s3, 0x50+var_14($sp)
                lw      $s2, 0x50+var_18($sp)
                lw      $s1, 0x50+var_1C($sp)
                lw      $s0, 0x50+var_20($sp)
                move    $v0, $a3
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_16DF8:                               # CODE XREF: ssl3_get_server_hello+A8↑j
                                         # ssl3_get_server_hello+C0↑j
                lw      $t3, 0x58($s1)
                li      $v0, 3
                lw      $v1, 0x340($t3)
                beq     $v1, $v0, loc_16E80
                li      $v0, 2
                bne     $v1, $v0, loc_16D90
                la      $t9, ERR_put_error

loc_16E14:                               # CODE XREF: ssl3_get_server_hello+D4↑j
                lw      $s3, 0x40($s1)
                lw      $a0, 0($s1)
                sw      $s3, 0x50+var_30($sp)
                lbu     $v1, 0($s3)
                sra     $v0, $a0, 8
                bne     $v1, $v0, loc_16E40
                la      $t9, ERR_put_error
                lbu     $v1, 1($s3)
                andi    $v0, $a0, 0xFF
                beq     $v1, $v0, loc_16E9C
                addiu   $s0, $s3, 2

loc_16E40:                               # CODE XREF: ssl3_get_server_hello+178↑j
                li      $a0, 0x14
                sw      $zero, 0x50+var_40($sp)
                li      $a1, 0x92
                li      $a2, 0x10A
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $a0, 0x50+var_30($sp)
                lw      $v1, 0($s1)
                lbu     $v0, 1($a0)
                andi    $v1, 0xFF00
                lw      $gp, 0x50+var_38($sp)
                or      $v0, $v1
                li      $v1, 0x46  # 'F'
                sw      $v0, 0($s1)
                b       loc_16DB4
                sw      $v1, 0x50+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_16E80:                               # CODE XREF: ssl3_get_server_hello+154↑j
                lw      $v0, 0x5C($s1)
                lw      $v1, 0($v0)
                bnez    $v1, loc_16D8C
                li      $v0, 1
                li      $a3, 1
                b       loc_16D20
                sw      $v0, 0x34C($t3)
 # ---------------------------------------------------------------------------

loc_16E9C:                               # CODE XREF: ssl3_get_server_hello+188↑j
                sw      $s0, 0x50+var_30($sp)
                lwl     $a0, 3($s0)
                lwl     $a1, 7($s0)
                lwl     $a2, 0xB($s0)
                lwl     $a3, 0xF($s0)
                lwl     $t0, 0x13($s0)
                lwl     $t1, 0x17($s0)
                lwl     $t2, 0x1B($s0)
                lwl     $v1, 0x1F($s0)
                lwr     $a1, 4($s0)
                lwr     $v1, 0x1C($s0)
                lwr     $a2, 8($s0)
                lwr     $a3, 0xC($s0)
                lwr     $t0, 0x10($s0)
                lwr     $t1, 0x14($s0)
                lwr     $t2, 0x18($s0)
                lwr     $a0, 0($s0)
                addiu   $v0, $t3, 0xA0
                addiu   $s0, $s3, 0x22  # '"'
                sw      $a0, 0xA0($t3)
                sw      $v1, 0x1C($v0)
                sw      $a1, 4($v0)
                sw      $a2, 8($v0)
                sw      $a3, 0xC($v0)
                sw      $t0, 0x10($v0)
                sw      $t1, 0x14($v0)
                sw      $t2, 0x18($v0)
                sw      $s0, 0x50+var_30($sp)
                lbu     $s5, 0x22($s3)
                addiu   $s0, $s3, 0x23  # '#'
                sltiu   $v0, $s5, 0x21  # '!'
                beqz    $v0, loc_17114
                sw      $s0, 0x50+var_30($sp)
                lw      $v0, 0($s1)
                slti    $v0, 0x301
                bnez    $v0, loc_16FF4
                nop
                lw      $t9, 0x150($s1)
                beqz    $t9, loc_16FF4
                li      $v0, 0x30  # '0'
                lw      $a1, 0xC0($s1)
                lw      $a0, 0x154($s1)
                addiu   $v1, $sp, 0x50+var_24
                sw      $v0, 0x10($a1)
                addiu   $a2, $a1, 0x10
                sw      $a0, 0x50+var_3C($sp)
                sw      $v1, 0x50+var_40($sp)
                sw      $zero, 0x50+var_24($sp)
                move    $a0, $s1
                addiu   $a1, 0x14
                jalr    $t9
                move    $a3, $zero
                beqz    $v0, loc_16FF4
                lw      $gp, 0x50+var_38($sp)
                lw      $s4, 0xC0($s1)
                lw      $v0, 0x50+var_24($sp)
                beqz    $v0, loc_16FD0
                move    $s0, $s4
                sw      $v0, 0xAC($s0)

loc_16F88:                               # CODE XREF: ssl3_get_server_hello+33C↓j
                                         # ssl3_get_server_hello:loc_16FF4↓j
                beqz    $s5, loc_16F9C
                nop
                lw      $v0, 0x44($s4)
                beq     $v0, $s5, loc_17240
                lw      $s0, 0x50+var_30($sp)

loc_16F9C:                               # CODE XREF: ssl3_get_server_hello:loc_16F88↑j
                                         # ssl3_get_server_hello+5A4↓j
                sw      $zero, 0x6C($s1)
                lw      $v0, 0x44($s4)
                beqz    $v0, loc_17004
                la      $t9, memcpy
                la      $t9, ssl_get_new_session
                move    $a0, $s1
                jalr    $t9 ; ssl_get_new_session
                move    $a1, $zero
                bnez    $v0, loc_16FFC
                lw      $gp, 0x50+var_38($sp)
                li      $v0, 0x50  # 'P'
                b       loc_16DB4
                sw      $v0, 0x50+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_16FD0:                               # CODE XREF: ssl3_get_server_hello+2CC↑j
                lw      $v0, 8($s1)
                lw      $a0, 0x50+var_30($sp)
                lw      $t9, 0x48($v0)
                jalr    $t9
                addu    $a0, $s5, $a0
                lw      $gp, 0x50+var_38($sp)
                lw      $s4, 0xC0($s1)
                b       loc_16F88
                sw      $v0, 0xAC($s0)
 # ---------------------------------------------------------------------------

loc_16FF4:                               # CODE XREF: ssl3_get_server_hello+278↑j
                                         # ssl3_get_server_hello+284↑j ...
                b       loc_16F88
                lw      $s4, 0xC0($s1)
 # ---------------------------------------------------------------------------

loc_16FFC:                               # CODE XREF: ssl3_get_server_hello+30C↑j
                lw      $s4, 0xC0($s1)
                la      $t9, memcpy

loc_17004:                               # CODE XREF: ssl3_get_server_hello+2F4↑j
                lw      $a1, 0x50+var_30($sp)
                sw      $s5, 0x44($s4)
                addiu   $a0, $s4, 0x48  # 'H'
                jalr    $t9 ; memcpy
                move    $a2, $s5
                lw      $s0, 0x50+var_30($sp)

loc_1701C:                               # CODE XREF: ssl3_get_server_hello+708↓j
                lw      $v0, 8($s1)
                addu    $s0, $s5, $s0
                lw      $t9, 0x48($v0)
                sw      $s0, 0x50+var_30($sp)
                jalr    $t9
                move    $a0, $s0
                move    $s5, $v0
                beqz    $v0, loc_17298
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x1C($v0)
                andi    $v0, 4
                beqz    $v0, loc_1706C
                li      $v0, 3
                lw      $a0, 0($s1)
                sra     $v1, $a0, 8
                bne     $v1, $v0, loc_17144
                la      $t9, ERR_put_error
                slti    $v0, $a0, 0x303
                bnez    $v0, loc_17148
                li      $v0, 0x2F  # '/'

loc_1706C:                               # CODE XREF: ssl3_get_server_hello+398↑j
                lw      $v0, 8($s1)
                move    $a1, $zero
                lw      $t9, 0x4C($v0)
                jalr    $t9
                move    $a0, $zero
                lw      $v1, 0x50+var_30($sp)
                lw      $gp, 0x50+var_38($sp)
                addu    $s0, $v1, $v0
                la      $t9, ssl_get_ciphers_by_id
                move    $a0, $s1
                jalr    $t9 ; ssl_get_ciphers_by_id
                sw      $s0, 0x50+var_30($sp)
                lw      $gp, 0x50+var_38($sp)
                la      $t9, sk_find
                move    $a0, $v0
                jalr    $t9 ; sk_find
                move    $a1, $s5
                bltz    $v0, loc_17140
                lw      $gp, 0x50+var_38($sp)
                lw      $s4, 0xC0($s1)
                lw      $v0, 0xAC($s4)
                beqz    $v0, loc_170D0
                nop
                lw      $v0, 8($v0)
                sw      $v0, 0xB0($s4)

loc_170D0:                               # CODE XREF: ssl3_get_server_hello+410↑j
                lw      $a2, 0x6C($s1)
                beqz    $a2, loc_1716C
                nop
                lw      $v1, 0xB0($s4)
                lw      $v0, 8($s5)
                beq     $v1, $v0, loc_1716C
                la      $t9, ERR_put_error
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0xC5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_17114:                               # CODE XREF: ssl3_get_server_hello+268↑j
                la      $t9, ERR_put_error
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0x12C
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_17140:                               # CODE XREF: ssl3_get_server_hello+400↑j
                la      $t9, ERR_put_error

loc_17144:                               # CODE XREF: ssl3_get_server_hello+3A8↑j
                li      $v0, 0x2F  # '/'

loc_17148:                               # CODE XREF: ssl3_get_server_hello+3B4↑j
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0x105
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_1716C:                               # CODE XREF: ssl3_get_server_hello+424↑j
                                         # ssl3_get_server_hello+434↑j
                lw      $a1, 0($s1)
                lw      $v0, 0x58($s1)
                sra     $a0, $a1, 8
                li      $v1, 3
                bne     $a0, $v1, loc_171DC
                sw      $s5, 0x344($v0)
                slti    $v0, $a1, 0x303
                bnez    $v0, loc_171E0
                la      $t9, ssl3_digest_cached_records

loc_17190:                               # CODE XREF: ssl3_get_server_hello+540↓j
                lw      $v0, 0x50+var_30($sp)
                addiu   $v1, $v0, 1
                lbu     $a1, 0($v0)
                beqz    $a2, loc_171F8
                sw      $v1, 0x50+var_30($sp)
                lw      $v0, 0xC0($s1)
                lw      $v1, 0xA8($v0)
                beq     $v1, $a1, loc_171F8
                la      $t9, ERR_put_error
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0x158
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_171DC:                               # CODE XREF: ssl3_get_server_hello+4CC↑j
                la      $t9, ssl3_digest_cached_records

loc_171E0:                               # CODE XREF: ssl3_get_server_hello+4D8↑j
                jalr    $t9 ; ssl3_digest_cached_records
                move    $a0, $s1
                beqz    $v0, loc_16DB4
                lw      $gp, 0x50+var_38($sp)
                b       loc_17190
                lw      $a2, 0x6C($s1)
 # ---------------------------------------------------------------------------

loc_171F8:                               # CODE XREF: ssl3_get_server_hello+4EC↑j
                                         # ssl3_get_server_hello+4FC↑j
                beqz    $a1, loc_172C4
                move    $a0, $zero
                lw      $v0, 0xF8($s1)
                lui     $v1, 2
                and     $v0, $v1
                beqz    $v0, loc_17310
                la      $t9, ssl3_comp_find
                la      $t9, ERR_put_error
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0x157
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_17240:                               # CODE XREF: ssl3_get_server_hello+2E4↑j
                la      $t9, memcmp
                move    $a0, $s0
                addiu   $a1, $s4, 0x48  # 'H'
                jalr    $t9 ; memcmp
                move    $a2, $s5
                bnez    $v0, loc_16F9C
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x9C($s1)
                lw      $v0, 0x68($s4)
                beq     $a2, $v0, loc_173A0
                la      $t9, memcmp

loc_1726C:                               # CODE XREF: ssl3_get_server_hello+6FC↓j
                la      $t9, ERR_put_error
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0x110
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_17298:                               # CODE XREF: ssl3_get_server_hello+388↑j
                la      $t9, ERR_put_error
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0xF8
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_172C4:                               # CODE XREF: ssl3_get_server_hello:loc_171F8↑j
                                         # ssl3_get_server_hello+670↓j
                lw      $v0, 0($s1)
                lw      $v1, 0x58($s1)
                slti    $v0, 0x300
                beqz    $v0, loc_17354
                sw      $a0, 0x384($v1)

loc_172D8:                               # CODE XREF: ssl3_get_server_hello+724↓j
                lw      $v0, 0x50+var_30($sp)
                addu    $v1, $s3, $s2
                beq     $v1, $v0, loc_173C0
                la      $t9, ERR_put_error
                li      $v0, 0x32  # '2'
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0x73  # 's'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_17310:                               # CODE XREF: ssl3_get_server_hello+55C↑j
                lw      $v0, 0xDC($s1)
                jalr    $t9 ; ssl3_comp_find
                lw      $a0, 0x98($v0)
                move    $a0, $v0
                bnez    $v0, loc_172C4
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                li      $v0, 0x2F  # '/'
                sw      $v0, 0x50+var_2C($sp)
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0x101
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_17354:                               # CODE XREF: ssl3_get_server_hello+620↑j
                la      $t9, ssl_parse_serverhello_tlsext
                addiu   $v0, $sp, 0x50+var_2C
                sw      $v0, 0x50+var_40($sp)
                move    $a0, $s1
                addiu   $a1, $sp, 0x50+var_30
                move    $a2, $s3
                jalr    $t9 ; ssl_parse_serverhello_tlsext
                move    $a3, $s2
                bnez    $v0, loc_173C8
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                li      $a2, 0xE3
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_16DB4
                lw      $gp, 0x50+var_38($sp)
 # ---------------------------------------------------------------------------

loc_173A0:                               # CODE XREF: ssl3_get_server_hello+5B4↑j
                addiu   $a0, $s4, 0x6C  # 'l'
                jalr    $t9 ; memcmp
                addiu   $a1, $s1, 0xA0
                bnez    $v0, loc_1726C
                lw      $gp, 0x50+var_38($sp)
                li      $a2, 1
                b       loc_1701C
                sw      $a2, 0x6C($s1)
 # ---------------------------------------------------------------------------

loc_173C0:                               # CODE XREF: ssl3_get_server_hello+630↑j
                b       loc_16D20
                li      $a3, 1
 # ---------------------------------------------------------------------------

loc_173C8:                               # CODE XREF: ssl3_get_server_hello+6C4↑j
                la      $t9, ssl_check_serverhello_tlsext
                jalr    $t9 ; ssl_check_serverhello_tlsext
                move    $a0, $s1
                bgtz    $v0, loc_172D8
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ERR_put_error
                move    $a3, $zero
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x92
                jalr    $t9 ; ERR_put_error
                li      $a2, 0x113
                lw      $gp, 0x50+var_38($sp)
                b       loc_16D20
                li      $a3, 0xFFFFFFFF
 # End of function ssl3_get_server_hello


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_client_hello
ssl3_client_hello:                       # CODE XREF: ssl3_connect+98C↓p
                                         # DATA XREF: LOAD:00002BB8↑o ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x4AF4C
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_4($sp)
                sw      $s6, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x3C($a0)
                move    $s2, $a0
                lw      $a0, 0x34($a0)
                li      $v1, 0x1110
                beq     $a0, $v1, loc_17484
                lw      $s5, 4($v0)
                la      $t9, ssl3_do_write
                move    $a0, $s2
                lw      $ra, 0x40+var_4($sp)
                lw      $s6, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_17484:                               # CODE XREF: ssl3_client_hello+44↑j
                lw      $a0, 0xC0($s2)
                beqz    $a0, loc_174A0
                la      $t9, ssl_get_new_session
                lw      $v1, 0($a0)
                lw      $v0, 0($s2)
                beq     $v1, $v0, loc_17780
                nop

loc_174A0:                               # CODE XREF: ssl3_client_hello+84↑j
                                         # ssl3_client_hello+38C↓j
                move    $a0, $s2

loc_174A4:                               # CODE XREF: ssl3_client_hello+3A0↓j
                jalr    $t9 ; ssl_get_new_session
                move    $a1, $zero
                beqz    $v0, loc_17738
                lw      $gp, 0x40+var_28($sp)

loc_174B4:                               # CODE XREF: ssl3_client_hello+398↓j
                la      $t9, time
                move    $a0, $zero
                jalr    $t9 ; time
                lw      $s0, 0x58($s2)
                lw      $gp, 0x40+var_28($sp)
                srl     $a0, $v0, 16
                srl     $a1, $v0, 8
                la      $t9, RAND_pseudo_bytes
                srl     $v1, $v0, 24
                sb      $a0, 0xC1($s0)
                sb      $a1, 0xC2($s0)
                sb      $v1, 0xC0($s0)
                sb      $v0, 0xC3($s0)
                addiu   $a0, $s0, 0xC4
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x1C
                blez    $v0, loc_17738
                lw      $gp, 0x40+var_28($sp)
                lw      $v1, 0x108($s2)
                addiu   $v0, $s5, 6
                sra     $v1, 8
                sb      $v1, 4($s5)
                lw      $a0, 0x108($s2)
                sb      $a0, 5($s5)
                lw      $v1, 0x58($s2)
                lw      $a3, 0xC0($v1)
                addiu   $v1, 0xC0
                lw      $t3, 0x1C($v1)
                lw      $t1, 0x14($v1)
                lw      $t2, 0x18($v1)
                lw      $t0, 0x10($v1)
                lw      $a0, 4($v1)
                lw      $a1, 8($v1)
                lw      $a2, 0xC($v1)
                usw     $a3, 0($v0)
                usw     $a0, 4($v0)
                usw     $a1, 8($v0)
                usw     $a2, 0xC($v0)
                usw     $t0, 0x10($v0)
                usw     $t1, 0x14($v0)
                usw     $t2, 0x18($v0)
                usw     $t3, 0x1C($v0)
                lw      $v1, 0x28($s2)
                bnez    $v1, loc_17764
                addiu   $s6, $s5, 4
                lw      $v0, 0xC0($s2)
                addiu   $s0, $s5, 0x27  # '''
                lw      $a2, 0x44($v0)
                beqz    $a2, loc_175C0
                sb      $a2, 0x26($s5)
                slti    $v0, $a2, 0x21  # '!'
                beqz    $v0, loc_177AC
                la      $t9, memcpy
                lw      $a1, 0xC0($s2)
                move    $a0, $s0
                addiu   $a1, 0x48  # 'H'
                jalr    $t9 ; memcpy
                addu    $s0, $a2
                lw      $gp, 0x40+var_28($sp)

loc_175C0:                               # CODE XREF: ssl3_client_hello+190↑j
                                         # ssl3_client_hello+364↓j
                la      $t9, SSL_get_ciphers
                jalr    $t9 ; SSL_get_ciphers
                move    $a0, $s2
                lw      $gp, 0x40+var_28($sp)
                addiu   $s1, $s0, 2
                la      $t9, ssl_cipher_list_to_bytes
                move    $a2, $s1
                move    $a1, $v0
                move    $a0, $s2
                jalr    $t9 ; ssl_cipher_list_to_bytes
                move    $a3, $zero
                move    $a2, $v0
                beqz    $v0, loc_17718
                lw      $gp, 0x40+var_28($sp)
                sra     $v0, 8
                sb      $v0, 0($s0)
                sb      $a2, 1($s0)
                lw      $v0, 0xF8($s2)
                lui     $v1, 2
                and     $v0, $v1
                bnez    $v0, loc_17770
                addu    $s3, $s1, $a2
                lw      $v0, 0xDC($s2)
                lw      $a0, 0x98($v0)
                beqz    $a0, loc_17770
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                addiu   $s4, $s3, 1
                move    $s1, $v0
                addiu   $v0, 1
                lw      $gp, 0x40+var_28($sp)
                blez    $s1, loc_17678
                sb      $v0, 0($s3)
                move    $s0, $zero

loc_17648:                               # CODE XREF: ssl3_client_hello+268↓j
                lw      $v0, 0xDC($s2)
                la      $t9, sk_value
                lw      $a0, 0x98($v0)
                jalr    $t9 ; sk_value
                move    $a1, $s0
                lw      $v1, 0($v0)
                addu    $v0, $s3, $s0
                addiu   $s0, 1
                lw      $gp, 0x40+var_28($sp)
                bne     $s0, $s1, loc_17648
                sb      $v1, 1($v0)
                addu    $s4, $s1

loc_17678:                               # CODE XREF: ssl3_client_hello+238↑j
                                         # ssl3_client_hello+374↓j
                la      $t9, ssl_prepare_clienthello_tlsext
                sb      $zero, 0($s4)
                jalr    $t9 ; ssl_prepare_clienthello_tlsext
                move    $a0, $s2
                blez    $v0, loc_177D0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ssl_add_clienthello_tlsext
                addiu   $a1, $s4, 1
                move    $a0, $s2
                jalr    $t9 ; ssl_add_clienthello_tlsext
                addiu   $a2, $s5, 0x4000
                beqz    $v0, loc_177AC
                lw      $gp, 0x40+var_28($sp)
                subu    $v1, $v0, $s6
                addiu   $a1, $s5, 1
                subu    $a3, $v0, $s5
                srl     $a0, $v1, 16
                li      $v0, 1
                srl     $a2, $v1, 8
                sb      $v0, 0($s5)
                sb      $a0, 1($s5)
                li      $v0, 0x1111
                sb      $v1, 2($a1)
                sb      $a2, 1($a1)
                la      $t9, ssl3_do_write
                sw      $v0, 0x34($s2)
                sw      $a3, 0x44($s2)
                sw      $zero, 0x48($s2)
                move    $a0, $s2
                lw      $ra, 0x40+var_4($sp)
                lw      $s6, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_17718:                               # CODE XREF: ssl3_client_hello+1EC↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x83
                li      $a2, 0xB5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)

loc_17738:                               # CODE XREF: ssl3_client_hello+A8↑j
                                         # ssl3_client_hello+F0↑j ...
                lw      $ra, 0x40+var_4($sp)
                lw      $s6, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_17764:                               # CODE XREF: ssl3_client_hello+17C↑j
                addiu   $s0, $s5, 0x27  # '''
                b       loc_175C0
                sb      $zero, 0x26($s5)
 # ---------------------------------------------------------------------------

loc_17770:                               # CODE XREF: ssl3_client_hello+20C↑j
                                         # ssl3_client_hello+21C↑j
                li      $v0, 1
                addiu   $s4, $s3, 1
                b       loc_17678
                sb      $v0, 0($s3)
 # ---------------------------------------------------------------------------

loc_17780:                               # CODE XREF: ssl3_client_hello+94↑j
                lw      $v0, 0x44($a0)
                bnez    $v0, loc_17798
                nop
                lw      $v0, 0xCC($a0)
                beqz    $v0, loc_174A0
                la      $t9, ssl_get_new_session

loc_17798:                               # CODE XREF: ssl3_client_hello+380↑j
                lw      $v0, 0x8C($a0)
                beqz    $v0, loc_174B4
                la      $t9, ssl_get_new_session
                b       loc_174A4
                move    $a0, $s2
 # ---------------------------------------------------------------------------

loc_177AC:                               # CODE XREF: ssl3_client_hello+19C↑j
                                         # ssl3_client_hello+2A0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x83
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_17738
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_177D0:                               # CODE XREF: ssl3_client_hello+284↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x83
                li      $a2, 0xE2
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_17738
                lw      $gp, 0x40+var_28($sp)
 # End of function ssl3_client_hello


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_connect
ssl3_connect:                            # DATA XREF: LOAD:00004278↑o
                                         # ssl3_connect+298↓o ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4AB5C
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_28($sp)
                la      $t9, time
                move    $s2, $a0
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x40+var_28($sp)
                la      $t9, RAND_add
                sw      $v0, 0x40+var_20($sp)
                addiu   $a0, $sp, 0x40+var_20
                li      $a1, 4
                move    $a2, $zero
                jalr    $t9 ; RAND_add
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x40+var_28($sp)
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $s3, 0xD0($s2)
                lw      $gp, 0x40+var_28($sp)
                beqz    $s3, loc_18208
                sw      $zero, 0($v0)

loc_1787C:                               # CODE XREF: ssl3_connect+A18↓j
                lw      $v0, 0x1C($s2)
                la      $t9, SSL_state
                addiu   $v0, 1
                sw      $v0, 0x1C($s2)
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x3000
                beqz    $v0, loc_179B0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x4000
                bnez    $v0, loc_179B0
                lw      $gp, 0x40+var_28($sp)

loc_178B8:                               # CODE XREF: ssl3_connect+1C8↓j
                lw      $v0, 0x170($s2)
                beqz    $v0, loc_178D4
                nop
                lw      $v0, 0x174($s2)
                sw      $zero, 0x170($s2)
                addiu   $v0, 1
                sw      $v0, 0x174($s2)

loc_178D4:                               # CODE XREF: ssl3_connect+C8↑j
                lw      $s1, 0x34($s2)
                slti    $v0, $s1, 0x1182
                beqz    $v0, loc_1796C
                slti    $v0, $s1, 0x11E2
                slti    $v0, $s1, 0x1180

loc_178E8:                               # CODE XREF: ssl3_connect+16C↓j
                bnez    $v0, loc_179C4
                slti    $v0, $s1, 0x1132
                la      $t9, ssl3_send_client_key_exchange
                jalr    $t9 ; ssl3_send_client_key_exchange
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                li      $v0, 1
                lw      $v1, 0x350($a1)
                beq     $v1, $v0, loc_18294
                li      $v0, 0x11A0
                sw      $v0, 0x34($s2)
                sw      $zero, 0x180($a1)

loc_17924:                               # CODE XREF: ssl3_connect+AA4↓j
                lw      $v0, 0($a1)
                andi    $v0, 0x10
                beqz    $v0, loc_17944
                move    $a2, $zero
                li      $v0, 0x11A0
                sw      $v0, 0x34($s2)
                sw      $zero, 0x180($a1)

loc_17940:                               # CODE XREF: ssl3_connect+734↓j
                move    $a2, $zero

loc_17944:                               # CODE XREF: ssl3_connect+138↑j
                                         # ssl3_connect:loc_17BB8↓j ...
                sw      $zero, 0x44($s2)

loc_17948:                               # CODE XREF: ssl3_connect+6D0↓j
                                         # ssl3_connect+944↓j ...
                lw      $v0, 0x34C($a1)
                beqz    $v0, loc_17D44
                nop

loc_17954:                               # CODE XREF: ssl3_connect+548↓j
                                         # ssl3_connect:loc_17D44↓j ...
                lw      $s0, 0x34($s2)

loc_17958:                               # CODE XREF: ssl3_connect+570↓j
                move    $s1, $s0

loc_1795C:                               # CODE XREF: ssl3_connect+594↓j
                slti    $v0, $s1, 0x1182
                bnez    $v0, loc_178E8
                slti    $v0, $s1, 0x1180
                slti    $v0, $s1, 0x11E2

loc_1796C:                               # CODE XREF: ssl3_connect+E8↑j
                beqz    $v0, loc_17AFC
                slti    $v0, $s1, 0x1202
                slti    $v0, $s1, 0x11E0
                bnez    $v0, loc_17B50
                slti    $v0, $s1, 0x11A2
                la      $t9, ssl3_get_new_session_ticket
                jalr    $t9 ; ssl3_get_new_session_ticket
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                li      $v0, 0x11D0
                move    $a2, $zero
                sw      $v0, 0x34($s2)
                b       loc_17D38
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_179B0:                               # CODE XREF: ssl3_connect+A4↑j
                                         # ssl3_connect+BC↑j
                la      $t9, SSL_clear
                jalr    $t9 ; SSL_clear
                move    $a0, $s2
                b       loc_178B8
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_179C4:                               # CODE XREF: ssl3_connect:loc_178E8↑j
                beqz    $v0, loc_17BC0
                slti    $v0, $s1, 0x1152
                slti    $v0, $s1, 0x1130
                beqz    $v0, loc_17E84
                la      $t9, ssl3_check_finished
                li      $v0, 0x1100
                beq     $s1, $v0, loc_17F48
                slti    $v0, $s1, 0x1101
                beqz    $v0, loc_18084
                slti    $v0, $s1, 0x1110
                li      $v0, 0x1000
                beq     $s1, $v0, loc_17C98
                li      $v0, 0x1003
                beq     $s1, $v0, loc_17C98
                li      $v0, 3
                bne     $s1, $v0, loc_17C4C
                la      $t9, ERR_put_error
                la      $t9, ssl3_cleanup_key_block
                jalr    $t9 ; ssl3_cleanup_key_block
                move    $a0, $s2
                lw      $a0, 0x3C($s2)
                beqz    $a0, loc_17A34
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BUF_MEM_free
                jalr    $t9 ; BUF_MEM_free
                nop
                lw      $gp, 0x40+var_28($sp)
                sw      $zero, 0x3C($s2)

loc_17A34:                               # CODE XREF: ssl3_connect+224↑j
                lw      $v1, 0x58($s2)
                lw      $v0, 0($v1)
                andi    $v0, 4
                beqz    $v0, loc_1824C
                la      $t9, ssl_free_wbio_buffer

loc_17A48:                               # CODE XREF: ssl3_connect+A60↓j
                la      $t9, ssl_update_cache
                sw      $zero, 0x44($s2)
                sw      $zero, 0x178($s2)
                sw      $zero, 0x28($s2)
                move    $a0, $s2
                jalr    $t9 ; ssl_update_cache
                li      $a1, 1
                lw      $v0, 0x6C($s2)
                beqz    $v0, loc_181CC
                lw      $gp, 0x40+var_28($sp)
                lw      $v1, 0xDC($s2)
                lw      $v0, 0x58($v1)
                addiu   $v0, 1
                sw      $v0, 0x58($v1)
                lw      $v0, 0x3C($v1)
                addiu   $v0, 1
                sw      $v0, 0x3C($v1)
                la      $v1, ssl3_connect
                beqz    $s3, loc_181E8
                sw      $v1, 0x20($s2)

loc_17A98:                               # CODE XREF: ssl3_connect+9EC↓j
                move    $a0, $s2
                li      $a1, 0x20  # ' '
                move    $t9, $s3
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x40+var_28($sp)
                li      $s0, 1

loc_17AB4:                               # CODE XREF: ssl3_connect+10C↑j
                                         # ssl3_connect+19C↑j ...
                lw      $v0, 0x1C($s2)
                addiu   $v0, -1
                sw      $v0, 0x1C($s2)

loc_17AC0:                               # CODE XREF: ssl3_connect+480↓j
                                         # ssl3_connect+A00↓j ...
                beqz    $s3, loc_17ADC
                move    $a0, $s2
                li      $a1, 0x1002
                move    $t9, $s3
                jalr    $t9
                move    $a2, $s0
                lw      $gp, 0x40+var_28($sp)

loc_17ADC:                               # CODE XREF: ssl3_connect:loc_17AC0↑j
                move    $v0, $s0
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_17AFC:                               # CODE XREF: ssl3_connect:loc_1796C↑j
                beqz    $v0, loc_17C30
                li      $v0, 0x4000
                slti    $v0, $s1, 0x1200
                beqz    $v0, loc_17E5C
                la      $t9, ssl3_send_next_proto
                addiu   $v0, $s1, -0x11F0
                sltiu   $v0, 2
                beqz    $v0, loc_17C4C
                la      $t9, ERR_put_error
                la      $t9, ssl3_get_cert_status
                jalr    $t9 ; ssl3_get_cert_status
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                li      $v0, 0x1140
                move    $a2, $zero
                sw      $v0, 0x34($s2)
                b       loc_17D38
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_17B50:                               # CODE XREF: ssl3_connect+184↑j
                bnez    $v0, loc_17E10
                slti    $v0, $s1, 0x11A0
                slti    $v0, $s1, 0x11B0
                bnez    $v0, loc_17C4C
                la      $t9, ERR_put_error
                slti    $v0, $s1, 0x11B2
                bnez    $v0, loc_17ECC
                la      $t9, ssl3_send_finished
                addiu   $v0, $s1, -0x11D0
                sltiu   $v0, 2
                beqz    $v0, loc_17C4C
                la      $t9, ERR_put_error
                la      $t9, ssl3_get_finished
                move    $a0, $s2
                li      $a1, 0x11D0
                jalr    $t9 ; ssl3_get_finished
                li      $a2, 0x11D1
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x6C($s2)
                beqz    $v0, loc_181FC
                li      $v0, 3
                li      $v0, 0x11A0
                lw      $a1, 0x58($s2)
                sw      $v0, 0x34($s2)

loc_17BB8:                               # CODE XREF: ssl3_connect+A0C↓j
                                         # ssl3_connect+A98↓j ...
                b       loc_17944
                move    $a2, $zero
 # ---------------------------------------------------------------------------

loc_17BC0:                               # CODE XREF: ssl3_connect:loc_179C4↑j
                bnez    $v0, loc_17DB4
                slti    $v0, $s1, 0x1150
                slti    $v0, $s1, 0x1160
                bnez    $v0, loc_17C4C
                la      $t9, ERR_put_error
                slti    $v0, $s1, 0x1162
                beqz    $v0, loc_18140
                addiu   $v0, $s1, -0x1170
                la      $t9, ssl3_get_server_done
                jalr    $t9 ; ssl3_get_server_done
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                lw      $v1, 0x344($a1)
                lw      $v0, 0xC($v1)
                andi    $v0, 0x400
                bnez    $v0, loc_1825C
                la      $t9, SRP_Calc_A_param

loc_17C10:                               # CODE XREF: ssl3_connect+A7C↓j
                lw      $v0, 0x350($a1)
                beqz    $v0, loc_18074
                li      $v0, 0x1180
                li      $v0, 0x1170
                move    $a2, $zero
                sw      $v0, 0x34($s2)
                b       loc_17D38
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_17C30:                               # CODE XREF: ssl3_connect:loc_17AFC↑j
                beq     $s1, $v0, loc_17C98
                li      $v0, 0x5000
                beq     $s1, $v0, loc_17C98
                li      $v0, 0x3004
                beq     $s1, $v0, loc_17C7C
                li      $v0, 1
                la      $t9, ERR_put_error

loc_17C4C:                               # CODE XREF: ssl3_connect+20C↑j
                                         # ssl3_connect+324↑j ...
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x84
                li      $a2, 0xFF

loc_17C5C:                               # CODE XREF: ssl3_connect+AFC↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $v0, 0x1C($s2)
                lw      $gp, 0x40+var_28($sp)
                addiu   $v0, -1
                li      $s0, 0xFFFFFFFF
                b       loc_17AC0
                sw      $v0, 0x1C($s2)
 # ---------------------------------------------------------------------------

loc_17C7C:                               # CODE XREF: ssl3_connect+44C↑j
                lw      $a0, 0xDC($s2)
                li      $v1, 0x1000
                sw      $v0, 0x178($s2)
                sw      $v1, 0x34($s2)
                lw      $v0, 0x38($a0)
                addiu   $v0, 1
                sw      $v0, 0x38($a0)

loc_17C98:                               # CODE XREF: ssl3_connect+1FC↑j
                                         # ssl3_connect+204↑j ...
                beqz    $s3, loc_17CB8
                sw      $zero, 0x24($s2)
                move    $a0, $s2
                li      $a1, 0x10
                move    $t9, $s3
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x40+var_28($sp)

loc_17CB8:                               # CODE XREF: ssl3_connect:loc_17C98↑j
                lw      $v0, 0($s2)
                li      $v1, 0x300
                andi    $v0, 0xFF00
                bne     $v0, $v1, loc_182E0
                li      $v0, 0x1000
                lw      $v1, 0x3C($s2)
                beqz    $v1, loc_18214
                sw      $v0, 4($s2)

loc_17CD8:                               # CODE XREF: ssl3_connect+A50↓j
                la      $t9, ssl3_setup_buffers
                jalr    $t9 ; ssl3_setup_buffers
                move    $a0, $s2
                beqz    $v0, loc_18048
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ssl_init_wbio_buffer
                move    $a0, $s2
                jalr    $t9 ; ssl_init_wbio_buffer
                move    $a1, $zero
                beqz    $v0, loc_18048
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ssl3_init_finished_mac
                jalr    $t9 ; ssl3_init_finished_mac
                move    $a0, $s2
                lw      $a0, 0xDC($s2)
                li      $v0, 0x1110
                lw      $gp, 0x40+var_28($sp)
                sw      $v0, 0x34($s2)
                lw      $v1, 0x34($a0)
                lw      $a1, 0x58($s2)
                addiu   $v1, 1
                sw      $v1, 0x34($a0)
                move    $a2, $zero
                sw      $zero, 0x44($s2)

loc_17D38:                               # CODE XREF: ssl3_connect+1B4↑j
                                         # ssl3_connect+354↑j ...
                lw      $v0, 0x34C($a1)
                bnez    $v0, loc_17954
                nop

loc_17D44:                               # CODE XREF: ssl3_connect+158↑j
                bnez    $a2, loc_17954
                nop
                lw      $v0, 0xE0($s2)
                bnez    $v0, loc_17D90
                la      $t9, BIO_ctrl

loc_17D58:                               # CODE XREF: ssl3_connect+5B0↓j
                beqz    $s3, loc_17954
                nop
                lw      $s0, 0x34($s2)
                beq     $s0, $s1, loc_17958
                li      $a1, 0x1001
                sw      $s1, 0x34($s2)
                move    $a0, $s2
                move    $t9, $s3
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x40+var_28($sp)
                move    $s1, $s0
                b       loc_1795C
                sw      $s0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_17D90:                               # CODE XREF: ssl3_connect+55C↑j
                lw      $a0, 0x10($s2)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                bgtz    $v0, loc_17D58
                lw      $gp, 0x40+var_28($sp)
                b       loc_17AB4
                move    $s0, $v0
 # ---------------------------------------------------------------------------

loc_17DB4:                               # CODE XREF: ssl3_connect:loc_17BC0↑j
                beqz    $v0, loc_17F8C
                la      $t9, ssl3_get_certificate_request
                addiu   $v0, $s1, -0x1140
                sltiu   $v0, 2
                beqz    $v0, loc_17C4C
                la      $t9, ERR_put_error
                la      $t9, ssl3_get_key_exchange
                jalr    $t9 ; ssl3_get_key_exchange
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ssl3_check_cert_and_algorithm
                li      $v0, 0x1150
                sw      $v0, 0x34($s2)
                sw      $zero, 0x44($s2)
                jalr    $t9 ; ssl3_check_cert_and_algorithm
                move    $a0, $s2
                beqz    $v0, loc_18048
                lw      $gp, 0x40+var_28($sp)

loc_17E04:                               # CODE XREF: ssl3_connect+84C↓j
                                         # ssl3_connect+9B0↓j
                lw      $a1, 0x58($s2)
                b       loc_17D38
                move    $a2, $zero
 # ---------------------------------------------------------------------------

loc_17E10:                               # CODE XREF: ssl3_connect:loc_17B50↑j
                beqz    $v0, loc_17FB8
                la      $t9, ssl3_send_change_cipher_spec
                addiu   $v0, $s1, -0x1190
                sltiu   $v0, 2
                beqz    $v0, loc_17C4C
                la      $t9, ERR_put_error
                la      $t9, ssl3_send_client_verify
                jalr    $t9 ; ssl3_send_client_verify
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                li      $v0, 0x11A0
                move    $a2, $zero
                sw      $v0, 0x34($s2)
                sw      $zero, 0x44($s2)
                b       loc_17D38
                sw      $zero, 0x180($a1)
 # ---------------------------------------------------------------------------

loc_17E5C:                               # CODE XREF: ssl3_connect+314↑j
                jalr    $t9 ; ssl3_send_next_proto
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                li      $v0, 0x11B0
                move    $a2, $zero
                b       loc_17D38
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_17E84:                               # CODE XREF: ssl3_connect+1DC↑j
                jalr    $t9 ; ssl3_check_finished
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                li      $v0, 2
                beq     $s0, $v0, loc_18278
                li      $v0, 1
                lw      $a1, 0x58($s2)
                lw      $v1, 0x344($a1)
                lw      $v0, 0x10($v1)
                andi    $v0, 4
                beqz    $v0, loc_180F4
                li      $v0, 0x1140

loc_17EBC:                               # CODE XREF: ssl3_connect+908↓j
                li      $a2, 1
                sw      $v0, 0x34($s2)
                b       loc_17948
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_17ECC:                               # CODE XREF: ssl3_connect+374↑j
                lw      $v0, 8($s2)
                lw      $v1, 0x64($v0)
                move    $a0, $s2
                lw      $v0, 0x24($v1)
                lw      $a3, 0x20($v1)
                li      $a1, 0x11B0
                sw      $v0, 0x40+var_30($sp)
                jalr    $t9 ; ssl3_send_finished
                li      $a2, 0x11B1
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                li      $v1, 0xFFFFFFFB
                lw      $a2, 0($a1)
                lw      $v0, 0x6C($s2)
                and     $v1, $a2, $v1
                li      $a0, 0x1100
                sw      $a0, 0x34($s2)
                beqz    $v0, loc_18058
                sw      $v1, 0($a1)
                li      $a0, 3
                andi    $v0, $a2, 2
                beqz    $v0, loc_17940
                sw      $a0, 0x348($a1)
                ori     $v0, $v1, 4
                move    $a2, $zero
                sw      $a0, 0x34($s2)
                sw      $v0, 0($a1)
                b       loc_17944
                sw      $zero, 4($a1)
 # ---------------------------------------------------------------------------

loc_17F48:                               # CODE XREF: ssl3_connect+1E8↑j
                la      $t9, BIO_ctrl
                li      $v0, 2
                lw      $a0, 0x10($s2)
                sw      $v0, 0x18($s2)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                blez    $v0, loc_18048
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                li      $v0, 1
                sw      $v0, 0x18($s2)
                lw      $v1, 0x348($a1)
                move    $a2, $zero
                b       loc_17D38
                sw      $v1, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_17F8C:                               # CODE XREF: ssl3_connect:loc_17DB4↑j
                jalr    $t9 ; ssl3_get_certificate_request
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                li      $v0, 0x1160
                move    $a2, $zero
                sw      $v0, 0x34($s2)
                b       loc_17D38
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_17FB8:                               # CODE XREF: ssl3_connect:loc_17E10↑j
                move    $a0, $s2
                li      $a1, 0x11A0
                jalr    $t9 ; ssl3_send_change_cipher_spec
                li      $a2, 0x11A1
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                lw      $v0, 0x414($a1)
                bnez    $v0, loc_18050
                li      $v0, 0x1200
                li      $v0, 0x11B0
                sw      $v0, 0x34($s2)

loc_17FEC:                               # CODE XREF: ssl3_connect:loc_18050↓j
                lw      $v1, 0xC0($s2)
                lw      $v0, 0x344($a1)
                lw      $a0, 0x384($a1)
                sw      $zero, 0x44($s2)
                beqz    $a0, loc_182AC
                sw      $v0, 0xAC($v1)
                lw      $v0, 0($a0)
                sw      $v0, 0xA8($v1)

loc_1800C:                               # CODE XREF: ssl3_connect:loc_182AC↓j
                lw      $v0, 8($s2)
                lw      $v1, 0x64($v0)
                lw      $t9, 8($v1)
                jalr    $t9
                move    $a0, $s2
                beqz    $v0, loc_18048
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 8($s2)
                move    $a0, $s2
                lw      $v1, 0x64($v0)
                lw      $t9, 0x10($v1)
                jalr    $t9
                li      $a1, 0x12
                bnez    $v0, loc_17E04
                lw      $gp, 0x40+var_28($sp)

loc_18048:                               # CODE XREF: ssl3_connect+4F0↑j
                                         # ssl3_connect+508↑j ...
                b       loc_17AB4
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_18050:                               # CODE XREF: ssl3_connect+7E8↑j
                b       loc_17FEC
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_18058:                               # CODE XREF: ssl3_connect+724↑j
                lw      $v0, 0x138($s2)
                beqz    $v0, loc_182A0
                li      $v0, 0x11D0
                li      $v0, 0x11E0
                move    $a2, $zero
                b       loc_17944
                sw      $v0, 0x348($a1)
 # ---------------------------------------------------------------------------

loc_18074:                               # CODE XREF: ssl3_connect+420↑j
                move    $a2, $zero
                sw      $v0, 0x34($s2)
                b       loc_17D38
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_18084:                               # CODE XREF: ssl3_connect+1F0↑j
                bnez    $v0, loc_17C4C
                la      $t9, ERR_put_error
                slti    $v0, $s1, 0x1112
                bnez    $v0, loc_1817C
                la      $t9, ssl3_client_hello
                addiu   $v0, $s1, -0x1120
                sltiu   $v0, 2
                beqz    $v0, loc_17C4C
                la      $t9, ERR_put_error
                la      $t9, ssl3_get_server_hello
                jalr    $t9 ; ssl3_get_server_hello
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x6C($s2)
                beqz    $v0, loc_182C4
                li      $v0, 0x1130
                lw      $v1, 0x138($s2)
                li      $v0, 0x11D0
                beqz    $v1, loc_180E4
                sw      $v0, 0x34($s2)
                li      $v0, 0x11E0
                sw      $v0, 0x34($s2)

loc_180E4:                               # CODE XREF: ssl3_connect+8E0↑j
                                         # ssl3_connect:loc_182C4↓j
                lw      $a1, 0x58($s2)
                move    $a2, $zero
                b       loc_17D38
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_180F4:                               # CODE XREF: ssl3_connect+6C0↑j
                lw      $v0, 0xC($v1)
                andi    $v0, 0x100
                bnez    $v0, loc_17EBC
                li      $v0, 0x1140
                la      $t9, ssl3_get_server_certificate
                jalr    $t9 ; ssl3_get_server_certificate
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x124($s2)
                beqz    $v0, loc_182CC
                li      $v0, 0x1140
                lw      $a1, 0x58($s2)
                li      $v0, 0x11F0
                move    $a2, $zero
                sw      $v0, 0x34($s2)
                b       loc_17948
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_18140:                               # CODE XREF: ssl3_connect+3E4↑j
                sltiu   $v0, 4
                beqz    $v0, loc_17C4C
                la      $t9, ERR_put_error
                la      $t9, ssl3_send_client_certificate
                jalr    $t9 ; ssl3_send_client_certificate
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                li      $v0, 0x1180
                move    $a2, $zero
                sw      $v0, 0x34($s2)
                b       loc_17D38
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_1817C:                               # CODE XREF: ssl3_connect+89C↑j
                sw      $zero, 0x30($s2)
                jalr    $t9 ; ssl3_client_hello
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_17AB4
                lw      $gp, 0x40+var_28($sp)
                lw      $a0, 0x14($s2)
                lw      $a1, 0x10($s2)
                li      $v0, 0x1120
                sw      $v0, 0x34($s2)
                beq     $a0, $a1, loc_17E04
                sw      $zero, 0x44($s2)
                la      $t9, BIO_push
                jalr    $t9 ; BIO_push
                nop
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x58($s2)
                move    $a2, $zero
                b       loc_17D38
                sw      $v0, 0x10($s2)
 # ---------------------------------------------------------------------------

loc_181CC:                               # CODE XREF: ssl3_connect+274↑j
                lw      $v1, 0xDC($s2)
                lw      $v0, 0x3C($v1)
                addiu   $v0, 1
                sw      $v0, 0x3C($v1)
                la      $v1, ssl3_connect
                bnez    $s3, loc_17A98
                sw      $v1, 0x20($s2)

loc_181E8:                               # CODE XREF: ssl3_connect+29C↑j
                lw      $v0, 0x1C($s2)
                li      $s0, 1
                addiu   $v0, -1
                b       loc_17AC0
                sw      $v0, 0x1C($s2)
 # ---------------------------------------------------------------------------

loc_181FC:                               # CODE XREF: ssl3_connect+3B0↑j
                lw      $a1, 0x58($s2)
                b       loc_17BB8
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_18208:                               # CODE XREF: ssl3_connect+80↑j
                lw      $v0, 0xDC($s2)
                b       loc_1787C
                lw      $s3, 0x9C($v0)
 # ---------------------------------------------------------------------------

loc_18214:                               # CODE XREF: ssl3_connect+4DC↑j
                la      $t9, BUF_MEM_new
                jalr    $t9 ; BUF_MEM_new
                nop
                move    $s0, $v0
                beqz    $v0, loc_18048
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BUF_MEM_grow
                move    $a0, $v0
                jalr    $t9 ; BUF_MEM_grow
                li      $a1, 0x4000
                beqz    $v0, loc_182F8
                lw      $gp, 0x40+var_28($sp)
                b       loc_17CD8
                sw      $s0, 0x3C($s2)
 # ---------------------------------------------------------------------------

loc_1824C:                               # CODE XREF: ssl3_connect+24C↑j
                jalr    $t9 ; ssl_free_wbio_buffer
                move    $a0, $s2
                b       loc_17A48
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_1825C:                               # CODE XREF: ssl3_connect+414↑j
                jalr    $t9 ; SRP_Calc_A_param
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_1831C
                lw      $gp, 0x40+var_28($sp)
                b       loc_17C10
                lw      $a1, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_18278:                               # CODE XREF: ssl3_connect+6A8↑j
                lw      $v1, 0x138($s2)
                beqz    $v1, loc_182B4
                sw      $v0, 0x6C($s2)
                lw      $a1, 0x58($s2)
                li      $v0, 0x11E0
                b       loc_17BB8
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_18294:                               # CODE XREF: ssl3_connect+120↑j
                li      $v0, 0x1190
                b       loc_17924
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_182A0:                               # CODE XREF: ssl3_connect+868↑j
                move    $a2, $zero
                b       loc_17944
                sw      $v0, 0x348($a1)
 # ---------------------------------------------------------------------------

loc_182AC:                               # CODE XREF: ssl3_connect+808↑j
                b       loc_1800C
                sw      $zero, 0xA8($v1)
 # ---------------------------------------------------------------------------

loc_182B4:                               # CODE XREF: ssl3_connect+A88↑j
                lw      $a1, 0x58($s2)
                li      $v0, 0x11D0
                b       loc_17BB8
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_182C4:                               # CODE XREF: ssl3_connect+8D0↑j
                b       loc_180E4
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_182CC:                               # CODE XREF: ssl3_connect+92C↑j
                lw      $a1, 0x58($s2)
                move    $a2, $zero
                sw      $v0, 0x34($s2)
                b       loc_17948
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_182E0:                               # CODE XREF: ssl3_connect+4D0↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x84
                li      $a2, 0x44  # 'D'
                b       loc_17C5C
                sw      $zero, 0x40+var_30($sp)
 # ---------------------------------------------------------------------------

loc_182F8:                               # CODE XREF: ssl3_connect+A48↑j
                lw      $v0, 0x1C($s2)
                la      $t9, BUF_MEM_free
                addiu   $v0, -1
                move    $a0, $s0
                jalr    $t9 ; BUF_MEM_free
                sw      $v0, 0x1C($s2)
                lw      $gp, 0x40+var_28($sp)
                b       loc_17AC0
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1831C:                               # CODE XREF: ssl3_connect+A74↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x84
                li      $a2, 0x169
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x50  # 'P'
                b       loc_17AB4
                lw      $gp, 0x40+var_28($sp)
 # End of function ssl3_connect


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_default_timeout
ssl3_default_timeout:                    # DATA XREF: LOAD:00004A48↑o
                                         # .got:ssl3_default_timeout_ptr↓o
                jr      $ra
                li      $v0, 0x1C20
 # End of function ssl3_default_timeout


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_num_ciphers
ssl3_num_ciphers:                        # CODE XREF: ssl23_get_cipher+20↓p
                                         # ssl23_num_ciphers+20↓p
                                         # DATA XREF: ...
                jr      $ra
                li      $v0, 0x4C  # 'L'
 # End of function ssl3_num_ciphers


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_cipher
ssl3_get_cipher:                         # CODE XREF: ssl23_get_cipher+48↓j
                                         # dtls1_get_cipher+1C↓p
                                         # DATA XREF: ...
                li      $gp, 0x49FE8
                addu    $gp, $t9
                sltiu   $v0, $a0, 0x4C  # 'L'
                beqz    $v0, locret_183A0
                nop
                li      $v0, 0x4B  # 'K'
                subu    $v0, $a0
                sll     $v1, $v0, 6
                la      $a0, _fdata
                sll     $v0, 4
                subu    $v1, $v0
                jr      $ra
                addu    $v0, $v1, $a0
 # ---------------------------------------------------------------------------

locret_183A0:                            # CODE XREF: ssl3_get_cipher+10↑j
                jr      $ra
                move    $v0, $zero
 # End of function ssl3_get_cipher


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_pending
ssl3_pending:                            # DATA XREF: LOAD:00004788↑o
                                         # .got:ssl3_pending_ptr↓o
                lw      $v1, 0x38($a0)
                li      $v0, 0xF1
                beq     $v1, $v0, locret_183CC
                nop
                lw      $a0, 0x58($a0)
                li      $v0, 0x17
                lw      $v1, 0x10C($a0)
                beq     $v1, $v0, locret_183D4
                nop

locret_183CC:                            # CODE XREF: ssl3_pending+8↑j
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

locret_183D4:                            # CODE XREF: ssl3_pending+1C↑j
                jr      $ra
                lw      $v0, 0x110($a0)
 # End of function ssl3_pending


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_ctx_callback_ctrl
ssl3_ctx_callback_ctrl:                  # CODE XREF: SSL_CTX_set_srp_client_pwd_callback+14↓j
                                         # SSL_CTX_set_srp_username_callback+14↓j ...
                li      $v0, 0x48  # 'H'
                beq     $a1, $v0, loc_184B0
                lw      $a3, 0xB0($a0)
                slti    $v0, $a1, 0x49  # 'I'
                bnez    $v0, loc_18424
                li      $v0, 0x35  # '5'
                li      $v0, 0x4C  # 'L'
                beq     $a1, $v0, loc_1848C
                li      $v1, 1
                li      $v0, 0x4D  # 'M'
                beq     $a1, $v0, loc_1845C
                nop
                li      $v0, 0x4B  # 'K'
                beq     $a1, $v0, loc_18474
                nop
                move    $v1, $zero

locret_1841C:                            # CODE XREF: ssl3_ctx_callback_ctrl+60↓j
                jr      $ra
                move    $v0, $v1
 # ---------------------------------------------------------------------------

loc_18424:                               # CODE XREF: ssl3_ctx_callback_ctrl+10↑j
                beq     $a1, $v0, loc_184A4
                li      $v1, 1
                li      $v0, 0x3F  # '?'
                beq     $a1, $v0, locret_18454
                move    $v0, $v1
                li      $v0, 5
                bne     $a1, $v0, locret_1841C
                move    $v1, $zero
                li      $v1, 1
                move    $v0, $v1
                jr      $ra
                sw      $a2, 0x1C($a3)
 # ---------------------------------------------------------------------------

locret_18454:                            # CODE XREF: ssl3_ctx_callback_ctrl+54↑j
                jr      $ra
                sw      $a2, 0x13C($a0)
 # ---------------------------------------------------------------------------

loc_1845C:                               # CODE XREF: ssl3_ctx_callback_ctrl+28↑j
                lw      $v0, 0x194($a0)
                ori     $v0, 0x400
                sw      $v0, 0x194($a0)
                move    $v0, $v1
                jr      $ra
                sw      $a2, 0x164($a0)
 # ---------------------------------------------------------------------------

loc_18474:                               # CODE XREF: ssl3_ctx_callback_ctrl+34↑j
                lw      $v0, 0x194($a0)
                ori     $v0, 0x400
                sw      $v0, 0x194($a0)
                move    $v0, $v1
                jr      $ra
                sw      $a2, 0x15C($a0)
 # ---------------------------------------------------------------------------

loc_1848C:                               # CODE XREF: ssl3_ctx_callback_ctrl+1C↑j
                lw      $v0, 0x194($a0)
                ori     $v0, 0x400
                sw      $v0, 0x194($a0)
                move    $v0, $v1
                jr      $ra
                sw      $a2, 0x160($a0)
 # ---------------------------------------------------------------------------

loc_184A4:                               # CODE XREF: ssl3_ctx_callback_ctrl:loc_18424↑j
                move    $v0, $v1
                jr      $ra
                sw      $a2, 0x100($a0)
 # ---------------------------------------------------------------------------

loc_184B0:                               # CODE XREF: ssl3_ctx_callback_ctrl+4↑j
                li      $v1, 1
                move    $v0, $v1
                jr      $ra
                sw      $a2, 0x138($a0)
 # End of function ssl3_ctx_callback_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_put_cipher_by_char
ssl3_put_cipher_by_char:                 # CODE XREF: ssl3_send_server_hello+148↑p
                                         # dtls1_send_server_hello+194↓p
                                         # DATA XREF: ...
                beqz    $a1, locret_184F0
                lui     $v1, 0x300
                lw      $a0, 8($a0)
                lui     $v0, 0xFF00
                and     $v0, $a0, $v0
                bne     $v0, $v1, locret_184F8
                nop
                sra     $v0, $a0, 8
                sb      $v0, 0($a1)
                li      $v0, 2
                jr      $ra
                sb      $a0, 1($a1)
 # ---------------------------------------------------------------------------

locret_184F0:                            # CODE XREF: ssl3_put_cipher_by_char↑j
                jr      $ra
                li      $v0, 2
 # ---------------------------------------------------------------------------

locret_184F8:                            # CODE XREF: ssl3_put_cipher_by_char+14↑j
                jr      $ra
                move    $v0, $zero
 # End of function ssl3_put_cipher_by_char


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_req_cert_type
ssl3_get_req_cert_type:                  # CODE XREF: ssl3_send_certificate_request+A4↑p
                                         # dtls1_send_certificate_request+A4↓p
                                         # DATA XREF: ...
                li      $v0, 2
                sb      $v0, 1($a1)
                li      $v1, 1
                li      $v0, 2
                jr      $ra
                sb      $v1, 0($a1)
 # End of function ssl3_get_req_cert_type


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_renegotiate
ssl3_renegotiate:                        # CODE XREF: ssl3_read_bytes+23C↓p
                                         # dtls1_read_bytes+3E0↓p
                                         # DATA XREF: ...
                lw      $v0, 0x20($a0)
                beqz    $v0, locret_1854C
                nop
                lw      $a0, 0x58($a0)
                lw      $v0, 0($a0)
                andi    $v0, 1
                bnez    $v0, locret_18544
                nop
                li      $v0, 1
                jr      $ra
                sw      $v0, 0x194($a0)
 # ---------------------------------------------------------------------------

locret_18544:                            # CODE XREF: ssl3_renegotiate+18↑j
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

locret_1854C:                            # CODE XREF: ssl3_renegotiate+4↑j
                jr      $ra
                li      $v0, 1
 # End of function ssl3_renegotiate


 # =============== S U B R O U T I N E =======================================


                .globl ssl_get_algorithm2
ssl_get_algorithm2:                      # CODE XREF: ssl3_digest_cached_records:loc_1A560↓p
                                         # tls1_generate_master_secret+30↓p ...
                lw      $v0, 0x58($a0)
                lw      $a1, 0($a0)
                lw      $v1, 0x344($v0)
                sra     $a0, $a1, 8
                li      $v0, 3
                beq     $a0, $v0, loc_18578
                lw      $v1, 0x24($v1)

locret_18570:                            # CODE XREF: ssl_get_algorithm2+28↓j
                                         # ssl_get_algorithm2+34↓j
                jr      $ra
                move    $v0, $v1
 # ---------------------------------------------------------------------------

loc_18578:                               # CODE XREF: ssl_get_algorithm2+14↑j
                slti    $v0, $a1, 0x303
                bnez    $v0, locret_18570
                nop
                li      $v0, 0xC030
                bne     $v1, $v0, locret_18570
                nop
                lui     $v0, 2
                jr      $ra
                la      $v0, loc_20080
 # End of function ssl_get_algorithm2


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_renegotiate_check
ssl3_renegotiate_check:                  # CODE XREF: ssl3_peek+B4↓p
                                         # ssl3_write:loc_1884C↓p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x49DB4
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($a0)
                lw      $v0, 0x194($v1)
                beqz    $v0, loc_18638
                move    $s0, $a0
                lw      $v0, 0xF8($v1)
                bnez    $v0, loc_1863C
                move    $a1, $zero
                lw      $v0, 0x108($v1)
                bnez    $v0, loc_18640
                lw      $ra, 0x20+var_4($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                nop
                andi    $v0, 0x3000
                bnez    $v0, loc_18638
                lw      $gp, 0x20+var_10($sp)
                lw      $a0, 0x58($s0)
                li      $v0, 0x3004
                sw      $v0, 0x34($s0)
                lw      $v0, 0x198($a0)
                lw      $v1, 0x19C($a0)
                addiu   $v0, 1
                li      $a1, 1
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                addiu   $v1, 1
                sw      $v0, 0x198($a0)
                addiu   $sp, 0x20
                move    $v0, $a1
                sw      $v1, 0x19C($a0)
                jr      $ra
                sw      $zero, 0x194($a0)
 # ---------------------------------------------------------------------------

loc_18638:                               # CODE XREF: ssl3_renegotiate_check+24↑j
                                         # ssl3_renegotiate_check+54↑j
                move    $a1, $zero

loc_1863C:                               # CODE XREF: ssl3_renegotiate_check+30↑j
                lw      $ra, 0x20+var_4($sp)

loc_18640:                               # CODE XREF: ssl3_renegotiate_check+3C↑j
                lw      $s0, 0x20+var_8($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x20
 # End of function ssl3_renegotiate_check


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_peek
ssl3_peek:                               # DATA XREF: LOAD:00004818↑o
                                         # .got:ssl3_peek_ptr↓o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x49D00
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, __errno_location
                move    $s0, $a0
                move    $s2, $a1
                jalr    $t9 ; __errno_location
                move    $s3, $a2
                lw      $a0, 0x58($s0)
                lw      $gp, 0x38+var_20($sp)
                sw      $zero, 0($v0)
                lw      $v0, 0x194($a0)
                bnez    $v0, loc_18700
                li      $s1, 1
                lw      $v0, 8($s0)
                sw      $s1, 0x1A0($a0)
                sw      $s1, 0x38+var_28($sp)
                lw      $t9, 0x34($v0)
                li      $a1, 0x17
                move    $a0, $s0
                move    $a2, $s2
                jalr    $t9
                move    $a3, $s3
                move    $a1, $v0
                li      $v0, 0xFFFFFFFF
                beq     $a1, $v0, loc_18748
                lw      $gp, 0x38+var_20($sp)

loc_186D8:                               # CODE XREF: ssl3_peek+F0↓j
                lw      $a0, 0x58($s0)

loc_186DC:                               # CODE XREF: ssl3_peek+104↓j
                sw      $zero, 0x1A0($a0)

loc_186E0:                               # CODE XREF: ssl3_peek+144↓j
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_18700:                               # CODE XREF: ssl3_peek+4C↑j
                la      $t9, ssl3_renegotiate_check
                jalr    $t9 ; ssl3_renegotiate_check
                move    $a0, $s0
                lw      $a0, 0x58($s0)
                lw      $v0, 8($s0)
                li      $s1, 1
                sw      $s1, 0x1A0($a0)
                sw      $s1, 0x38+var_28($sp)
                lw      $t9, 0x34($v0)
                li      $a1, 0x17
                move    $a0, $s0
                move    $a2, $s2
                jalr    $t9
                move    $a3, $s3
                move    $a1, $v0
                li      $v0, 0xFFFFFFFF
                bne     $a1, $v0, loc_186D8
                lw      $gp, 0x38+var_20($sp)

loc_18748:                               # CODE XREF: ssl3_peek+80↑j
                lw      $a0, 0x58($s0)
                li      $v0, 2
                lw      $v1, 0x1A0($a0)
                bne     $v1, $v0, loc_186DC
                move    $a2, $s2
                lw      $v0, 0x1C($s0)
                lw      $v1, 8($s0)
                sw      $s1, 0x38+var_28($sp)
                addiu   $v0, 1
                lw      $t9, 0x34($v1)
                li      $a1, 0x17
                sw      $v0, 0x1C($s0)
                move    $a3, $s3
                jalr    $t9
                move    $a0, $s0
                lw      $v1, 0x1C($s0)
                lw      $gp, 0x38+var_20($sp)
                addiu   $v1, -1
                move    $a1, $v0
                b       loc_186E0
                sw      $v1, 0x1C($s0)
 # End of function ssl3_peek


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_write
ssl3_write:                              # DATA XREF: LOAD:000048F8↑o
                                         # .got:ssl3_write_ptr↓o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x49BB4
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, __errno_location
                move    $s0, $a0
                move    $s1, $a1
                jalr    $t9 ; __errno_location
                move    $s2, $a2
                lw      $v1, 0x58($s0)
                lw      $gp, 0x28+var_18($sp)
                sw      $zero, 0($v0)
                lw      $v0, 0x194($v1)
                bnez    $v0, loc_1884C
                la      $t9, ssl3_renegotiate_check

loc_187EC:                               # CODE XREF: ssl3_write+BC↓j
                lw      $v0, 0($v1)
                andi    $v0, 4
                beqz    $v0, loc_1880C
                nop
                lw      $a0, 0x10($s0)
                lw      $v0, 0x14($s0)
                beq     $a0, $v0, loc_18860
                nop

loc_1880C:                               # CODE XREF: ssl3_write+58↑j
                lw      $v0, 8($s0)
                li      $a1, 0x17
                lw      $t9, 0x38($v0)
                move    $a0, $s0
                move    $a2, $s1
                jalr    $t9
                move    $a3, $s2
                lw      $gp, 0x28+var_18($sp)
                move    $a1, $v0

loc_18830:                               # CODE XREF: ssl3_write+EC↓j
                                         # ssl3_write+154↓j ...
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_1884C:                               # CODE XREF: ssl3_write+48↑j
                jalr    $t9 ; ssl3_renegotiate_check
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                b       loc_187EC
                lw      $v1, 0x58($s0)
 # ---------------------------------------------------------------------------

loc_18860:                               # CODE XREF: ssl3_write+68↑j
                lw      $v0, 4($v1)
                bnez    $v0, loc_188A0
                la      $t9, BIO_ctrl
                la      $t9, ssl3_write_bytes
                li      $a1, 0x17
                move    $a2, $s1
                move    $a3, $s2
                jalr    $t9 ; ssl3_write_bytes
                move    $a0, $s0
                move    $a1, $v0
                blez    $v0, loc_18830
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x58($s0)
                lw      $a0, 0x10($s0)
                sw      $a1, 4($v0)
                la      $t9, BIO_ctrl

loc_188A0:                               # CODE XREF: ssl3_write+C8↑j
                li      $v0, 2
                sw      $v0, 0x18($s0)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                blez    $v0, loc_188F8
                lw      $gp, 0x28+var_18($sp)
                la      $t9, ssl_free_wbio_buffer
                li      $v0, 1
                sw      $v0, 0x18($s0)
                jalr    $t9 ; ssl_free_wbio_buffer
                move    $a0, $s0
                lw      $a0, 0x58($s0)
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0($a0)
                lw      $a1, 4($a0)
                li      $v1, 0xFFFFFFFB
                and     $v0, $v1
                sw      $v0, 0($a0)
                b       loc_18830
                sw      $zero, 4($a0)
 # ---------------------------------------------------------------------------

loc_188F8:                               # CODE XREF: ssl3_write+11C↑j
                b       loc_18830
                move    $a1, $v0
 # End of function ssl3_write


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_shutdown
ssl3_shutdown:                           # CODE XREF: dtls1_shutdown+10↓j
                                         # DATA XREF: LOAD:00003838↑o ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x49A50
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x2C($a0)
                bnez    $v0, loc_18980
                move    $s0, $a0
                lw      $v1, 0x34($a0)
                li      $v0, 0x4000
                beq     $v1, $v0, loc_18984
                li      $v0, 3
                lw      $a1, 0x30($a0)
                andi    $v0, $a1, 1
                beqz    $v0, loc_189C0
                ori     $v0, $a1, 1
                lw      $v0, 0x58($a0)
                lw      $v1, 0x18C($v0)
                bnez    $v1, loc_18A1C
                andi    $v0, $a1, 2
                beqz    $v0, loc_189EC
                move    $a2, $zero

loc_18960:                               # CODE XREF: ssl3_shutdown+E4↓j
                                         # ssl3_shutdown+10C↓j ...
                li      $v0, 3
                beq     $a1, $v0, loc_189A0
                move    $v1, $zero
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_18980:                               # CODE XREF: ssl3_shutdown+20↑j
                li      $v0, 3

loc_18984:                               # CODE XREF: ssl3_shutdown+30↑j
                li      $v1, 1
                sw      $v0, 0x30($s0)

loc_1898C:                               # CODE XREF: ssl3_shutdown:loc_18A14↓j
                                         # ssl3_shutdown+134↓j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_189A0:                               # CODE XREF: ssl3_shutdown+64↑j
                lw      $v0, 0x58($s0)
                lw      $ra, 0x28+var_4($sp)
                lw      $v1, 0x18C($v0)
                lw      $s0, 0x28+var_8($sp)
                sltiu   $v1, 1
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_189C0:                               # CODE XREF: ssl3_shutdown+40↑j
                la      $t9, ssl3_send_alert
                sw      $v0, 0x30($a0)
                li      $a1, 1
                jalr    $t9 ; ssl3_send_alert
                move    $a2, $zero
                lw      $v1, 0x58($s0)
                lw      $v0, 0x18C($v1)
                bnez    $v0, loc_18A14
                lw      $gp, 0x28+var_10($sp)
                b       loc_18960
                lw      $a1, 0x30($s0)
 # ---------------------------------------------------------------------------

loc_189EC:                               # CODE XREF: ssl3_shutdown+58↑j
                lw      $v0, 8($a0)
                sw      $zero, 0x28+var_18($sp)
                lw      $t9, 0x34($v0)
                move    $a1, $zero
                jalr    $t9
                move    $a3, $zero
                lw      $a1, 0x30($s0)
                andi    $v0, $a1, 2
                bnez    $v0, loc_18960
                lw      $gp, 0x28+var_10($sp)

loc_18A14:                               # CODE XREF: ssl3_shutdown+DC↑j
                b       loc_1898C
                li      $v1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_18A1C:                               # CODE XREF: ssl3_shutdown+50↑j
                lw      $v0, 8($a0)
                lw      $t9, 0x3C($v0)
                jalr    $t9
                nop
                move    $v1, $v0
                li      $v0, 0xFFFFFFFF
                beq     $v1, $v0, loc_1898C
                lw      $gp, 0x28+var_10($sp)
                b       loc_18960
                lw      $a1, 0x30($s0)
 # End of function ssl3_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_choose_cipher
ssl3_choose_cipher:                      # CODE XREF: ssl3_get_client_hello+6F4↑p
                                         # ssl3_get_client_hello+B9C↑p
                                         # DATA XREF: ...

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x4990C
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                lw      $v1, 0xF8($a0)
                lui     $v0, 0x40  # '@'
                move    $s4, $a0
                and     $v1, $v0
                beqz    $v1, loc_18BFC
                lw      $s3, 0x98($s4)
                move    $s2, $a2
                move    $s5, $a1

loc_18A94:                               # CODE XREF: ssl3_choose_cipher+1BC↓j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s2
                move    $s1, $zero
                slt     $v0, $s1, $v0
                beqz    $v0, loc_18B04
                lw      $gp, 0x38+var_28($sp)

loc_18AB0:                               # CODE XREF: ssl3_choose_cipher+B8↓j
                la      $t9, sk_value
                move    $a0, $s2
                jalr    $t9 ; sk_value
                move    $a1, $s1
                move    $s0, $v0
                lw      $v0, 0x1C($v0)
                andi    $v0, 4
                beqz    $v0, loc_18B30
                lw      $gp, 0x38+var_28($sp)
                lw      $a0, 0($s4)
                li      $v0, 3
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_18B28
                slti    $v0, $a0, 0x303

loc_18AE8:                               # CODE XREF: ssl3_choose_cipher+158↓j
                la      $t9, sk_num

loc_18AEC:                               # CODE XREF: ssl3_choose_cipher:loc_18B28↓j
                                         # ssl3_choose_cipher+130↓j ...
                jalr    $t9 ; sk_num
                move    $a0, $s2
                addiu   $s1, 1
                slt     $v0, $s1, $v0
                bnez    $v0, loc_18AB0
                lw      $gp, 0x38+var_28($sp)

loc_18B04:                               # CODE XREF: ssl3_choose_cipher+64↑j
                lw      $ra, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_18B28:                               # CODE XREF: ssl3_choose_cipher+9C↑j
                bnez    $v0, loc_18AEC
                la      $t9, sk_num

loc_18B30:                               # CODE XREF: ssl3_choose_cipher+88↑j
                la      $t9, ssl_set_cert_masks
                move    $a0, $s3
                jalr    $t9 ; ssl_set_cert_masks
                move    $a1, $s0
                lw      $v0, 0x20($s0)
                lw      $gp, 0x38+var_28($sp)
                andi    $v0, 2
                lw      $a2, 8($s3)
                lw      $t1, 0xC($s3)
                lw      $a1, 0x10($s3)
                lw      $t0, 0x14($s3)
                lw      $v1, 0x1B8($s4)
                lw      $a0, 0xC($s0)
                beqz    $v0, loc_18BD4
                lw      $a3, 0x10($s0)
                or      $v0, $v1, $a1
                and     $v0, $a0
                beqz    $v0, loc_18AEC
                la      $t9, sk_num
                and     $v0, $a3, $t0
                sltu    $v0, $zero, $v0
                beqz    $v0, loc_18AEC
                nop
                la      $t9, sk_find

loc_18B90:                               # CODE XREF: ssl3_choose_cipher+1B0↓j
                move    $a1, $s0
                jalr    $t9 ; sk_find
                move    $a0, $s5
                bltz    $v0, loc_18AE8
                lw      $gp, 0x38+var_28($sp)
                la      $t9, sk_value
                move    $a0, $s5
                lw      $ra, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                move    $a1, $v0
                jr      $t9 ; sk_value
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_18BD4:                               # CODE XREF: ssl3_choose_cipher+120↑j
                or      $v0, $v1, $a2
                and     $v0, $a0
                beqz    $v0, loc_18AEC
                la      $t9, sk_num
                and     $v0, $a3, $t1
                sltu    $v0, $zero, $v0
                beqz    $v0, loc_18AEC
                nop
                b       loc_18B90
                la      $t9, sk_find
 # ---------------------------------------------------------------------------

loc_18BFC:                               # CODE XREF: ssl3_choose_cipher+40↑j
                move    $s2, $a1
                b       loc_18A94
                move    $s5, $a2
 # End of function ssl3_choose_cipher


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_cipher_by_char
ssl3_get_cipher_by_char:                 # CODE XREF: ssl23_get_cipher_by_char+20↓p
                                         # DATA XREF: LOAD:00003E68↑o ...

var_40          = -0x40
var_38          = -0x38
var_30          = -0x30
var_8           = -8

                li      $gp, 0x49748
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_8($sp)
                sw      $gp, 0x50+var_40($sp)
                lbu     $v0, 0($a0)
                lbu     $a1, 1($a0)
                sll     $v0, 8
                lui     $v1, 0x300
                or      $v0, $a1
                or      $v0, $v1
                la      $t9, OBJ_bsearch_ssl_cipher_id
                la      $a1, _fdata
                sw      $v0, 0x50+var_30($sp)
                addiu   $a0, $sp, 0x50+var_38
                jalr    $t9 ; OBJ_bsearch_ssl_cipher_id
                li      $a2, 0x4C  # 'L'
                move    $v1, $v0
                bnez    $v0, loc_18C6C
                lw      $gp, 0x50+var_40($sp)
                lw      $ra, 0x50+var_8($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_18C6C:                               # CODE XREF: ssl3_get_cipher_by_char+4C↑j
                lw      $v0, 0($v0)
                lw      $ra, 0x50+var_8($sp)
                movz    $v1, $zero, $v0
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x50
 # End of function ssl3_get_cipher_by_char


 # =============== S U B R O U T I N E =======================================


sub_18C84:                               # DATA XREF: ssl3_ctx_ctrl+25C↓o
                li      $gp, 0x496CC
                addu    $gp, $t9
                la      $t9, BUF_strdup
                jr      $t9 ; BUF_strdup
                lw      $a0, 0x1B0($a0)
 # End of function sub_18C84


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_ctx_ctrl
ssl3_ctx_ctrl:                           # CODE XREF: SSL_CTX_set_srp_cb_arg+18↓j
                                         # SSL_CTX_set_srp_strength+18↓j ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x496B4
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                sltiu   $v0, $a1, 0x54   # switch 84 cases
                move    $s1, $a0
                move    $s2, $a3
                bnez    $v0, loc_18CF4

def_18D0C:                               # jumptable 00018D0C default case
                lw      $s0, 0xB0($a0)

loc_18CD4:                               # CODE XREF: ssl3_ctx_ctrl+70↓j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                move    $t0, $zero       # jumptable 00018D0C cases 0,3,4,6-13,15-53,55-57,60-63,65-77

loc_18CD8:                               # CODE XREF: ssl3_ctx_ctrl+7C↓j
                                         # ssl3_ctx_ctrl+A0↓j ...
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $t0
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_18CF4:                               # CODE XREF: ssl3_ctx_ctrl+30↑j
                la      $v1, loc_40000
                sll     $v0, $a1, 2
                addiu   $v1, (jpt_18D0C - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_18D14:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                lw      $v0, 0x18($s0)   # jumptable 00018D0C case 1
                bnez    $v0, loc_18CD8
                move    $t0, $zero
                lw      $a0, 0x24($s0)
                beqz    $a0, loc_18FD4
                la      $t9, EVP_PKEY_size
                jalr    $t9 ; EVP_PKEY_size
                nop
                slti    $v0, 0x41  # 'A'
                lw      $gp, 0x30+var_18($sp)
                b       loc_18CD8
                xori    $t0, $v0, 1
 # ---------------------------------------------------------------------------

loc_18D44:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                beqz    $a3, loc_18FC0   # jumptable 00018D0C case 2
                la      $t9, ERR_put_error
                la      $t9, RSAPrivateKey_dup
                jalr    $t9 ; RSAPrivateKey_dup
                move    $a0, $a3
                move    $s1, $v0
                beqz    $v0, loc_18FBC
                lw      $gp, 0x30+var_18($sp)
                lw      $a0, 0x18($s0)
                beqz    $a0, loc_18D7C
                la      $t9, RSA_free
                jalr    $t9 ; RSA_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_18D7C:                               # CODE XREF: ssl3_ctx_ctrl+CC↑j
                li      $t0, 1
                b       loc_18CD8
                sw      $s1, 0x18($s0)
 # ---------------------------------------------------------------------------

loc_18D88:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                la      $t9, ERR_put_error  # jumptable 00018D0C case 5
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x85
                li      $a2, 0x42  # 'B'

loc_18D9C:                               # CODE XREF: ssl3_ctx_ctrl+17C↓j
                                         # ssl3_ctx_ctrl+208↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                move    $t0, $zero
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $t0
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_18DC8:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                lw      $v0, 0x94($s1)   # jumptable 00018D0C case 14
                beqz    $v0, loc_18FDC
                la      $t9, sk_new_null

loc_18DD4:                               # CODE XREF: ssl3_ctx_ctrl+34C↓j
                la      $t9, sk_push
                move    $a0, $v0
                jalr    $t9 ; sk_push
                move    $a1, $s2
                lw      $gp, 0x30+var_18($sp)
                b       loc_18CD8
                li      $t0, 1
 # ---------------------------------------------------------------------------

loc_18DF0:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                li      $t0, 1           # jumptable 00018D0C case 54
                b       loc_18CD8
                sw      $a3, 0x104($s1)
 # ---------------------------------------------------------------------------

loc_18DFC:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                beqz    $a3, loc_190D4   # jumptable 00018D0C cases 58,59
                li      $v0, 0x30  # '0'
                beq     $a2, $v0, loc_18F08
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x85
                li      $a2, 0x145
                b       loc_18D9C
                sw      $zero, 0x30+var_20($sp)
 # ---------------------------------------------------------------------------

loc_18E20:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                li      $t0, 1           # jumptable 00018D0C case 64
                b       loc_18CD8
                sw      $a3, 0x140($s1)
 # ---------------------------------------------------------------------------

loc_18E2C:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                lw      $v0, 0x194($s1)  # jumptable 00018D0C case 78
                li      $t0, 1
                ori     $v0, 0x400
                sw      $a3, 0x158($s1)
                b       loc_18CD8
                sw      $v0, 0x194($s1)
 # ---------------------------------------------------------------------------

loc_18E44:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                lw      $v0, 0x194($s1)  # jumptable 00018D0C case 79
                lw      $a0, 0x168($s1)
                ori     $v0, 0x400
                beqz    $a0, loc_18E68
                sw      $v0, 0x194($s1)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_18E68:                               # CODE XREF: ssl3_ctx_ctrl+1B4↑j
                beqz    $s2, loc_18FD4
                sw      $zero, 0x168($s1)
                la      $t9, strlen
                jalr    $t9 ; strlen
                move    $a0, $s2
                sltiu   $v0, 0x100
                beqz    $v0, loc_18E94
                lw      $gp, 0x30+var_18($sp)
                lb      $v0, 0($s2)
                bnez    $v0, loc_18FF8
                nop

loc_18E94:                               # CODE XREF: ssl3_ctx_ctrl+1E4↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x85
                li      $a2, 0x165
                b       loc_18D9C
                sw      $zero, 0x30+var_20($sp)
 # ---------------------------------------------------------------------------

loc_18EAC:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                li      $t0, 1           # jumptable 00018D0C case 80
                b       loc_18CD8
                sw      $a2, 0x190($s1)
 # ---------------------------------------------------------------------------

loc_18EB8:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                lw      $v0, 0x94($s1)   # jumptable 00018D0C case 82
                li      $t0, 1
                b       loc_18CD8
                sw      $v0, 0($a3)
 # ---------------------------------------------------------------------------

loc_18EC8:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                lw      $a0, 0x94($s1)   # jumptable 00018D0C case 83
                beqz    $a0, loc_18FD4
                la      $t9, sk_pop_free
                la      $a1, X509_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x30+var_18($sp)
                li      $t0, 1
                b       loc_18CD8
                sw      $zero, 0x94($s1)
 # ---------------------------------------------------------------------------

loc_18EF0:                               # CODE XREF: ssl3_ctx_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_18D0C↓o
                la      $v0, locret_20000  # jumptable 00018D0C case 81
                li      $t0, 1
                addiu   $v0, (sub_18C84 - 0x20000)
                sw      $a3, 0x18C($s1)
                b       loc_18CD8
                sw      $v0, 0x164($s1)
 # ---------------------------------------------------------------------------

loc_18F08:                               # CODE XREF: ssl3_ctx_ctrl+168↑j
                li      $v0, 0x3B  # ';'
                beq     $a1, $v0, loc_19028
                addiu   $v0, $s1, 0x108
                lw      $a0, 0x108($s1)
                lw      $a2, 0xC($v0)
                lw      $v1, 4($v0)
                lw      $a1, 8($v0)
                usw     $a0, 0($a3)
                usw     $v1, 4($a3)
                usw     $a1, 8($a3)
                usw     $a2, 0xC($a3)
                addiu   $v1, $s1, 0x118
                lw      $a0, 0x118($s1)
                addiu   $v0, $a3, 0x10
                lw      $a1, 4($v1)
                lw      $a3, 0xC($v1)
                lw      $a2, 8($v1)
                usw     $a0, 0($v0)
                usw     $a1, 4($v0)
                usw     $a2, 8($v0)
                usw     $a3, 0xC($v0)
                lw      $a1, 0x128($s1)
                addiu   $v0, $s2, 0x20  # ' '
                addiu   $v1, $s1, 0x128
                lw      $a3, 0xC($v1)
                lw      $a0, 4($v1)
                lw      $a2, 8($v1)
                usw     $a1, 0($v0)
                usw     $a0, 4($v0)
                swl     $a2, 0xB($v0)
                li      $t0, 1
                swr     $a2, 8($v0)
                swl     $a3, 0xF($v0)
                b       loc_18CD8
                swr     $a3, 0xC($v0)
 # ---------------------------------------------------------------------------

loc_18FBC:                               # CODE XREF: ssl3_ctx_ctrl+C0↑j
                la      $t9, ERR_put_error

loc_18FC0:                               # CODE XREF: ssl3_ctx_ctrl:loc_18D44↑j
                li      $a0, 0x14
                li      $a1, 0x85
                li      $a2, 4
                b       loc_18D9C
                sw      $zero, 0x30+var_20($sp)
 # ---------------------------------------------------------------------------

loc_18FD4:                               # CODE XREF: ssl3_ctx_ctrl+88↑j
                                         # ssl3_ctx_ctrl:loc_18E68↑j ...
                b       loc_18CD8
                li      $t0, 1
 # ---------------------------------------------------------------------------

loc_18FDC:                               # CODE XREF: ssl3_ctx_ctrl+130↑j
                jalr    $t9 ; sk_new_null
                nop
                lw      $gp, 0x30+var_18($sp)
                bnez    $v0, loc_18DD4
                sw      $v0, 0x94($s1)
                b       loc_18CD8
                move    $t0, $zero
 # ---------------------------------------------------------------------------

loc_18FF8:                               # CODE XREF: ssl3_ctx_ctrl+1F0↑j
                la      $t9, BUF_strdup
                jalr    $t9 ; BUF_strdup

loc_19000:                               # DATA XREF: SSL_CTX_new+BC↓o
                move    $a0, $s2
                lw      $gp, 0x30+var_18($sp)
                bnez    $v0, loc_18FD4
                sw      $v0, 0x168($s1)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x85
                li      $a2, 0x44  # 'D'
                b       loc_18D9C
                sw      $zero, 0x30+var_20($sp)
 # ---------------------------------------------------------------------------

loc_19028:                               # CODE XREF: ssl3_ctx_ctrl+270↑j
                lwl     $a0, 3($a3)
                lwl     $a1, 7($a3)
                lwl     $a2, 0xB($a3)
                lwl     $v0, 0xF($a3)
                lwr     $a0, 0($a3)
                lwr     $a1, 4($a3)
                lwr     $a2, 8($a3)
                lwr     $v0, 0xC($a3)
                addiu   $v1, $s1, 0x108
                sw      $a0, 0x108($s1)
                sw      $v0, 0xC($v1)
                sw      $a1, 4($v1)
                sw      $a2, 8($v1)
                addiu   $v0, $a3, 0x10
                lwl     $a1, 3($v0)
                lwl     $a2, 7($v0)
                lwl     $a3, 0xB($v0)
                lwl     $a0, 0xF($v0)
                lwr     $a2, 4($v0)
                lwr     $a0, 0xC($v0)
                lwr     $a3, 8($v0)
                lwr     $a1, 0($v0)
                addiu   $v1, $s1, 0x118
                sw      $a1, 0x118($s1)
                addiu   $v0, $s2, 0x20  # ' '
                sw      $a0, 0xC($v1)
                sw      $a2, 4($v1)
                sw      $a3, 8($v1)
                lwl     $a1, 3($v0)
                lwl     $a2, 7($v0)
                lwl     $a3, 0xB($v0)
                lwl     $a0, 0xF($v0)
                lwr     $a1, 0($v0)
                lwr     $a0, 0xC($v0)
                lwr     $a2, 4($v0)
                lwr     $a3, 8($v0)
                addiu   $v1, $s1, 0x128
                li      $t0, 1
                sw      $a1, 0x128($s1)
                sw      $a0, 0xC($v1)
                sw      $a2, 4($v1)
                b       loc_18CD8
                sw      $a3, 8($v1)
 # ---------------------------------------------------------------------------

loc_190D4:                               # CODE XREF: ssl3_ctx_ctrl:loc_18DFC↑j
                b       loc_18CD8
                li      $t0, 0x30  # '0'
 # End of function ssl3_ctx_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_callback_ctrl
ssl3_callback_ctrl:                      # DATA XREF: LOAD:00004A88↑o
                                         # .got:ssl3_callback_ctrl_ptr↓o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x49274
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                addiu   $v0, $a1, -5
                sltiu   $v0, 2
                move    $s0, $a1
                move    $s1, $a0
                bnez    $v0, loc_19188
                move    $s2, $a2

loc_19118:                               # CODE XREF: ssl3_callback_ctrl+B8↓j
                li      $v0, 5
                beq     $s0, $v0, loc_19164
                li      $v0, 0x38  # '8'
                beq     $s0, $v0, loc_19148
                move    $v0, $zero

loc_1912C:                               # CODE XREF: ssl3_callback_ctrl+DC↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_19148:                               # CODE XREF: ssl3_callback_ctrl+48↑j
                sw      $s2, 0x110($s1)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_19164:                               # CODE XREF: ssl3_callback_ctrl+40↑j
                lw      $v0, 0x98($s1)
                lw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x1C($v0)
                lw      $s1, 0x30+var_C($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_19188:                               # CODE XREF: ssl3_callback_ctrl+34↑j
                la      $t9, ssl_cert_inst
                jalr    $t9 ; ssl_cert_inst
                addiu   $a0, 0x98
                bnez    $v0, loc_19118
                lw      $gp, 0x30+var_18($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xE9
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_1912C
                lw      $gp, 0x30+var_18($sp)
 # End of function ssl3_callback_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_ctrl
ssl3_ctrl:                               # CODE XREF: dtls1_ctrl+38↓j
                                         # DATA XREF: LOAD:00003238↑o ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x49190
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                li      $v0, 2
                move    $s0, $a1
                move    $s1, $a0
                move    $s2, $a2
                beq     $a1, $v0, loc_19230
                move    $s3, $a3
                li      $v0, 5
                beq     $a1, $v0, loc_19230
                li      $v0, 3
                beq     $a1, $v0, loc_19230
                li      $v0, 6
                beq     $a1, $v0, loc_19234
                la      $t9, ssl_cert_inst

loc_1921C:                               # CODE XREF: ssl3_ctrl+7C↓j
                sltiu   $v0, $s0, 0x58   # switch 88 cases
                bnez    $v0, loc_19288

def_1929C:                               # jumptable 0001929C default case
                la      $v1, loc_40000

loc_19228:                               # CODE XREF: ssl3_ctrl+DC↓j
                                         # ssl3_ctrl+104↓j ...
                b       loc_19268        # jumptable 0001929C cases 0,3,4,6,7,9,14-54,56,58-64,72-84
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_19230:                               # CODE XREF: ssl3_ctrl+38↑j
                                         # ssl3_ctrl+44↑j ...
                la      $t9, ssl_cert_inst

loc_19234:                               # CODE XREF: ssl3_ctrl+54↑j
                jalr    $t9 ; ssl_cert_inst
                addiu   $a0, $s1, 0x98
                bnez    $v0, loc_1921C
                lw      $gp, 0x38+var_20($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xD5
                li      $a2, 0x41  # 'A'

loc_19258:                               # CODE XREF: ssl3_ctrl+198↓j
                                         # ssl3_ctrl+22C↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $a0, $zero

loc_19268:                               # CODE XREF: ssl3_ctrl:loc_19228↑j
                                         # ssl3_ctrl+F8↓j ...
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_19288:                               # CODE XREF: ssl3_ctrl+60↑j
                sll     $v0, $s0, 2
                addiu   $v1, (jpt_1929C - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_192A4:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                beqz    $s2, loc_194E8   # jumptable 0001929C case 87
                li      $v1, 0xFFFFFFFB
                lw      $v0, 0x16C($s1)
                li      $a0, 1
                ori     $v0, 4
                b       loc_19268
                sw      $v0, 0x16C($s1)
 # ---------------------------------------------------------------------------

loc_192C0:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                lw      $a0, 0x98($s1)   # jumptable 0001929C case 1
                beqz    $a0, loc_19228   # jumptable 0001929C cases 0,3,4,6,7,9,14-54,56,58-64,72-84
                nop
                lw      $v0, 0x18($a0)
                bnez    $v0, loc_19228   # jumptable 0001929C cases 0,3,4,6,7,9,14-54,56,58-64,72-84
                nop
                lw      $a0, 0x24($a0)
                beqz    $a0, loc_194E0
                la      $t9, EVP_PKEY_size
                jalr    $t9 ; EVP_PKEY_size
                nop
                slti    $v0, 0x41  # 'A'
                lw      $gp, 0x38+var_20($sp)
                b       loc_19268
                xori    $a0, $v0, 1
 # ---------------------------------------------------------------------------

loc_192FC:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                beqz    $s3, loc_19540   # jumptable 0001929C case 2
                la      $t9, ERR_put_error
                la      $t9, RSAPrivateKey_dup
                jalr    $t9 ; RSAPrivateKey_dup
                move    $a0, $s3
                move    $s0, $v0
                beqz    $v0, loc_19554
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0x98($s1)
                lw      $a0, 0x18($v0)
                beqz    $a0, loc_1933C
                la      $t9, RSA_free
                jalr    $t9 ; RSA_free
                nop
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0x98($s1)

loc_1933C:                               # CODE XREF: ssl3_ctrl+164↑j
                li      $a0, 1
                b       loc_19268
                sw      $s0, 0x18($v0)
 # ---------------------------------------------------------------------------

loc_19348:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                la      $t9, ERR_put_error  # jumptable 0001929C case 5
                li      $a0, 0x14
                li      $a1, 0xD5
                li      $a2, 0x42  # 'B'
                b       loc_19258
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_19360:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                b       loc_19268        # jumptable 0001929C case 8
                lw      $a0, 0x6C($s1)
 # ---------------------------------------------------------------------------

loc_19368:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                lw      $v0, 0x58($s1)   # jumptable 0001929C case 10
                b       loc_19268
                lw      $a0, 0x19C($v0)
 # ---------------------------------------------------------------------------

loc_19374:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                lw      $v0, 0x58($s1)   # jumptable 0001929C case 11
                lw      $a0, 0x19C($v0)
                b       loc_19268
                sw      $zero, 0x19C($v0)
 # ---------------------------------------------------------------------------

loc_19384:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                lw      $v0, 0x58($s1)   # jumptable 0001929C case 12
                b       loc_19268
                lw      $a0, 0x198($v0)
 # ---------------------------------------------------------------------------

loc_19390:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                lw      $v0, 0x58($s1)   # jumptable 0001929C case 13
                b       loc_19268
                lw      $a0, 0($v0)
 # ---------------------------------------------------------------------------

loc_1939C:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                bnez    $s2, loc_194FC   # jumptable 0001929C case 55
                la      $t9, ERR_put_error
                lw      $a0, 0x118($s1)
                beqz    $a0, loc_193BC
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_193BC:                               # CODE XREF: ssl3_ctrl+1E8↑j
                beqz    $s3, loc_194E0
                sw      $zero, 0x118($s1)
                la      $t9, strlen
                jalr    $t9 ; strlen
                move    $a0, $s3
                sltiu   $v0, 0x100
                bnez    $v0, loc_19510
                lw      $gp, 0x38+var_20($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xD5
                li      $a2, 0x13F
                b       loc_19258
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_193F4:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                li      $a0, 1           # jumptable 0001929C case 57
                b       loc_19268
                sw      $s3, 0x114($s1)
 # ---------------------------------------------------------------------------

loc_19400:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                lw      $v0, 0x12C($s1)  # jumptable 0001929C case 66
                li      $a0, 1
                b       loc_19268
                sw      $v0, 0($s3)
 # ---------------------------------------------------------------------------

loc_19410:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                li      $a0, 1           # jumptable 0001929C case 67
                b       loc_19268
                sw      $s3, 0x12C($s1)
 # ---------------------------------------------------------------------------

loc_1941C:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                lw      $v0, 0x128($s1)  # jumptable 0001929C case 68
                li      $a0, 1
                b       loc_19268
                sw      $v0, 0($s3)
 # ---------------------------------------------------------------------------

loc_1942C:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                li      $a0, 1           # jumptable 0001929C case 69
                b       loc_19268
                sw      $s3, 0x128($s1)
 # ---------------------------------------------------------------------------

loc_19438:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                lw      $a0, 0x134($s1)  # jumptable 0001929C case 70
                lw      $v0, 0x130($s1)
                b       loc_19268
                sw      $v0, 0($s3)
 # ---------------------------------------------------------------------------

loc_19448:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                lw      $a0, 0x130($s1)  # jumptable 0001929C case 71
                beqz    $a0, loc_19460
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_19460:                               # CODE XREF: ssl3_ctrl+28C↑j
                li      $a0, 1
                sw      $s2, 0x134($s1)
                b       loc_19268
                sw      $s3, 0x130($s1)
 # ---------------------------------------------------------------------------

loc_19470:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                la      $t9, SSL_version  # jumptable 0001929C case 85
                jalr    $t9 ; SSL_version
                move    $a0, $s1
                li      $v1, 0xFEFF
                beq     $v0, $v1, loc_194D8
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s1
                li      $v1, 0x100
                beq     $v0, $v1, loc_194D8
                lw      $gp, 0x38+var_20($sp)
                la      $t9, tls1_heartbeat

loc_194A4:                               # CODE XREF: ssl3_ctrl:loc_194D8↓j
                move    $a0, $s1
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $t9
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_194C4:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                b       loc_19268        # jumptable 0001929C case 86
                lw      $a0, 0x170($s1)
 # ---------------------------------------------------------------------------

loc_194CC:                               # CODE XREF: ssl3_ctrl+DC↑j
                                         # DATA XREF: .rodata:jpt_1929C↓o
                li      $a0, 1           # jumptable 0001929C case 65
                b       loc_19268
                sw      $s2, 0x120($s1)
 # ---------------------------------------------------------------------------

loc_194D8:                               # CODE XREF: ssl3_ctrl+2C0↑j
                                         # ssl3_ctrl+2D8↑j
                b       loc_194A4
                la      $t9, dtls1_heartbeat
 # ---------------------------------------------------------------------------

loc_194E0:                               # CODE XREF: ssl3_ctrl+11C↑j
                                         # ssl3_ctrl:loc_193BC↑j ...
                b       loc_19268
                li      $a0, 1
 # ---------------------------------------------------------------------------

loc_194E8:                               # CODE XREF: ssl3_ctrl:loc_192A4↑j
                lw      $v0, 0x16C($s1)
                and     $v0, $v1
                li      $a0, 1
                b       loc_19268
                sw      $v0, 0x16C($s1)
 # ---------------------------------------------------------------------------

loc_194FC:                               # CODE XREF: ssl3_ctrl:loc_1939C↑j
                li      $a0, 0x14
                li      $a1, 0xD5
                li      $a2, 0x140
                b       loc_19258
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_19510:                               # CODE XREF: ssl3_ctrl+214↑j
                la      $t9, BUF_strdup
                jalr    $t9 ; BUF_strdup
                move    $a0, $s3
                lw      $gp, 0x38+var_20($sp)
                bnez    $v0, loc_194E0
                sw      $v0, 0x118($s1)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xD5
                li      $a2, 0x44  # 'D'
                b       loc_19258
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_19540:                               # CODE XREF: ssl3_ctrl:loc_192FC↑j
                li      $a0, 0x14
                li      $a1, 0xD5
                li      $a2, 0x43  # 'C'
                b       loc_19258
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_19554:                               # CODE XREF: ssl3_ctrl+154↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xD5
                li      $a2, 4
                b       loc_19258
                sw      $zero, 0x38+var_28($sp)
 # End of function ssl3_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_clear
ssl3_clear:                              # CODE XREF: tls1_clear+20↓p
                                         # dtls1_clear+D4↓p
                                         # DATA XREF: ...

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x48DE4
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                la      $t9, ssl3_cleanup_key_block
                jalr    $t9 ; ssl3_cleanup_key_block
                move    $s0, $a0
                lw      $a0, 0x58($s0)
                lw      $v0, 0x364($a0)
                beqz    $v0, loc_195D0
                lw      $gp, 0x38+var_28($sp)
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                move    $a0, $v0
                lw      $gp, 0x38+var_28($sp)
                lw      $a0, 0x58($s0)

loc_195D0:                               # CODE XREF: ssl3_clear+44↑j
                lw      $v0, 0x120($a0)
                beqz    $v0, loc_195F0
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $v0
                lw      $a0, 0x58($s0)
                lw      $gp, 0x38+var_28($sp)
                sw      $zero, 0x120($a0)

loc_195F0:                               # CODE XREF: ssl3_clear+68↑j
                lw      $v0, 0x178($a0)
                lw      $s5, 0xEC($a0)
                lw      $s4, 0xFC($a0)
                lw      $s3, 0xF0($a0)
                lw      $s2, 0x100($a0)
                beqz    $v0, loc_19624
                lw      $s1, 0xE8($a0)
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $v0
                lw      $a0, 0x58($s0)
                lw      $gp, 0x38+var_28($sp)
                sw      $zero, 0x178($a0)

loc_19624:                               # CODE XREF: ssl3_clear+98↑j
                lw      $v0, 0x17C($a0)
                beqz    $v0, loc_19640
                la      $t9, ssl3_free_digest_list
                jalr    $t9 ; ssl3_free_digest_list
                move    $a0, $s0
                lw      $gp, 0x38+var_28($sp)
                lw      $a0, 0x58($s0)

loc_19640:                               # CODE XREF: ssl3_clear+BC↑j
                la      $t9, memset
                move    $a1, $zero
                jalr    $t9 ; memset
                li      $a2, 0x418
                lw      $gp, 0x38+var_28($sp)
                lw      $v1, 0x58($s0)
                la      $t9, ssl_free_wbio_buffer
                sw      $s1, 0xE8($v1)
                sw      $s5, 0xEC($v1)
                sw      $s4, 0xFC($v1)
                sw      $s3, 0xF0($v1)
                sw      $s2, 0x100($v1)
                jalr    $t9 ; ssl_free_wbio_buffer
                move    $a0, $s0
                lw      $v1, 0x58($s0)
                lw      $a0, 0x15C($s0)
                li      $v0, 0x300
                lw      $gp, 0x38+var_28($sp)
                sw      $zero, 0x50($s0)
                sw      $zero, 0x1A0($v1)
                sw      $zero, 0x194($v1)
                sw      $zero, 0x198($v1)
                sw      $zero, 0x19C($v1)
                beqz    $a0, loc_196BC
                sw      $v0, 0($s0)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x38+var_28($sp)
                sb      $zero, 0x160($s0)
                sw      $zero, 0x15C($s0)

loc_196BC:                               # CODE XREF: ssl3_clear+130↑j
                lw      $ra, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                jr      $ra
                addiu   $sp, 0x38
 # End of function ssl3_clear


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_free
ssl3_free:                               # CODE XREF: ssl23_get_client_hello+38C↓p
                                         # ssl23_connect+B88↓p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x48C70
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                beqz    $a0, loc_197F8
                move    $s0, $a0
                la      $t9, ssl3_cleanup_key_block
                jalr    $t9 ; ssl3_cleanup_key_block
                nop
                lw      $v1, 0x58($s0)
                lw      $v0, 0xEC($v1)
                beqz    $v0, loc_19734
                lw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_release_read_buffer
                jalr    $t9 ; ssl3_release_read_buffer
                move    $a0, $s0
                lw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($s0)

loc_19734:                               # CODE XREF: ssl3_free+38↑j
                lw      $v0, 0xFC($v1)
                beqz    $v0, loc_19750
                la      $t9, ssl3_release_write_buffer
                jalr    $t9 ; ssl3_release_write_buffer
                move    $a0, $s0
                lw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($s0)

loc_19750:                               # CODE XREF: ssl3_free+58↑j
                lw      $a0, 0x120($v1)
                beqz    $a0, loc_1976C
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($s0)

loc_1976C:                               # CODE XREF: ssl3_free+74↑j
                lw      $a0, 0x364($v1)
                beqz    $a0, loc_1978C
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($s0)

loc_1978C:                               # CODE XREF: ssl3_free+90↑j
                lw      $a0, 0x178($v1)
                beqz    $a0, loc_197A8
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                nop
                lw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($s0)

loc_197A8:                               # CODE XREF: ssl3_free+B0↑j
                lw      $v0, 0x17C($v1)
                beqz    $v0, loc_197C0
                la      $t9, ssl3_free_digest_list
                jalr    $t9 ; ssl3_free_digest_list
                move    $a0, $s0
                lw      $gp, 0x20+var_10($sp)

loc_197C0:                               # CODE XREF: ssl3_free+CC↑j
                la      $t9, SSL_SRP_CTX_free
                jalr    $t9 ; SSL_SRP_CTX_free
                move    $a0, $s0
                lw      $gp, 0x20+var_10($sp)
                lw      $a0, 0x58($s0)
                la      $t9, OPENSSL_cleanse
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x418
                lw      $gp, 0x20+var_10($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x58($s0)
                lw      $gp, 0x20+var_10($sp)
                sw      $zero, 0x58($s0)

loc_197F8:                               # CODE XREF: ssl3_free+1C↑j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function ssl3_free


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_new
ssl3_new:                                # CODE XREF: tls1_new+20↓p
                                         # dtls1_new+24↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                li      $gp, 0x48B48
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                move    $s1, $a0
                addiu   $a1, (aS3LibC - 0x40000)  # "s3_lib.c"
                li      $a0, 0x418
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xB80
                move    $s0, $v0
                beqz    $v0, loc_198B4
                lw      $gp, 0x28+var_18($sp)
                la      $t9, memset
                move    $a1, $zero
                li      $a2, 0x418
                jalr    $t9 ; memset
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_SRP_CTX_init
                sw      $zero, 0x128($s0)
                sw      $zero, 0x12C($s0)
                sw      $zero, 0x14C($s0)
                sw      $zero, 0x150($s0)
                move    $a0, $s1
                jalr    $t9 ; SSL_SRP_CTX_init
                sw      $s0, 0x58($s1)
                lw      $v1, 8($s1)
                lw      $t9, 8($v1)
                jalr    $t9
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_198B4:                               # CODE XREF: ssl3_new+40↑j
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl3_new


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_read
ssl3_read:                               # DATA XREF: LOAD:000049F8↑o
                                         # .got:ssl3_read_ptr↓o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x48A84
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $t9, __errno_location
                move    $s0, $a0
                move    $s1, $a1
                jalr    $t9 ; __errno_location
                move    $s2, $a2
                lw      $a0, 0x58($s0)
                lw      $gp, 0x30+var_18($sp)
                sw      $zero, 0($v0)
                lw      $v0, 0x194($a0)
                bnez    $v0, loc_19974
                li      $v0, 1
                lw      $v1, 8($s0)
                sw      $v0, 0x1A0($a0)
                sw      $zero, 0x30+var_20($sp)
                lw      $t9, 0x34($v1)
                li      $a1, 0x17
                move    $a0, $s0
                move    $a2, $s1
                jalr    $t9
                move    $a3, $s2
                move    $a1, $v0
                li      $v0, 0xFFFFFFFF
                beq     $a1, $v0, loc_199BC
                lw      $gp, 0x30+var_18($sp)

loc_19950:                               # CODE XREF: ssl3_read+E8↓j
                lw      $a0, 0x58($s0)

loc_19954:                               # CODE XREF: ssl3_read+FC↓j
                sw      $zero, 0x1A0($a0)

loc_19958:                               # CODE XREF: ssl3_read+13C↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_19974:                               # CODE XREF: ssl3_read+48↑j
                la      $t9, ssl3_renegotiate_check
                jalr    $t9 ; ssl3_renegotiate_check
                move    $a0, $s0
                lw      $a0, 0x58($s0)
                lw      $v1, 8($s0)
                li      $v0, 1
                sw      $v0, 0x1A0($a0)
                sw      $zero, 0x30+var_20($sp)
                lw      $t9, 0x34($v1)
                li      $a1, 0x17
                move    $a0, $s0
                move    $a2, $s1
                jalr    $t9
                move    $a3, $s2
                move    $a1, $v0
                li      $v0, 0xFFFFFFFF
                bne     $a1, $v0, loc_19950
                lw      $gp, 0x30+var_18($sp)

loc_199BC:                               # CODE XREF: ssl3_read+7C↑j
                lw      $a0, 0x58($s0)
                li      $v0, 2
                lw      $v1, 0x1A0($a0)
                bne     $v1, $v0, loc_19954
                move    $a2, $s1
                lw      $v0, 0x1C($s0)
                lw      $v1, 8($s0)
                sw      $zero, 0x30+var_20($sp)
                addiu   $v0, 1
                lw      $t9, 0x34($v1)
                li      $a1, 0x17
                sw      $v0, 0x1C($s0)
                move    $a3, $s2
                jalr    $t9
                move    $a0, $s0
                lw      $v1, 0x1C($s0)
                lw      $gp, 0x30+var_18($sp)
                addiu   $v1, -1
                move    $a1, $v0
                b       loc_19958
                sw      $v1, 0x1C($s0)
 # End of function ssl3_read


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_record_sequence_update
ssl3_record_sequence_update:             # CODE XREF: n_ssl3_mac+208↓p
                                         # do_dtls1_write+1D0↓p
                                         # DATA XREF: ...
                lbu     $v0, 7($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, locret_19AA8
                sb      $v0, 7($a0)
                lbu     $v0, 6($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, locret_19AA8
                sb      $v0, 6($a0)
                lbu     $v0, 5($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, locret_19AA8
                sb      $v0, 5($a0)
                lbu     $v0, 4($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, locret_19AA8
                sb      $v0, 4($a0)
                lbu     $v0, 3($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, locret_19AA8
                sb      $v0, 3($a0)
                lbu     $v0, 2($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, locret_19AA8
                sb      $v0, 2($a0)
                lbu     $v0, 1($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, locret_19AA8
                sb      $v0, 1($a0)
                lbu     $v0, 0($a0)
                addiu   $v0, 1
                sb      $v0, 0($a0)

locret_19AA8:                            # CODE XREF: ssl3_record_sequence_update+C↑j
                                         # ssl3_record_sequence_update+20↑j ...
                jr      $ra
                nop
 # End of function ssl3_record_sequence_update


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_alert_code
ssl3_alert_code:                         # DATA XREF: LOAD:00004AC8↑o
                                         # .got:ssl3_alert_code_ptr↓o
                li      $gp, 0x488A0
                addu    $gp, $t9
                sltiu   $v0, $a0, 0x74   # switch 116 cases
                bnez    $v0, loc_19AD0

def_19AE4:                               # jumptable 00019AE4 default case
                la      $v1, loc_40000

locret_19AC8:                            # CODE XREF: ssl3_alert_code+34↓j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 cases 1-9,11-19,23-29,31-39,52-59,61-69,72-79,81-89,91-109
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_19AD0:                               # CODE XREF: ssl3_alert_code+10↑j
                sll     $v0, $a0, 2
                addiu   $v1, (jpt_19AE4 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

locret_19AEC:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 cases 40,49-51,60,70,71,80,90,110-114
                li      $v0, 0x28  # '('
 # ---------------------------------------------------------------------------

locret_19AF4:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 cases 20-22
                li      $v0, 0x14
 # ---------------------------------------------------------------------------

locret_19AFC:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 cases 42,48
                li      $v0, 0x2A  # '*'
 # ---------------------------------------------------------------------------

locret_19B04:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 44
                li      $v0, 0x2C  # ','
 # ---------------------------------------------------------------------------

locret_19B0C:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 10
                li      $v0, 0xA
 # ---------------------------------------------------------------------------

locret_19B14:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 0
                move    $v0, $zero
 # ---------------------------------------------------------------------------

locret_19B1C:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 47
                li      $v0, 0x2F  # '/'
 # ---------------------------------------------------------------------------

locret_19B24:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 46
                li      $v0, 0x2E  # '.'
 # ---------------------------------------------------------------------------

locret_19B2C:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 115
                li      $v0, 0x73  # 's'
 # ---------------------------------------------------------------------------

locret_19B34:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 30
                li      $v0, 0x1E
 # ---------------------------------------------------------------------------

locret_19B3C:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 41
                li      $v0, 0x29  # ')'
 # ---------------------------------------------------------------------------

locret_19B44:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 43
                li      $v0, 0x2B  # '+'
 # ---------------------------------------------------------------------------

locret_19B4C:                            # CODE XREF: ssl3_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_19AE4↓o
                jr      $ra              # jumptable 00019AE4 case 45
                li      $v0, 0x2D  # '-'
 # End of function ssl3_alert_code


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_generate_master_secret
ssl3_generate_master_secret:             # DATA XREF: LOAD:00004888↑o
                                         # .got:ssl3_generate_master_secret_ptr↓o

var_98          = -0x98
var_90          = -0x90
var_8C          = -0x8C
var_74          = -0x74
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x487FC
                addu    $gp, $t9
                addiu   $sp, -0xA8
                sw      $ra, 0xA8+var_4($sp)
                sw      $fp, 0xA8+var_8($sp)
                sw      $s7, 0xA8+var_C($sp)
                sw      $s6, 0xA8+var_10($sp)
                sw      $s5, 0xA8+var_14($sp)
                sw      $s4, 0xA8+var_18($sp)
                sw      $s3, 0xA8+var_1C($sp)
                sw      $s2, 0xA8+var_20($sp)
                sw      $s1, 0xA8+var_24($sp)
                sw      $s0, 0xA8+var_28($sp)
                sw      $gp, 0xA8+var_98($sp)
                addiu   $s1, $sp, 0xA8+var_8C
                la      $t9, EVP_MD_CTX_init
                move    $s2, $a0
                move    $a0, $s1
                move    $s7, $a3
                move    $s6, $a2
                jalr    $t9 ; EVP_MD_CTX_init
                move    $fp, $a1
                lw      $gp, 0xA8+var_98($sp)
                lw      $v0, 0xDC($s2)
                lw      $a1, 0x90($v0)
                la      $t9, EVP_DigestInit_ex
                move    $a2, $zero
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a0, $s1
                lw      $gp, 0xA8+var_98($sp)
                la      $s0, loc_40000
                la      $t9, strlen
                addiu   $s0, (aSslv3ReadFinis+0x14 - 0x40000)  # "A"
                jalr    $t9 ; strlen
                move    $a0, $s0
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s0
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $v0
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                move    $a1, $s6
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s7
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                addiu   $a1, 0xC0
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                addiu   $a1, 0xA0
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xA8+var_98($sp)
                addiu   $s4, $sp, 0xA8+var_74
                addiu   $s5, $sp, 0xA8+var_90
                la      $t9, EVP_DigestFinal_ex
                move    $a0, $s1
                move    $a1, $s4
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $s5
                lw      $v1, 0xDC($s2)
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x8C($v1)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                move    $a1, $s6
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s7
                lw      $gp, 0xA8+var_98($sp)
                lw      $a2, 0xA8+var_90($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $s4
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a0, $s1
                move    $a1, $fp
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $s5
                lw      $v1, 0xDC($s2)
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x90($v1)
                la      $t9, EVP_DigestInit_ex
                move    $a2, $zero
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestInit_ex
                lw      $s3, 0xA8+var_90($sp)
                lw      $gp, 0xA8+var_98($sp)
                la      $s0, loc_40000
                la      $t9, strlen
                addiu   $s0, (dword_44D20 - 0x40000)
                jalr    $t9 ; strlen
                move    $a0, $s0
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s0
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $v0
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                move    $a1, $s6
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s7
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                addiu   $a1, 0xC0
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                addiu   $a1, 0xA0
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a0, $s1
                move    $a1, $s4
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $s5
                lw      $v1, 0xDC($s2)
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x8C($v1)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                move    $a1, $s6
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s7
                lw      $gp, 0xA8+var_98($sp)
                lw      $a2, 0xA8+var_90($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $s4
                lw      $gp, 0xA8+var_98($sp)
                addu    $fp, $s3
                la      $t9, EVP_DigestFinal_ex
                sw      $fp, 0xA8+var_30($sp)
                move    $a0, $s1
                move    $a1, $fp
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $s5
                lw      $v1, 0xDC($s2)
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x90($v1)
                la      $t9, EVP_DigestInit_ex
                move    $a2, $zero
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestInit_ex
                lw      $fp, 0xA8+var_90($sp)
                lw      $gp, 0xA8+var_98($sp)
                la      $s0, loc_40000
                la      $t9, strlen
                addiu   $s0, (dword_44D24 - 0x40000)
                jalr    $t9 ; strlen
                move    $a0, $s0
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s0
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $v0
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                move    $a1, $s6
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s7
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                addiu   $a1, 0xC0
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x58($s2)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s1
                addiu   $a1, 0xA0
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a0, $s1
                move    $a1, $s4
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $s5
                lw      $v1, 0xDC($s2)
                lw      $gp, 0xA8+var_98($sp)
                lw      $a1, 0x8C($v1)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xA8+var_98($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s6
                move    $a2, $s7
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s1
                lw      $gp, 0xA8+var_98($sp)
                lw      $a2, 0xA8+var_90($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s4
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s1
                lw      $gp, 0xA8+var_98($sp)
                lw      $v0, 0xA8+var_30($sp)
                la      $t9, EVP_DigestFinal_ex
                addu    $a1, $v0, $fp
                move    $a2, $s5
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a0, $s1
                lw      $gp, 0xA8+var_98($sp)
                lw      $v0, 0xA8+var_90($sp)
                addu    $s3, $fp
                la      $t9, EVP_MD_CTX_cleanup
                addu    $s3, $v0
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s1
                move    $v0, $s3
                lw      $gp, 0xA8+var_98($sp)
                lw      $ra, 0xA8+var_4($sp)
                lw      $fp, 0xA8+var_8($sp)
                lw      $s7, 0xA8+var_C($sp)
                lw      $s6, 0xA8+var_10($sp)
                lw      $s5, 0xA8+var_14($sp)
                lw      $s4, 0xA8+var_18($sp)
                lw      $s3, 0xA8+var_1C($sp)
                lw      $s2, 0xA8+var_20($sp)
                lw      $s1, 0xA8+var_24($sp)
                lw      $s0, 0xA8+var_28($sp)
                jr      $ra
                addiu   $sp, 0xA8
 # End of function ssl3_generate_master_secret


 # =============== S U B R O U T I N E =======================================


                .globl n_ssl3_mac
n_ssl3_mac:                              # DATA XREF: LOAD:000048A8↑o
                                         # .got:n_ssl3_mac_ptr↓o

var_48          = -0x48
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x483E8
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_4($sp)
                sw      $s6, 0x58+var_8($sp)
                sw      $s5, 0x58+var_C($sp)
                sw      $s4, 0x58+var_10($sp)
                sw      $s3, 0x58+var_14($sp)
                sw      $s2, 0x58+var_18($sp)
                sw      $s1, 0x58+var_1C($sp)
                sw      $s0, 0x58+var_20($sp)
                sw      $gp, 0x58+var_48($sp)
                beqz    $a2, loc_1A1A8
                move    $s5, $a1
                lw      $s3, 0x90($a0)
                lw      $v0, 0x58($a0)
                la      $t9, EVP_MD_CTX_md
                move    $a0, $s3
                addiu   $s6, $v0, 0x54  # 'T'
                addiu   $s2, $v0, 0x130
                jalr    $t9 ; EVP_MD_CTX_md
                addiu   $s4, $v0, 0x60  # '`'
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                bltz    $v0, loc_1A1E0
                lw      $gp, 0x58+var_48($sp)

loc_19FDC:                               # CODE XREF: n_ssl3_mac+270↓j
                li      $s1, 0x30  # '0'
                divu    $s1, $v0
                teq     $v0, $zero  #7
                addiu   $s0, $sp, 0x58+var_38
                la      $t9, EVP_MD_CTX_init
                sw      $v0, 0x58+var_3C($sp)
                move    $a0, $s0
                mflo    $s1
                jalr    $t9 ; EVP_MD_CTX_init
                mul     $s1, $v0
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_MD_CTX_copy_ex
                move    $a0, $s0
                jalr    $t9 ; EVP_MD_CTX_copy_ex
                move    $a1, $s3
                lw      $gp, 0x58+var_48($sp)
                lw      $a2, 0x58+var_3C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s0
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $s4
                lw      $gp, 0x58+var_48($sp)
                li      $a1, 0x60000
                la      $t9, EVP_DigestUpdate
                move    $a0, $s0
                move    $a2, $s1
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, (dword_5A168 - 0x60000)
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s0
                move    $a1, $s6
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 8
                lw      $gp, 0x58+var_48($sp)
                lw      $v1, 0($s2)
                la      $t9, EVP_DigestUpdate
                sb      $v1, 0x58+var_40($sp)
                move    $a0, $s0
                addiu   $a1, $sp, 0x58+var_40
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 1
                lw      $v1, 4($s2)
                lw      $gp, 0x58+var_48($sp)
                srl     $v1, 8
                sb      $v1, 0($s5)
                lw      $v0, 4($s2)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s0
                move    $a1, $s5
                sb      $v0, 1($s5)
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 2
                lw      $gp, 0x58+var_48($sp)
                lw      $a2, 4($s2)
                la      $t9, EVP_DigestUpdate
                lw      $a1, 0x10($s2)
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s0
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a2, $zero
                move    $a0, $s0
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a1, $s5
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_MD_CTX_copy_ex
                move    $a1, $s3
                jalr    $t9 ; EVP_MD_CTX_copy_ex
                move    $a0, $s0
                lw      $gp, 0x58+var_48($sp)
                lw      $a2, 0x58+var_3C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s4
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s0
                lw      $gp, 0x58+var_48($sp)
                li      $a1, 0x60000
                la      $t9, EVP_DigestUpdate
                move    $a2, $s1
                move    $a0, $s0
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, (dword_5A198 - 0x60000)
                lw      $gp, 0x58+var_48($sp)
                lw      $a2, 0x58+var_3C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s0
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $s5
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a1, $s5
                addiu   $a2, $sp, 0x58+var_3C
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a0, $s0
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s0
                lw      $gp, 0x58+var_48($sp)
                la      $t9, ssl3_record_sequence_update
                jalr    $t9 ; ssl3_record_sequence_update
                move    $a0, $s6
                lw      $v0, 0x58+var_3C($sp)
                lw      $gp, 0x58+var_48($sp)
                lw      $ra, 0x58+var_4($sp)
                lw      $s6, 0x58+var_8($sp)
                lw      $s5, 0x58+var_C($sp)
                lw      $s4, 0x58+var_10($sp)
                lw      $s3, 0x58+var_14($sp)
                lw      $s2, 0x58+var_18($sp)
                lw      $s1, 0x58+var_1C($sp)
                lw      $s0, 0x58+var_20($sp)
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_1A1A8:                               # CODE XREF: n_ssl3_mac+34↑j
                lw      $s3, 0x84($a0)
                lw      $v0, 0x58($a0)
                la      $t9, EVP_MD_CTX_md
                move    $a0, $s3
                addiu   $s6, $v0, 8
                addiu   $s2, $v0, 0x10C
                jalr    $t9 ; EVP_MD_CTX_md
                addiu   $s4, $v0, 0x14
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                bgez    $v0, loc_19FDC
                lw      $gp, 0x58+var_48($sp)

loc_1A1E0:                               # CODE XREF: n_ssl3_mac+6C↑j
                lw      $ra, 0x58+var_4($sp)
                lw      $s6, 0x58+var_8($sp)
                lw      $s5, 0x58+var_C($sp)
                lw      $s4, 0x58+var_10($sp)
                lw      $s3, 0x58+var_14($sp)
                lw      $s2, 0x58+var_18($sp)
                lw      $s1, 0x58+var_1C($sp)
                lw      $s0, 0x58+var_20($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x58
 # End of function n_ssl3_mac


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_finish_mac
ssl3_finish_mac:                         # CODE XREF: ssl3_get_message+1D4↓p
                                         # ssl3_do_write+104↓p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x48144
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                lw      $v1, 0x58($a0)
                move    $s0, $a0
                lw      $a0, 0x178($v1)
                move    $s2, $a1
                beqz    $a0, loc_1A258
                move    $s1, $a2
                lw      $v0, 0($v1)
                andi    $v0, 0x20
                beqz    $v0, loc_1A350
                la      $t9, BIO_write

loc_1A258:                               # CODE XREF: ssl3_finish_mac+34↑j
                lw      $v0, 0x17C($v1)
                lw      $a0, 0($v0)
                beqz    $a0, loc_1A27C
                la      $t9, EVP_DigestUpdate
                jalr    $t9 ; EVP_DigestUpdate
                nop
                lw      $v1, 0x58($s0)
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x17C($v1)

loc_1A27C:                               # CODE XREF: ssl3_finish_mac+54↑j
                lw      $a0, 4($v0)
                beqz    $a0, loc_1A2A0
                la      $t9, EVP_DigestUpdate
                move    $a1, $s2
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s1
                lw      $v1, 0x58($s0)
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x17C($v1)

loc_1A2A0:                               # CODE XREF: ssl3_finish_mac+74↑j
                lw      $a0, 8($v0)
                beqz    $a0, loc_1A2C4
                la      $t9, EVP_DigestUpdate
                move    $a1, $s2
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s1
                lw      $v1, 0x58($s0)
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x17C($v1)

loc_1A2C4:                               # CODE XREF: ssl3_finish_mac+98↑j
                lw      $a0, 0xC($v0)
                beqz    $a0, loc_1A2E8
                la      $t9, EVP_DigestUpdate
                move    $a1, $s2
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s1
                lw      $v1, 0x58($s0)
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x17C($v1)

loc_1A2E8:                               # CODE XREF: ssl3_finish_mac+BC↑j
                lw      $a0, 0x10($v0)
                beqz    $a0, loc_1A30C
                la      $t9, EVP_DigestUpdate
                move    $a1, $s2
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s1
                lw      $v1, 0x58($s0)
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x17C($v1)

loc_1A30C:                               # CODE XREF: ssl3_finish_mac+E0↑j
                lw      $a0, 0x14($v0)
                beqz    $a0, loc_1A338
                la      $t9, EVP_DigestUpdate
                move    $a1, $s2
                move    $a2, $s1
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $t9 ; EVP_DigestUpdate
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_1A338:                               # CODE XREF: ssl3_finish_mac+104↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_1A350:                               # CODE XREF: ssl3_finish_mac+44↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $t9 ; BIO_write
                addiu   $sp, 0x28
 # End of function ssl3_finish_mac


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_free_digest_list
ssl3_free_digest_list:                   # CODE XREF: ssl3_clear+C4↑p
                                         # ssl3_free+D4↑p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                li      $gp, 0x47FE8
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($a0)
                move    $s0, $a0
                lw      $a0, 0x17C($v1)
                beqz    $a0, loc_1A470
                lw      $ra, 0x20+var_4($sp)
                lw      $a0, 0($a0)
                beqz    $a0, loc_1A3B4
                la      $t9, EVP_MD_CTX_destroy
                jalr    $t9 ; EVP_MD_CTX_destroy
                nop
                lw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($s0)

loc_1A3B4:                               # CODE XREF: ssl3_free_digest_list+34↑j
                lw      $v0, 0x17C($v1)
                lw      $a0, 4($v0)
                beqz    $a0, loc_1A3D8
                la      $t9, EVP_MD_CTX_destroy
                jalr    $t9 ; EVP_MD_CTX_destroy
                nop
                lw      $v1, 0x58($s0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x17C($v1)

loc_1A3D8:                               # CODE XREF: ssl3_free_digest_list+54↑j
                lw      $a0, 8($v0)
                beqz    $a0, loc_1A3F8
                la      $t9, EVP_MD_CTX_destroy
                jalr    $t9 ; EVP_MD_CTX_destroy
                nop
                lw      $v1, 0x58($s0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x17C($v1)

loc_1A3F8:                               # CODE XREF: ssl3_free_digest_list+74↑j
                lw      $a0, 0xC($v0)
                beqz    $a0, loc_1A418
                la      $t9, EVP_MD_CTX_destroy
                jalr    $t9 ; EVP_MD_CTX_destroy
                nop
                lw      $v1, 0x58($s0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x17C($v1)

loc_1A418:                               # CODE XREF: ssl3_free_digest_list+94↑j
                lw      $a0, 0x10($v0)
                beqz    $a0, loc_1A438
                la      $t9, EVP_MD_CTX_destroy
                jalr    $t9 ; EVP_MD_CTX_destroy
                nop
                lw      $v1, 0x58($s0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x17C($v1)

loc_1A438:                               # CODE XREF: ssl3_free_digest_list+B4↑j
                lw      $a0, 0x14($v0)
                beqz    $a0, loc_1A454
                la      $t9, EVP_MD_CTX_destroy
                jalr    $t9 ; EVP_MD_CTX_destroy
                nop
                lw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($s0)

loc_1A454:                               # CODE XREF: ssl3_free_digest_list+D4↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x17C($v1)
                lw      $v0, 0x58($s0)
                lw      $gp, 0x20+var_10($sp)
                sw      $zero, 0x17C($v0)
                lw      $ra, 0x20+var_4($sp)

loc_1A470:                               # CODE XREF: ssl3_free_digest_list+28↑j
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function ssl3_free_digest_list


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_digest_cached_records
ssl3_digest_cached_records:              # CODE XREF: ssl3_get_client_certificate+494↑p
                                         # ssl3_get_client_hello:loc_12C7C↑p ...

var_40          = -0x40
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                li      $gp, 0x47ED4
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_4($sp)
                sw      $s6, 0x50+var_8($sp)
                sw      $s5, 0x50+var_C($sp)
                sw      $s4, 0x50+var_10($sp)
                sw      $s3, 0x50+var_14($sp)
                sw      $s2, 0x50+var_18($sp)
                sw      $s1, 0x50+var_1C($sp)
                sw      $s0, 0x50+var_20($sp)
                sw      $gp, 0x50+var_38($sp)
                la      $t9, ssl3_free_digest_list
                jalr    $t9 ; ssl3_free_digest_list
                move    $s3, $a0
                lw      $gp, 0x50+var_38($sp)
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aS3EncC - 0x40000)  # "s3_enc.c"
                lw      $s0, 0x58($s3)
                li      $a0, 0x18
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x25D
                lw      $v1, 0x58($s3)
                lw      $gp, 0x50+var_38($sp)
                sw      $v0, 0x17C($s0)
                lw      $v0, 0x17C($v1)
                sw      $zero, 0x14($v0)
                sw      $zero, 0($v0)
                sw      $zero, 4($v0)
                sw      $zero, 8($v0)
                sw      $zero, 0xC($v0)
                sw      $zero, 0x10($v0)
                lw      $v1, 0x58($s3)
                la      $t9, BIO_ctrl
                lw      $a0, 0x178($v1)
                li      $a1, 3
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                addiu   $a3, $sp, 0x50+var_28
                move    $s6, $v0
                blez    $v0, loc_1A6AC
                lw      $gp, 0x50+var_38($sp)
                la      $t9, ssl_get_handshake_digest
                move    $s2, $zero
                addiu   $s5, $sp, 0x50+var_2C
                addiu   $s4, $sp, 0x50+var_30
                move    $a0, $s2
                move    $a1, $s4
                jalr    $t9 ; ssl_get_handshake_digest
                move    $a2, $s5
                lw      $gp, 0x50+var_38($sp)
                move    $s1, $zero
                move    $a0, $s3
                beqz    $v0, loc_1A610
                la      $t9, ssl_get_algorithm2

loc_1A560:                               # CODE XREF: ssl3_digest_cached_records+18C↓j
                jalr    $t9 ; ssl_get_algorithm2
                nop
                lw      $v1, 0x50+var_30($sp)
                and     $v0, $v1
                beqz    $v0, loc_1A64C
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x50+var_2C($sp)
                beqz    $v0, loc_1A64C
                la      $t9, EVP_MD_CTX_create
                lw      $v0, 0x58($s3)
                addiu   $s2, 1
                jalr    $t9 ; EVP_MD_CTX_create
                lw      $s0, 0x17C($v0)
                lw      $v1, 0x58($s3)
                addu    $s0, $s1, $s0
                lw      $gp, 0x50+var_38($sp)
                sw      $v0, 0($s0)
                lw      $v0, 0x17C($v1)
                addu    $v0, $s1
                la      $t9, EVP_DigestInit_ex
                lw      $a0, 0($v0)
                lw      $a1, 0x50+var_2C($sp)
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $v1, 0x58($s3)
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x17C($v1)
                addu    $v0, $s1
                la      $t9, EVP_DigestUpdate
                lw      $a0, 0($v0)
                lw      $a1, 0x50+var_28($sp)
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s6
                lw      $gp, 0x50+var_38($sp)
                addiu   $s1, 4

loc_1A5EC:                               # CODE XREF: ssl3_digest_cached_records+1E4↓j
                la      $t9, ssl_get_handshake_digest
                move    $a0, $s2
                move    $a1, $s4
                jalr    $t9 ; ssl_get_handshake_digest
                move    $a2, $s5
                lw      $gp, 0x50+var_38($sp)
                move    $a0, $s3
                bnez    $v0, loc_1A560
                la      $t9, ssl_get_algorithm2

loc_1A610:                               # CODE XREF: ssl3_digest_cached_records+DC↑j
                lw      $v1, 0x58($s3)
                lw      $v0, 0($v1)
                andi    $v0, 0x20
                beqz    $v0, loc_1A668
                lw      $ra, 0x50+var_4($sp)
                lw      $s6, 0x50+var_8($sp)
                lw      $s5, 0x50+var_C($sp)
                lw      $s4, 0x50+var_10($sp)
                lw      $s3, 0x50+var_14($sp)
                lw      $s2, 0x50+var_18($sp)
                lw      $s1, 0x50+var_1C($sp)
                lw      $s0, 0x50+var_20($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_1A64C:                               # CODE XREF: ssl3_digest_cached_records+F4↑j
                                         # ssl3_digest_cached_records+100↑j
                lw      $v1, 0x58($s3)
                addiu   $s2, 1
                lw      $v0, 0x17C($v1)
                addu    $v0, $s1
                addiu   $s1, 4
                b       loc_1A5EC
                sw      $zero, 0($v0)
 # ---------------------------------------------------------------------------

loc_1A668:                               # CODE XREF: ssl3_digest_cached_records+1A0↑j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                lw      $a0, 0x178($v1)
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($s3)
                lw      $ra, 0x50+var_4($sp)
                lw      $s6, 0x50+var_8($sp)
                lw      $s5, 0x50+var_C($sp)
                lw      $s4, 0x50+var_10($sp)
                lw      $s3, 0x50+var_14($sp)
                lw      $s2, 0x50+var_18($sp)
                lw      $s1, 0x50+var_1C($sp)
                lw      $s0, 0x50+var_20($sp)
                li      $v0, 1
                addiu   $sp, 0x50
                jr      $ra
                sw      $zero, 0x178($v1)
 # ---------------------------------------------------------------------------

loc_1A6AC:                               # CODE XREF: ssl3_digest_cached_records+A8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x125
                li      $a2, 0x14C
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                lw      $ra, 0x50+var_4($sp)
                lw      $s6, 0x50+var_8($sp)
                lw      $s5, 0x50+var_C($sp)
                lw      $s4, 0x50+var_10($sp)
                lw      $s3, 0x50+var_14($sp)
                lw      $s2, 0x50+var_18($sp)
                lw      $s1, 0x50+var_1C($sp)
                lw      $s0, 0x50+var_20($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x50
 # End of function ssl3_digest_cached_records


 # =============== S U B R O U T I N E =======================================


sub_1A6F8:                               # CODE XREF: ssl3_final_finish_mac+58↓p
                                         # ssl3_final_finish_mac+7C↓p ...

var_90          = -0x90
var_88          = -0x88
var_80          = -0x80
var_7C          = -0x7C
var_78          = -0x78
var_60          = -0x60
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_10          =  0x10

                li      $gp, 0x47C58
                addu    $gp, $t9
                addiu   $sp, -0xA0
                sw      $ra, 0xA0+var_8($sp)
                sw      $s5, 0xA0+var_C($sp)
                sw      $s4, 0xA0+var_10($sp)
                sw      $s3, 0xA0+var_14($sp)
                sw      $s2, 0xA0+var_18($sp)
                sw      $s1, 0xA0+var_1C($sp)
                sw      $s0, 0xA0+var_20($sp)
                sw      $gp, 0xA0+var_88($sp)
                lw      $v1, 0x58($a0)
                move    $s2, $a0
                lw      $v0, 0x178($v1)
                move    $s0, $a1
                move    $s1, $a2
                beqz    $v0, loc_1A75C
                move    $s5, $a3
                la      $t9, ssl3_digest_cached_records
                jalr    $t9 ; ssl3_digest_cached_records
                nop
                beqz    $v0, loc_1A804
                lw      $gp, 0xA0+var_88($sp)
                lw      $v1, 0x58($s2)

loc_1A75C:                               # CODE XREF: sub_1A6F8+44↑j
                move    $a0, $zero
                b       loc_1A76C
                sw      $zero, 0xA0+var_7C($sp)
 # ---------------------------------------------------------------------------

loc_1A768:                               # CODE XREF: sub_1A6F8+BC↓j
                lw      $v1, 0x58($s2)

loc_1A76C:                               # CODE XREF: sub_1A6F8+68↑j
                lw      $v0, 0x17C($v1)
                sll     $v1, $a0, 2
                addu    $v1, $v0
                lw      $a1, 0($v1)
                la      $t9, EVP_MD_CTX_md
                beqz    $a1, loc_1A7A8
                move    $a0, $a1
                jalr    $t9 ; EVP_MD_CTX_md
                nop
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_MD_type
                jalr    $t9 ; EVP_MD_type
                move    $a0, $v0
                beq     $v0, $s0, loc_1A82C
                lw      $gp, 0xA0+var_88($sp)

loc_1A7A8:                               # CODE XREF: sub_1A6F8+88↑j
                lw      $v0, 0xA0+var_7C($sp)
                addiu   $a0, $v0, 1
                sltiu   $v1, $a0, 6
                bnez    $v1, loc_1A768
                sw      $a0, 0xA0+var_7C($sp)

loc_1A7BC:                               # CODE XREF: sub_1A6F8+14C↓j
                la      $t9, ERR_put_error
                sw      $zero, 0xA0+var_90($sp)
                li      $a0, 0x14
                li      $a1, 0x11D
                li      $a2, 0x144
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xA0+var_88($sp)
                lw      $ra, 0xA0+var_8($sp)
                lw      $s5, 0xA0+var_C($sp)
                lw      $s4, 0xA0+var_10($sp)
                lw      $s3, 0xA0+var_14($sp)
                lw      $s2, 0xA0+var_18($sp)
                lw      $s1, 0xA0+var_1C($sp)
                lw      $s0, 0xA0+var_20($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0xA0
 # ---------------------------------------------------------------------------

loc_1A804:                               # CODE XREF: sub_1A6F8+58↑j
                                         # sub_1A6F8+1AC↓j
                lw      $ra, 0xA0+var_8($sp)
                lw      $s5, 0xA0+var_C($sp)
                lw      $s4, 0xA0+var_10($sp)
                lw      $s3, 0xA0+var_14($sp)
                lw      $s2, 0xA0+var_18($sp)
                lw      $s1, 0xA0+var_1C($sp)
                lw      $s0, 0xA0+var_20($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0xA0
 # ---------------------------------------------------------------------------

loc_1A82C:                               # CODE XREF: sub_1A6F8+A8↑j
                lw      $v0, 0x58($s2)
                lw      $v1, 0xA0+var_7C($sp)
                lw      $a0, 0x17C($v0)
                sll     $v1, 2
                addu    $v1, $a0
                lw      $s0, 0($v1)
                beqz    $s0, loc_1A7BC
                addiu   $s4, $sp, 0xA0+var_78
                la      $t9, EVP_MD_CTX_init
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s4
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_MD_CTX_set_flags
                move    $a0, $s4
                jalr    $t9 ; EVP_MD_CTX_set_flags
                li      $a1, 8
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_MD_CTX_copy_ex
                move    $a1, $s0
                jalr    $t9 ; EVP_MD_CTX_copy_ex
                move    $a0, $s4
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                move    $a0, $s4
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                move    $s3, $v0
                bltz    $v0, loc_1A804
                lw      $gp, 0xA0+var_88($sp)
                beqz    $s1, loc_1A8C8
                la      $t9, EVP_DigestUpdate
                move    $a1, $s1
                move    $a2, $s5
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s4
                lw      $gp, 0xA0+var_88($sp)

loc_1A8C8:                               # CODE XREF: sub_1A6F8+1B4↑j
                lw      $a1, 0xC0($s2)
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0x10($a1)
                move    $a0, $s4
                addiu   $a1, 0x14
                jalr    $t9 ; EVP_DigestUpdate
                li      $s0, 0x30  # '0'
                div     $s0, $s3
                teq     $s3, $zero  #7
                lw      $gp, 0xA0+var_88($sp)
                li      $a1, 0x60000
                la      $t9, EVP_DigestUpdate
                move    $a0, $s4
                addiu   $a1, (dword_5A168 - 0x60000)
                addiu   $s1, $sp, 0xA0+var_60
                mflo    $s0
                mul     $s0, $s3
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s0
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a1, $s1
                addiu   $a2, $sp, 0xA0+var_7C
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a0, $s4
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                move    $a0, $s4
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $s4
                move    $a1, $v0
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xA0+var_88($sp)
                lw      $a1, 0xC0($s2)
                lw      $a2, 0x10($a1)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s4
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, 0x14
                lw      $gp, 0xA0+var_88($sp)
                li      $a1, 0x60000
                la      $t9, EVP_DigestUpdate
                move    $a2, $s0
                move    $a0, $s4
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, (dword_5A198 - 0x60000)
                lw      $gp, 0xA0+var_88($sp)
                lw      $a2, 0xA0+var_7C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s4
                lw      $gp, 0xA0+var_88($sp)
                lw      $a1, 0xA0+arg_10($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a0, $s4
                jalr    $t9 ; EVP_DigestFinal_ex
                addiu   $a2, $sp, 0xA0+var_80
                lw      $gp, 0xA0+var_88($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s4
                lw      $v0, 0xA0+var_80($sp)
                lw      $gp, 0xA0+var_88($sp)
                lw      $ra, 0xA0+var_8($sp)
                lw      $s5, 0xA0+var_C($sp)
                lw      $s4, 0xA0+var_10($sp)
                lw      $s3, 0xA0+var_14($sp)
                lw      $s2, 0xA0+var_18($sp)
                lw      $s1, 0xA0+var_1C($sp)
                lw      $s0, 0xA0+var_20($sp)
                jr      $ra
                addiu   $sp, 0xA0
 # End of function sub_1A6F8


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_final_finish_mac
ssl3_final_finish_mac:                   # DATA XREF: LOAD:00004988↑o
                                         # .got:ssl3_final_finish_mac_ptr↓o

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl3_final_finish_mac)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                la      $v0, locret_20000
                move    $s3, $a1
                move    $s4, $a2
                addiu   $s5, $v0, (sub_1A6F8 - 0x20000)
                move    $s0, $a3
                move    $a2, $s3
                move    $a3, $s4
                sw      $s0, 0x40+var_30($sp)
                move    $t9, $s5
                li      $a1, 4
                jalr    $t9 ; sub_1A6F8
                move    $s1, $a0
                addu    $s0, $v0
                sw      $s0, 0x40+var_30($sp)
                move    $a0, $s1
                move    $a2, $s3
                move    $a3, $s4
                move    $t9, $s5
                li      $a1, 0x40  # '@'
                jalr    $t9 ; sub_1A6F8
                move    $s2, $v0
                addu    $v0, $s2
                lw      $gp, 0x40+var_28($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                jr      $ra
                addiu   $sp, 0x40
 # End of function ssl3_final_finish_mac


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_cert_verify_mac
ssl3_cert_verify_mac:                    # DATA XREF: LOAD:00004958↑o
                                         # .got:ssl3_cert_verify_mac_ptr↓o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl3_cert_verify_mac)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $t9, locret_20000
                sw      $a2, 0x28+var_18($sp)
                move    $a3, $zero
                addiu   $t9, (sub_1A6F8 - 0x20000)
                jalr    $t9 ; sub_1A6F8
                move    $a2, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl3_cert_verify_mac


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_init_finished_mac
ssl3_init_finished_mac:                  # CODE XREF: ssl3_accept+588↑p
                                         # ssl3_accept+C34↑p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl3_init_finished_mac)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                lw      $s0, 0x58($a0)
                move    $s1, $a0
                lw      $a0, 0x178($s0)
                beqz    $a0, loc_1AB2C
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                nop
                lw      $gp, 0x28+var_18($sp)
                lw      $s0, 0x58($s1)

loc_1AB2C:                               # CODE XREF: ssl3_init_finished_mac+2C↑j
                lw      $v0, 0x17C($s0)
                beqz    $v0, loc_1AB48
                la      $t9, ssl3_free_digest_list
                jalr    $t9 ; ssl3_free_digest_list
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                lw      $s0, 0x58($s1)

loc_1AB48:                               # CODE XREF: ssl3_init_finished_mac+48↑j
                la      $t9, BIO_s_mem
                jalr    $t9 ; BIO_s_mem
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                lw      $v1, 0x58($s1)
                sw      $v0, 0x178($s0)
                lw      $a0, 0x178($v1)
                la      $t9, BIO_ctrl
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $a1, 9
                li      $a2, 1
                move    $a3, $zero
                jr      $t9 ; BIO_ctrl
                addiu   $sp, 0x28
 # End of function ssl3_init_finished_mac


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_enc
ssl3_enc:                                # DATA XREF: LOAD:00004B38↑o
                                         # .got:ssl3_enc_ptr↓o

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl3_enc)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                move    $s5, $a1
                beqz    $a1, loc_1ACD0
                move    $s0, $a0
                lw      $v0, 0x58($a0)
                lw      $s2, 0x8C($a0)
                beqz    $s2, loc_1ACE0
                addiu   $s1, $v0, 0x130

loc_1ABE4:                               # CODE XREF: ssl3_enc+140↓j
                la      $t9, EVP_CIPHER_CTX_cipher
                jalr    $t9 ; EVP_CIPHER_CTX_cipher
                move    $a0, $s2
                lw      $gp, 0x40+var_28($sp)
                move    $v1, $v0

loc_1ABF8:                               # CODE XREF: ssl3_enc:loc_1ACE0↓j
                lw      $v0, 0xC0($s0)
                beqz    $v0, loc_1AC88
                la      $t9, memmove
                beqz    $s2, loc_1AC88
                nop
                beqz    $v1, loc_1AC84
                la      $t9, EVP_CIPHER_block_size
                lw      $a0, 0($s2)
                jalr    $t9 ; EVP_CIPHER_block_size
                lw      $s4, 4($s1)
                move    $s3, $v0
                li      $v0, 1
                beq     $s3, $v0, loc_1ADD8
                lw      $gp, 0x40+var_28($sp)
                bnez    $s5, loc_1AD48
                la      $t9, memset

loc_1AC38:                               # CODE XREF: ssl3_enc:loc_1ADD8↓j
                beqz    $s4, loc_1ACE8
                la      $t9, ERR_put_error
                divu    $s4, $s3
                teq     $s3, $zero  #7
                mfhi    $v0
                bnez    $v0, loc_1ACE8
                move    $a0, $s2
                la      $t9, EVP_Cipher
                lw      $a1, 0xC($s1)
                lw      $a2, 0x10($s1)
                jalr    $t9 ; EVP_Cipher
                move    $a3, $s4
                li      $v0, 1
                beq     $s3, $v0, loc_1AC7C
                lw      $gp, 0x40+var_28($sp)
                beqz    $s5, loc_1AE00
                nop

loc_1AC7C:                               # CODE XREF: ssl3_enc+D4↑j
                b       loc_1ACA8
                li      $a0, 1
 # ---------------------------------------------------------------------------

loc_1AC84:                               # CODE XREF: ssl3_enc+74↑j
                la      $t9, memmove

loc_1AC88:                               # CODE XREF: ssl3_enc+64↑j
                                         # ssl3_enc+6C↑j
                lw      $a0, 0xC($s1)
                lw      $a1, 0x10($s1)
                jalr    $t9 ; memmove
                lw      $a2, 4($s1)
                lw      $v1, 0xC($s1)
                lw      $gp, 0x40+var_28($sp)
                li      $a0, 1
                sw      $v1, 0x10($s1)

loc_1ACA8:                               # CODE XREF: ssl3_enc:loc_1AC7C↑j
                                         # ssl3_enc+260↓j ...
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1ACD0:                               # CODE XREF: ssl3_enc+34↑j
                lw      $v0, 0x58($a0)
                lw      $s2, 0x80($a0)
                bnez    $s2, loc_1ABE4
                addiu   $s1, $v0, 0x10C

loc_1ACE0:                               # CODE XREF: ssl3_enc+44↑j
                b       loc_1ABF8
                move    $v1, $zero
 # ---------------------------------------------------------------------------

loc_1ACE8:                               # CODE XREF: ssl3_enc:loc_1AC38↑j
                                         # ssl3_enc+B4↑j
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x86
                li      $a2, 0x81
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ssl3_send_alert
                move    $a0, $s0
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x15
                lw      $gp, 0x40+var_28($sp)
                move    $a0, $zero
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1AD48:                               # CODE XREF: ssl3_enc+98↑j
                div     $s4, $s3
                teq     $s3, $zero  #7
                lw      $v0, 0x10($s1)
                lw      $a0, 4($s1)
                addu    $a0, $v0, $a0
                move    $a1, $zero
                mfhi    $s0
                subu    $s0, $s3, $s0
                jalr    $t9 ; memset
                move    $a2, $s0
                lw      $v1, 4($s1)
                lw      $v0, 0x10($s1)
                addu    $a3, $s0, $s4
                lw      $gp, 0x40+var_28($sp)
                addu    $v1, $s0
                addu    $v0, $a3, $v0
                addiu   $s0, -1
                sw      $v1, 4($s1)
                sb      $s0, -1($v0)
                lw      $a2, 0x10($s1)
                la      $t9, EVP_Cipher
                lw      $a1, 0xC($s1)
                jalr    $t9 ; EVP_Cipher
                move    $a0, $s2
                lw      $gp, 0x40+var_28($sp)
                li      $a0, 1
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1ADD8:                               # CODE XREF: ssl3_enc+90↑j
                beqz    $s5, loc_1AC38
                la      $t9, EVP_Cipher
                lw      $a2, 0x10($s1)
                lw      $a1, 0xC($s1)
                move    $a0, $s2
                jalr    $t9 ; EVP_Cipher
                move    $a3, $s4
                lw      $gp, 0x40+var_28($sp)
                b       loc_1ACA8
                li      $a0, 1
 # ---------------------------------------------------------------------------

loc_1AE00:                               # CODE XREF: ssl3_enc+DC↑j
                lw      $v0, 0xC($s1)
                addu    $v0, $s4, $v0
                lbu     $v1, -1($v0)
                addiu   $v1, 1
                slt     $v0, $s3, $v1
                bnez    $v0, loc_1AE30
                nop
                lw      $v0, 4($s1)
                li      $a0, 1
                subu    $v0, $v1
                b       loc_1ACA8
                sw      $v0, 4($s1)
 # ---------------------------------------------------------------------------

loc_1AE30:                               # CODE XREF: ssl3_enc+27C↑j
                b       loc_1ACA8
                li      $a0, 0xFFFFFFFF
 # End of function ssl3_enc


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_cleanup_key_block
ssl3_cleanup_key_block:                  # CODE XREF: ssl3_accept+244↑p
                                         # ssl3_connect+218↑p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_cleanup_key_block)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x58($a0)
                move    $s0, $a0
                lw      $a0, 0x370($v0)
                beqz    $a0, loc_1AE90
                la      $t9, OPENSSL_cleanse
                jalr    $t9 ; OPENSSL_cleanse
                lw      $a1, 0x36C($v0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x58($s0)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x370($v0)
                lw      $v0, 0x58($s0)
                lw      $gp, 0x20+var_10($sp)
                sw      $zero, 0x370($v0)

loc_1AE90:                               # CODE XREF: ssl3_cleanup_key_block+28↑j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                addiu   $sp, 0x20
                jr      $ra
                sw      $zero, 0x36C($v0)
 # End of function ssl3_cleanup_key_block


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_setup_key_block
ssl3_setup_key_block:                    # DATA XREF: LOAD:00004AA8↑o
                                         # .got:ssl3_setup_key_block_ptr↓o

var_A8          = -0xA8
var_A4          = -0xA4
var_A0          = -0xA0
var_98          = -0x98
var_94          = -0x94
var_90          = -0x90
var_8C          = -0x8C
var_7C          = -0x7C
var_68          = -0x68
var_50          = -0x50
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_setup_key_block)
                addu    $gp, $t9
                addiu   $sp, -0xB8
                sw      $ra, 0xB8+var_4($sp)
                sw      $fp, 0xB8+var_8($sp)
                sw      $s7, 0xB8+var_C($sp)
                sw      $s6, 0xB8+var_10($sp)
                sw      $s5, 0xB8+var_14($sp)
                sw      $s4, 0xB8+var_18($sp)
                sw      $s3, 0xB8+var_1C($sp)
                sw      $s2, 0xB8+var_20($sp)
                sw      $s1, 0xB8+var_24($sp)
                sw      $s0, 0xB8+var_28($sp)
                sw      $gp, 0xB8+var_A0($sp)
                lw      $v0, 0x58($a0)
                lw      $v1, 0x36C($v0)
                beqz    $v1, loc_1AF28
                move    $s6, $a0
                li      $a1, 1

loc_1AEF4:                               # CODE XREF: ssl3_setup_key_block+3B4↓j
                                         # ssl3_setup_key_block+3C8↓j ...
                lw      $ra, 0xB8+var_4($sp)

loc_1AEF8:                               # CODE XREF: ssl3_setup_key_block+3E4↓j
                lw      $fp, 0xB8+var_8($sp)
                lw      $s7, 0xB8+var_C($sp)
                lw      $s6, 0xB8+var_10($sp)
                lw      $s5, 0xB8+var_14($sp)
                lw      $s4, 0xB8+var_18($sp)
                lw      $s3, 0xB8+var_1C($sp)
                lw      $s2, 0xB8+var_20($sp)
                lw      $s1, 0xB8+var_24($sp)
                lw      $s0, 0xB8+var_28($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0xB8
 # ---------------------------------------------------------------------------

loc_1AF28:                               # CODE XREF: ssl3_setup_key_block+44↑j
                lw      $a0, 0xC0($a0)
                la      $t9, ssl_cipher_get_evp
                addiu   $v0, $sp, 0xB8+var_90
                sw      $v0, 0xB8+var_A4($sp)
                sw      $zero, 0xB8+var_A8($sp)
                addiu   $a1, $sp, 0xB8+var_98
                addiu   $a2, $sp, 0xB8+var_94
                jalr    $t9 ; ssl_cipher_get_evp
                move    $a3, $zero
                bnez    $v0, loc_1AFAC
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0xB8+var_A8($sp)
                li      $a0, 0x14
                li      $a1, 0x9D
                li      $a2, 0x8A

loc_1AF68:                               # CODE XREF: ssl3_setup_key_block+46C↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB8+var_A0($sp)
                move    $a1, $zero
                lw      $ra, 0xB8+var_4($sp)
                lw      $fp, 0xB8+var_8($sp)
                lw      $s7, 0xB8+var_C($sp)
                lw      $s6, 0xB8+var_10($sp)
                lw      $s5, 0xB8+var_14($sp)
                lw      $s4, 0xB8+var_18($sp)
                lw      $s3, 0xB8+var_1C($sp)
                lw      $s2, 0xB8+var_20($sp)
                lw      $s1, 0xB8+var_24($sp)
                lw      $s0, 0xB8+var_28($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0xB8
 # ---------------------------------------------------------------------------

loc_1AFAC:                               # CODE XREF: ssl3_setup_key_block+A8↑j
                lw      $a1, 0x58($s6)
                lw      $a0, 0xB8+var_94($sp)
                lw      $v0, 0xB8+var_90($sp)
                lw      $v1, 0xB8+var_98($sp)
                la      $t9, EVP_MD_size
                sw      $v0, 0x384($a1)
                sw      $v1, 0x374($a1)
                jalr    $t9 ; EVP_MD_size
                sw      $a0, 0x378($a1)
                move    $s1, $v0
                bltz    $v0, loc_1B298
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_CIPHER_key_length
                jalr    $t9 ; EVP_CIPHER_key_length
                lw      $a0, 0xB8+var_98($sp)
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a0, 0xB8+var_98($sp)
                la      $t9, EVP_CIPHER_iv_length
                jalr    $t9 ; EVP_CIPHER_iv_length
                move    $s0, $v0
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, ssl3_cleanup_key_block
                move    $a0, $s6
                jalr    $t9 ; ssl3_cleanup_key_block
                addu    $s0, $v0
                lw      $gp, 0xB8+var_A0($sp)
                addu    $s0, $s1
                la      $a1, loc_40000
                sll     $fp, $s0, 1
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aS3EncC - 0x40000)  # "s3_enc.c"
                move    $a0, $fp
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x1A7
                sw      $v0, 0xB8+var_34($sp)
                beqz    $v0, loc_1B300
                lw      $gp, 0xB8+var_A0($sp)
                move    $v1, $v0
                lw      $v0, 0x58($s6)
                la      $t9, EVP_MD_CTX_init
                addiu   $s3, $sp, 0xB8+var_68
                sw      $v1, 0x370($v0)
                sw      $fp, 0x36C($v0)
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s3
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_MD_CTX_set_flags
                move    $a0, $s3
                jalr    $t9 ; EVP_MD_CTX_set_flags
                li      $a1, 8
                lw      $gp, 0xB8+var_A0($sp)
                addiu   $s2, $sp, 0xB8+var_50
                la      $t9, EVP_MD_CTX_init
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s2
                blez    $fp, loc_1B2BC
                lw      $gp, 0xB8+var_A0($sp)
                addiu   $v1, $sp, 0xB8+var_7C
                move    $s7, $fp
                move    $s4, $zero
                li      $s0, 1
                addiu   $s5, $sp, 0xB8+var_8C
                sw      $v1, 0xB8+var_30($sp)

loc_1B0A8:                               # CODE XREF: ssl3_setup_key_block+380↓j
                addiu   $v0, $s0, 0x40  # '@'
                andi    $a1, $v0, 0xFF
                lw      $v0, 0xB8+var_34($sp)
                move    $a0, $zero
                addu    $v0, $s4
                sw      $v0, 0xB8+var_38($sp)

loc_1B0C0:                               # CODE XREF: ssl3_setup_key_block+228↓j
                addu    $v1, $s5, $a0
                addiu   $a0, 1
                sltu    $v0, $a0, $s0
                bnez    $v0, loc_1B0C0
                sb      $a1, 0($v1)
                la      $t9, EVP_sha1
                jalr    $t9 ; EVP_sha1
                addiu   $s1, $s4, 0x10
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_DigestInit_ex
                move    $a1, $v0
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s2
                move    $a1, $s5
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s0
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0xC0($s6)
                lw      $a2, 0x10($a1)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, 0x14
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x58($s6)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x58($s6)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0xB8+var_30($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a0, $s2
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $zero
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_md5
                jalr    $t9 ; EVP_md5
                move    $s4, $s1
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_DigestInit_ex
                move    $a1, $v0
                move    $a0, $s3
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0xC0($s6)
                lw      $a2, 0x10($a1)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s3
                jalr    $t9 ; EVP_DigestUpdate
                addiu   $a1, 0x14
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0xB8+var_30($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $s3
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x14
                slt     $v1, $fp, $s1
                beqz    $v1, loc_1B2A0
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_DigestFinal_ex
                lw      $a1, 0xB8+var_30($sp)
                move    $a0, $s3
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $zero
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a0, 0xB8+var_38($sp)
                la      $t9, memcpy
                lw      $a1, 0xB8+var_30($sp)
                jalr    $t9 ; memcpy
                move    $a2, $s7
                lw      $gp, 0xB8+var_A0($sp)

loc_1B214:                               # CODE XREF: ssl3_setup_key_block+410↓j
                slt     $v0, $s1, $fp
                beqz    $v0, loc_1B2C4
                li      $v0, 0x100
                addiu   $s0, 1
                bne     $s1, $v0, loc_1B0A8
                addiu   $s7, -0x10
                la      $t9, ERR_put_error
                li      $a1, 0xEE
                sw      $zero, 0xB8+var_A8($sp)
                li      $a0, 0x14
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB8+var_A0($sp)
                move    $a1, $zero

loc_1B250:                               # CODE XREF: ssl3_setup_key_block+454↓j
                lw      $v0, 0xF8($s6)
                andi    $v0, 0x800
                bnez    $v0, loc_1AEF4
                li      $v0, 1
                lw      $v1, 0xC0($s6)
                lw      $a0, 0x58($s6)
                lw      $v1, 0xAC($v1)
                beqz    $v1, loc_1AEF4
                sw      $v0, 0xE0($a0)
                lw      $v1, 0x14($v1)
                li      $v0, 0x20  # ' '
                beq     $v1, $v0, loc_1B318
                nop

loc_1B284:                               # CODE XREF: ssl3_setup_key_block:loc_1B318↓j
                li      $v0, 4
                bne     $v1, $v0, loc_1AEF8
                lw      $ra, 0xB8+var_4($sp)
                b       loc_1AEF4
                sw      $zero, 0xE0($a0)
 # ---------------------------------------------------------------------------

loc_1B298:                               # CODE XREF: ssl3_setup_key_block+130↑j
                b       loc_1AEF4
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_1B2A0:                               # CODE XREF: ssl3_setup_key_block+338↑j
                la      $t9, EVP_DigestFinal_ex
                lw      $a1, 0xB8+var_38($sp)
                move    $a0, $s3
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $zero
                b       loc_1B214
                lw      $gp, 0xB8+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1B2BC:                               # CODE XREF: ssl3_setup_key_block+1E4↑j
                addiu   $v0, $sp, 0xB8+var_7C
                sw      $v0, 0xB8+var_30($sp)

loc_1B2C4:                               # CODE XREF: ssl3_setup_key_block+374↑j
                la      $t9, OPENSSL_cleanse
                lw      $a0, 0xB8+var_30($sp)
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x14
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s3
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s2
                lw      $gp, 0xB8+var_A0($sp)
                b       loc_1B250
                li      $a1, 1
 # ---------------------------------------------------------------------------

loc_1B300:                               # CODE XREF: ssl3_setup_key_block+194↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x9D
                li      $a2, 0x41  # 'A'
                b       loc_1AF68
                sw      $zero, 0xB8+var_A8($sp)
 # ---------------------------------------------------------------------------

loc_1B318:                               # CODE XREF: ssl3_setup_key_block+3D8↑j
                b       loc_1B284
                sw      $zero, 0xE0($a0)
 # End of function ssl3_setup_key_block


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_change_cipher_state
ssl3_change_cipher_state:                # DATA XREF: LOAD:000047E8↑o
                                         # .got:ssl3_change_cipher_state_ptr↓o

var_B8          = -0xB8
var_B4          = -0xB4
var_B0          = -0xB0
var_A8          = -0xA8
var_98          = -0x98
var_80          = -0x80
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4           =  4

                la      $gp, (off_5A360+0x7FF0 - ssl3_change_cipher_state)
                addu    $gp, $t9
                addiu   $sp, -0xC8
                sw      $ra, 0xC8+var_4($sp)
                sw      $fp, 0xC8+var_8($sp)
                sw      $s7, 0xC8+var_C($sp)
                sw      $s6, 0xC8+var_10($sp)
                sw      $s5, 0xC8+var_14($sp)
                sw      $s4, 0xC8+var_18($sp)
                sw      $s3, 0xC8+var_1C($sp)
                sw      $s2, 0xC8+var_20($sp)
                sw      $s1, 0xC8+var_24($sp)
                sw      $s0, 0xC8+var_28($sp)
                sw      $gp, 0xC8+var_B0($sp)
                lw      $v1, 0x58($a0)
                move    $s3, $a0
                lw      $v0, 0x344($v1)
                lw      $s1, 0x378($v1)
                lw      $s4, 0x20($v0)
                lw      $v0, 0x374($v1)
                sw      $a1, 0xC8+arg_4($sp)
                beqz    $s1, loc_1B8DC
                sw      $v0, 0xC8+var_3C($sp)

loc_1B380:                               # CODE XREF: ssl3_change_cipher_state+5DC↓j
                lw      $a0, 0x384($v1)
                beqz    $a0, loc_1B390
                move    $s0, $zero
                lw      $s0, 8($a0)

loc_1B390:                               # CODE XREF: ssl3_change_cipher_state+64↑j
                lw      $v1, 0xC8+arg_4($sp)
                andi    $v0, $v1, 1
                beqz    $v0, loc_1B550
                nop
                lw      $v0, 0x80($s3)
                beqz    $v0, loc_1B790
                li      $s2, 1

loc_1B3AC:                               # CODE XREF: ssl3_change_cipher_state+4A8↓j
                la      $t9, ssl_replace_hash
                addiu   $a0, $s3, 0x84
                move    $a1, $s1
                jalr    $t9 ; ssl_replace_hash
                sw      $v0, 0xC8+var_38($sp)
                lw      $a0, 0x88($s3)
                beqz    $a0, loc_1B3E0
                lw      $gp, 0xC8+var_B0($sp)
                la      $t9, COMP_CTX_free
                jalr    $t9 ; COMP_CTX_free
                nop
                lw      $gp, 0xC8+var_B0($sp)
                sw      $zero, 0x88($s3)

loc_1B3E0:                               # CODE XREF: ssl3_change_cipher_state+A4↑j
                beqz    $s0, loc_1B904
                la      $t9, COMP_CTX_new
                jalr    $t9 ; COMP_CTX_new
                move    $a0, $s0
                lw      $gp, 0xC8+var_B0($sp)
                beqz    $v0, loc_1B964
                sw      $v0, 0x88($s3)
                lw      $s0, 0x58($s3)
                lw      $v0, 0x120($s0)
                beqz    $v0, loc_1B920
                la      $a1, loc_40000

loc_1B40C:                               # CODE XREF: ssl3_change_cipher_state:loc_1B904↓j
                                         # ssl3_change_cipher_state+624↓j
                sw      $zero, 0xC($s0)
                sw      $zero, 8($s0)
                lw      $s0, 0x58($s3)
                addiu   $a0, $s0, 0x14
                bnez    $s2, loc_1B5C8
                sw      $a0, 0xC8+var_30($sp)

loc_1B424:                               # CODE XREF: ssl3_change_cipher_state+2A0↓j
                la      $t9, EVP_MD_size
                move    $a0, $s1
                jalr    $t9 ; EVP_MD_size
                lw      $s0, 0x370($s0)
                move    $s2, $v0
                bltz    $v0, loc_1B5F8
                lw      $gp, 0xC8+var_B0($sp)

loc_1B440:                               # CODE XREF: ssl3_change_cipher_state+2D0↓j
                la      $t9, EVP_CIPHER_key_length
                lw      $a0, 0xC8+var_3C($sp)
                jalr    $t9 ; EVP_CIPHER_key_length
                andi    $s4, 2
                move    $s1, $v0
                lw      $gp, 0xC8+var_B0($sp)
                beqz    $s4, loc_1B494
                sw      $s4, 0xC8+var_40($sp)
                lw      $v0, 0x58($s3)
                lw      $a1, 0x344($v0)
                lw      $v1, 0x20($a1)
                andi    $a2, $v1, 8
                beqz    $a2, loc_1B73C
                li      $a0, 8
                li      $a0, 5

loc_1B47C:                               # CODE XREF: ssl3_change_cipher_state+428↓j
                slt     $v0, $s1, $a0
                bnez    $v0, loc_1B498
                la      $t9, EVP_CIPHER_iv_length
                beqz    $a2, loc_1B90C
                li      $s1, 8
                li      $s1, 5

loc_1B494:                               # CODE XREF: ssl3_change_cipher_state+138↑j
                                         # ssl3_change_cipher_state+5F8↓j
                la      $t9, EVP_CIPHER_iv_length

loc_1B498:                               # CODE XREF: ssl3_change_cipher_state+160↑j
                jalr    $t9 ; EVP_CIPHER_iv_length
                lw      $a0, 0xC8+var_3C($sp)
                lw      $v1, 0xC8+arg_4($sp)
                move    $s6, $v0
                li      $v0, 0x12
                beq     $v1, $v0, loc_1B708
                lw      $gp, 0xC8+var_B0($sp)
                li      $v0, 0x21  # '!'
                beq     $v1, $v0, loc_1B708
                sll     $v1, $s2, 1
                addu    $v1, $s1
                lw      $a2, 0x58($s3)
                addu    $v0, $s6, $s1
                addu    $v0, $v1
                addu    $s7, $s0, $v0
                addu    $a1, $v0, $s6
                addiu   $v0, $a2, 0xC0
                addu    $s4, $s0, $s2
                addu    $s5, $s0, $v1
                addiu   $fp, $a2, 0xA0
                sw      $v0, 0xC8+var_34($sp)

loc_1B4EC:                               # CODE XREF: ssl3_change_cipher_state+414↓j
                lw      $v0, 0x36C($a2)
                slt     $v0, $a1
                beqz    $v0, loc_1B62C
                la      $t9, EVP_MD_CTX_init
                la      $t9, ERR_put_error
                sw      $zero, 0xC8+var_B8($sp)
                li      $a0, 0x14
                li      $a1, 0x81
                li      $a2, 0x44  # 'D'

loc_1B510:                               # CODE XREF: ssl3_change_cipher_state+63C↓j
                                         # ssl3_change_cipher_state+654↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xC8+var_B0($sp)
                lw      $ra, 0xC8+var_4($sp)
                lw      $fp, 0xC8+var_8($sp)
                lw      $s7, 0xC8+var_C($sp)
                lw      $s6, 0xC8+var_10($sp)
                lw      $s5, 0xC8+var_14($sp)
                lw      $s4, 0xC8+var_18($sp)
                lw      $s3, 0xC8+var_1C($sp)
                lw      $s2, 0xC8+var_20($sp)
                lw      $s1, 0xC8+var_24($sp)
                lw      $s0, 0xC8+var_28($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0xC8
 # ---------------------------------------------------------------------------

loc_1B550:                               # CODE XREF: ssl3_change_cipher_state+78↑j
                lw      $v0, 0x8C($s3)
                beqz    $v0, loc_1B750
                li      $s2, 1

loc_1B55C:                               # CODE XREF: ssl3_change_cipher_state+468↓j
                la      $t9, ssl_replace_hash
                addiu   $a0, $s3, 0x90
                move    $a1, $s1
                jalr    $t9 ; ssl_replace_hash
                sw      $v0, 0xC8+var_38($sp)
                lw      $a0, 0x94($s3)
                beqz    $a0, loc_1B590
                lw      $gp, 0xC8+var_B0($sp)
                la      $t9, COMP_CTX_free
                jalr    $t9 ; COMP_CTX_free
                nop
                lw      $gp, 0xC8+var_B0($sp)
                sw      $zero, 0x94($s3)

loc_1B590:                               # CODE XREF: ssl3_change_cipher_state+254↑j
                beqz    $s0, loc_1B5AC
                la      $t9, COMP_CTX_new
                jalr    $t9 ; COMP_CTX_new
                move    $a0, $s0
                lw      $gp, 0xC8+var_B0($sp)
                beqz    $v0, loc_1B964
                sw      $v0, 0x94($s3)

loc_1B5AC:                               # CODE XREF: ssl3_change_cipher_state:loc_1B590↑j
                lw      $v0, 0x58($s3)
                sw      $zero, 0x58($v0)
                sw      $zero, 0x54($v0)
                lw      $s0, 0x58($s3)
                addiu   $v0, $s0, 0x60  # '`'
                beqz    $s2, loc_1B424
                sw      $v0, 0xC8+var_30($sp)

loc_1B5C8:                               # CODE XREF: ssl3_change_cipher_state+FC↑j
                la      $t9, EVP_CIPHER_CTX_cleanup
                jalr    $t9 ; EVP_CIPHER_CTX_cleanup
                lw      $a0, 0xC8+var_38($sp)
                lw      $gp, 0xC8+var_B0($sp)
                lw      $s0, 0x58($s3)
                la      $t9, EVP_MD_size
                move    $a0, $s1
                jalr    $t9 ; EVP_MD_size
                lw      $s0, 0x370($s0)
                move    $s2, $v0
                bgez    $v0, loc_1B440
                lw      $gp, 0xC8+var_B0($sp)

loc_1B5F8:                               # CODE XREF: ssl3_change_cipher_state+118↑j
                lw      $ra, 0xC8+var_4($sp)
                lw      $fp, 0xC8+var_8($sp)
                lw      $s7, 0xC8+var_C($sp)
                lw      $s6, 0xC8+var_10($sp)
                lw      $s5, 0xC8+var_14($sp)
                lw      $s4, 0xC8+var_18($sp)
                lw      $s3, 0xC8+var_1C($sp)
                lw      $s2, 0xC8+var_20($sp)
                lw      $s1, 0xC8+var_24($sp)
                lw      $s0, 0xC8+var_28($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0xC8
 # ---------------------------------------------------------------------------

loc_1B62C:                               # CODE XREF: ssl3_change_cipher_state+1D4↑j
                addiu   $v1, $sp, 0xC8+var_98
                move    $a0, $v1
                jalr    $t9 ; EVP_MD_CTX_init
                sw      $v1, 0xC8+var_2C($sp)
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a0, 0xC8+var_30($sp)
                la      $t9, memcpy
                move    $a1, $s4
                jalr    $t9 ; memcpy
                move    $a2, $s2
                lw      $a0, 0xC8+var_40($sp)
                bnez    $a0, loc_1B7D0
                lw      $gp, 0xC8+var_B0($sp)
                addiu   $s2, $sp, 0xC8+var_80
                addiu   $s1, $sp, 0xC8+var_A8

loc_1B668:                               # CODE XREF: ssl3_change_cipher_state+5B4↓j
                                         # ssl3_change_cipher_state+660↓j
                lw      $a0, 0xC8+arg_4($sp)
                lw      $v0, 0xC0($s3)
                andi    $v1, $a0, 2
                la      $t9, EVP_CipherInit_ex
                lw      $a0, 0xC8+var_38($sp)
                lw      $a1, 0xC8+var_3C($sp)
                move    $a3, $s5
                move    $a2, $zero
                sw      $zero, 4($v0)
                sw      $v1, 0xC8+var_B4($sp)
                jalr    $t9 ; EVP_CipherInit_ex
                sw      $s7, 0xC8+var_B8($sp)
                lw      $gp, 0xC8+var_B0($sp)
                la      $t9, OPENSSL_cleanse
                move    $a0, $s2
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x40  # '@'
                lw      $gp, 0xC8+var_B0($sp)
                la      $t9, OPENSSL_cleanse
                move    $a0, $s1
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x10
                lw      $gp, 0xC8+var_B0($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                lw      $a0, 0xC8+var_2C($sp)
                lw      $gp, 0xC8+var_B0($sp)
                lw      $ra, 0xC8+var_4($sp)
                lw      $fp, 0xC8+var_8($sp)
                lw      $s7, 0xC8+var_C($sp)
                lw      $s6, 0xC8+var_10($sp)
                lw      $s5, 0xC8+var_14($sp)
                lw      $s4, 0xC8+var_18($sp)
                lw      $s3, 0xC8+var_1C($sp)
                lw      $s2, 0xC8+var_20($sp)
                lw      $s1, 0xC8+var_24($sp)
                lw      $s0, 0xC8+var_28($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0xC8
 # ---------------------------------------------------------------------------

loc_1B708:                               # CODE XREF: ssl3_change_cipher_state+18C↑j
                                         # ssl3_change_cipher_state+198↑j
                sll     $a0, $s2, 1
                lw      $a2, 0x58($s3)
                sll     $v1, $s1, 1
                addu    $v1, $a0
                sll     $v0, $s6, 1
                addu    $s5, $s0, $a0
                addu    $a1, $v0, $v1
                addiu   $a0, $a2, 0xA0
                move    $s4, $s0
                addu    $s7, $s0, $v1
                addiu   $fp, $a2, 0xC0
                b       loc_1B4EC
                sw      $a0, 0xC8+var_34($sp)
 # ---------------------------------------------------------------------------

loc_1B73C:                               # CODE XREF: ssl3_change_cipher_state+150↑j
                lw      $v0, 0x14($a1)
                xori    $v0, 1
                li      $v1, 7
                b       loc_1B47C
                movn    $a0, $v1, $v0
 # ---------------------------------------------------------------------------

loc_1B750:                               # CODE XREF: ssl3_change_cipher_state+234↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aS3EncC - 0x40000)  # "s3_enc.c"
                li      $a0, 0x8C
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x11D
                lw      $gp, 0xC8+var_B0($sp)
                beqz    $v0, loc_1B94C
                sw      $v0, 0x8C($s3)
                la      $t9, EVP_CIPHER_CTX_init
                jalr    $t9 ; EVP_CIPHER_CTX_init
                move    $a0, $v0
                lw      $gp, 0xC8+var_B0($sp)
                lw      $v0, 0x8C($s3)
                b       loc_1B55C
                move    $s2, $zero
 # ---------------------------------------------------------------------------

loc_1B790:                               # CODE XREF: ssl3_change_cipher_state+84↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aS3EncC - 0x40000)  # "s3_enc.c"
                li      $a0, 0x8C
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xF8
                lw      $gp, 0xC8+var_B0($sp)
                beqz    $v0, loc_1B94C
                sw      $v0, 0x80($s3)
                la      $t9, EVP_CIPHER_CTX_init
                jalr    $t9 ; EVP_CIPHER_CTX_init
                move    $a0, $v0
                lw      $gp, 0xC8+var_B0($sp)
                lw      $v0, 0x80($s3)
                b       loc_1B3AC
                move    $s2, $zero
 # ---------------------------------------------------------------------------

loc_1B7D0:                               # CODE XREF: ssl3_change_cipher_state+338↑j
                la      $t9, EVP_md5
                jalr    $t9 ; EVP_md5
                addiu   $s2, $sp, 0xC8+var_80
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a0, 0xC8+var_2C($sp)
                la      $t9, EVP_DigestInit_ex
                move    $a1, $v0
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a0, 0xC8+var_2C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $s5
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s1
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a0, 0xC8+var_2C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $fp
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a0, 0xC8+var_2C($sp)
                la      $t9, EVP_DigestUpdate
                lw      $a1, 0xC8+var_34($sp)
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a0, 0xC8+var_2C($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a1, $s2
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $zero
                blez    $s6, loc_1B97C
                lw      $gp, 0xC8+var_B0($sp)
                la      $t9, EVP_md5
                jalr    $t9 ; EVP_md5
                addiu   $s0, $sp, 0xC8+var_A8
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a0, 0xC8+var_2C($sp)
                la      $t9, EVP_DigestInit_ex
                move    $a1, $v0
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a0, 0xC8+var_2C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a1, $fp
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a1, 0xC8+var_34($sp)
                la      $t9, EVP_DigestUpdate
                lw      $a0, 0xC8+var_2C($sp)
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xC8+var_B0($sp)
                lw      $a0, 0xC8+var_2C($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a1, $s0
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $zero
                lw      $gp, 0xC8+var_B0($sp)
                move    $s1, $s0
                move    $s5, $s2
                b       loc_1B668
                move    $s7, $s0
 # ---------------------------------------------------------------------------

loc_1B8DC:                               # CODE XREF: ssl3_change_cipher_state+58↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aS3EncC - 0x40000)  # "s3_enc.c"
                addiu   $a2, (aM - 0x40000)  # "m"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0xEC
                lw      $gp, 0xC8+var_B0($sp)
                b       loc_1B380
                lw      $v1, 0x58($s3)
 # ---------------------------------------------------------------------------

loc_1B904:                               # CODE XREF: ssl3_change_cipher_state:loc_1B3E0↑j
                b       loc_1B40C
                lw      $s0, 0x58($s3)
 # ---------------------------------------------------------------------------

loc_1B90C:                               # CODE XREF: ssl3_change_cipher_state+168↑j
                lw      $v0, 0x14($a1)
                xori    $v0, 1
                li      $v1, 7
                b       loc_1B494
                movn    $s1, $v1, $v0
 # ---------------------------------------------------------------------------

loc_1B920:                               # CODE XREF: ssl3_change_cipher_state+E4↑j
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aS3EncC - 0x40000)  # "s3_enc.c"
                li      $a0, 0x4000
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x111
                lw      $gp, 0xC8+var_B0($sp)
                sw      $v0, 0x120($s0)
                lw      $s0, 0x58($s3)
                lw      $v0, 0x120($s0)
                bnez    $v0, loc_1B40C
                nop

loc_1B94C:                               # CODE XREF: ssl3_change_cipher_state+44C↑j
                                         # ssl3_change_cipher_state+48C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x81
                li      $a2, 0x41  # 'A'
                b       loc_1B510
                sw      $zero, 0xC8+var_B8($sp)
 # ---------------------------------------------------------------------------

loc_1B964:                               # CODE XREF: ssl3_change_cipher_state+D4↑j
                                         # ssl3_change_cipher_state+284↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x81
                li      $a2, 0x8E
                b       loc_1B510
                sw      $zero, 0xC8+var_B8($sp)
 # ---------------------------------------------------------------------------

loc_1B97C:                               # CODE XREF: ssl3_change_cipher_state+534↑j
                move    $s5, $s2
                b       loc_1B668
                addiu   $s1, $sp, 0xC8+var_A8
 # End of function ssl3_change_cipher_state


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_do_change_cipher_spec
ssl3_do_change_cipher_spec:              # CODE XREF: ssl3_read_bytes+9D8↓p
                                         # dtls1_read_bytes+8F4↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl3_do_change_cipher_spec)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $a2, 0x58($a0)
                lw      $v0, 0x34($a0)
                lw      $a1, 0x370($a2)
                andi    $v0, 0x2000
                li      $s0, 0x21  # '!'
                li      $v1, 0x11
                move    $s1, $a0
                beqz    $a1, loc_1BA58
                movz    $s0, $v1, $v0

loc_1B9CC:                               # CODE XREF: ssl3_do_change_cipher_spec+F8↓j
                lw      $v0, 8($s1)
                move    $a1, $s0
                lw      $v1, 0x64($v0)
                lw      $t9, 0x10($v1)
                jalr    $t9
                move    $a0, $s1
                beqz    $v0, loc_1BA88
                lw      $gp, 0x30+var_18($sp)
                lw      $v0, 0x34($s1)
                andi    $v0, 0x1000
                bnez    $v0, loc_1BA44
                nop
                lw      $v0, 8($s1)
                lw      $v0, 0x64($v0)
                lw      $a1, 0x20($v0)
                lw      $a2, 0x24($v0)

loc_1BA0C:                               # CODE XREF: ssl3_do_change_cipher_spec+C8↓j
                lw      $s0, 0x58($s1)
                lw      $t9, 0x14($v0)
                move    $a0, $s1
                jalr    $t9
                addiu   $a3, $s0, 0x2B8
                lw      $gp, 0x30+var_18($sp)
                li      $v1, 1
                sw      $v0, 0x338($s0)

loc_1BA2C:                               # CODE XREF: ssl3_do_change_cipher_spec+134↓j
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_1BA44:                               # CODE XREF: ssl3_do_change_cipher_spec+6C↑j
                lw      $v0, 8($s1)
                lw      $v0, 0x64($v0)
                lw      $a1, 0x28($v0)
                b       loc_1BA0C
                lw      $a2, 0x2C($v0)
 # ---------------------------------------------------------------------------

loc_1BA58:                               # CODE XREF: ssl3_do_change_cipher_spec+3C↑j
                lw      $a3, 0xC0($a0)
                beqz    $a3, loc_1BAA4
                la      $t9, ERR_put_error
                lw      $v0, 8($a0)
                lw      $v1, 0x344($a2)
                lw      $a1, 0x64($v0)
                sw      $v1, 0xAC($a3)
                lw      $t9, 8($a1)
                jalr    $t9
                nop
                bnez    $v0, loc_1B9CC
                lw      $gp, 0x30+var_18($sp)

loc_1BA88:                               # CODE XREF: ssl3_do_change_cipher_spec+5C↑j
                move    $v1, $zero
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_1BAA4:                               # CODE XREF: ssl3_do_change_cipher_spec+D4↑j
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x124
                jalr    $t9 ; ERR_put_error
                li      $a2, 0x85
                lw      $gp, 0x30+var_18($sp)
                b       loc_1BA2C
                move    $v1, $zero
 # End of function ssl3_do_change_cipher_spec


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_alert
ssl3_send_alert:                         # CODE XREF: ssl3_get_client_certificate+C0↑p
                                         # ssl3_get_cert_verify+2B8↑p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_send_alert)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                lw      $v0, 8($a0)
                move    $s0, $a0
                lw      $v1, 0x64($v0)
                move    $a0, $a2
                lw      $t9, 0x30($v1)
                jalr    $t9
                move    $s1, $a1
                lw      $v1, 0($s0)
                move    $a0, $v0
                li      $v0, 0x300
                bne     $v1, $v0, loc_1BB24
                lw      $gp, 0x28+var_18($sp)
                li      $v0, 0x46  # 'F'
                beq     $a0, $v0, loc_1BB98
                li      $v0, 2

loc_1BB24:                               # CODE XREF: ssl3_send_alert+4C↑j
                bltz    $a0, loc_1BB5C
                li      $v0, 2
                beq     $s1, $v0, loc_1BBA0
                andi    $s2, $a0, 0xFF

loc_1BB34:                               # CODE XREF: ssl3_send_alert:loc_1BB98↓j
                                         # ssl3_send_alert+E0↓j ...
                lw      $v1, 0x58($s0)
                li      $v0, 1
                sb      $s1, 0x190($v1)
                lw      $a0, 0x58($s0)
                sw      $v0, 0x18C($v1)
                sb      $s2, 0x191($a0)
                lw      $v0, 0x58($s0)
                lw      $v1, 0x108($v0)
                beqz    $v1, loc_1BB78
                move    $a0, $s0

loc_1BB5C:                               # CODE XREF: ssl3_send_alert:loc_1BB24↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_1BB78:                               # CODE XREF: ssl3_send_alert+90↑j
                lw      $v0, 8($s0)
                lw      $t9, 0x3C($v0)
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $t9
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_1BB98:                               # CODE XREF: ssl3_send_alert+58↑j
                bne     $s1, $v0, loc_1BB34
                li      $s2, 0x28  # '('

loc_1BBA0:                               # CODE XREF: ssl3_send_alert+68↑j
                lw      $a1, 0xC0($s0)
                beqz    $a1, loc_1BB34
                la      $t9, SSL_CTX_remove_session
                jalr    $t9 ; SSL_CTX_remove_session
                lw      $a0, 0xDC($s0)
                b       loc_1BB34
                lw      $gp, 0x28+var_18($sp)
 # End of function ssl3_send_alert


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_write_pending
ssl3_write_pending:                      # CODE XREF: sub_1BE08+2D4↓j
                                         # sub_1BE08+3D8↓j ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_write_pending)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $s0, 0x58($a0)
                lw      $v0, 0x168($s0)
                slt     $v0, $a3, $v0
                bnez    $v0, loc_1BC10
                move    $s1, $a0
                lw      $v0, 0x174($s0)
                beq     $v0, $a2, loc_1BC50
                nop
                lw      $v0, 0xFC($a0)
                andi    $v0, 2
                bnez    $v0, loc_1BC50
                nop

loc_1BC10:                               # CODE XREF: ssl3_write_pending+30↑j
                la      $t9, ERR_put_error

loc_1BC14:                               # CODE XREF: ssl3_write_pending+98↓j
                li      $a1, 0x9F
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a2, 0x7F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                li      $a1, 0xFFFFFFFF

loc_1BC34:                               # CODE XREF: ssl3_write_pending+164↓j
                                         # ssl3_write_pending:loc_1BD3C↓j
                lw      $ra, 0x30+var_4($sp)

loc_1BC38:                               # CODE XREF: ssl3_write_pending+178↓j
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_1BC50:                               # CODE XREF: ssl3_write_pending+3C↑j
                                         # ssl3_write_pending+4C↑j
                lw      $v0, 0x16C($s0)
                bne     $v0, $a1, loc_1BC14
                la      $t9, ERR_put_error
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $gp, 0x30+var_18($sp)
                b       loc_1BCBC
                move    $s2, $v0
 # ---------------------------------------------------------------------------

loc_1BC74:                               # CODE XREF: ssl3_write_pending+10C↓j
                li      $v0, 2
                sw      $v0, 0x18($s1)
                lw      $v1, 0xFC($s0)
                lw      $a1, 0x104($s0)
                lw      $a2, 0x108($s0)
                jalr    $t9 ; BIO_write
                addu    $a1, $v1, $a1
                lw      $gp, 0x30+var_18($sp)
                move    $a1, $v0

loc_1BC98:                               # CODE XREF: ssl3_write_pending+134↓j
                lw      $v0, 0x108($s0)
                beq     $v0, $a1, loc_1BCF8
                subu    $v1, $v0, $a1
                blez    $a1, loc_1BD28
                li      $v0, 0xFEFF
                lw      $v0, 0x104($s0)
                sw      $v1, 0x108($s0)
                addu    $v0, $a1
                sw      $v0, 0x104($s0)

loc_1BCBC:                               # CODE XREF: ssl3_write_pending+B0↑j
                lw      $v0, 0x10($s1)
                la      $t9, BIO_write
                sw      $zero, 0($s2)
                bnez    $v0, loc_1BC74
                move    $a0, $v0
                la      $t9, ERR_put_error
                li      $a1, 0x9F
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a2, 0x80
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_1BC98
                li      $a1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1BCF8:                               # CODE XREF: ssl3_write_pending+E0↑j
                lw      $v0, 0x104($s0)
                lw      $v1, 0xFC($s1)
                addu    $v0, $a1
                andi    $v1, 0x10
                sw      $v0, 0x104($s0)
                bnez    $v1, loc_1BD44
                sw      $zero, 0x108($s0)

loc_1BD14:                               # CODE XREF: ssl3_write_pending+198↓j
                                         # ssl3_write_pending+1B0↓j ...
                lw      $v1, 0x58($s1)
                li      $v0, 1
                sw      $v0, 0x18($s1)
                b       loc_1BC34
                lw      $a1, 0x170($v1)
 # ---------------------------------------------------------------------------

loc_1BD28:                               # CODE XREF: ssl3_write_pending+E8↑j
                lw      $a0, 0($s1)
                beq     $a0, $v0, loc_1BD3C
                li      $v0, 0x100
                bne     $a0, $v0, loc_1BC38
                lw      $ra, 0x30+var_4($sp)

loc_1BD3C:                               # CODE XREF: ssl3_write_pending+170↑j
                b       loc_1BC34
                sw      $zero, 0x108($s0)
 # ---------------------------------------------------------------------------

loc_1BD44:                               # CODE XREF: ssl3_write_pending+150↑j
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s1
                li      $v1, 0xFEFF
                beq     $v0, $v1, loc_1BD14
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s1
                li      $v1, 0x100
                beq     $v0, $v1, loc_1BD14
                lw      $gp, 0x30+var_18($sp)
                la      $t9, ssl3_release_write_buffer
                jalr    $t9 ; ssl3_release_write_buffer
                move    $a0, $s1
                b       loc_1BD14
                lw      $gp, 0x30+var_18($sp)
 # End of function ssl3_write_pending


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_do_compress
ssl3_do_compress:                        # CODE XREF: sub_1BE08+1EC↓p
                                         # do_dtls1_write+11C↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_do_compress)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $s0, 0x58($a0)
                la      $t9, COMP_compress_block
                lw      $v0, 0x134($s0)
                lw      $a0, 0x94($a0)
                lw      $a1, 0x13C($s0)
                lw      $a3, 0x140($s0)
                li      $a2, 0x4400
                jalr    $t9 ; COMP_compress_block
                sw      $v0, 0x28+var_18($sp)
                move    $v1, $v0
                bltz    $v0, loc_1BDF4
                lw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x13C($s0)
                sw      $v1, 0x134($s0)
                sw      $v0, 0x140($s0)
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_1BDF4:                               # CODE XREF: ssl3_do_compress+44↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl3_do_compress


 # =============== S U B R O U T I N E =======================================


sub_1BE08:                               # CODE XREF: sub_1BE08+528↓p
                                         # ssl3_dispatch_alert+44↓p
                                         # DATA XREF: ...

var_48          = -0x48
var_40          = -0x40
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - sub_1BE08)
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_4($sp)
                sw      $fp, 0x58+var_8($sp)
                sw      $s7, 0x58+var_C($sp)
                sw      $s6, 0x58+var_10($sp)
                sw      $s5, 0x58+var_14($sp)
                sw      $s4, 0x58+var_18($sp)
                sw      $s3, 0x58+var_1C($sp)
                sw      $s2, 0x58+var_20($sp)
                sw      $s1, 0x58+var_24($sp)
                sw      $s0, 0x58+var_28($sp)
                sw      $gp, 0x58+var_40($sp)
                lw      $s3, 0x58($a0)
                lw      $v1, 0x58+arg_10($sp)
                lw      $v0, 0xFC($s3)
                move    $s0, $a0
                move    $s6, $a1
                sw      $a2, 0x58+var_30($sp)
                move    $s7, $a3
                beqz    $v0, loc_1C2F8
                sw      $v1, 0x58+var_2C($sp)

loc_1BE68:                               # CODE XREF: sub_1BE08+4FC↓j
                lw      $v0, 0x108($s3)
                bnez    $v0, loc_1C0A4
                lw      $a2, 0x58+var_30($sp)
                lw      $v0, 0x58($s0)
                lw      $v1, 0x18C($v0)
                bnez    $v1, loc_1BF08
                nop

loc_1BE84:                               # CODE XREF: sub_1BE08+110↓j
                bnez    $s7, loc_1BE94
                lw      $a0, 0x58+var_2C($sp)
                beqz    $a0, loc_1C150
                lw      $ra, 0x58+var_4($sp)

loc_1BE94:                               # CODE XREF: sub_1BE08:loc_1BE84↑j
                lw      $v0, 0xC0($s0)
                beqz    $v0, loc_1BEBC
                lw      $s1, 0x58($s0)
                lw      $v0, 0x8C($s0)
                beqz    $v0, loc_1BF50
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x90($s0)
                bnez    $v0, loc_1C23C
                lw      $gp, 0x58+var_40($sp)

loc_1BEBC:                               # CODE XREF: sub_1BE08+90↑j
                lw      $v0, 0x8C($s0)
                beqz    $v0, loc_1BF54
                lw      $v1, 0x58+var_2C($sp)
                sw      $zero, 0x58+var_34($sp)

loc_1BECC:                               # CODE XREF: sub_1BE08+454↓j
                lw      $v0, 0x58+var_2C($sp)
                bnez    $v0, loc_1C0E8
                nop
                lw      $v1, 0x58($s0)
                lw      $v0, 0xE4($v1)
                bnez    $v0, loc_1BF60
                nop
                lw      $v0, 0xE0($v1)
                beqz    $v0, loc_1BF00
                li      $v0, 1
                li      $v0, 0x17
                beq     $s6, $v0, loc_1C314
                li      $v0, 1

loc_1BF00:                               # CODE XREF: sub_1BE08+E4↑j
                b       loc_1BF60
                sw      $v0, 0xE4($v1)
 # ---------------------------------------------------------------------------

loc_1BF08:                               # CODE XREF: sub_1BE08+74↑j
                lw      $v0, 8($s0)
                lw      $t9, 0x3C($v0)
                jalr    $t9
                move    $a0, $s0
                bgtz    $v0, loc_1BE84
                lw      $gp, 0x58+var_40($sp)

loc_1BF20:                               # CODE XREF: sub_1BE08:loc_1C264↓j
                                         # sub_1BE08+4E8↓j ...
                lw      $ra, 0x58+var_4($sp)
                lw      $fp, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_1BF50:                               # CODE XREF: sub_1BE08+9C↑j
                lw      $v1, 0x58+var_2C($sp)

loc_1BF54:                               # CODE XREF: sub_1BE08+B8↑j
                bnez    $v1, loc_1C0E4
                nop
                sw      $zero, 0x58+var_34($sp)

loc_1BF60:                               # CODE XREF: sub_1BE08+D8↑j
                                         # sub_1BE08:loc_1BF00↑j
                lw      $v1, 0xFC($s3)
                sw      $zero, 0x58+var_38($sp)
                addiu   $v0, $v1, 5
                negu    $v0, $v0
                andi    $v0, 7
                sw      $v0, 0x104($s3)
                addu    $a1, $v1, $v0

loc_1BF7C:                               # CODE XREF: sub_1BE08+560↓j
                sb      $s6, 0($a1)
                sw      $s6, 0x130($s1)
                lw      $v0, 0($s0)
                sra     $v0, 8
                sb      $v0, 1($a1)
                lw      $v1, 0x34($s0)
                li      $v0, 0x1111
                beq     $v1, $v0, loc_1C128
                addiu   $a2, $a1, 2

loc_1BFA0:                               # CODE XREF: sub_1BE08+318↓j
                lw      $a0, 0($s0)

loc_1BFA4:                               # CODE XREF: sub_1BE08+32C↓j
                                         # sub_1BE08+334↓j
                sb      $a0, 0($a2)
                addiu   $s4, $a2, 1

loc_1BFAC:                               # CODE XREF: sub_1BE08+340↓j
                lw      $a0, 0x8C($s0)
                beqz    $a0, loc_1BFC8
                addiu   $s2, $s4, 2
                lw      $v0, 0($s0)
                slti    $v0, 0x302
                beqz    $v0, loc_1C1E8
                la      $t9, EVP_CIPHER_CTX_flags

loc_1BFC8:                               # CODE XREF: sub_1BE08+1A8↑j
                                         # sub_1BE08+404↓j ...
                move    $s5, $zero
                move    $fp, $zero
                move    $a0, $zero

loc_1BFD4:                               # CODE XREF: sub_1BE08+410↓j
                                         # sub_1BE08+484↓j
                lw      $v1, 0x58+var_30($sp)
                lw      $v0, 0x94($s0)
                addu    $a0, $s2, $a0
                sw      $a0, 0x13C($s1)
                sw      $s7, 0x134($s1)
                beqz    $v0, loc_1C220
                sw      $v1, 0x140($s1)
                la      $t9, ssl3_do_compress
                jalr    $t9 ; ssl3_do_compress
                move    $a0, $s0
                beqz    $v0, loc_1C2D0
                lw      $gp, 0x58+var_40($sp)

loc_1C004:                               # CODE XREF: sub_1BE08+42C↓j
                lw      $a0, 0x58+var_34($sp)
                bnez    $a0, loc_1C294
                move    $a0, $s0

loc_1C010:                               # CODE XREF: sub_1BE08+4C0↓j
                sw      $s2, 0x13C($s1)
                beqz    $s5, loc_1C028
                sw      $s2, 0x140($s1)
                lw      $v0, 0x134($s1)
                addu    $v0, $fp
                sw      $v0, 0x134($s1)

loc_1C028:                               # CODE XREF: sub_1BE08+20C↑j
                lw      $v0, 8($s0)
                move    $a0, $s0
                lw      $v1, 0x64($v0)
                lw      $t9, 0($v1)
                jalr    $t9
                li      $a1, 1
                lw      $v1, 0x134($s1)
                lw      $gp, 0x58+var_40($sp)
                srl     $v1, 8
                sb      $v1, 0($s4)
                lw      $v0, 0x134($s1)
                sb      $v0, 1($s4)
                lw      $v1, 0x134($s1)
                lw      $a0, 0x58+var_2C($sp)
                addiu   $v1, 5
                sw      $s6, 0x130($s1)
                beqz    $a0, loc_1C180
                sw      $v1, 0x134($s1)
                lw      $ra, 0x58+var_4($sp)
                lw      $fp, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_1C0A4:                               # CODE XREF: sub_1BE08+64↑j
                la      $t9, ssl3_write_pending
                move    $a0, $s0
                move    $a1, $s6
                move    $a3, $s7
                lw      $ra, 0x58+var_4($sp)
                lw      $fp, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                jr      $t9 ; ssl3_write_pending
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_1C0E4:                               # CODE XREF: sub_1BE08:loc_1BF54↑j
                sw      $zero, 0x58+var_34($sp)

loc_1C0E8:                               # CODE XREF: sub_1BE08+C8↑j
                lw      $v1, 0xFC($s3)
                sw      $zero, 0x58+var_38($sp)
                addiu   $v0, $v1, 0xA
                negu    $v0, $v0
                andi    $v0, 7
                addu    $a1, $v1, $v0
                sw      $v0, 0x104($s3)
                sb      $s6, 0($a1)
                sw      $s6, 0x130($s1)
                lw      $v0, 0($s0)
                sra     $v0, 8
                sb      $v0, 1($a1)
                lw      $v1, 0x34($s0)
                li      $v0, 0x1111
                bne     $v1, $v0, loc_1BFA0
                addiu   $a2, $a1, 2

loc_1C128:                               # CODE XREF: sub_1BE08+190↑j
                lw      $a0, 0($s0)
                li      $v0, 3
                sra     $v1, $a0, 8
                bne     $v1, $v0, loc_1BFA4
                slti    $v0, $a0, 0x302
                bnez    $v0, loc_1BFA4
                li      $v0, 1
                addiu   $s4, $a1, 3
                b       loc_1BFAC
                sb      $v0, 2($a1)
 # ---------------------------------------------------------------------------

loc_1C150:                               # CODE XREF: sub_1BE08+84↑j
                lw      $fp, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_1C180:                               # CODE XREF: sub_1BE08+260↑j
                lw      $a0, 0x58+var_38($sp)
                lw      $v0, 0x58($s0)
                addu    $v1, $a0, $v1
                sw      $v1, 0x108($s3)
                lw      $v1, 0x58+var_30($sp)
                la      $t9, ssl3_write_pending
                sw      $s7, 0x170($v0)
                sw      $s7, 0x168($v0)
                sw      $s6, 0x16C($v0)
                move    $a0, $s0
                move    $a1, $s6
                move    $a3, $s7
                lw      $ra, 0x58+var_4($sp)
                lw      $fp, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                sw      $v1, 0x174($v0)
                move    $a2, $v1
                jr      $t9 ; ssl3_write_pending
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_1C1E8:                               # CODE XREF: sub_1BE08+1B8↑j
                jalr    $t9 ; EVP_CIPHER_CTX_flags
                nop
                li      $v1, 0xF0007
                and     $v1, $v0, $v1
                li      $v0, 2
                beq     $v1, $v0, loc_1C26C
                lw      $gp, 0x58+var_40($sp)
                li      $v0, 6
                bne     $v1, $v0, loc_1BFC8
                li      $s5, 8
                li      $fp, 8
                b       loc_1BFD4
                li      $a0, 8
 # ---------------------------------------------------------------------------

loc_1C220:                               # CODE XREF: sub_1BE08+1E0↑j
                la      $t9, memcpy
                move    $a1, $v1
                jalr    $t9 ; memcpy
                move    $a2, $s7
                lw      $v1, 0x13C($s1)
                b       loc_1C004
                sw      $v1, 0x140($s1)
 # ---------------------------------------------------------------------------

loc_1C23C:                               # CODE XREF: sub_1BE08+AC↑j
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x90($s0)
                lw      $gp, 0x58+var_40($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                sw      $v0, 0x58+var_34($sp)
                bgez    $v0, loc_1BECC
                lw      $gp, 0x58+var_40($sp)

loc_1C264:                               # CODE XREF: sub_1BE08+4AC↓j
                                         # sub_1BE08+534↓j
                b       loc_1BF20
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1C26C:                               # CODE XREF: sub_1BE08+3F8↑j
                la      $t9, EVP_CIPHER_CTX_iv_length
                jalr    $t9 ; EVP_CIPHER_CTX_iv_length
                lw      $a0, 0x8C($s0)
                move    $s5, $v0
                slti    $v0, 2
                bnez    $v0, loc_1BFC8
                lw      $gp, 0x58+var_40($sp)
                move    $fp, $s5
                b       loc_1BFD4
                move    $a0, $s5
 # ---------------------------------------------------------------------------

loc_1C294:                               # CODE XREF: sub_1BE08+200↑j
                lw      $v0, 8($s0)
                lw      $a1, 0x134($s1)
                lw      $v1, 0x64($v0)
                addu    $a1, $fp, $a1
                lw      $t9, 4($v1)
                addu    $a1, $s2
                jalr    $t9
                li      $a2, 1
                bltz    $v0, loc_1C264
                lw      $gp, 0x58+var_40($sp)
                lw      $v0, 0x134($s1)
                lw      $v1, 0x58+var_34($sp)
                addu    $v0, $v1
                b       loc_1C010
                sw      $v0, 0x134($s1)
 # ---------------------------------------------------------------------------

loc_1C2D0:                               # CODE XREF: sub_1BE08+1F4↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x58+var_48($sp)
                li      $a0, 0x14
                li      $a1, 0x68  # 'h'
                li      $a2, 0x8D

loc_1C2E4:                               # CODE XREF: sub_1BE08+574↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x58+var_40($sp)
                b       loc_1BF20
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1C2F8:                               # CODE XREF: sub_1BE08+58↑j
                la      $t9, ssl3_setup_write_buffer
                jalr    $t9 ; ssl3_setup_write_buffer
                nop
                bnez    $v0, loc_1BE68
                lw      $gp, 0x58+var_40($sp)
                b       loc_1BF20
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1C314:                               # CODE XREF: sub_1BE08+F0↑j
                la      $t9, locret_20000
                li      $s2, 1
                lw      $a2, 0x58+var_30($sp)
                move    $a0, $s0
                li      $a1, 0x17
                move    $a3, $zero
                addiu   $t9, (sub_1BE08 - 0x20000)
                jalr    $t9 ; sub_1BE08
                sw      $s2, 0x58+var_48($sp)
                sw      $v0, 0x58+var_38($sp)
                blez    $v0, loc_1C264
                lw      $gp, 0x58+var_40($sp)
                slti    $v0, 0x56  # 'V'
                beqz    $v0, loc_1C370
                la      $t9, ERR_put_error
                lw      $v1, 0x104($s3)
                lw      $v0, 0xFC($s3)
                lw      $a0, 0x58($s0)
                addu    $v0, $v1
                lw      $v1, 0x58+var_38($sp)
                sw      $s2, 0xE4($a0)
                b       loc_1BF7C
                addu    $a1, $v0, $v1
 # ---------------------------------------------------------------------------

loc_1C370:                               # CODE XREF: sub_1BE08+540↑j
                li      $a0, 0x14
                li      $a1, 0x68  # 'h'
                li      $a2, 0x44  # 'D'
                b       loc_1C2E4
                sw      $zero, 0x58+var_48($sp)
 # End of function sub_1BE08


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_dispatch_alert
ssl3_dispatch_alert:                     # DATA XREF: LOAD:000048C8↑o
                                         # .got:ssl3_dispatch_alert_ptr↓o

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_dispatch_alert)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s2, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_18($sp)
                lw      $a2, 0x58($a0)
                la      $t9, locret_20000
                sw      $zero, 0x18C($a2)
                li      $a1, 0x15
                addiu   $a2, 0x190
                li      $a3, 2
                sw      $zero, 0x38+var_28($sp)
                addiu   $t9, (sub_1BE08 - 0x20000)
                jalr    $t9 ; sub_1BE08
                move    $s0, $a0
                move    $s2, $v0
                blez    $v0, loc_1C488
                lw      $gp, 0x38+var_18($sp)
                lw      $v1, 0x58($s0)
                li      $s1, 2
                lbu     $v0, 0x190($v1)
                beq     $v0, $s1, loc_1C4B0
                la      $t9, BIO_ctrl

loc_1C3F0:                               # CODE XREF: ssl3_dispatch_alert+140↓j
                lw      $t9, 0x64($s0)
                beqz    $t9, loc_1C424
                li      $a0, 1
                lw      $a3, 0x58($s0)
                lw      $v0, 0x68($s0)
                lw      $a1, 0($s0)
                addiu   $a3, 0x190
                sw      $s1, 0x38+var_28($sp)
                sw      $v0, 0x38+var_20($sp)
                sw      $s0, 0x38+var_24($sp)
                jalr    $t9
                li      $a2, 0x15
                lw      $gp, 0x38+var_18($sp)

loc_1C424:                               # CODE XREF: ssl3_dispatch_alert+70↑j
                lw      $t9, 0xD0($s0)
                beqz    $t9, loc_1C470
                nop

loc_1C430:                               # CODE XREF: ssl3_dispatch_alert+F4↓j
                lw      $v0, 0x58($s0)
                move    $a0, $s0
                lbu     $a2, 0x190($v0)
                lbu     $v1, 0x191($v0)
                sll     $a2, 8
                or      $a2, $v1
                jalr    $t9
                li      $a1, 0x4008
                lw      $gp, 0x38+var_18($sp)
                move    $v0, $s2
                lw      $ra, 0x38+var_4($sp)

loc_1C45C:                               # CODE XREF: ssl3_dispatch_alert+FC↓j
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1C470:                               # CODE XREF: ssl3_dispatch_alert+A4↑j
                lw      $v0, 0xDC($s0)
                lw      $t9, 0x9C($v0)
                bnez    $t9, loc_1C430
                move    $v0, $s2
                b       loc_1C45C
                lw      $ra, 0x38+var_4($sp)
 # ---------------------------------------------------------------------------

loc_1C488:                               # CODE XREF: ssl3_dispatch_alert+50↑j
                lw      $v1, 0x58($s0)
                li      $v0, 1
                sw      $v0, 0x18C($v1)
                lw      $ra, 0x38+var_4($sp)
                move    $v0, $s2
                lw      $s1, 0x38+var_C($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1C4B0:                               # CODE XREF: ssl3_dispatch_alert+64↑j
                lw      $a0, 0x10($s0)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                b       loc_1C3F0
                lw      $gp, 0x38+var_18($sp)
 # End of function ssl3_dispatch_alert


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_write_bytes
ssl3_write_bytes:                        # CODE XREF: ssl3_write+E0↑p
                                         # ssl3_do_write+40↓p ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl3_write_bytes)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                lw      $v1, 0x58($a0)
                li      $v0, 1
                sw      $v0, 0x18($a0)
                la      $t9, SSL_state
                lw      $s1, 0x164($v1)
                sw      $zero, 0x164($v1)
                move    $s2, $a0
                move    $s5, $a1
                move    $s4, $a2
                jalr    $t9 ; SSL_state
                move    $s0, $a3
                andi    $v0, 0x3000
                beqz    $v0, loc_1C540
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x1C($s2)
                beqz    $v0, loc_1C608
                nop

loc_1C540:                               # CODE XREF: ssl3_write_bytes+60↑j
                li      $v0, 0x17

loc_1C544:                               # CODE XREF: ssl3_write_bytes+154↓j
                bne     $s5, $v0, loc_1C650
                subu    $s0, $s1
                la      $v0, locret_20000
                b       loc_1C574
                addiu   $s3, $v0, (sub_1BE08 - 0x20000)
 # ---------------------------------------------------------------------------

loc_1C558:                               # CODE XREF: ssl3_write_bytes+D0↓j
                beq     $v0, $s0, loc_1C5D4
                nop
                lw      $v0, 0xFC($s2)
                andi    $v0, 1
                bnez    $v0, loc_1C5D4
                subu    $s0, $v1
                addu    $s1, $v1

loc_1C574:                               # CODE XREF: ssl3_write_bytes+84↑j
                lw      $a3, 0x10C($s2)
                addu    $a2, $s4, $s1
                sltu    $v0, $a3, $s0
                movz    $a3, $s0, $v0
                move    $a0, $s2
                li      $a1, 0x17
                move    $t9, $s3
                jalr    $t9
                sw      $zero, 0x40+var_30($sp)
                move    $v1, $v0
                bgtz    $v0, loc_1C558
                lw      $gp, 0x40+var_28($sp)

loc_1C5A4:                               # CODE XREF: ssl3_write_bytes+1B4↓j
                lw      $v0, 0x58($s2)
                lw      $ra, 0x40+var_8($sp)
                sw      $s1, 0x164($v0)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1C5D4:                               # CODE XREF: ssl3_write_bytes:loc_1C558↑j
                                         # ssl3_write_bytes+9C↑j ...
                lw      $v0, 0x58($s2)
                addu    $v1, $s1
                sw      $zero, 0xE4($v0)

loc_1C5E0:                               # CODE XREF: ssl3_write_bytes+14C↓j
                                         # ssl3_write_bytes+17C↓j
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1C608:                               # CODE XREF: ssl3_write_bytes+6C↑j
                lw      $t9, 0x20($s2)
                jalr    $t9
                move    $a0, $s2
                move    $v1, $v0
                bltz    $v0, loc_1C5E0
                lw      $gp, 0x40+var_28($sp)
                bnez    $v0, loc_1C544
                li      $v0, 0x17
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x9E
                li      $a2, 0xE5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                b       loc_1C5E0
                li      $v1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1C650:                               # CODE XREF: ssl3_write_bytes:loc_1C544↑j
                la      $v0, locret_20000
                addiu   $s3, $v0, (sub_1BE08 - 0x20000)

loc_1C658:                               # CODE XREF: ssl3_write_bytes+1C4↓j
                lw      $a3, 0x10C($s2)
                addu    $a2, $s4, $s1
                sltu    $v0, $a3, $s0
                movz    $a3, $s0, $v0
                move    $a0, $s2
                move    $a1, $s5
                move    $t9, $s3
                jalr    $t9
                sw      $zero, 0x40+var_30($sp)
                move    $v1, $v0
                blez    $v0, loc_1C5A4
                lw      $gp, 0x40+var_28($sp)
                beq     $v0, $s0, loc_1C5D4
                subu    $s0, $v0
                b       loc_1C658
                addu    $s1, $v0
 # End of function ssl3_write_bytes


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_do_uncompress
ssl3_do_uncompress:                      # CODE XREF: ssl3_read_bytes+5A8↓p
                                         # sub_2BB18+208↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_do_uncompress)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $s0, 0x58($a0)
                la      $t9, COMP_expand_block
                lw      $v0, 0x110($s0)
                lw      $a0, 0x88($a0)
                lw      $a1, 0x120($s0)
                lw      $a3, 0x118($s0)
                li      $a2, 0x4000
                jalr    $t9 ; COMP_expand_block
                sw      $v0, 0x28+var_18($sp)
                move    $v1, $v0
                bltz    $v0, loc_1C704
                lw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x120($s0)
                sw      $v1, 0x110($s0)
                sw      $v0, 0x118($s0)
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_1C704:                               # CODE XREF: ssl3_do_uncompress+44↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl3_do_uncompress


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_read_n
ssl3_read_n:                             # CODE XREF: ssl3_read_bytes+468↓p
                                         # ssl3_read_bytes+6FC↓p ...

var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_read_n)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_4($sp)
                sw      $fp, 0x48+var_8($sp)
                sw      $s7, 0x48+var_C($sp)
                sw      $s6, 0x48+var_10($sp)
                sw      $s5, 0x48+var_14($sp)
                sw      $s4, 0x48+var_18($sp)
                sw      $s3, 0x48+var_1C($sp)
                sw      $s2, 0x48+var_20($sp)
                sw      $s1, 0x48+var_24($sp)
                sw      $s0, 0x48+var_28($sp)
                sw      $gp, 0x48+var_30($sp)
                move    $s2, $a1
                move    $s6, $a2
                move    $s1, $a3
                blez    $a1, loc_1C800
                move    $s3, $a0
                lw      $s4, 0x58($a0)
                lw      $a2, 0xEC($s4)
                beqz    $a2, loc_1CAF8
                la      $t9, ssl3_setup_read_buffer

loc_1C778:                               # CODE XREF: ssl3_read_n+3F0↓j
                addiu   $v0, $a2, 5
                negu    $v0, $v0
                andi    $s5, $v0, 7
                bnez    $s1, loc_1C7A4
                lw      $s0, 0xF8($s4)
                bnez    $s0, loc_1C988
                move    $a0, $s5
                sw      $s5, 0xF4($s4)

loc_1C798:                               # CODE XREF: ssl3_read_n+2CC↓j
                                         # ssl3_read_n:loc_1C9EC↓j
                addu    $v0, $a2, $a0

loc_1C79C:                               # CODE XREF: ssl3_read_n+28C↓j
                                         # ssl3_read_n+2A8↓j
                sw      $v0, 0x4C($s3)
                sw      $zero, 0x50($s3)

loc_1C7A4:                               # CODE XREF: ssl3_read_n+6C↑j
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s3
                li      $v1, 0xFEFF
                beq     $v0, $v1, loc_1C834
                lw      $gp, 0x48+var_30($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s3
                li      $v1, 0x100
                beq     $v0, $v1, loc_1C834
                lw      $gp, 0x48+var_30($sp)
                slt     $v0, $s0, $s2
                bnez    $v0, loc_1C898
                nop

loc_1C7E0:                               # CODE XREF: ssl3_read_n+124↓j
                lw      $v0, 0x50($s3)
                subu    $a2, $s0, $s2
                addu    $v0, $s2
                sw      $v0, 0x50($s3)
                lw      $v1, 0xF4($s4)
                sw      $a2, 0xF8($s4)
                addu    $a0, $v1, $s2
                sw      $a0, 0xF4($s4)

loc_1C800:                               # CODE XREF: ssl3_read_n+48↑j
                                         # ssl3_read_n+31C↓j ...
                move    $v0, $s2
                lw      $ra, 0x48+var_4($sp)
                lw      $fp, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_1C834:                               # CODE XREF: ssl3_read_n+9C↑j
                                         # ssl3_read_n+B4↑j
                blez    $s0, loc_1C898
                slt     $v0, $s0, $s2
                beqz    $v0, loc_1C7E0
                move    $a2, $zero
                lw      $v0, 0x50($s3)
                move    $s2, $s0
                addu    $v0, $s0
                sw      $v0, 0x50($s3)
                lw      $v1, 0xF4($s4)
                addu    $a0, $v1, $s2
                move    $v0, $s2
                sw      $a2, 0xF8($s4)
                sw      $a0, 0xF4($s4)
                lw      $ra, 0x48+var_4($sp)
                lw      $fp, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_1C898:                               # CODE XREF: ssl3_read_n+C0↑j
                                         # ssl3_read_n:loc_1C834↑j
                lw      $v0, 0xEC($s4)
                lw      $a1, 0x4C($s3)
                addu    $s1, $s5, $v0
                beq     $a1, $s1, loc_1C8CC
                lw      $fp, 0x50($s3)
                la      $t9, memmove
                move    $a0, $s1
                jalr    $t9 ; memmove
                addu    $a2, $fp, $s0
                addu    $a0, $s5, $fp
                lw      $gp, 0x48+var_30($sp)
                sw      $a0, 0xF4($s4)
                sw      $s1, 0x4C($s3)

loc_1C8CC:                               # CODE XREF: ssl3_read_n+18C↑j
                lw      $v0, 0xF0($s4)
                lw      $v1, 0xF4($s4)
                subu    $a2, $v0, $v1
                slt     $a0, $a2, $s2
                bnez    $a0, loc_1CB10
                la      $t9, ERR_put_error
                lw      $v0, 0x60($s3)
                bnez    $v0, loc_1C9F4
                slt     $v0, $s6, $s2

loc_1C8F0:                               # CODE XREF: ssl3_read_n:loc_1C9F4↓j
                move    $s7, $s2

loc_1C8F4:                               # CODE XREF: ssl3_read_n+2E8↓j
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                addu    $s6, $s1, $fp
                lw      $gp, 0x48+var_30($sp)
                move    $s5, $v0

loc_1C908:                               # CODE XREF: ssl3_read_n+260↓j
                lw      $v0, 0xC($s3)
                la      $t9, BIO_read
                addu    $a1, $s6, $s0
                subu    $a2, $s7, $s0
                sw      $zero, 0($s5)
                beqz    $v0, loc_1CA3C
                move    $a0, $v0
                li      $v0, 3
                jalr    $t9 ; BIO_read
                sw      $v0, 0x18($s3)
                lw      $gp, 0x48+var_30($sp)
                move    $a0, $s3
                move    $s1, $v0
                blez    $v0, loc_1CA60
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                addu    $s0, $s1
                lw      $gp, 0x48+var_30($sp)
                li      $v1, 0xFEFF
                move    $a0, $s3
                beq     $v0, $v1, loc_1CA08
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                nop
                li      $v1, 0x100
                lw      $gp, 0x48+var_30($sp)
                beq     $v0, $v1, loc_1CA08
                slt     $a0, $s0, $s2
                bnez    $a0, loc_1C908
                nop
                b       loc_1CA14
                lw      $v0, 0xF4($s4)
 # ---------------------------------------------------------------------------

loc_1C988:                               # CODE XREF: ssl3_read_n+74↑j
                beqz    $s5, loc_1C9EC
                slti    $v0, $s0, 5
                bnez    $v0, loc_1C9EC
                li      $v0, 0x17
                lw      $a0, 0xF4($s4)
                addu    $a1, $a2, $a0
                lbu     $v1, 0($a1)
                bne     $v1, $v0, loc_1C79C
                addu    $v0, $a2, $a0
                lbu     $v0, 3($a1)
                lbu     $v1, 4($a1)
                sll     $v0, 8
                or      $v0, $v1
                slti    $v0, 0x80
                bnez    $v0, loc_1C79C
                addu    $v0, $a2, $a0
                la      $t9, memmove
                addu    $a0, $s5, $a2
                jalr    $t9 ; memmove
                move    $a2, $s0
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0xEC($s4)
                move    $a0, $s5
                b       loc_1C798
                sw      $s5, 0xF4($s4)
 # ---------------------------------------------------------------------------

loc_1C9EC:                               # CODE XREF: ssl3_read_n:loc_1C988↑j
                                         # ssl3_read_n+278↑j
                b       loc_1C798
                lw      $a0, 0xF4($s4)
 # ---------------------------------------------------------------------------

loc_1C9F4:                               # CODE XREF: ssl3_read_n+1D0↑j
                bnez    $v0, loc_1C8F0
                slt     $v0, $a2, $s6
                move    $s7, $a2
                b       loc_1C8F4
                movz    $s7, $s6, $v0
 # ---------------------------------------------------------------------------

loc_1CA08:                               # CODE XREF: ssl3_read_n+240↑j
                                         # ssl3_read_n+258↑j
                slt     $v0, $s0, $s2
                movn    $s2, $s0, $v0
                lw      $v0, 0xF4($s4)

loc_1CA14:                               # CODE XREF: ssl3_read_n+268↑j
                subu    $v1, $s0, $s2
                addu    $v0, $s2
                sw      $v0, 0xF4($s4)
                sw      $v1, 0xF8($s4)
                lw      $v1, 0x50($s3)
                li      $v0, 1
                addu    $v1, $s2
                sw      $v0, 0x18($s3)
                b       loc_1C800
                sw      $v1, 0x50($s3)
 # ---------------------------------------------------------------------------

loc_1CA3C:                               # CODE XREF: ssl3_read_n+204↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x95
                li      $a2, 0xD3
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                li      $s1, 0xFFFFFFFF

loc_1CA60:                               # CODE XREF: ssl3_read_n+224↑j
                lw      $v0, 0xFC($s3)
                andi    $v0, 0x10
                bnez    $v0, loc_1CAA8
                sw      $s0, 0xF8($s4)

loc_1CA70:                               # CODE XREF: ssl3_read_n+3A0↓j
                                         # ssl3_read_n+3B8↓j ...
                move    $s2, $s1
                move    $v0, $s1
                lw      $ra, 0x48+var_4($sp)
                lw      $fp, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_1CAA8:                               # CODE XREF: ssl3_read_n+350↑j
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s3
                li      $v1, 0xFEFF
                beq     $v0, $v1, loc_1CA70
                lw      $gp, 0x48+var_30($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s3
                li      $v1, 0x100
                beq     $v0, $v1, loc_1CA70
                lw      $gp, 0x48+var_30($sp)
                addu    $v0, $s0, $fp
                bnez    $v0, loc_1CA70
                la      $t9, ssl3_release_read_buffer
                jalr    $t9 ; ssl3_release_read_buffer
                move    $a0, $s3
                lw      $gp, 0x48+var_30($sp)
                b       loc_1C800
                move    $s2, $s1
 # ---------------------------------------------------------------------------

loc_1CAF8:                               # CODE XREF: ssl3_read_n+58↑j
                jalr    $t9 ; ssl3_setup_read_buffer
                nop
                beqz    $v0, loc_1CB34
                lw      $gp, 0x48+var_30($sp)
                b       loc_1C778
                lw      $a2, 0xEC($s4)
 # ---------------------------------------------------------------------------

loc_1CB10:                               # CODE XREF: ssl3_read_n+1C4↑j
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x95
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_1C800
                li      $s2, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1CB34:                               # CODE XREF: ssl3_read_n+3E8↑j
                b       loc_1C800
                li      $s2, 0xFFFFFFFF
 # End of function ssl3_read_n


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_read_bytes
ssl3_read_bytes:                         # DATA XREF: LOAD:00004948↑o
                                         # .got:ssl3_read_bytes_ptr↓o

var_A0          = -0xA0
var_9C          = -0x9C
var_98          = -0x98
var_90          = -0x90
var_88          = -0x88
var_78          = -0x78
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4           =  4
arg_8           =  8
arg_C           =  0xC
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - ssl3_read_bytes)
                addu    $gp, $t9
                addiu   $sp, -0xB0
                sw      $ra, 0xB0+var_4($sp)
                sw      $fp, 0xB0+var_8($sp)
                sw      $s7, 0xB0+var_C($sp)
                sw      $s6, 0xB0+var_10($sp)
                sw      $s5, 0xB0+var_14($sp)
                sw      $s4, 0xB0+var_18($sp)
                sw      $s3, 0xB0+var_1C($sp)
                sw      $s2, 0xB0+var_20($sp)
                sw      $s1, 0xB0+var_24($sp)
                sw      $s0, 0xB0+var_28($sp)
                sw      $gp, 0xB0+var_90($sp)
                lw      $s1, 0x58($a0)
                move    $s2, $a0
                lw      $v0, 0xEC($s1)
                sw      $a1, 0xB0+arg_4($sp)
                sw      $a2, 0xB0+arg_8($sp)
                beqz    $v0, loc_1D94C
                sw      $a3, 0xB0+arg_C($sp)

loc_1CB94:                               # CODE XREF: ssl3_read_bytes+E1C↓j
                lw      $v0, 0xB0+arg_4($sp)
                beqz    $v0, loc_1CC0C
                lw      $a1, 0xB0+arg_10($sp)
                move    $v1, $v0
                li      $v0, 0x17
                beq     $v1, $v0, loc_1CC0C
                li      $v0, 0x16
                beq     $v1, $v0, loc_1CC0C
                la      $t9, ERR_put_error

loc_1CBB8:                               # CODE XREF: ssl3_read_bytes+2AC↓j
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x94
                li      $a2, 0x44  # 'D'

loc_1CBC8:                               # CODE XREF: ssl3_read_bytes+304↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB0+var_90($sp)
                li      $a2, 0xFFFFFFFF

loc_1CBD8:                               # CODE XREF: ssl3_read_bytes+26C↓j
                                         # ssl3_read_bytes+2E8↓j ...
                lw      $ra, 0xB0+var_4($sp)

loc_1CBDC:                               # CODE XREF: ssl3_read_bytes:loc_1D330↓j
                                         # ssl3_read_bytes+858↓j
                lw      $fp, 0xB0+var_8($sp)
                lw      $s7, 0xB0+var_C($sp)
                lw      $s6, 0xB0+var_10($sp)
                lw      $s5, 0xB0+var_14($sp)
                lw      $s4, 0xB0+var_18($sp)
                lw      $s3, 0xB0+var_1C($sp)
                lw      $s2, 0xB0+var_20($sp)
                lw      $s1, 0xB0+var_24($sp)
                lw      $s0, 0xB0+var_28($sp)
                move    $v0, $a2
                jr      $ra
                addiu   $sp, 0xB0
 # ---------------------------------------------------------------------------

loc_1CC0C:                               # CODE XREF: ssl3_read_bytes+5C↑j
                                         # ssl3_read_bytes+6C↑j ...
                bnez    $a1, loc_1CDE4
                lw      $t9, 0xB0+arg_4($sp)
                lw      $v1, 0xB0+arg_4($sp)
                li      $v0, 0x16
                beq     $v1, $v0, loc_1D308
                nop

loc_1CC24:                               # CODE XREF: ssl3_read_bytes+7D4↓j
                lw      $v0, 0x1C($s2)
                beqz    $v0, loc_1CE00
                la      $t9, SSL_state

loc_1CC30:                               # CODE XREF: ssl3_read_bytes+2D0↓j
                                         # ssl3_read_bytes+2F0↓j
                addiu   $t9, $sp, 0xB0+var_78

loc_1CC34:                               # CODE XREF: ssl3_read_bytes+2B8↓j
                lw      $s1, 0x58($s2)
                sw      $zero, 0xB0+var_30($sp)
                sw      $t9, 0xB0+var_2C($sp)

loc_1CC40:                               # CODE XREF: ssl3_read_bytes:loc_1D300↓j
                                         # ssl3_read_bytes+A48↓j ...
                li      $v0, 1

loc_1CC44:                               # CODE XREF: ssl3_read_bytes+224↓j
                                         # ssl3_read_bytes+230↓j ...
                sw      $v0, 0x18($s2)
                lw      $a2, 0x110($s1)
                beqz    $a2, loc_1CF40
                move    $s3, $s1
                lw      $v1, 0x38($s2)
                li      $v0, 0xF1
                beq     $v1, $v0, loc_1CF40
                nop

loc_1CC64:                               # CODE XREF: ssl3_read_bytes+5DC↓j
                lw      $v0, 0x180($s1)
                beqz    $v0, loc_1CC7C
                li      $v0, 0x16
                lw      $v1, 0x10C($s3)
                bne     $v1, $v0, loc_1D8BC
                la      $t9, ERR_put_error

loc_1CC7C:                               # CODE XREF: ssl3_read_bytes+12C↑j
                lw      $v0, 0x30($s2)
                andi    $v0, 2
                bnez    $v0, loc_1D7A0
                lw      $a1, 0xB0+arg_4($sp)
                lw      $s0, 0x10C($s3)
                beq     $s0, $a1, loc_1D7B4
                li      $v0, 0x16
                beq     $s0, $v0, loc_1D280
                li      $v0, 0x15
                beq     $s0, $v0, loc_1D39C
                li      $v0, 0x18
                beq     $s0, $v0, loc_1D8E4
                la      $t9, tls1_process_heartbeat

loc_1CCB0:                               # CODE XREF: ssl3_read_bytes:loc_1D2F8↓j
                lw      $v0, 0x24($s2)
                bnez    $v0, loc_1CE48
                la      $t9, SSL_state
                lw      $s1, 0x58($s2)
                lw      $v0, 0x160($s1)
                sltiu   $v0, 4
                bnez    $v0, loc_1CE60
                nop
                lbu     $v0, 0x15C($s1)
                bnez    $v0, loc_1CE60
                nop
                lw      $v0, 0xC0($s2)
                beqz    $v0, loc_1CE60
                nop
                lw      $v0, 0xAC($v0)
                beqz    $v0, loc_1CE60
                li      $v1, 0xFFFFFF00
                lw      $v0, 0x15C($s1)
                and     $v0, $v1
                bnez    $v0, loc_1DA80
                sw      $zero, 0x160($s1)
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_1CD38
                li      $v0, 4
                lw      $v1, 0x68($s2)
                lw      $a1, 0($s2)
                sw      $v0, 0xB0+var_A0($sp)
                sw      $v1, 0xB0+var_98($sp)
                sw      $s2, 0xB0+var_9C($sp)
                addiu   $a3, $s1, 0x15C
                move    $a0, $zero
                jalr    $t9
                li      $a2, 0x16
                lw      $gp, 0xB0+var_90($sp)

loc_1CD38:                               # CODE XREF: ssl3_read_bytes+1CC↑j
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                move    $s0, $v0
                li      $v0, 3
                bne     $s0, $v0, loc_1D300
                lw      $gp, 0xB0+var_90($sp)
                lw      $s1, 0x58($s2)
                lw      $v0, 0($s1)
                andi    $v0, 1
                bnez    $v0, loc_1CC44
                li      $v0, 1
                lw      $v0, 0x194($s1)
                bnez    $v0, loc_1CC44
                li      $v0, 1
                la      $t9, ssl3_renegotiate
                jalr    $t9 ; ssl3_renegotiate
                move    $a0, $s2
                lw      $gp, 0xB0+var_90($sp)
                la      $t9, ssl3_renegotiate_check
                jalr    $t9 ; ssl3_renegotiate_check
                move    $a0, $s2
                beqz    $v0, loc_1D300
                lw      $gp, 0xB0+var_90($sp)
                lw      $t9, 0x20($s2)
                jalr    $t9
                move    $a0, $s2
                move    $a2, $v0
                bltz    $v0, loc_1CBD8
                lw      $gp, 0xB0+var_90($sp)
                beqz    $v0, loc_1CE34
                la      $t9, ERR_put_error
                lw      $v0, 0xFC($s2)
                andi    $v0, 4
                bnez    $v0, loc_1D300
                nop
                lw      $s1, 0x58($s2)
                lw      $v0, 0xF8($s1)
                bnez    $v0, loc_1CC44
                li      $v0, 1
                la      $t9, SSL_get_rbio
                b       loc_1D444
                sw      $s0, 0x18($s2)
 # ---------------------------------------------------------------------------

loc_1CDE4:                               # CODE XREF: ssl3_read_bytes:loc_1CC0C↑j
                li      $v0, 0x17
                bne     $t9, $v0, loc_1CBB8
                la      $t9, ERR_put_error
                lw      $v0, 0x1C($s2)
                bnez    $v0, loc_1CC34
                addiu   $t9, $sp, 0xB0+var_78
                la      $t9, SSL_state

loc_1CE00:                               # CODE XREF: ssl3_read_bytes+EC↑j
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x3000
                beqz    $v0, loc_1CC30
                lw      $gp, 0xB0+var_90($sp)
                lw      $t9, 0x20($s2)
                jalr    $t9
                move    $a0, $s2
                move    $a2, $v0
                bltz    $v0, loc_1CBD8
                lw      $gp, 0xB0+var_90($sp)
                bnez    $v0, loc_1CC30
                la      $t9, ERR_put_error

loc_1CE34:                               # CODE XREF: ssl3_read_bytes+274↑j
                                         # ssl3_read_bytes+8D4↓j
                li      $a0, 0x14
                li      $a1, 0x94
                li      $a2, 0xE5
                b       loc_1CBC8
                sw      $zero, 0xB0+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1CE48:                               # CODE XREF: ssl3_read_bytes+178↑j
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                li      $v1, 3
                beq     $v0, $v1, loc_1D5FC
                lw      $gp, 0xB0+var_90($sp)
                lw      $s1, 0x58($s2)

loc_1CE60:                               # CODE XREF: ssl3_read_bytes+18C↑j
                                         # ssl3_read_bytes+198↑j ...
                lw      $v0, 0x158($s1)
                sltiu   $v0, 2
                bnez    $v0, loc_1D3AC
                nop
                lw      $t9, 0x64($s2)
                sw      $zero, 0x158($s1)
                lbu     $s0, 0x154($s1)
                beqz    $t9, loc_1CEB0
                lbu     $s3, 0x155($s1)
                lw      $v1, 0x68($s2)
                lw      $a1, 0($s2)
                li      $v0, 2
                sw      $v0, 0xB0+var_A0($sp)
                sw      $v1, 0xB0+var_98($sp)
                sw      $s2, 0xB0+var_9C($sp)
                addiu   $a3, $s1, 0x154
                move    $a0, $zero
                jalr    $t9
                li      $a2, 0x15
                lw      $gp, 0xB0+var_90($sp)

loc_1CEB0:                               # CODE XREF: ssl3_read_bytes+340↑j
                lw      $t9, 0xD0($s2)
                beqz    $t9, loc_1D484
                nop

loc_1CEBC:                               # CODE XREF: ssl3_read_bytes+950↓j
                sw      $t9, 0xB0+var_30($sp)
                sll     $a2, $s0, 8

loc_1CEC4:                               # CODE XREF: ssl3_read_bytes+958↓j
                lw      $t9, 0xB0+var_30($sp)
                or      $a2, $s3
                move    $a0, $s2
                jalr    $t9
                li      $a1, 0x4004
                lw      $gp, 0xB0+var_90($sp)
                li      $v1, 1

loc_1CEE0:                               # CODE XREF: ssl3_read_bytes+960↓j
                bne     $s0, $v1, loc_1D890
                li      $v0, 2
                lw      $s1, 0x58($s2)
                beqz    $s3, loc_1D8D0
                sw      $s3, 0x184($s1)
                li      $v0, 0x64  # 'd'
                bne     $s3, $v0, loc_1CC44
                li      $v0, 1
                la      $t9, ERR_put_error
                li      $a2, 0x153
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x94
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB0+var_90($sp)
                li      $a2, 0x28  # '('

loc_1CF24:                               # CODE XREF: ssl3_read_bytes+C24↓j
                                         # ssl3_read_bytes+D78↓j ...
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CBD8
                li      $a2, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1CF40:                               # CODE XREF: ssl3_read_bytes+110↑j
                                         # ssl3_read_bytes+120↑j
                lw      $v0, 0xF8($s2)
                andi    $v0, 0x20
                beqz    $v0, loc_1D260
                lw      $s6, 0xC0($s2)
                lw      $v0, 0xE8($s1)
                beqz    $v0, loc_1D878
                li      $v0, 0x4000

loc_1CF5C:                               # CODE XREF: ssl3_read_bytes:loc_1D260↓j
                addiu   $fp, $v0, 0x4000
                sw      $zero, 0xB0+var_38($sp)
                sw      $zero, 0xB0+var_34($sp)
                addiu   $s5, $v0, 0x4540
                addiu   $s7, $v0, 0x4400

loc_1CF70:                               # CODE XREF: ssl3_read_bytes+5D4↓j
                lw      $v0, 0x38($s2)
                li      $s0, 0xF1
                bne     $v0, $s0, loc_1CF90
                nop
                lw      $v1, 0x50($s2)
                sltiu   $v0, $v1, 5
                beqz    $v0, loc_1D038
                addiu   $v0, $v1, -5

loc_1CF90:                               # CODE XREF: ssl3_read_bytes+43C↑j
                lw      $v0, 0x58($s2)
                la      $t9, ssl3_read_n
                lw      $a2, 0xF0($v0)
                move    $a0, $s2
                li      $a1, 5
                jalr    $t9 ; ssl3_read_n
                move    $a3, $zero
                blez    $v0, loc_1D1EC
                lw      $gp, 0xB0+var_90($sp)
                lw      $a0, 0x4C($s2)
                sw      $s0, 0x38($s2)
                lbu     $v1, 0($a0)
                sw      $v1, 0x10C($s1)
                lbu     $v0, 3($a0)
                lbu     $a1, 4($a0)
                lbu     $v1, 1($a0)
                sll     $v0, 8
                or      $a2, $a1, $v0
                lbu     $v0, 2($a0)
                sll     $v1, 8
                sw      $a2, 0x110($s1)
                or      $v0, $v1
                lw      $a0, 0x104($s2)
                sll     $s0, $v0, 16
                bnez    $a0, loc_1D004
                sra     $s0, 16
                lw      $v0, 0($s2)
                bne     $s0, $v0, loc_1D710
                la      $t9, ERR_put_error

loc_1D004:                               # CODE XREF: ssl3_read_bytes+4B4↑j
                sra     $v1, $s0, 8
                li      $v0, 3
                bne     $v1, $v0, loc_1D58C
                la      $t9, ERR_put_error
                lw      $v1, 0x58($s2)
                lw      $v0, 0xF0($v1)
                addiu   $v0, -5
                sltu    $v0, $a2
                bnez    $v0, loc_1D5C4
                li      $a0, 0x14
                lw      $v1, 0x50($s2)
                lw      $a2, 0x110($s1)
                addiu   $v0, $v1, -5

loc_1D038:                               # CODE XREF: ssl3_read_bytes+44C↑j
                sltu    $v0, $a2
                bnez    $v0, loc_1D230
                la      $t9, ssl3_read_n

loc_1D044:                               # CODE XREF: ssl3_read_bytes+704↓j
                li      $v0, 0xF0
                sw      $v0, 0x38($s2)
                lw      $v1, 0x4C($s2)
                lw      $v0, 0x110($s1)
                addiu   $v1, 5
                sltu    $v0, $s5, $v0
                bnez    $v0, loc_1D52C
                sw      $v1, 0x11C($s1)
                lw      $v0, 8($s2)
                sw      $v1, 0x118($s1)
                lw      $v1, 0x64($v0)
                move    $a0, $s2
                lw      $t9, 0($v1)
                jalr    $t9
                move    $a1, $zero
                blez    $v0, loc_1D250
                lw      $gp, 0xB0+var_90($sp)
                move    $s4, $zero

loc_1D08C:                               # CODE XREF: ssl3_read_bytes+71C↓j
                beqz    $s6, loc_1D228
                li      $v0, 1
                lw      $v0, 0x80($s2)
                beqz    $v0, loc_1D224
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x84($s2)
                beqz    $v0, loc_1D224
                lw      $gp, 0xB0+var_90($sp)
                lw      $v0, 0xB0+var_38($sp)
                beqz    $v0, loc_1D120
                la      $t9, EVP_MD_CTX_md

loc_1D0BC:                               # CODE XREF: ssl3_read_bytes+66C↓j
                                         # ssl3_read_bytes:loc_1D228↓j
                bnez    $s4, loc_1D1B4
                la      $t9, ERR_put_error
                lw      $v0, 0x88($s2)
                beqz    $v0, loc_1D0F4
                nop
                lw      $v0, 0x110($s1)
                sltu    $v0, $s7, $v0
                bnez    $v0, loc_1D5B4
                li      $a0, 0x14
                la      $t9, ssl3_do_uncompress
                jalr    $t9 ; ssl3_do_uncompress
                move    $a0, $s2
                beqz    $v0, loc_1D5D4
                lw      $gp, 0xB0+var_90($sp)

loc_1D0F4:                               # CODE XREF: ssl3_read_bytes+58C↑j
                lw      $v0, 0x110($s1)
                sltu    $v0, $fp, $v0
                bnez    $v0, loc_1D554
                la      $t9, ERR_put_error
                sw      $zero, 0x114($s1)
                sw      $zero, 0x50($s2)
                lw      $a2, 0x110($s1)
                beqz    $a2, loc_1CF70
                nop
                b       loc_1CC64
                lw      $s1, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_1D120:                               # CODE XREF: ssl3_read_bytes+578↑j
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x84($s2)
                lw      $gp, 0xB0+var_90($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                move    $s0, $v0
                bltz    $v0, loc_1D688
                lw      $gp, 0xB0+var_90($sp)
                lw      $a1, 0x110($s1)

loc_1D148:                               # CODE XREF: ssl3_read_bytes+B68↓j
                addu    $v0, $s7, $s0
                sltu    $v0, $a1
                li      $v1, 1
                sltu    $a0, $a1, $s0
                beqz    $a0, loc_1D268
                movn    $s4, $v1, $v0
                sw      $zero, 0x110($s1)
                li      $s4, 1

loc_1D168:                               # CODE XREF: ssl3_read_bytes+73C↓j
                lw      $v0, 8($s2)
                lw      $a1, 0xB0+var_2C($sp)
                lw      $v1, 0x64($v0)
                move    $a0, $s2
                lw      $t9, 4($v1)
                jalr    $t9
                move    $a2, $zero
                bltz    $v0, loc_1D1B0
                lw      $gp, 0xB0+var_90($sp)
                lw      $v1, 0xB0+var_34($sp)
                beqz    $v1, loc_1D1B0
                la      $t9, memcmp
                lw      $a0, 0xB0+var_2C($sp)
                move    $a2, $s0
                jalr    $t9 ; memcmp
                move    $a1, $v1
                beqz    $v0, loc_1D0BC
                lw      $gp, 0xB0+var_90($sp)

loc_1D1B0:                               # CODE XREF: ssl3_read_bytes+648↑j
                                         # ssl3_read_bytes+654↑j
                la      $t9, ERR_put_error

loc_1D1B4:                               # CODE XREF: ssl3_read_bytes:loc_1D0BC↑j
                li      $a2, 0x119
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x8F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB0+var_90($sp)
                li      $a2, 0x14

loc_1D1D4:                               # CODE XREF: ssl3_read_bytes+A10↓j
                                         # ssl3_read_bytes+AB8↓j ...
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0xB0+var_90($sp)
                li      $v0, 0xFFFFFFFF

loc_1D1EC:                               # CODE XREF: ssl3_read_bytes+470↑j
                move    $a2, $v0

loc_1D1F0:                               # CODE XREF: ssl3_read_bytes+70C↓j
                                         # ssl3_read_bytes+A70↓j ...
                lw      $ra, 0xB0+var_4($sp)
                lw      $fp, 0xB0+var_8($sp)
                lw      $s7, 0xB0+var_C($sp)
                lw      $s6, 0xB0+var_10($sp)
                lw      $s5, 0xB0+var_14($sp)
                lw      $s4, 0xB0+var_18($sp)
                lw      $s3, 0xB0+var_1C($sp)
                lw      $s2, 0xB0+var_20($sp)
                lw      $s1, 0xB0+var_24($sp)
                lw      $s0, 0xB0+var_28($sp)
                move    $v0, $a2
                jr      $ra
                addiu   $sp, 0xB0
 # ---------------------------------------------------------------------------

loc_1D224:                               # CODE XREF: ssl3_read_bytes+55C↑j
                                         # ssl3_read_bytes+56C↑j
                li      $v0, 1

loc_1D228:                               # CODE XREF: ssl3_read_bytes:loc_1D08C↑j
                b       loc_1D0BC
                sw      $v0, 0xB0+var_38($sp)
 # ---------------------------------------------------------------------------

loc_1D230:                               # CODE XREF: ssl3_read_bytes+500↑j
                move    $a1, $a2
                move    $a0, $s2
                jalr    $t9 ; ssl3_read_n
                li      $a3, 1
                bgtz    $v0, loc_1D044
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1D1F0
                move    $a2, $v0
 # ---------------------------------------------------------------------------

loc_1D250:                               # CODE XREF: ssl3_read_bytes+544↑j
                beqz    $v0, loc_1D86C
                li      $s4, 1
                b       loc_1D08C
                nop
 # ---------------------------------------------------------------------------

loc_1D260:                               # CODE XREF: ssl3_read_bytes+40C↑j
                b       loc_1CF5C
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_1D268:                               # CODE XREF: ssl3_read_bytes+61C↑j
                lw      $v0, 0x118($s1)
                subu    $a2, $a1, $s0
                addu    $v0, $a2, $v0
                sw      $v0, 0xB0+var_34($sp)
                b       loc_1D168
                sw      $a2, 0x110($s1)
 # ---------------------------------------------------------------------------

loc_1D280:                               # CODE XREF: ssl3_read_bytes+15C↑j
                addiu   $t2, $s1, 0x160
                addiu   $a3, $s1, 0x15C
                li      $t4, 4

loc_1D28C:                               # CODE XREF: ssl3_read_bytes+868↓j
                lw      $t0, 0($t2)
                move    $t3, $a2
                subu    $v1, $t4, $t0
                sltu    $v0, $a2, $v1
                movz    $t3, $v1, $v0
                beqz    $t3, loc_1D2F8
                sltu    $v0, $t0, $t4
                b       loc_1D2B4
                move    $t1, $zero
 # ---------------------------------------------------------------------------

loc_1D2B0:                               # CODE XREF: ssl3_read_bytes+7AC↓j
                lw      $t0, 0($t2)

loc_1D2B4:                               # CODE XREF: ssl3_read_bytes+76C↑j
                lw      $a1, 0x114($s3)
                lw      $v0, 0x118($s3)
                addiu   $a2, $t0, 1
                addu    $v0, $a1
                lbu     $a0, 0($v0)
                addu    $v1, $t0, $a3
                sb      $a0, 0($v1)
                sw      $a2, 0($t2)
                lw      $v0, 0x110($s3)
                addiu   $a1, 1
                addiu   $a2, $v0, -1
                addiu   $t1, 1
                sw      $a1, 0x114($s3)
                bne     $t1, $t3, loc_1D2B0
                sw      $a2, 0x110($s3)
                lw      $t0, 0($t2)
                sltu    $v0, $t0, $t4

loc_1D2F8:                               # CODE XREF: ssl3_read_bytes+764↑j
                beqz    $v0, loc_1CCB0
                nop

loc_1D300:                               # CODE XREF: ssl3_read_bytes+210↑j
                                         # ssl3_read_bytes+254↑j ...
                b       loc_1CC40
                lw      $s1, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_1D308:                               # CODE XREF: ssl3_read_bytes+E0↑j
                lw      $s1, 0x58($s2)
                lw      $v0, 0x160($s1)
                beqz    $v0, loc_1CC24
                move    $a1, $s1
                lw      $t9, 0xB0+arg_C($sp)
                blez    $t9, loc_1D998
                addiu   $a3, $s1, 0x15C
                lw      $a0, 0xB0+arg_8($sp)
                b       loc_1D338
                move    $a2, $zero
 # ---------------------------------------------------------------------------

loc_1D330:                               # CODE XREF: ssl3_read_bytes+820↓j
                beqz    $v0, loc_1CBDC
                lw      $ra, 0xB0+var_4($sp)

loc_1D338:                               # CODE XREF: ssl3_read_bytes+7EC↑j
                lbu     $v0, 0($a3)
                addiu   $a2, 1
                sb      $v0, 0($a0)
                lw      $v1, 0x58($s2)
                addiu   $a0, 1
                lw      $v0, 0x160($v1)
                addiu   $v0, -1
                sw      $v0, 0x160($v1)
                lw      $a1, 0xB0+arg_C($sp)
                bne     $a2, $a1, loc_1D330
                addiu   $a3, 1
                beqz    $v0, loc_1CBD8
                move    $a1, $v1

loc_1D36C:                               # CODE XREF: ssl3_read_bytes:loc_1D998↓j
                move    $a0, $zero

loc_1D370:                               # CODE XREF: ssl3_read_bytes+850↓j
                lbu     $v1, 0($a3)
                addu    $v0, $a0, $a1
                sb      $v1, 0x15C($v0)
                lw      $a1, 0x58($s2)
                addiu   $a0, 1
                lw      $v0, 0x160($a1)
                sltu    $v0, $a0, $v0
                bnez    $v0, loc_1D370
                addiu   $a3, 1
                b       loc_1CBDC
                lw      $ra, 0xB0+var_4($sp)
 # ---------------------------------------------------------------------------

loc_1D39C:                               # CODE XREF: ssl3_read_bytes+164↑j
                addiu   $t2, $s1, 0x158
                addiu   $a3, $s1, 0x154
                b       loc_1D28C
                li      $t4, 2
 # ---------------------------------------------------------------------------

loc_1D3AC:                               # CODE XREF: ssl3_read_bytes+32C↑j
                lw      $v0, 0x30($s2)
                andi    $v0, 1
                bnez    $v0, loc_1DA58
                li      $v0, 0x14
                lw      $v1, 0x10C($s3)
                beq     $v1, $v0, loc_1D4A4
                li      $v0, 1
                lw      $v0, 0x160($s1)
                sltiu   $v0, 4
                bnez    $v0, loc_1D568
                slti    $v0, $v1, 0x14
                lw      $v0, 0x1C($s2)
                bnez    $v0, loc_1D568
                slti    $v0, $v1, 0x14
                lw      $v0, 0x34($s2)
                li      $v1, 3
                andi    $v0, 0xFFF
                beq     $v0, $v1, loc_1D968
                nop

loc_1D3F8:                               # CODE XREF: ssl3_read_bytes+E34↓j
                                         # ssl3_read_bytes+E54↓j
                lw      $t9, 0x20($s2)
                jalr    $t9
                move    $a0, $s2
                move    $a2, $v0
                bltz    $v0, loc_1CBD8
                lw      $gp, 0xB0+var_90($sp)
                beqz    $v0, loc_1CE34
                la      $t9, ERR_put_error
                lw      $v0, 0xFC($s2)
                andi    $v0, 4
                bnez    $v0, loc_1D300
                nop
                lw      $s1, 0x58($s2)
                lw      $v0, 0xF8($s1)
                bnez    $v0, loc_1CC44
                li      $v0, 1
                li      $v0, 3
                la      $t9, SSL_get_rbio
                sw      $v0, 0x18($s2)

loc_1D444:                               # CODE XREF: ssl3_read_bytes+2A0↑j
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s2
                lw      $gp, 0xB0+var_90($sp)
                la      $t9, BIO_clear_flags
                move    $a0, $v0
                li      $a1, 0xF
                jalr    $t9 ; BIO_clear_flags
                move    $s0, $v0
                lw      $gp, 0xB0+var_90($sp)
                la      $t9, BIO_set_flags
                move    $a0, $s0

loc_1D470:                               # CODE XREF: ssl3_read_bytes+DF8↓j
                jalr    $t9 ; BIO_set_flags
                li      $a1, 9
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CBD8
                li      $a2, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1D484:                               # CODE XREF: ssl3_read_bytes+378↑j
                lw      $v0, 0xDC($s2)
                lw      $t9, 0x9C($v0)
                bnez    $t9, loc_1CEBC
                lw      $v0, 0xB0+var_30($sp)
                bnez    $v0, loc_1CEC4
                sll     $a2, $s0, 8
                b       loc_1CEE0
                li      $v1, 1
 # ---------------------------------------------------------------------------

loc_1D4A4:                               # CODE XREF: ssl3_read_bytes+884↑j
                lw      $v1, 0x110($s3)
                bne     $v1, $v0, loc_1DA6C
                la      $t9, ERR_put_error
                lw      $v0, 0x114($s3)
                bnez    $v0, loc_1DA70
                li      $a0, 0x14
                lw      $a3, 0x118($s3)
                lbu     $s0, 0($a3)
                bne     $s0, $v1, loc_1DA74
                li      $a1, 0x94
                lw      $v0, 0x344($s1)
                beqz    $v0, loc_1DAA8
                li      $a2, 0x85
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_1D50C
                sw      $zero, 0x110($s3)
                lw      $v0, 0x68($s2)
                lw      $a1, 0($s2)
                move    $a0, $zero
                sw      $s0, 0xB0+var_A0($sp)
                sw      $v0, 0xB0+var_98($sp)
                sw      $s2, 0xB0+var_9C($sp)
                jalr    $t9
                li      $a2, 0x14
                lw      $gp, 0xB0+var_90($sp)
                lw      $s1, 0x58($s2)

loc_1D50C:                               # CODE XREF: ssl3_read_bytes+9A0↑j
                la      $t9, ssl3_do_change_cipher_spec
                sw      $s0, 0x180($s1)
                jalr    $t9 ; ssl3_do_change_cipher_spec
                move    $a0, $s2
                bnez    $v0, loc_1D300
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CBD8
                li      $a2, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1D52C:                               # CODE XREF: ssl3_read_bytes+520↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x8F
                li      $a2, 0x96

loc_1D540:                               # CODE XREF: ssl3_read_bytes+A24↓j
                                         # ssl3_read_bytes+A80↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1D1D4
                li      $a2, 0x16
 # ---------------------------------------------------------------------------

loc_1D554:                               # CODE XREF: ssl3_read_bytes+5C0↑j
                li      $a0, 0x14
                li      $a1, 0x8F
                li      $a2, 0x92
                b       loc_1D540
                sw      $zero, 0xB0+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1D568:                               # CODE XREF: ssl3_read_bytes+894↑j
                                         # ssl3_read_bytes+8A0↑j
                beqz    $v0, loc_1D6AC
                slti    $v0, $v1, 0x17

loc_1D570:                               # CODE XREF: ssl3_read_bytes+B7C↓j
                lw      $v0, 0($s2)
                addiu   $v0, -0x301
                sltiu   $v0, 2
                beqz    $v0, loc_1D78C
                la      $t9, ERR_put_error
                b       loc_1CC40
                sw      $zero, 0x110($s3)
 # ---------------------------------------------------------------------------

loc_1D58C:                               # CODE XREF: ssl3_read_bytes+4D0↑j
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x8F
                li      $a2, 0x10B

loc_1D59C:                               # CODE XREF: ssl3_read_bytes+D4C↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                li      $v0, 0xFFFFFFFF
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1D1F0
                move    $a2, $v0
 # ---------------------------------------------------------------------------

loc_1D5B4:                               # CODE XREF: ssl3_read_bytes+59C↑j
                li      $a1, 0x8F
                li      $a2, 0x8C
                b       loc_1D540
                sw      $zero, 0xB0+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1D5C4:                               # CODE XREF: ssl3_read_bytes+4E8↑j
                li      $a1, 0x8F
                li      $a2, 0xC6
                b       loc_1D540
                sw      $zero, 0xB0+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1D5D4:                               # CODE XREF: ssl3_read_bytes+5B0↑j
                la      $t9, ERR_put_error
                li      $a2, 0x6B  # 'k'
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x8F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1D1D4
                li      $a2, 0x1E
 # ---------------------------------------------------------------------------

loc_1D5FC:                               # CODE XREF: ssl3_read_bytes+318↑j
                lw      $s1, 0x58($s2)
                lw      $v0, 0x410($s1)
                bnez    $v0, loc_1CE60
                nop
                lw      $v0, 0($s2)
                slti    $v0, 0x301
                bnez    $v0, loc_1CE60
                nop
                lw      $v0, 0x160($s1)
                sltiu   $v0, 4
                bnez    $v0, loc_1CE60
                li      $v0, 1
                lbu     $v1, 0x15C($s1)
                bne     $v1, $v0, loc_1CE60
                nop
                lw      $v0, 0xC0($s2)
                beqz    $v0, loc_1CE60
                nop
                lw      $v0, 0xAC($v0)
                beqz    $v0, loc_1CE60
                nop
                lw      $v0, 0xDC($s2)
                lui     $a0, 4
                lw      $v1, 0xA4($v0)
                and     $v1, $a0
                bnez    $v1, loc_1CE60
                la      $t9, ssl3_send_alert
                sw      $zero, 0x110($s3)
                move    $a0, $s2
                li      $a1, 1
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x64  # 'd'
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CC40
                lw      $s1, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_1D688:                               # CODE XREF: ssl3_read_bytes+600↑j
                la      $v1, loc_40000
                la      $v0, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, $v1, (aS3PktC - 0x40000)  # "s3_pkt.c"
                li      $a1, 0x1B3
                jalr    $t9 ; OpenSSLDie
                addiu   $a2, $v0, (aMacSize0 - 0x40000)  # "mac_size >= 0"
                b       loc_1D148
                lw      $a1, 0x110($s1)
 # ---------------------------------------------------------------------------

loc_1D6AC:                               # CODE XREF: ssl3_read_bytes:loc_1D568↑j
                bnez    $v0, loc_1D744
                la      $t9, ERR_put_error
                li      $v0, 0x17
                bne     $v1, $v0, loc_1D570
                nop
                lw      $v0, 0x1A0($s1)
                beqz    $v0, loc_1D790
                li      $a0, 0x14
                lw      $v0, 0x198($s1)
                beqz    $v0, loc_1D794
                li      $a1, 0x94
                lw      $v1, 0x34($s2)
                andi    $v0, $v1, 0x1000
                beqz    $v0, loc_1D768
                andi    $v0, $v1, 0x2000
                slti    $v0, $v1, 0x1110
                bnez    $v0, loc_1D768
                andi    $v0, $v1, 0x2000
                slti    $v0, $v1, 0x1121
                beqz    $v0, loc_1D768
                andi    $v0, $v1, 0x2000
                li      $v0, 2

loc_1D704:                               # CODE XREF: ssl3_read_bytes+C44↓j
                li      $a2, 0xFFFFFFFF
                b       loc_1CBD8
                sw      $v0, 0x1A0($s1)
 # ---------------------------------------------------------------------------

loc_1D710:                               # CODE XREF: ssl3_read_bytes+4C0↑j
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x8F
                li      $a2, 0x10B
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $v0, 0($s2)
                andi    $v1, $s0, 0xFF00
                andi    $v0, 0xFF00
                beq     $v0, $v1, loc_1D93C
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1D1D4
                li      $a2, 0x46  # 'F'
 # ---------------------------------------------------------------------------

loc_1D744:                               # CODE XREF: ssl3_read_bytes:loc_1D6AC↑j
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x94
                li      $a2, 0x44  # 'D'

loc_1D754:                               # CODE XREF: ssl3_read_bytes+C5C↓j
                                         # ssl3_read_bytes+D8C↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CF24
                li      $a2, 0xA
 # ---------------------------------------------------------------------------

loc_1D768:                               # CODE XREF: ssl3_read_bytes+BA4↑j
                                         # ssl3_read_bytes+BB0↑j ...
                beqz    $v0, loc_1D78C
                la      $t9, ERR_put_error
                slti    $v0, $v1, 0x2121
                beqz    $v0, loc_1D790
                li      $a0, 0x14
                slti    $v0, $v1, 0x2110
                beqz    $v0, loc_1D704
                li      $v0, 2
                la      $t9, ERR_put_error

loc_1D78C:                               # CODE XREF: ssl3_read_bytes+A40↑j
                                         # ssl3_read_bytes:loc_1D768↑j
                li      $a0, 0x14

loc_1D790:                               # CODE XREF: ssl3_read_bytes+B88↑j
                                         # ssl3_read_bytes+C38↑j
                li      $a1, 0x94

loc_1D794:                               # CODE XREF: ssl3_read_bytes+B94↑j
                li      $a2, 0xF5
                b       loc_1D754
                sw      $zero, 0xB0+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1D7A0:                               # CODE XREF: ssl3_read_bytes+148↑j
                li      $v0, 1
                move    $a2, $zero
                sw      $zero, 0x110($s3)
                b       loc_1CBD8
                sw      $v0, 0x18($s2)
 # ---------------------------------------------------------------------------

loc_1D7B4:                               # CODE XREF: ssl3_read_bytes+154↑j
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x3000
                beqz    $v0, loc_1D7D8
                lw      $gp, 0xB0+var_90($sp)
                li      $v0, 0x17
                beq     $s0, $v0, loc_1D9A8
                nop

loc_1D7D8:                               # CODE XREF: ssl3_read_bytes+C88↑j
                                         # ssl3_read_bytes+E70↓j
                lw      $t9, 0xB0+arg_C($sp)
                blez    $t9, loc_1D9A0
                move    $s0, $t9
                lw      $v1, 0x110($s3)
                lw      $a0, 0x118($s3)
                lw      $a1, 0x114($s3)
                sltu    $v0, $v1, $t9
                movn    $s0, $v1, $v0
                la      $t9, memcpy
                addu    $a1, $a0, $a1
                lw      $a0, 0xB0+arg_8($sp)
                jalr    $t9 ; memcpy
                move    $a2, $s0
                lw      $t9, 0xB0+arg_10($sp)
                bnez    $t9, loc_1D84C
                lw      $gp, 0xB0+var_90($sp)
                lw      $v1, 0x110($s3)
                lw      $v0, 0x114($s3)
                subu    $a2, $v1, $s0
                addu    $v0, $s0
                sw      $v0, 0x114($s3)
                bnez    $a2, loc_1D84C
                sw      $a2, 0x110($s3)
                lw      $v1, 0xFC($s2)
                li      $v0, 0xF0
                andi    $v1, 0x10
                sw      $v0, 0x38($s2)
                bnez    $v1, loc_1D854
                sw      $zero, 0x114($s3)

loc_1D84C:                               # CODE XREF: ssl3_read_bytes+CD4↑j
                                         # ssl3_read_bytes+CF0↑j
                b       loc_1CBD8
                move    $a2, $s0
 # ---------------------------------------------------------------------------

loc_1D854:                               # CODE XREF: ssl3_read_bytes+D08↑j
                la      $t9, ssl3_release_read_buffer
                jalr    $t9 ; ssl3_release_read_buffer
                move    $a0, $s2
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CBD8
                move    $a2, $s0
 # ---------------------------------------------------------------------------

loc_1D86C:                               # CODE XREF: ssl3_read_bytes:loc_1D250↑j
                li      $v0, 0xFFFFFFFF
                b       loc_1D1F0
                move    $a2, $v0
 # ---------------------------------------------------------------------------

loc_1D878:                               # CODE XREF: ssl3_read_bytes+418↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x8F
                li      $a2, 0x44  # 'D'
                b       loc_1D59C
                sw      $zero, 0xB0+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1D890:                               # CODE XREF: ssl3_read_bytes:loc_1CEE0↑j
                beq     $s0, $v0, loc_1D9C8
                la      $t9, ERR_put_error
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x94
                li      $a2, 0xF6

loc_1D8A8:                               # CODE XREF: ssl3_read_bytes+F3C↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CF24
                li      $a2, 0x2F  # '/'
 # ---------------------------------------------------------------------------

loc_1D8BC:                               # CODE XREF: ssl3_read_bytes+138↑j
                li      $a0, 0x14
                li      $a1, 0x94
                li      $a2, 0x91
                b       loc_1D754
                sw      $zero, 0xB0+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1D8D0:                               # CODE XREF: ssl3_read_bytes+3B0↑j
                lw      $v0, 0x30($s2)
                move    $a2, $zero
                ori     $v0, 2
                b       loc_1CBD8
                sw      $v0, 0x30($s2)
 # ---------------------------------------------------------------------------

loc_1D8E4:                               # CODE XREF: ssl3_read_bytes+16C↑j
                jalr    $t9 ; tls1_process_heartbeat
                move    $a0, $s2
                lw      $gp, 0xB0+var_90($sp)
                li      $v0, 3
                la      $t9, SSL_get_rbio
                sw      $zero, 0x110($s3)
                move    $a0, $s2
                jalr    $t9 ; SSL_get_rbio
                sw      $v0, 0x18($s2)
                lw      $gp, 0xB0+var_90($sp)
                la      $t9, BIO_clear_flags
                move    $a0, $v0
                jalr    $t9 ; BIO_clear_flags
                li      $a1, 0xF
                lw      $gp, 0xB0+var_90($sp)
                la      $t9, SSL_get_rbio
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s2
                lw      $gp, 0xB0+var_90($sp)
                la      $t9, BIO_set_flags
                b       loc_1D470
                move    $a0, $v0
 # ---------------------------------------------------------------------------

loc_1D93C:                               # CODE XREF: ssl3_read_bytes+BF8↑j
                andi    $v0, $s0, 0xFFFF
                li      $a2, 0x46  # 'F'
                b       loc_1D1D4
                sw      $v0, 0($s2)
 # ---------------------------------------------------------------------------

loc_1D94C:                               # CODE XREF: ssl3_read_bytes+50↑j
                la      $t9, ssl3_setup_read_buffer
                jalr    $t9 ; ssl3_setup_read_buffer
                nop
                bnez    $v0, loc_1CB94
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CBD8
                li      $a2, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1D968:                               # CODE XREF: ssl3_read_bytes+8B4↑j
                lw      $v0, 0($s1)
                andi    $v0, 1
                bnez    $v0, loc_1D3F8
                li      $v0, 0x2000
                lw      $a1, 0x24($s2)
                li      $v1, 0x1000
                li      $a0, 1
                movz    $v0, $v1, $a1
                sw      $v0, 0x34($s2)
                sw      $a0, 0x28($s2)
                b       loc_1D3F8
                sw      $a0, 0x178($s2)
 # ---------------------------------------------------------------------------

loc_1D998:                               # CODE XREF: ssl3_read_bytes+7E0↑j
                b       loc_1D36C
                move    $a2, $zero
 # ---------------------------------------------------------------------------

loc_1D9A0:                               # CODE XREF: ssl3_read_bytes+CA0↑j
                b       loc_1CBD8
                move    $a2, $t9
 # ---------------------------------------------------------------------------

loc_1D9A8:                               # CODE XREF: ssl3_read_bytes+C94↑j
                lw      $v0, 0x80($s2)
                bnez    $v0, loc_1D7D8
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x94
                li      $a2, 0x64  # 'd'
                b       loc_1D754
                sw      $zero, 0xB0+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1D9C8:                               # CODE XREF: ssl3_read_bytes:loc_1D890↑j
                lw      $v0, 0x58($s2)
                sw      $v1, 0x18($s2)
                li      $a0, 0x14
                sw      $s3, 0x188($v0)
                li      $a1, 0x94
                addiu   $a2, $s3, 0x3E8
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0xB0+var_A0($sp)
                lw      $gp, 0xB0+var_90($sp)
                la      $a2, loc_40000
                la      $t9, BIO_snprintf
                addiu   $s0, $sp, 0xB0+var_88
                move    $a3, $s3
                addiu   $a2, (aD - 0x40000)  # "%d"
                move    $a0, $s0
                jalr    $t9 ; BIO_snprintf
                li      $a1, 0x10
                lw      $gp, 0xB0+var_90($sp)
                la      $a1, loc_40000
                la      $t9, ERR_add_error_data
                move    $a2, $s0
                addiu   $a1, (aSslAlertNumber - 0x40000)  # "SSL alert number "
                jalr    $t9 ; ERR_add_error_data
                li      $a0, 2
                lw      $gp, 0xB0+var_90($sp)
                lw      $v0, 0x30($s2)
                ori     $v0, 2
                la      $t9, SSL_CTX_remove_session
                lw      $a1, 0xC0($s2)
                lw      $a0, 0xDC($s2)
                jalr    $t9 ; SSL_CTX_remove_session
                sw      $v0, 0x30($s2)
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CBD8
                move    $a2, $zero
 # ---------------------------------------------------------------------------

loc_1DA58:                               # CODE XREF: ssl3_read_bytes+878↑j
                li      $v0, 1
                move    $a2, $zero
                sw      $v0, 0x18($s2)
                b       loc_1CBD8
                sw      $zero, 0x110($s3)
 # ---------------------------------------------------------------------------

loc_1DA6C:                               # CODE XREF: ssl3_read_bytes+96C↑j
                li      $a0, 0x14

loc_1DA70:                               # CODE XREF: ssl3_read_bytes+978↑j
                li      $a1, 0x94

loc_1DA74:                               # CODE XREF: ssl3_read_bytes+988↑j
                li      $a2, 0x67  # 'g'
                b       loc_1D8A8
                sw      $zero, 0xB0+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_1DA80:                               # CODE XREF: ssl3_read_bytes+1C0↑j
                la      $t9, ERR_put_error
                li      $a2, 0x69  # 'i'
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0x94
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB0+var_90($sp)
                b       loc_1CF24
                li      $a2, 0x32  # '2'
 # ---------------------------------------------------------------------------

loc_1DAA8:                               # CODE XREF: ssl3_read_bytes+994↑j
                b       loc_1D754
                sw      $zero, 0xB0+var_A0($sp)
 # End of function ssl3_read_bytes


 # =============== S U B R O U T I N E =======================================


                .globl ssl_verify_alarm_type
ssl_verify_alarm_type:                   # CODE XREF: ssl3_get_client_certificate+4F0↑p
                                         # ssl3_get_server_certificate+5EC↑p
                                         # DATA XREF: ...
                la      $gp, (off_5A360+0x7FF0 - ssl_verify_alarm_type)
                addu    $gp, $t9
                sltiu   $v0, $a0, 0x33   # switch 51 cases
                bnez    $v0, loc_1DAD0

def_1DAE4:                               # jumptable 0001DAE4 default case
                la      $v1, loc_40000

locret_1DAC8:                            # CODE XREF: ssl_verify_alarm_type+34↓j
                                         # DATA XREF: .rodata:jpt_1DAE4↓o
                jr      $ra              # jumptable 0001DAE4 cases 0,1,29-32,34-49
                li      $v0, 0x2E  # '.'
 # ---------------------------------------------------------------------------

loc_1DAD0:                               # CODE XREF: ssl_verify_alarm_type+10↑j
                sll     $v0, $a0, 2
                addiu   $v1, (jpt_1DAE4 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

locret_1DAEC:                            # CODE XREF: ssl_verify_alarm_type+34↑j
                                         # DATA XREF: .rodata:jpt_1DAE4↓o
                jr      $ra              # jumptable 0001DAE4 cases 2,3,18-22,24,25,33
                li      $v0, 0x30  # '0'
 # ---------------------------------------------------------------------------

locret_1DAF4:                            # CODE XREF: ssl_verify_alarm_type+34↑j
                                         # DATA XREF: .rodata:jpt_1DAE4↓o
                jr      $ra              # jumptable 0001DAE4 case 17
                li      $v0, 0x50  # 'P'
 # ---------------------------------------------------------------------------

locret_1DAFC:                            # CODE XREF: ssl_verify_alarm_type+34↑j
                                         # DATA XREF: .rodata:jpt_1DAE4↓o
                jr      $ra              # jumptable 0001DAE4 case 23
                li      $v0, 0x2C  # ','
 # ---------------------------------------------------------------------------

locret_1DB04:                            # CODE XREF: ssl_verify_alarm_type+34↑j
                                         # DATA XREF: .rodata:jpt_1DAE4↓o
                jr      $ra              # jumptable 0001DAE4 case 26
                li      $v0, 0x2B  # '+'
 # ---------------------------------------------------------------------------

locret_1DB0C:                            # CODE XREF: ssl_verify_alarm_type+34↑j
                                         # DATA XREF: .rodata:jpt_1DAE4↓o
                jr      $ra              # jumptable 0001DAE4 case 50
                li      $v0, 0x28  # '('
 # ---------------------------------------------------------------------------

locret_1DB14:                            # CODE XREF: ssl_verify_alarm_type+34↑j
                                         # DATA XREF: .rodata:jpt_1DAE4↓o
                jr      $ra              # jumptable 0001DAE4 cases 4-6,9,11,13-16,27,28
                li      $v0, 0x2A  # '*'
 # ---------------------------------------------------------------------------

locret_1DB1C:                            # CODE XREF: ssl_verify_alarm_type+34↑j
                                         # DATA XREF: .rodata:jpt_1DAE4↓o
                jr      $ra              # jumptable 0001DAE4 cases 7,8
                li      $v0, 0x33  # '3'
 # ---------------------------------------------------------------------------

locret_1DB24:                            # CODE XREF: ssl_verify_alarm_type+34↑j
                                         # DATA XREF: .rodata:jpt_1DAE4↓o
                jr      $ra              # jumptable 0001DAE4 cases 10,12
                li      $v0, 0x2D  # '-'
 # End of function ssl_verify_alarm_type


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_release_write_buffer
ssl3_release_write_buffer:               # CODE XREF: ssl3_free+60↑p
                                         # ssl3_write_pending+1BC↑p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_release_write_buffer)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s4, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $v0, 0x58($a0)
                lw      $s1, 0xFC($v0)
                beqz    $s1, loc_1DC00
                move    $s4, $a0
                la      $s3, loc_40000
                lw      $s2, 0xDC($a0)
                la      $t9, CRYPTO_lock
                li      $a0, 9
                li      $a1, 0xC
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                li      $a3, 0x2C4
                jalr    $t9 ; CRYPTO_lock
                lw      $s0, 0x100($v0)
                lw      $a0, 0x150($s2)
                beqz    $a0, loc_1DBCC
                lw      $gp, 0x30+var_20($sp)
                lw      $v0, 0($a0)
                beq     $s0, $v0, loc_1DBAC
                nop
                bnez    $v0, loc_1DBD0
                la      $t9, CRYPTO_lock

loc_1DBAC:                               # CODE XREF: ssl3_release_write_buffer+70↑j
                lw      $v0, 0x14C($s2)
                lw      $v1, 4($a0)
                sltu    $v0, $v1, $v0
                beqz    $v0, loc_1DBD0
                la      $t9, CRYPTO_lock
                sltiu   $v0, $s0, 4
                beqz    $v0, loc_1DC24
                addiu   $v1, 1

loc_1DBCC:                               # CODE XREF: ssl3_release_write_buffer+64↑j
                la      $t9, CRYPTO_lock

loc_1DBD0:                               # CODE XREF: ssl3_release_write_buffer+78↑j
                                         # ssl3_release_write_buffer+8C↑j
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2D3
                lw      $gp, 0x30+var_20($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                lw      $gp, 0x30+var_20($sp)

loc_1DBF8:                               # CODE XREF: ssl3_release_write_buffer+120↓j
                lw      $v0, 0x58($s4)
                sw      $zero, 0xFC($v0)

loc_1DC00:                               # CODE XREF: ssl3_release_write_buffer+34↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s4, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_1DC24:                               # CODE XREF: ssl3_release_write_buffer+98↑j
                lw      $v0, 8($a0)
                sw      $v1, 4($a0)
                sw      $v0, 0($s1)
                sw      $s0, 0($a0)
                sw      $s1, 8($a0)
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2D3
                b       loc_1DBF8
                lw      $gp, 0x30+var_20($sp)
 # End of function ssl3_release_write_buffer


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_setup_read_buffer
ssl3_setup_read_buffer:                  # CODE XREF: ssl3_read_n:loc_1CAF8↑p
                                         # ssl3_read_bytes+E14↑p ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl3_setup_read_buffer)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $s2, $a0
                li      $v1, 0xFEFF
                beq     $v0, $v1, loc_1DCE4
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s2
                li      $v1, 0x100
                beq     $v0, $v1, loc_1DCE4
                lw      $gp, 0x38+var_20($sp)
                lw      $a1, 0x58($s2)
                lw      $v0, 0xEC($a1)
                beqz    $v0, loc_1DCF4
                li      $v1, 5

loc_1DCBC:                               # CODE XREF: ssl3_setup_read_buffer+98↓j
                                         # ssl3_setup_read_buffer+144↓j
                li      $v1, 1
                sw      $v0, 0x4C($s2)

loc_1DCC4:                               # CODE XREF: ssl3_setup_read_buffer+1B8↓j
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1DCE4:                               # CODE XREF: ssl3_setup_read_buffer+38↑j
                                         # ssl3_setup_read_buffer+50↑j
                lw      $a1, 0x58($s2)
                lw      $v0, 0xEC($a1)
                bnez    $v0, loc_1DCBC
                li      $v1, 0xD

loc_1DCF4:                               # CODE XREF: ssl3_setup_read_buffer+60↑j
                lw      $a0, 0xF8($s2)
                andi    $v0, $a0, 0x20
                beqz    $v0, loc_1DD10
                addiu   $s1, $v1, 0x4143
                li      $v0, 1
                sw      $v0, 0xE8($a1)
                addiu   $s1, 0x4000

loc_1DD10:                               # CODE XREF: ssl3_setup_read_buffer+A8↑j
                la      $s3, loc_40000
                la      $t9, CRYPTO_lock
                lw      $s0, 0xDC($s2)
                lui     $v0, 2
                and     $v0, $a0, $v0
                addiu   $v1, $s1, 0x400
                li      $a0, 9
                li      $a1, 0xC
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                li      $a3, 0x2AD
                jalr    $t9 ; CRYPTO_lock
                movz    $s1, $v1, $v0
                lw      $a0, 0x154($s0)
                beqz    $a0, loc_1DD58
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0($a0)
                beq     $s1, $v0, loc_1DDA0
                nop

loc_1DD58:                               # CODE XREF: ssl3_setup_read_buffer+F0↑j
                la      $t9, CRYPTO_lock

loc_1DD5C:                               # CODE XREF: ssl3_setup_read_buffer+150↓j
                li      $a0, 0xA
                li      $a1, 0xC
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2B8
                lw      $gp, 0x38+var_20($sp)
                la      $t9, CRYPTO_malloc
                addiu   $a1, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                move    $a0, $s1
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x2BA
                beqz    $v0, loc_1DDEC
                lw      $gp, 0x38+var_20($sp)

loc_1DD90:                               # CODE XREF: ssl3_setup_read_buffer+190↓j
                lw      $a1, 0x58($s2)
                sw      $v0, 0xEC($a1)
                b       loc_1DCBC
                sw      $s1, 0xF0($a1)
 # ---------------------------------------------------------------------------

loc_1DDA0:                               # CODE XREF: ssl3_setup_read_buffer+FC↑j
                lw      $s0, 8($a0)
                beqz    $s0, loc_1DD5C
                la      $t9, CRYPTO_lock
                lw      $v0, 4($a0)
                lw      $v1, 0($s0)
                addiu   $v0, -1
                sw      $v1, 8($a0)
                bnez    $v0, loc_1DDCC
                sw      $v0, 4($a0)
                sw      $zero, 0($a0)
                la      $t9, CRYPTO_lock

loc_1DDCC:                               # CODE XREF: ssl3_setup_read_buffer+168↑j
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2B8
                lw      $gp, 0x38+var_20($sp)
                b       loc_1DD90
                move    $v0, $s0
 # ---------------------------------------------------------------------------

loc_1DDEC:                               # CODE XREF: ssl3_setup_read_buffer+134↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x9C
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_1DCC4
                move    $v1, $zero
 # End of function ssl3_setup_read_buffer


 # =============== S U B R O U T I N E =======================================


                .globl ssl_cert_type
ssl_cert_type:                           # CODE XREF: ssl3_get_server_certificate+410↑p
                                         # ssl3_get_server_certificate+520↑p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_cert_type)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                beqz    $a1, loc_1DEE4
                move    $s0, $a1
                move    $a0, $a1

loc_1DE40:                               # CODE XREF: ssl_cert_type+E0↓j
                lw      $v1, 0($a0)
                li      $v0, 6
                beq     $v1, $v0, loc_1DED4
                li      $v0, 0x74  # 't'
                beq     $v1, $v0, loc_1DEDC
                li      $v0, 0x32C
                beq     $v1, $v0, loc_1DE94
                li      $v0, 0x352
                beq     $v1, $v0, loc_1DE94
                li      $v0, 0x32B
                bne     $v1, $v0, loc_1DEC4
                li      $v0, 0x353

loc_1DE70:                               # CODE XREF: ssl_cert_type:loc_1DEC4↓j
                li      $s1, 7

loc_1DE74:                               # CODE XREF: ssl_cert_type+B8↓j
                                         # ssl_cert_type:loc_1DED4↓j ...
                beqz    $s0, loc_1DEA0
                la      $t9, EVP_PKEY_free

loc_1DE7C:                               # CODE XREF: ssl_cert_type:loc_1DE94↓j
                move    $v0, $s1
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_1DE94:                               # CODE XREF: ssl_cert_type+44↑j
                                         # ssl_cert_type+4C↑j
                bnez    $s0, loc_1DE7C
                li      $s1, 6

loc_1DE9C:                               # CODE XREF: ssl_cert_type+E8↓j
                la      $t9, EVP_PKEY_free

loc_1DEA0:                               # CODE XREF: ssl_cert_type:loc_1DE74↑j
                jalr    $t9 ; EVP_PKEY_free
                nop
                move    $v0, $s1
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_1DEC4:                               # CODE XREF: ssl_cert_type+54↑j
                beq     $v1, $v0, loc_1DE70
                li      $s1, 0xFFFFFFFF
                b       loc_1DE74
                nop
 # ---------------------------------------------------------------------------

loc_1DED4:                               # CODE XREF: ssl_cert_type+34↑j
                b       loc_1DE74
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_1DEDC:                               # CODE XREF: ssl_cert_type+3C↑j
                b       loc_1DE74
                li      $s1, 2
 # ---------------------------------------------------------------------------

loc_1DEE4:                               # CODE XREF: ssl_cert_type+20↑j
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                nop
                move    $a0, $v0
                bnez    $v0, loc_1DE40
                lw      $gp, 0x28+var_18($sp)
                b       loc_1DE9C
                li      $s1, 0xFFFFFFFF
 # End of function ssl_cert_type


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_message
ssl3_get_message:                        # DATA XREF: LOAD:00004AD8↑o
                                         # .got:ssl3_get_message_ptr↓o

var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_10          =  0x10
arg_14          =  0x14

                la      $gp, (off_5A360+0x7FF0 - ssl3_get_message)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_4($sp)
                sw      $s4, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_20($sp)
                lw      $t0, 0x58($a0)
                move    $s1, $a0
                lw      $v0, 0x34C($t0)
                move    $s3, $a1
                move    $s4, $a2
                beqz    $v0, loc_1DFC8
                move    $s2, $a3
                bltz    $a3, loc_1E068
                sw      $zero, 0x34C($t0)
                lw      $v0, 0x340($t0)
                beq     $v0, $a3, loc_1E068
                nop

loc_1DF60:                               # CODE XREF: ssl3_get_message+378↓j
                la      $t9, ERR_put_error
                li      $a2, 0xF4
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x8E
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_20($sp)
                li      $a2, 0xA

loc_1DF84:                               # CODE XREF: ssl3_get_message+424↓j
                la      $t9, ssl3_send_alert
                move    $a0, $s1
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x40+var_20($sp)

loc_1DF98:                               # CODE XREF: ssl3_get_message+4C0↓j
                lw      $a1, 0x40+arg_14($sp)
                li      $a0, 0xFFFFFFFF
                sw      $zero, 0($a1)

loc_1DFA4:                               # CODE XREF: ssl3_get_message+44C↓j
                lw      $ra, 0x40+var_4($sp)
                lw      $s4, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1DFC8:                               # CODE XREF: ssl3_get_message+40↑j
                lw      $a1, 0x3C($a0)
                lw      $v0, 0x34($a0)
                beq     $v0, $s3, loc_1E154
                lw      $s0, 4($a1)

loc_1DFD8:                               # CODE XREF: ssl3_get_message+3E8↓j
                lw      $v0, 0x33C($t0)
                lw      $t0, 0x44($s1)
                subu    $s0, $v0, $t0
                bgtz    $s0, loc_1E004
                lw      $s2, 0x40($s1)
                b       loc_1E0BC
                lw      $v0, 4($a1)
 # ---------------------------------------------------------------------------

loc_1DFF4:                               # CODE XREF: ssl3_get_message+124↓j
                lw      $t0, 0x44($s1)
                addu    $t0, $v0
                blez    $s0, loc_1E0B4
                sw      $t0, 0x44($s1)

loc_1E004:                               # CODE XREF: ssl3_get_message+E0↑j
                lw      $v0, 8($s1)
                sw      $zero, 0x40+var_30($sp)
                lw      $t9, 0x34($v0)
                move    $a3, $s0
                addu    $a2, $s2, $t0
                move    $a0, $s1
                jalr    $t9
                li      $a1, 0x16
                subu    $s0, $v0
                bgtz    $v0, loc_1DFF4
                lw      $gp, 0x40+var_20($sp)
                move    $a0, $v0
                li      $v0, 3
                sw      $v0, 0x18($s1)
                lw      $a1, 0x40+arg_14($sp)
                lw      $ra, 0x40+var_4($sp)
                lw      $s4, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $a0
                addiu   $sp, 0x40
                jr      $ra
                sw      $zero, 0($a1)
 # ---------------------------------------------------------------------------

loc_1E068:                               # CODE XREF: ssl3_get_message+48↑j
                                         # ssl3_get_message+54↑j
                lw      $v0, 0x3C($s1)
                lw      $t0, 0x33C($t0)
                lw      $v1, 4($v0)
                lw      $a1, 0x40+arg_14($sp)
                li      $v0, 1
                addiu   $v1, 4
                sw      $v0, 0($a1)
                move    $a0, $t0
                sw      $v1, 0x40($s1)
                sw      $t0, 0x44($s1)
                lw      $ra, 0x40+var_4($sp)
                lw      $s4, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1E0B4:                               # CODE XREF: ssl3_get_message+F8↑j
                lw      $a1, 0x3C($s1)
                lw      $v0, 4($a1)

loc_1E0BC:                               # CODE XREF: ssl3_get_message+E8↑j
                li      $v1, 0x14
                lb      $a0, 0($v0)
                beq     $a0, $v1, loc_1E228
                nop

loc_1E0CC:                               # CODE XREF: ssl3_get_message+364↓j
                la      $t9, ssl3_finish_mac
                lw      $a1, 4($a1)
                addiu   $a2, $t0, 4
                jalr    $t9 ; ssl3_finish_mac
                move    $a0, $s1
                lw      $t9, 0x64($s1)
                beqz    $t9, loc_1E120
                lw      $gp, 0x40+var_20($sp)
                lw      $v1, 0x3C($s1)
                lw      $v0, 0x44($s1)
                lw      $a3, 4($v1)
                lw      $v1, 0x68($s1)
                lw      $a1, 0($s1)
                addiu   $v0, 4
                sw      $v0, 0x40+var_30($sp)
                sw      $v1, 0x40+var_28($sp)
                sw      $s1, 0x40+var_2C($sp)
                move    $a0, $zero
                jalr    $t9
                li      $a2, 0x16
                lw      $gp, 0x40+var_20($sp)

loc_1E120:                               # CODE XREF: ssl3_get_message+1E0↑j
                lw      $v1, 0x40+arg_14($sp)
                li      $v0, 1
                sw      $v0, 0($v1)
                lw      $a0, 0x44($s1)
                lw      $ra, 0x40+var_4($sp)
                lw      $s4, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1E154:                               # CODE XREF: ssl3_get_message+CC↑j
                lw      $t0, 0x44($a0)

loc_1E158:                               # CODE XREF: ssl3_get_message+2A8↓j
                                         # ssl3_get_message+31C↓j
                slti    $v0, $t0, 4
                move    $a0, $zero
                li      $a2, 0x16
                bnez    $v0, loc_1E1EC
                move    $a3, $s0

loc_1E16C:                               # CODE XREF: ssl3_get_message+2E0↓j
                lw      $v0, 0x24($s1)
                bnez    $v0, loc_1E270
                move    $t0, $zero
                lbu     $v1, 0($s0)
                bnez    $v1, loc_1E274
                nop
                lbu     $v0, 1($s0)
                bnez    $v0, loc_1E274
                nop
                lbu     $v0, 2($s0)
                bnez    $v0, loc_1E274
                nop
                lbu     $v0, 3($s0)
                bnez    $v0, loc_1E274
                nop
                lw      $t9, 0x64($s1)
                beqz    $t9, loc_1E158
                sw      $zero, 0x44($s1)
                lw      $v1, 0x68($s1)
                lw      $a1, 0($s1)
                li      $v0, 4
                sw      $v0, 0x40+var_30($sp)
                sw      $v1, 0x40+var_28($sp)
                jalr    $t9
                sw      $s1, 0x40+var_2C($sp)
                lw      $t0, 0x44($s1)
                lw      $gp, 0x40+var_20($sp)
                slti    $v0, $t0, 4
                move    $a0, $zero
                li      $a2, 0x16
                beqz    $v0, loc_1E16C
                move    $a3, $s0

loc_1E1EC:                               # CODE XREF: ssl3_get_message+260↑j
                lw      $v0, 8($s1)
                sw      $zero, 0x40+var_30($sp)
                lw      $t9, 0x34($v0)
                li      $a3, 4
                subu    $a3, $t0
                addu    $a2, $t0, $s0
                move    $a0, $s1
                jalr    $t9
                li      $a1, 0x16
                blez    $v0, loc_1E340
                lw      $gp, 0x40+var_20($sp)
                lw      $t0, 0x44($s1)
                addu    $t0, $v0
                b       loc_1E158
                sw      $t0, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_1E228:                               # CODE XREF: ssl3_get_message+1C0↑j
                lw      $v0, 0x34($s1)
                andi    $v0, 0x1000
                bnez    $v0, loc_1E2F4
                nop
                lw      $v0, 8($s1)
                lw      $v0, 0x64($v0)
                lw      $a1, 0x20($v0)
                lw      $a2, 0x24($v0)

loc_1E248:                               # CODE XREF: ssl3_get_message+3FC↓j
                lw      $s0, 0x58($s1)
                lw      $t9, 0x14($v0)
                move    $a0, $s1
                jalr    $t9
                addiu   $a3, $s0, 0x2B8
                lw      $gp, 0x40+var_20($sp)
                sw      $v0, 0x338($s0)
                lw      $a1, 0x3C($s1)
                b       loc_1E0CC
                lw      $t0, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_1E270:                               # CODE XREF: ssl3_get_message+26C↑j
                lbu     $v1, 0($s0)

loc_1E274:                               # CODE XREF: ssl3_get_message+278↑j
                                         # ssl3_get_message+284↑j ...
                bltz    $s2, loc_1E330
                li      $v0, 1
                bne     $v1, $s2, loc_1DF60
                move    $v0, $v1

loc_1E284:                               # CODE XREF: ssl3_get_message:loc_1E380↓j
                                         # ssl3_get_message+49C↓j
                lw      $t0, 0x58($s1)

loc_1E288:                               # CODE XREF: ssl3_get_message+434↓j
                addiu   $a1, $s0, 1
                sw      $v0, 0x340($t0)
                lbu     $v0, 1($s0)
                lbu     $a0, 1($a1)
                lbu     $v1, 2($a1)
                sll     $v0, 16
                or      $v1, $v0
                sll     $a0, 8
                or      $s0, $v1, $a0
                lw      $v1, 0x40+arg_10($sp)
                sltu    $v0, $v1, $s0
                bnez    $v0, loc_1E308
                lui     $v0, 0x7FFF
                li      $v0, 0x7FFFFFFC
                sltu    $v0, $s0, $v0
                beqz    $v0, loc_1E30C
                la      $t9, ERR_put_error
                bnez    $s0, loc_1E358
                la      $t9, BUF_MEM_grow_clean

loc_1E2D4:                               # CODE XREF: ssl3_get_message+468↓j
                lw      $a1, 0x3C($s1)
                sw      $s0, 0x33C($t0)
                lw      $v0, 4($a1)
                sw      $s4, 0x34($s1)
                addiu   $v0, 4
                sw      $v0, 0x40($s1)
                b       loc_1DFD8
                sw      $zero, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_1E2F4:                               # CODE XREF: ssl3_get_message+32C↑j
                lw      $v0, 8($s1)
                lw      $v0, 0x64($v0)
                lw      $a1, 0x28($v0)
                b       loc_1E248
                lw      $a2, 0x2C($v0)
 # ---------------------------------------------------------------------------

loc_1E308:                               # CODE XREF: ssl3_get_message+3B0↑j
                la      $t9, ERR_put_error

loc_1E30C:                               # CODE XREF: ssl3_get_message+3C0↑j
                li      $a2, 0x98
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x8E
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_20($sp)
                b       loc_1DF84
                li      $a2, 0x2F  # '/'
 # ---------------------------------------------------------------------------

loc_1E330:                               # CODE XREF: ssl3_get_message:loc_1E274↑j
                beq     $v1, $v0, loc_1E374
                move    $v0, $v1
                b       loc_1E288
                lw      $t0, 0x58($s1)
 # ---------------------------------------------------------------------------

loc_1E340:                               # CODE XREF: ssl3_get_message+30C↑j
                move    $a0, $v0
                li      $v0, 3
                sw      $v0, 0x18($s1)
                lw      $v0, 0x40+arg_14($sp)
                b       loc_1DFA4
                sw      $zero, 0($v0)
 # ---------------------------------------------------------------------------

loc_1E358:                               # CODE XREF: ssl3_get_message+3C8↑j
                lw      $a0, 0x3C($s1)
                jalr    $t9 ; BUF_MEM_grow_clean
                addiu   $a1, $s0, 4
                beqz    $v0, loc_1E3A8
                lw      $gp, 0x40+var_20($sp)
                b       loc_1E2D4
                lw      $t0, 0x58($s1)
 # ---------------------------------------------------------------------------

loc_1E374:                               # CODE XREF: ssl3_get_message:loc_1E330↑j
                li      $v0, 0x2180
                beq     $s3, $v0, loc_1E388
                nop

loc_1E380:                               # CODE XREF: ssl3_get_message+488↓j
                b       loc_1E284
                li      $v0, 1
 # ---------------------------------------------------------------------------

loc_1E388:                               # CODE XREF: ssl3_get_message+474↑j
                li      $v0, 0x2181
                bne     $s4, $v0, loc_1E380
                la      $t9, ssl3_init_finished_mac
                jalr    $t9 ; ssl3_init_finished_mac
                move    $a0, $s1
                lw      $gp, 0x40+var_20($sp)
                b       loc_1E284
                lbu     $v0, 0($s0)
 # ---------------------------------------------------------------------------

loc_1E3A8:                               # CODE XREF: ssl3_get_message+460↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x8E
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_1DF98
                lw      $gp, 0x40+var_20($sp)
 # End of function ssl3_get_message


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_get_finished
ssl3_get_finished:                       # CODE XREF: ssl3_accept+A4C↑p
                                         # ssl3_connect+398↑p ...

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_get_finished)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s2, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $a3, 8($a0)
                li      $v0, 0x40  # '@'
                addiu   $v1, $sp, 0x38+var_18
                sw      $v0, 0x38+var_28($sp)
                sw      $v1, 0x38+var_24($sp)
                lw      $t9, 0x30($a3)
                li      $a3, 0x14
                jalr    $t9
                move    $s2, $a0
                move    $s1, $v0
                lw      $v0, 0x38+var_18($sp)
                beqz    $v0, loc_1E4BC
                lw      $gp, 0x38+var_20($sp)
                lw      $s0, 0x58($s2)
                lw      $v0, 0x180($s0)
                beqz    $v0, loc_1E498
                la      $t9, ERR_put_error
                lw      $v0, 0x338($s0)
                sw      $zero, 0x180($s0)
                beq     $s1, $v0, loc_1E4D8
                lw      $a0, 0x40($s2)
                la      $t9, ERR_put_error
                li      $a2, 0x6F  # 'o'
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x8C
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                li      $a2, 0x32  # '2'

loc_1E468:                               # CODE XREF: ssl3_get_finished+E8↓j
                                         # ssl3_get_finished+1A8↓j
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x38+var_20($sp)
                move    $v0, $zero

loc_1E480:                               # CODE XREF: ssl3_get_finished+15C↓j
                                         # ssl3_get_finished+1D8↓j
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1E498:                               # CODE XREF: ssl3_get_finished+60↑j
                li      $a2, 0x9A
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x8C
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_1E468
                li      $a2, 0xA
 # ---------------------------------------------------------------------------

loc_1E4BC:                               # CODE XREF: ssl3_get_finished+50↑j
                move    $v0, $s1
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1E4D8:                               # CODE XREF: ssl3_get_finished+70↑j
                la      $t9, memcmp
                addiu   $a1, $s0, 0x2B8
                jalr    $t9 ; memcmp
                move    $a2, $s1
                bnez    $v0, loc_1E554
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 4($s2)
                li      $v0, 0x2000
                beq     $v1, $v0, loc_1E57C
                slti    $v0, $s1, 0x41  # 'A'
                beqz    $v0, loc_1E530
                la      $a0, loc_40000

loc_1E508:                               # CODE XREF: ssl3_get_finished+180↓j
                la      $t9, memcpy
                addiu   $a1, $s0, 0x2B8
                addiu   $a0, $s0, 0x3CD
                jalr    $t9 ; memcpy
                move    $a2, $s1
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 0x58($s2)
                li      $v0, 1
                b       loc_1E480
                sb      $s1, 0x40D($v1)
 # ---------------------------------------------------------------------------

loc_1E530:                               # CODE XREF: ssl3_get_finished+134↑j
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aS3BothC - 0x40000)  # "s3_both.c"
                addiu   $a2, (aIEvpMaxMdSize - 0x40000)  # "i <= EVP_MAX_MD_SIZE"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x11C
                lw      $gp, 0x38+var_20($sp)
                b       loc_1E508
                lw      $s0, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_1E554:                               # CODE XREF: ssl3_get_finished+11C↑j
                la      $t9, ERR_put_error
                li      $a2, 0x95
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x8C
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_1E468
                li      $a2, 0x33  # '3'
 # ---------------------------------------------------------------------------

loc_1E57C:                               # CODE XREF: ssl3_get_finished+12C↑j
                beqz    $v0, loc_1E5AC
                la      $a0, loc_40000

loc_1E584:                               # CODE XREF: ssl3_get_finished+1FC↓j
                la      $t9, memcpy
                addiu   $a1, $s0, 0x2B8
                addiu   $a0, $s0, 0x38C
                jalr    $t9 ; memcpy
                move    $a2, $s1
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 0x58($s2)
                li      $v0, 1
                b       loc_1E480
                sb      $s1, 0x3CC($v1)
 # ---------------------------------------------------------------------------

loc_1E5AC:                               # CODE XREF: ssl3_get_finished:loc_1E57C↑j
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aS3BothC - 0x40000)  # "s3_both.c"
                addiu   $a2, (aIEvpMaxMdSize - 0x40000)  # "i <= EVP_MAX_MD_SIZE"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x115
                lw      $gp, 0x38+var_20($sp)
                b       loc_1E584
                lw      $s0, 0x58($s2)
 # End of function ssl3_get_finished


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_do_write
ssl3_do_write:                           # CODE XREF: ssl3_send_cert_status+40↑j
                                         # ssl3_send_server_done:loc_FD38↑j ...

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_do_write)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s2, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_18($sp)
                lw      $v0, 0x3C($a0)
                lw      $v1, 0x48($a0)
                lw      $a2, 4($v0)
                la      $t9, ssl3_write_bytes
                lw      $a3, 0x44($a0)
                addu    $a2, $v1
                move    $s0, $a0
                jalr    $t9 ; ssl3_write_bytes
                move    $s2, $a1
                move    $s1, $v0
                bltz    $v0, loc_1E6E4
                lw      $gp, 0x38+var_18($sp)
                li      $v0, 0x16
                beq     $s2, $v0, loc_1E6C0
                la      $t9, ssl3_finish_mac

loc_1E630:                               # CODE XREF: ssl3_do_write+10C↓j
                lw      $v1, 0x44($s0)
                beq     $s1, $v1, loc_1E668
                subu    $v1, $s1
                lw      $v0, 0x48($s0)
                addu    $v0, $s1
                sw      $v0, 0x48($s0)
                sw      $v1, 0x44($s0)
                move    $v0, $zero

loc_1E650:                               # CODE XREF: ssl3_do_write:loc_1E700↓j
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1E668:                               # CODE XREF: ssl3_do_write+64↑j
                lw      $t9, 0x64($s0)
                beqz    $t9, loc_1E700
                move    $a2, $s2
                lw      $v1, 0x3C($s0)
                lw      $v0, 0x48($s0)
                lw      $a0, 0x68($s0)
                lw      $a1, 0($s0)
                lw      $a3, 4($v1)
                addu    $v0, $s1, $v0
                sw      $v0, 0x38+var_28($sp)
                sw      $a0, 0x38+var_20($sp)
                sw      $s0, 0x38+var_24($sp)
                jalr    $t9
                li      $a0, 1
                lw      $gp, 0x38+var_18($sp)
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1E6C0:                               # CODE XREF: ssl3_do_write+58↑j
                lw      $v0, 0x3C($s0)
                lw      $v1, 0x48($s0)
                lw      $a1, 4($v0)
                addu    $a1, $v1
                move    $a0, $s0
                jalr    $t9 ; ssl3_finish_mac
                move    $a2, $s1
                b       loc_1E630
                lw      $gp, 0x38+var_18($sp)
 # ---------------------------------------------------------------------------

loc_1E6E4:                               # CODE XREF: ssl3_do_write+4C↑j
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1E700:                               # CODE XREF: ssl3_do_write+9C↑j
                b       loc_1E650
                li      $v0, 1
 # End of function ssl3_do_write


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_change_cipher_spec
ssl3_send_change_cipher_spec:            # CODE XREF: ssl3_accept+668↑p
                                         # ssl3_connect+7CC↑p
                                         # DATA XREF: ...
                la      $gp, (off_5A360+0x7FF0 - ssl3_send_change_cipher_spec)
                addu    $gp, $t9
                lw      $v0, 0x34($a0)
                bne     $v0, $a1, loc_1E740
                la      $t9, ssl3_do_write
                lw      $v0, 0x3C($a0)
                li      $v1, 1
                lw      $a1, 4($v0)
                li      $v0, 1
                sb      $v1, 0($a1)
                sw      $a2, 0x34($a0)
                sw      $v0, 0x44($a0)
                sw      $zero, 0x48($a0)

loc_1E740:                               # CODE XREF: ssl3_send_change_cipher_spec+10↑j
                jr      $t9 ; ssl3_do_write
                li      $a1, 0x14
 # End of function ssl3_send_change_cipher_spec


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_send_finished
ssl3_send_finished:                      # CODE XREF: ssl3_accept+1B0↑p
                                         # ssl3_connect+6F4↑p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - ssl3_send_finished)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $v0, 0x34($a0)
                move    $s3, $a2
                move    $s0, $a0
                move    $t1, $a3
                beq     $v0, $a1, loc_1E7B0
                lw      $a2, 0x30+arg_10($sp)
                la      $t9, ssl3_do_write
                move    $a0, $s0
                lw      $ra, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_1E7B0:                               # CODE XREF: ssl3_send_finished+38↑j
                lw      $v0, 8($a0)
                lw      $a3, 0x58($a0)
                lw      $v1, 0x64($v0)
                lw      $t0, 0x3C($a0)
                lw      $t9, 0x14($v1)
                move    $a1, $t1
                addiu   $a3, 0x234
                jalr    $t9
                lw      $s2, 4($t0)
                lw      $gp, 0x30+var_20($sp)
                lw      $a1, 0x58($s0)
                la      $t9, memcpy
                sw      $v0, 0x2B4($a1)
                addiu   $a0, $s2, 4
                addiu   $a1, 0x234
                move    $a2, $v0
                jalr    $t9 ; memcpy
                move    $s1, $v0
                lw      $v1, 4($s0)
                li      $v0, 0x1000
                beq     $v1, $v0, loc_1E894
                lw      $gp, 0x30+var_20($sp)
                slti    $v0, $s1, 0x41  # 'A'
                beqz    $v0, loc_1E8CC
                la      $a2, loc_40000

loc_1E814:                               # CODE XREF: ssl3_send_finished+19C↓j
                lw      $a0, 0x58($s0)
                la      $t9, memcpy
                addiu   $a1, $a0, 0x234
                move    $a2, $s1
                jalr    $t9 ; memcpy
                addiu   $a0, 0x3CD
                lw      $v1, 0x58($s0)
                andi    $a3, $s1, 0xFF
                lw      $gp, 0x30+var_20($sp)
                sb      $a3, 0x40D($v1)

loc_1E83C:                               # CODE XREF: ssl3_send_finished+17C↓j
                addiu   $a0, $s2, 1
                srl     $a1, $s1, 8
                srl     $v1, $s1, 16
                li      $v0, 0x14
                sb      $v1, 1($s2)
                sb      $v0, 0($s2)
                addiu   $a2, $s1, 4
                sb      $a1, 1($a0)
                sb      $a3, 2($a0)
                la      $t9, ssl3_do_write
                sw      $s3, 0x34($s0)
                sw      $a2, 0x44($s0)
                sw      $zero, 0x48($s0)
                move    $a0, $s0
                lw      $ra, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                li      $a1, 0x16
                jr      $t9 ; ssl3_do_write
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_1E894:                               # CODE XREF: ssl3_send_finished+B8↑j
                slti    $v0, $s1, 0x41  # 'A'
                beqz    $v0, loc_1E8EC
                la      $a2, loc_40000

loc_1E8A0:                               # CODE XREF: ssl3_send_finished+1BC↓j
                lw      $a0, 0x58($s0)
                la      $t9, memcpy
                addiu   $a1, $a0, 0x234
                move    $a2, $s1
                jalr    $t9 ; memcpy
                addiu   $a0, 0x38C
                lw      $gp, 0x30+var_20($sp)
                lw      $v1, 0x58($s0)
                andi    $a3, $s1, 0xFF
                b       loc_1E83C
                sb      $a3, 0x3CC($v1)
 # ---------------------------------------------------------------------------

loc_1E8CC:                               # CODE XREF: ssl3_send_finished+C4↑j
                la      $a0, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aS3BothC - 0x40000)  # "s3_both.c"
                addiu   $a2, (aIEvpMaxMdSize - 0x40000)  # "i <= EVP_MAX_MD_SIZE"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0xB4
                b       loc_1E814
                lw      $gp, 0x30+var_20($sp)
 # ---------------------------------------------------------------------------

loc_1E8EC:                               # CODE XREF: ssl3_send_finished+150↑j
                la      $a0, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aS3BothC - 0x40000)  # "s3_both.c"
                addiu   $a2, (aIEvpMaxMdSize - 0x40000)  # "i <= EVP_MAX_MD_SIZE"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0xAD
                b       loc_1E8A0
                lw      $gp, 0x30+var_20($sp)
 # End of function ssl3_send_finished


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_setup_write_buffer
ssl3_setup_write_buffer:                 # CODE XREF: sub_1BE08+4F4↑p
                                         # ssl3_setup_buffers+34↓p
                                         # DATA XREF: ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl3_setup_write_buffer)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $s2, $a0
                li      $v1, 0xFEFF
                beq     $v0, $v1, loc_1EA40
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s2
                li      $v1, 0x100
                beq     $v0, $v1, loc_1EA40
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0x58($s2)
                lw      $v1, 0xFC($v0)
                bnez    $v1, loc_1EA50
                li      $a1, 5

loc_1E974:                               # CODE XREF: ssl3_setup_write_buffer+13C↓j
                lw      $v0, 0x10C($s2)
                lw      $a0, 0xF8($s2)
                addiu   $v0, 0x53  # 'S'
                addu    $s1, $v0, $a1
                lui     $v1, 2
                and     $v1, $a0, $v1
                addiu   $v0, $s1, 0x400
                andi    $a0, 0x800
                beqz    $a0, loc_1EA74
                movz    $s1, $v0, $v1

loc_1E99C:                               # CODE XREF: ssl3_setup_write_buffer+16C↓j
                la      $s3, loc_40000
                la      $t9, CRYPTO_lock
                lw      $s0, 0xDC($s2)
                li      $a0, 9
                li      $a1, 0xC
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2AD
                lw      $a0, 0x150($s0)
                beqz    $a0, loc_1E9D4
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0($a0)
                beq     $s1, $v0, loc_1EA80
                nop

loc_1E9D4:                               # CODE XREF: ssl3_setup_write_buffer+B4↑j
                la      $t9, CRYPTO_lock

loc_1E9D8:                               # CODE XREF: ssl3_setup_write_buffer+178↓j
                li      $a0, 0xA
                li      $a1, 0xC
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2B8
                lw      $gp, 0x38+var_20($sp)
                la      $t9, CRYPTO_malloc
                addiu   $a1, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                move    $a0, $s1
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x2BA
                beqz    $v0, loc_1EACC
                lw      $gp, 0x38+var_20($sp)
                move    $v1, $v0

loc_1EA10:                               # CODE XREF: ssl3_setup_write_buffer+1B8↓j
                lw      $v0, 0x58($s2)
                li      $a0, 1
                sw      $s1, 0x100($v0)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                sw      $v1, 0xFC($v0)
                addiu   $sp, 0x38
                jr      $ra
                move    $v0, $a0
 # ---------------------------------------------------------------------------

loc_1EA40:                               # CODE XREF: ssl3_setup_write_buffer+38↑j
                                         # ssl3_setup_write_buffer+50↑j
                lw      $v0, 0x58($s2)
                lw      $v1, 0xFC($v0)
                beqz    $v1, loc_1E974
                li      $a1, 0xE

loc_1EA50:                               # CODE XREF: ssl3_setup_write_buffer+60↑j
                li      $a0, 1

loc_1EA54:                               # CODE XREF: ssl3_setup_write_buffer+1E0↓j
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_1EA74:                               # CODE XREF: ssl3_setup_write_buffer+88↑j
                addiu   $v0, $a1, 0x53  # 'S'
                b       loc_1E99C
                addu    $s1, $v0
 # ---------------------------------------------------------------------------

loc_1EA80:                               # CODE XREF: ssl3_setup_write_buffer+C0↑j
                lw      $s0, 8($a0)
                beqz    $s0, loc_1E9D8
                la      $t9, CRYPTO_lock
                lw      $v0, 4($a0)
                lw      $v1, 0($s0)
                addiu   $v0, -1
                sw      $v1, 8($a0)
                bnez    $v0, loc_1EAAC
                sw      $v0, 4($a0)
                sw      $zero, 0($a0)
                la      $t9, CRYPTO_lock

loc_1EAAC:                               # CODE XREF: ssl3_setup_write_buffer+190↑j
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2B8
                lw      $gp, 0x38+var_20($sp)
                b       loc_1EA10
                move    $v1, $s0
 # ---------------------------------------------------------------------------

loc_1EACC:                               # CODE XREF: ssl3_setup_write_buffer+F8↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                sw      $zero, 0x38+var_28($sp)
                li      $a1, 0x123
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_1EA54
                move    $a0, $zero
 # End of function ssl3_setup_write_buffer


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_setup_buffers
ssl3_setup_buffers:                      # CODE XREF: ssl3_accept+538↑p
                                         # ssl3_connect+4E8↑p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_setup_buffers)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_setup_read_buffer
                jalr    $t9 ; ssl3_setup_read_buffer
                move    $s0, $a0
                beqz    $v0, loc_1EB38
                lw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_setup_write_buffer
                jalr    $t9 ; ssl3_setup_write_buffer
                move    $a0, $s0
                lw      $gp, 0x20+var_10($sp)
                sltu    $v0, $zero, $v0

loc_1EB38:                               # CODE XREF: ssl3_setup_buffers+28↑j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function ssl3_setup_buffers


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_release_read_buffer
ssl3_release_read_buffer:                # CODE XREF: ssl3_free+44↑p
                                         # ssl3_read_n+3CC↑p ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_release_read_buffer)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s4, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $v0, 0x58($a0)
                lw      $s1, 0xEC($v0)
                beqz    $s1, loc_1EC1C
                move    $s4, $a0
                la      $s3, loc_40000
                lw      $s2, 0xDC($a0)
                la      $t9, CRYPTO_lock
                li      $a0, 9
                li      $a1, 0xC
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                li      $a3, 0x2C4
                jalr    $t9 ; CRYPTO_lock
                lw      $s0, 0xF0($v0)
                lw      $a0, 0x154($s2)
                beqz    $a0, loc_1EBE8
                lw      $gp, 0x30+var_20($sp)
                lw      $v0, 0($a0)
                beq     $s0, $v0, loc_1EBC8
                nop
                bnez    $v0, loc_1EBEC
                la      $t9, CRYPTO_lock

loc_1EBC8:                               # CODE XREF: ssl3_release_read_buffer+70↑j
                lw      $v0, 0x14C($s2)
                lw      $v1, 4($a0)
                sltu    $v0, $v1, $v0
                beqz    $v0, loc_1EBEC
                la      $t9, CRYPTO_lock
                sltiu   $v0, $s0, 4
                beqz    $v0, loc_1EC40
                addiu   $v1, 1

loc_1EBE8:                               # CODE XREF: ssl3_release_read_buffer+64↑j
                la      $t9, CRYPTO_lock

loc_1EBEC:                               # CODE XREF: ssl3_release_read_buffer+78↑j
                                         # ssl3_release_read_buffer+8C↑j
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2D3
                lw      $gp, 0x30+var_20($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                lw      $gp, 0x30+var_20($sp)

loc_1EC14:                               # CODE XREF: ssl3_release_read_buffer+120↓j
                lw      $v0, 0x58($s4)
                sw      $zero, 0xEC($v0)

loc_1EC1C:                               # CODE XREF: ssl3_release_read_buffer+34↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s4, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_1EC40:                               # CODE XREF: ssl3_release_read_buffer+98↑j
                lw      $v0, 8($a0)
                sw      $v1, 4($a0)
                sw      $v0, 0($s1)
                sw      $s0, 0($a0)
                sw      $s1, 8($a0)
                addiu   $a2, $s3, (aS3BothC - 0x40000)  # "s3_both.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2D3
                b       loc_1EC14
                lw      $gp, 0x30+var_20($sp)
 # End of function ssl3_release_read_buffer


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_output_cert_chain
ssl3_output_cert_chain:                  # CODE XREF: ssl3_send_server_certificate:loc_10320↑p
                                         # ssl3_send_client_certificate+180↑p
                                         # DATA XREF: ...

var_C8          = -0xC8
var_C0          = -0xC0
var_B8          = -0xB8
var_60          = -0x60
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl3_output_cert_chain)
                addu    $gp, $t9
                addiu   $sp, -0xD8
                sw      $ra, 0xD8+var_4($sp)
                sw      $fp, 0xD8+var_8($sp)
                sw      $s7, 0xD8+var_C($sp)
                sw      $s6, 0xD8+var_10($sp)
                sw      $s5, 0xD8+var_14($sp)
                sw      $s4, 0xD8+var_18($sp)
                sw      $s3, 0xD8+var_1C($sp)
                sw      $s2, 0xD8+var_20($sp)
                sw      $s1, 0xD8+var_24($sp)
                sw      $s0, 0xD8+var_28($sp)
                sw      $gp, 0xD8+var_C0($sp)
                lw      $v0, 0xFC($a0)
                move    $s6, $a0
                andi    $v0, 8
                beqz    $v0, loc_1ED78
                move    $s1, $a1
                lw      $s4, 0x3C($s6)
                la      $t9, BUF_MEM_grow_clean
                move    $a0, $s4
                jalr    $t9 ; BUF_MEM_grow_clean
                li      $a1, 0xA
                li      $s0, 1
                beqz    $v0, loc_1EDA0
                lw      $gp, 0xD8+var_C0($sp)

loc_1ECE0:                               # CODE XREF: ssl3_output_cert_chain+128↓j
                beqz    $s1, loc_1EECC
                li      $s5, 7
                beqz    $s0, loc_1EDB4
                la      $t9, X509_STORE_CTX_init
                la      $t9, i2d_X509
                move    $a0, $s1
                jalr    $t9 ; i2d_X509
                move    $a1, $zero
                lw      $gp, 0xD8+var_C0($sp)
                addiu   $s5, $v0, 0xA
                la      $t9, BUF_MEM_grow_clean
                move    $a0, $s4
                move    $a1, $s5
                jalr    $t9 ; BUF_MEM_grow_clean
                move    $s0, $v0
                bnez    $v0, loc_1F014
                lw      $gp, 0xD8+var_C0($sp)

loc_1ED24:                               # CODE XREF: ssl3_output_cert_chain+2C0↓j
                la      $t9, ERR_put_error
                sw      $zero, 0xD8+var_C8($sp)
                li      $a0, 0x14
                li      $a1, 0x128

loc_1ED34:                               # CODE XREF: ssl3_output_cert_chain+13C↓j
                li      $a2, 7

loc_1ED38:                               # CODE XREF: ssl3_output_cert_chain+400↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xD8+var_C0($sp)
                move    $v0, $zero

loc_1ED48:                               # CODE XREF: ssl3_output_cert_chain+438↓j
                lw      $ra, 0xD8+var_4($sp)
                lw      $fp, 0xD8+var_8($sp)
                lw      $s7, 0xD8+var_C($sp)
                lw      $s6, 0xD8+var_10($sp)
                lw      $s5, 0xD8+var_14($sp)
                lw      $s4, 0xD8+var_18($sp)
                lw      $s3, 0xD8+var_1C($sp)
                lw      $s2, 0xD8+var_20($sp)
                lw      $s1, 0xD8+var_24($sp)
                lw      $s0, 0xD8+var_28($sp)
                jr      $ra
                addiu   $sp, 0xD8
 # ---------------------------------------------------------------------------

loc_1ED78:                               # CODE XREF: ssl3_output_cert_chain+48↑j
                lw      $v0, 0xDC($a0)
                lw      $s4, 0x3C($s6)
                la      $t9, BUF_MEM_grow_clean
                lw      $v1, 0x94($v0)
                move    $a0, $s4
                li      $a1, 0xA
                jalr    $t9 ; BUF_MEM_grow_clean
                sltu    $s0, $zero, $v1
                bnez    $v0, loc_1ECE0
                lw      $gp, 0xD8+var_C0($sp)

loc_1EDA0:                               # CODE XREF: ssl3_output_cert_chain+68↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x93
                b       loc_1ED34
                sw      $zero, 0xD8+var_C8($sp)
 # ---------------------------------------------------------------------------

loc_1EDB4:                               # CODE XREF: ssl3_output_cert_chain+78↑j
                lw      $v0, 0xDC($s6)
                lw      $a1, 0xC($v0)
                addiu   $fp, $sp, 0x24  # '$'
                move    $a2, $s1
                move    $a0, $fp
                jalr    $t9 ; X509_STORE_CTX_init
                move    $a3, $zero
                beqz    $v0, loc_1F060
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, X509_verify_cert
                jalr    $t9 ; X509_verify_cert
                move    $a0, $fp
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                move    $s3, $zero
                lw      $gp, 0xD8+var_C0($sp)
                li      $s5, 7
                b       loc_1EE98
                addiu   $s7, $sp, 0xD8+var_B8
 # ---------------------------------------------------------------------------

loc_1EE04:                               # CODE XREF: ssl3_output_cert_chain+244↓j
                jalr    $t9 ; sk_value
                lw      $a0, 0xD8+var_60($sp)
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, i2d_X509
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; i2d_X509
                move    $s0, $v0
                lw      $gp, 0xD8+var_C0($sp)
                move    $s1, $v0
                addiu   $v0, $s5, 3
                addu    $s2, $v0, $s1
                la      $t9, BUF_MEM_grow_clean
                move    $a0, $s4
                jalr    $t9 ; BUF_MEM_grow_clean
                move    $a1, $s2
                lw      $gp, 0xD8+var_C0($sp)
                sra     $v1, $s1, 16
                sra     $a2, $s1, 8
                move    $a0, $s0
                move    $a1, $s7
                beqz    $v0, loc_1F078
                la      $t9, i2d_X509
                lw      $v0, 4($s4)
                addu    $v0, $s5, $v0
                sw      $v0, 0xD8+var_B8($sp)
                sb      $v1, 0($v0)
                lw      $v0, 0xD8+var_B8($sp)
                move    $s5, $s2
                sb      $a2, 1($v0)
                lw      $v1, 0xD8+var_B8($sp)
                sb      $s1, 2($v1)
                lw      $v0, 0xD8+var_B8($sp)
                addiu   $v0, 3
                jalr    $t9 ; i2d_X509
                sw      $v0, 0xD8+var_B8($sp)
                lw      $gp, 0xD8+var_C0($sp)

loc_1EE98:                               # CODE XREF: ssl3_output_cert_chain+18C↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                lw      $a0, 0xD8+var_60($sp)
                lw      $gp, 0xD8+var_C0($sp)
                slt     $v0, $s3, $v0
                move    $a1, $s3
                addiu   $s3, 1
                bnez    $v0, loc_1EE04
                la      $t9, sk_value
                la      $t9, X509_STORE_CTX_cleanup
                jalr    $t9 ; X509_STORE_CTX_cleanup
                move    $a0, $fp
                lw      $gp, 0xD8+var_C0($sp)

loc_1EECC:                               # CODE XREF: ssl3_output_cert_chain:loc_1ECE0↑j
                                         # ssl3_output_cert_chain+3E8↓j
                move    $s3, $zero
                b       loc_1EF70
                addiu   $s7, $sp, 0xD8+var_B8
 # ---------------------------------------------------------------------------

loc_1EED8:                               # CODE XREF: ssl3_output_cert_chain+320↓j
                lw      $v0, 0xDC($s6)
                jalr    $t9 ; sk_value
                lw      $a0, 0x94($v0)
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, i2d_X509
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; i2d_X509
                move    $s0, $v0
                lw      $gp, 0xD8+var_C0($sp)
                move    $s1, $v0
                addiu   $v0, $s5, 3
                addu    $s2, $v0, $s1
                la      $t9, BUF_MEM_grow_clean
                move    $a0, $s4
                jalr    $t9 ; BUF_MEM_grow_clean
                move    $a1, $s2
                lw      $gp, 0xD8+var_C0($sp)
                sra     $v1, $s1, 16
                sra     $a2, $s1, 8
                move    $a0, $s0
                move    $a1, $s7
                beqz    $v0, loc_1ED24
                la      $t9, i2d_X509
                lw      $v0, 4($s4)
                addu    $v0, $s5, $v0
                sw      $v0, 0xD8+var_B8($sp)
                sb      $v1, 0($v0)
                lw      $v0, 0xD8+var_B8($sp)
                move    $s5, $s2
                sb      $a2, 1($v0)
                lw      $v1, 0xD8+var_B8($sp)
                sb      $s1, 2($v1)
                lw      $v0, 0xD8+var_B8($sp)
                addiu   $v0, 3
                jalr    $t9 ; i2d_X509
                sw      $v0, 0xD8+var_B8($sp)
                lw      $gp, 0xD8+var_C0($sp)

loc_1EF70:                               # CODE XREF: ssl3_output_cert_chain+260↑j
                lw      $v0, 0xDC($s6)
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                lw      $a0, 0x94($v0)
                lw      $gp, 0xD8+var_C0($sp)
                slt     $v0, $s3, $v0
                move    $a1, $s3
                addiu   $s3, 1
                bnez    $v0, loc_1EED8
                la      $t9, sk_value
                lw      $a1, 4($s4)
                addiu   $v0, $s5, -7
                addiu   $a2, $a1, 4
                srl     $v1, $v0, 16
                srl     $a0, $v0, 8
                sb      $v1, 4($a1)
                sb      $v0, 2($a2)
                sb      $a0, 1($a2)
                lw      $v1, 4($s4)
                addiu   $a0, $s5, -4
                addiu   $a2, $v1, 1
                li      $v0, 0xB
                srl     $a1, $a0, 16
                srl     $a3, $a0, 8
                sb      $v0, 0($v1)
                sb      $a1, 1($v1)
                sb      $a0, 2($a2)
                sb      $a3, 1($a2)
                move    $v0, $s5
                lw      $ra, 0xD8+var_4($sp)
                lw      $fp, 0xD8+var_8($sp)
                lw      $s7, 0xD8+var_C($sp)
                lw      $s6, 0xD8+var_10($sp)
                lw      $s5, 0xD8+var_14($sp)
                lw      $s4, 0xD8+var_18($sp)
                lw      $s3, 0xD8+var_1C($sp)
                lw      $s2, 0xD8+var_20($sp)
                lw      $s1, 0xD8+var_24($sp)
                lw      $s0, 0xD8+var_28($sp)
                jr      $ra
                addiu   $sp, 0xD8
 # ---------------------------------------------------------------------------

loc_1F014:                               # CODE XREF: ssl3_output_cert_chain+AC↑j
                lw      $a0, 4($s4)
                sra     $a1, $s0, 16
                addiu   $v0, $a0, 7
                sw      $v0, 0xD8+var_B8($sp)
                sb      $a1, 7($a0)
                lw      $v0, 0xD8+var_B8($sp)
                sra     $v1, $s0, 8
                sb      $v1, 1($v0)
                lw      $v0, 0xD8+var_B8($sp)
                la      $t9, i2d_X509
                sb      $s0, 2($v0)
                lw      $v0, 0xD8+var_B8($sp)
                move    $a0, $s1
                addiu   $v0, 3
                sw      $v0, 0xD8+var_B8($sp)
                jalr    $t9 ; i2d_X509
                addiu   $a1, $sp, 0xD8+var_B8
                b       loc_1EECC
                lw      $gp, 0xD8+var_C0($sp)
 # ---------------------------------------------------------------------------

loc_1F060:                               # CODE XREF: ssl3_output_cert_chain+160↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x93
                li      $a2, 0xB
                b       loc_1ED38
                sw      $zero, 0xD8+var_C8($sp)
 # ---------------------------------------------------------------------------

loc_1F078:                               # CODE XREF: ssl3_output_cert_chain+1E8↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x128
                li      $a2, 7
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0xD8+var_C8($sp)
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, X509_STORE_CTX_cleanup
                jalr    $t9 ; X509_STORE_CTX_cleanup
                move    $a0, $fp
                lw      $gp, 0xD8+var_C0($sp)
                b       loc_1ED48
                move    $v0, $zero
 # End of function ssl3_output_cert_chain


 # =============== S U B R O U T I N E =======================================


                .globl SSLv23_method
SSLv23_method:                           # DATA XREF: LOAD:000022A8↑o
                la      $gp, (off_5A360+0x7FF0 - SSLv23_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58C24 - 0x60000)
 # End of function SSLv23_method


 # =============== S U B R O U T I N E =======================================


sub_1F0C8:                               # DATA XREF: .data.rel.ro:00058C80↓o
                la      $gp, (off_5A360+0x7FF0 - sub_1F0C8)
                addu    $gp, $t9
                li      $v0, 2
                beq     $a0, $v0, loc_1F120
                li      $v0, 0x300
                beq     $a0, $v0, loc_1F12C
                li      $v0, 0x301
                beq     $a0, $v0, loc_1F138
                li      $v0, 0x302
                bne     $a0, $v0, loc_1F100
                la      $t9, TLSv1_1_method
                jr      $t9 ; TLSv1_1_method
                nop
 # ---------------------------------------------------------------------------

loc_1F100:                               # CODE XREF: sub_1F0C8+28↑j
                li      $v0, 0x303
                beq     $a0, $v0, loc_1F114
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_1F114:                               # CODE XREF: sub_1F0C8+3C↑j
                la      $t9, TLSv1_2_method
                jr      $t9 ; TLSv1_2_method
                nop
 # ---------------------------------------------------------------------------

loc_1F120:                               # CODE XREF: sub_1F0C8+10↑j
                la      $t9, _ftext
                jr      $t9 ; _ftext
                nop
 # ---------------------------------------------------------------------------

loc_1F12C:                               # CODE XREF: sub_1F0C8+18↑j
                la      $t9, SSLv3_method
                jr      $t9 ; SSLv3_method
                nop
 # ---------------------------------------------------------------------------

loc_1F138:                               # CODE XREF: sub_1F0C8+20↑j
                la      $t9, TLSv1_method
                jr      $t9 ; TLSv1_method
                nop
 # End of function sub_1F0C8


 # =============== S U B R O U T I N E =======================================


                .globl SSLv23_server_method
SSLv23_server_method:                    # DATA XREF: LOAD:00002278↑o
                la      $gp, (off_5A360+0x7FF0 - SSLv23_server_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58C98 - 0x60000)
 # End of function SSLv23_server_method


 # =============== S U B R O U T I N E =======================================


sub_1F15C:                               # DATA XREF: .data.rel.ro:00058CF4↓o
                la      $gp, (off_5A360+0x7FF0 - sub_1F15C)
                addu    $gp, $t9
                li      $v0, 2
                beq     $a0, $v0, loc_1F1B4
                li      $v0, 0x300
                beq     $a0, $v0, loc_1F1C0
                li      $v0, 0x301
                beq     $a0, $v0, loc_1F1CC
                li      $v0, 0x302
                bne     $a0, $v0, loc_1F194
                la      $t9, TLSv1_1_server_method
                jr      $t9 ; TLSv1_1_server_method
                nop
 # ---------------------------------------------------------------------------

loc_1F194:                               # CODE XREF: sub_1F15C+28↑j
                li      $v0, 0x303
                beq     $a0, $v0, loc_1F1A8
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_1F1A8:                               # CODE XREF: sub_1F15C+3C↑j
                la      $t9, TLSv1_2_server_method
                jr      $t9 ; TLSv1_2_server_method
                nop
 # ---------------------------------------------------------------------------

loc_1F1B4:                               # CODE XREF: sub_1F15C+10↑j
                la      $t9, SSLv2_server_method
                jr      $t9 ; SSLv2_server_method
                nop
 # ---------------------------------------------------------------------------

loc_1F1C0:                               # CODE XREF: sub_1F15C+18↑j
                la      $t9, SSLv3_server_method
                jr      $t9 ; SSLv3_server_method
                nop
 # ---------------------------------------------------------------------------

loc_1F1CC:                               # CODE XREF: sub_1F15C+20↑j
                la      $t9, TLSv1_server_method
                jr      $t9 ; TLSv1_server_method
                nop
 # End of function sub_1F15C


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_get_client_hello
ssl23_get_client_hello:                  # CODE XREF: ssl23_accept+E8↓p
                                         # DATA XREF: LOAD:000038E8↑o ...

var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_48          = -0x48
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_37          = -0x37
var_36          = -0x36
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl23_get_client_hello)
                addu    $gp, $t9
                addiu   $sp, -0x68
                sw      $ra, 0x68+var_4($sp)
                sw      $fp, 0x68+var_8($sp)
                sw      $s7, 0x68+var_C($sp)
                sw      $s6, 0x68+var_10($sp)
                sw      $s5, 0x68+var_14($sp)
                sw      $s4, 0x68+var_18($sp)
                sw      $s3, 0x68+var_1C($sp)
                sw      $s2, 0x68+var_20($sp)
                sw      $s1, 0x68+var_24($sp)
                sw      $s0, 0x68+var_28($sp)
                sw      $gp, 0x68+var_48($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2210
                beq     $v1, $v0, loc_1F764
                move    $s5, $a0
                move    $s7, $zero
                move    $s1, $zero

loc_1F22C:                               # CODE XREF: ssl23_get_client_hello+724↓j
                                         # ssl23_get_client_hello+760↓j ...
                li      $v0, 0x2211
                beq     $v1, $v0, loc_1F2AC
                li      $v0, 1
                beq     $s1, $v0, loc_1F540
                nop

loc_1F240:                               # CODE XREF: ssl23_get_client_hello+420↓j
                addiu   $v0, $s1, -2
                sltiu   $v0, 2
                bnez    $v0, loc_1F4CC
                move    $s0, $s1

loc_1F250:                               # CODE XREF: ssl23_get_client_hello+360↓j
                                         # ssl23_get_client_hello+500↓j ...
                addiu   $v0, $s0, -1
                sltiu   $v0, 3
                beqz    $v0, loc_1F70C
                la      $t9, ERR_put_error
                la      $t9, SSL_accept
                sw      $zero, 0x44($s5)
                jalr    $t9 ; SSL_accept
                move    $a0, $s5
                lw      $gp, 0x68+var_48($sp)
                move    $s7, $v0

loc_1F278:                               # CODE XREF: ssl23_get_client_hello:loc_1F690↓j
                                         # ssl23_get_client_hello+4E0↓j ...
                move    $v0, $s7
                lw      $ra, 0x68+var_4($sp)
                lw      $fp, 0x68+var_8($sp)
                lw      $s7, 0x68+var_C($sp)
                lw      $s6, 0x68+var_10($sp)
                lw      $s5, 0x68+var_14($sp)
                lw      $s4, 0x68+var_18($sp)
                lw      $s3, 0x68+var_1C($sp)
                lw      $s2, 0x68+var_20($sp)
                lw      $s1, 0x68+var_24($sp)
                lw      $s0, 0x68+var_28($sp)
                jr      $ra
                addiu   $sp, 0x68
 # ---------------------------------------------------------------------------

loc_1F2AC:                               # CODE XREF: ssl23_get_client_hello+58↑j
                lw      $s0, 0x4C($s5)

loc_1F2B0:                               # CODE XREF: ssl23_get_client_hello+878↓j
                                         # ssl23_get_client_hello+8D0↓j ...
                lbu     $v0, 0($s0)
                lbu     $a0, 1($s0)
                andi    $v0, 0x7F
                sll     $v0, 8
                or      $s7, $v0, $a0
                lbu     $s0, 4($s0)
                slti    $v1, $s7, 0x1001
                beqz    $v1, loc_1F74C
                sw      $s0, 0x68+var_30($sp)
                la      $t9, ssl23_read_bytes
                move    $a0, $s5
                jalr    $t9 ; ssl23_read_bytes
                addiu   $a1, $s7, 2
                blez    $v0, loc_1F690
                lw      $gp, 0x68+var_48($sp)
                lw      $a1, 0x4C($s5)
                lw      $a2, 0x50($s5)
                la      $t9, ssl3_finish_mac
                addiu   $a1, 2
                addiu   $a2, -2
                jalr    $t9 ; ssl3_finish_mac
                move    $a0, $s5
                lw      $t9, 0x64($s5)
                beqz    $t9, loc_1F348
                lw      $gp, 0x68+var_48($sp)
                lw      $v0, 0x50($s5)
                lw      $a3, 0x4C($s5)
                lw      $v1, 0x68($s5)
                addiu   $v0, -2
                sw      $v0, 0x68+var_58($sp)
                sw      $v1, 0x68+var_50($sp)
                sw      $s5, 0x68+var_54($sp)
                addiu   $a3, 2
                move    $a0, $zero
                li      $a1, 2
                jalr    $t9
                move    $a2, $zero
                lw      $gp, 0x68+var_48($sp)

loc_1F348:                               # CODE XREF: ssl23_get_client_hello+134↑j
                lw      $s4, 0x4C($s5)
                lw      $t0, 0x3C($s5)
                lbu     $v0, 5($s4)
                lbu     $v1, 7($s4)
                lbu     $a3, 6($s4)
                lbu     $a0, 9($s4)
                lbu     $a1, 8($s4)
                sll     $v0, 8
                sll     $v1, 8
                lbu     $a2, 0xA($s4)
                or      $s6, $a3, $v0
                or      $a1, $v1
                sll     $a0, 8
                or      $a2, $a0
                addu    $fp, $a1, $s6
                addu    $v0, $a2, $fp
                lw      $v1, 0x50($s5)
                addiu   $v0, 0xB
                bne     $v0, $v1, loc_1F698
                lw      $s3, 4($t0)
                li      $s0, 0x20  # ' '
                sltiu   $v1, $a2, 0x21  # '!'
                move    $s1, $s0
                movn    $s1, $a2, $v1
                li      $v0, 1
                li      $v1, 3
                sb      $v1, 4($s3)
                sb      $v0, 0($s3)
                lw      $v0, 0x68+var_30($sp)
                la      $t9, memset
                addiu   $s2, $s3, 6
                move    $a0, $s2
                move    $a1, $zero
                li      $a2, 0x20  # ' '
                jalr    $t9 ; memset
                sb      $v0, 5($s3)
                lw      $gp, 0x68+var_48($sp)
                subu    $s0, $s1
                la      $t9, memcpy
                addiu   $a1, $s4, 0xB
                addu    $a0, $s0, $s2
                move    $a2, $s1
                jalr    $t9 ; memcpy
                addu    $a1, $fp, $a1
                addiu   $s2, $s3, 0x27  # '''
                lw      $gp, 0x68+var_48($sp)
                sb      $zero, 0x26($s3)
                addiu   $a2, $s3, 0x29  # ')'
                beqz    $s6, loc_1F740
                addiu   $t0, $s3, 1
                lui     $v0, 0xAAAA
                addiu   $v1, $s6, -1
                li      $v0, 0xAAAAAAAB
                multu   $v1, $v0
                addiu   $a0, $s4, 3
                mfhi    $v1
                move    $a1, $s4
                srl     $v1, 1
                sll     $v0, $v1, 1
                addu    $v0, $v1
                addu    $a0, $v0
                move    $a3, $zero

loc_1F440:                               # CODE XREF: ssl23_get_client_hello+290↓j
                lbu     $v0, 0xB($a1)
                bnez    $v0, loc_1F464
                nop
                lbu     $v1, 0xC($a1)
                addiu   $a3, 2
                sb      $v1, 0($a2)
                lbu     $v0, 0xD($a1)
                sb      $v0, 1($a2)
                addiu   $a2, 2

loc_1F464:                               # CODE XREF: ssl23_get_client_hello+26C↑j
                addiu   $a1, 3
                bne     $a1, $a0, loc_1F440
                sra     $v0, $a3, 8
                andi    $v1, $v0, 0xFF
                andi    $v0, $a3, 0xFF

loc_1F478:                               # CODE XREF: ssl23_get_client_hello+56C↓j
                sb      $v0, 1($s2)
                li      $v0, 1
                sb      $v1, 0($s2)
                sb      $v0, 0($a2)
                sb      $zero, 1($a2)
                lw      $v1, 0x3C($s5)
                li      $a1, 1
                lw      $v0, 4($v1)
                li      $s1, 2
                subu    $v0, $a2, $v0
                addiu   $v0, -2
                sra     $v1, $v0, 16
                sra     $a0, $v0, 8
                sb      $v1, 0($t0)
                sb      $a0, 1($t0)
                sb      $v0, 2($t0)
                lw      $v1, 0x58($s5)
                li      $s0, 2
                sw      $v0, 0x33C($v1)
                sw      $a1, 0x340($v1)
                sw      $a1, 0x34C($v1)

loc_1F4CC:                               # CODE XREF: ssl23_get_client_hello+70↑j
                la      $t9, ssl_init_wbio_buffer
                move    $a0, $s5
                jalr    $t9 ; ssl_init_wbio_buffer
                li      $a1, 1
                beqz    $v0, loc_1F658
                lw      $gp, 0x68+var_48($sp)
                li      $v0, 0x2110
                li      $v1, 3
                beq     $s1, $v1, loc_1F600
                sw      $v0, 0x34($s5)
                lw      $v0, 0x58($s5)
                sw      $zero, 0x50($s5)
                sw      $zero, 0xF4($v0)
                sw      $zero, 0xF8($v0)

loc_1F504:                               # CODE XREF: ssl23_get_client_hello+464↓j
                lw      $v1, 0($s5)
                li      $v0, 0x303
                beq     $v1, $v0, loc_1F6EC
                li      $v0, 0x302
                beq     $v1, $v0, loc_1F720
                li      $v0, 0x301
                beq     $v1, $v0, loc_1F6C0
                la      $t9, SSLv3_server_method
                jalr    $t9 ; SSLv3_server_method
                nop
                lw      $v1, 0x10($v0)
                lw      $gp, 0x68+var_48($sp)
                sw      $v0, 8($s5)
                b       loc_1F250
                sw      $v1, 0x20($s5)
 # ---------------------------------------------------------------------------

loc_1F540:                               # CODE XREF: ssl23_get_client_hello+60↑j
                lw      $v0, 0x54($s5)
                beqz    $v0, loc_1F644
                la      $t9, ssl2_clear
                jalr    $t9 ; ssl2_clear
                move    $a0, $s5
                lw      $gp, 0x68+var_48($sp)

loc_1F558:                               # CODE XREF: ssl23_get_client_hello+478↓j
                lw      $v0, 0x58($s5)
                beqz    $v0, loc_1F570
                la      $t9, ssl3_free
                jalr    $t9 ; ssl3_free
                move    $a0, $s5
                lw      $gp, 0x68+var_48($sp)

loc_1F570:                               # CODE XREF: ssl23_get_client_hello+384↑j
                la      $t9, BUF_MEM_grow_clean
                lw      $a0, 0x3C($s5)
                jalr    $t9 ; BUF_MEM_grow_clean
                li      $a1, 0x3FFF
                beqz    $v0, loc_1F658
                lw      $gp, 0x68+var_48($sp)
                lw      $v0, 0xF8($s5)
                lui     $a0, 0x600
                li      $v1, 0x2010
                and     $v0, $a0
                beq     $v0, $a0, loc_1F6E0
                sw      $v1, 0x34($s5)
                lw      $a0, 0x54($s5)
                li      $v0, 1
                sw      $v0, 0xC($a0)

loc_1F5AC:                               # CODE XREF: ssl23_get_client_hello+50C↓j
                lw      $s0, 0x30($a0)
                la      $t9, memcpy
                li      $v0, 0xF0
                move    $a0, $s0
                addiu   $a1, $sp, 0x68+var_40
                move    $a2, $s7
                sw      $v0, 0x38($s5)
                sw      $s7, 0x50($s5)
                jalr    $t9 ; memcpy
                sw      $s0, 0x4C($s5)
                lw      $gp, 0x68+var_48($sp)
                lw      $v1, 0x54($s5)
                la      $t9, SSLv2_server_method
                sw      $zero, 0x2C($v1)
                jalr    $t9 ; SSLv2_server_method
                sw      $s7, 0x28($v1)
                lw      $v1, 0x10($v0)
                lw      $gp, 0x68+var_48($sp)
                sw      $v0, 8($s5)
                b       loc_1F240
                sw      $v1, 0x20($s5)
 # ---------------------------------------------------------------------------

loc_1F600:                               # CODE XREF: ssl23_get_client_hello+314↑j
                lw      $a0, 0x58($s5)
                li      $v0, 0xF0
                lw      $v1, 0xEC($a0)
                sw      $v0, 0x38($s5)
                beqz    $v1, loc_1F854
                sw      $s7, 0x50($s5)

loc_1F618:                               # CODE XREF: ssl23_get_client_hello+690↓j
                lw      $a0, 0xEC($a0)
                la      $t9, memcpy
                sw      $a0, 0x4C($s5)
                addiu   $a1, $sp, 0x68+var_40
                jalr    $t9 ; memcpy
                move    $a2, $s7
                lw      $gp, 0x68+var_48($sp)
                lw      $v1, 0x58($s5)
                sw      $s7, 0xF8($v1)
                b       loc_1F504
                sw      $zero, 0xF4($v1)
 # ---------------------------------------------------------------------------

loc_1F644:                               # CODE XREF: ssl23_get_client_hello+36C↑j
                la      $t9, ssl2_new
                jalr    $t9 ; ssl2_new
                move    $a0, $s5
                bnez    $v0, loc_1F558
                lw      $gp, 0x68+var_48($sp)

loc_1F658:                               # CODE XREF: ssl23_get_client_hello+304↑j
                                         # ssl23_get_client_hello+3A8↑j ...
                li      $s7, 0xFFFFFFFF
                move    $v0, $s7
                lw      $ra, 0x68+var_4($sp)
                lw      $fp, 0x68+var_8($sp)
                lw      $s7, 0x68+var_C($sp)
                lw      $s6, 0x68+var_10($sp)
                lw      $s5, 0x68+var_14($sp)
                lw      $s4, 0x68+var_18($sp)
                lw      $s3, 0x68+var_1C($sp)
                lw      $s2, 0x68+var_20($sp)
                lw      $s1, 0x68+var_24($sp)
                lw      $s0, 0x68+var_28($sp)
                jr      $ra
                addiu   $sp, 0x68
 # ---------------------------------------------------------------------------

loc_1F690:                               # CODE XREF: ssl23_get_client_hello+10C↑j
                b       loc_1F278
                move    $s7, $v0
 # ---------------------------------------------------------------------------

loc_1F698:                               # CODE XREF: ssl23_get_client_hello+1B8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x68+var_58($sp)
                li      $a0, 0x14
                li      $a1, 0x76  # 'v'
                li      $a2, 0xD5

loc_1F6AC:                               # CODE XREF: ssl23_get_client_hello+540↓j
                                         # ssl23_get_client_hello+584↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x68+var_48($sp)
                b       loc_1F278
                li      $s7, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_1F6C0:                               # CODE XREF: ssl23_get_client_hello+344↑j
                la      $t9, TLSv1_server_method
                jalr    $t9 ; TLSv1_server_method
                nop
                lw      $v1, 0x10($v0)
                lw      $gp, 0x68+var_48($sp)
                sw      $v0, 8($s5)
                b       loc_1F250
                sw      $v1, 0x20($s5)
 # ---------------------------------------------------------------------------

loc_1F6E0:                               # CODE XREF: ssl23_get_client_hello+3C0↑j
                lw      $a0, 0x54($s5)
                b       loc_1F5AC
                sw      $zero, 0xC($a0)
 # ---------------------------------------------------------------------------

loc_1F6EC:                               # CODE XREF: ssl23_get_client_hello+334↑j
                la      $t9, TLSv1_2_server_method
                jalr    $t9 ; TLSv1_2_server_method
                nop
                lw      $v1, 0x10($v0)
                lw      $gp, 0x68+var_48($sp)
                sw      $v0, 8($s5)
                b       loc_1F250
                sw      $v1, 0x20($s5)
 # ---------------------------------------------------------------------------

loc_1F70C:                               # CODE XREF: ssl23_get_client_hello+80↑j
                li      $a0, 0x14
                li      $a1, 0x76  # 'v'
                li      $a2, 0xFC
                b       loc_1F6AC
                sw      $zero, 0x68+var_58($sp)
 # ---------------------------------------------------------------------------

loc_1F720:                               # CODE XREF: ssl23_get_client_hello+33C↑j
                la      $t9, TLSv1_1_server_method
                jalr    $t9 ; TLSv1_1_server_method
                nop
                lw      $v1, 0x10($v0)
                lw      $gp, 0x68+var_48($sp)
                sw      $v0, 8($s5)
                b       loc_1F250
                sw      $v1, 0x20($s5)
 # ---------------------------------------------------------------------------

loc_1F740:                               # CODE XREF: ssl23_get_client_hello+230↑j
                move    $v1, $zero
                b       loc_1F478
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_1F74C:                               # CODE XREF: ssl23_get_client_hello+F4↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x76  # 'v'
                li      $a2, 0xD6
                b       loc_1F6AC
                sw      $zero, 0x68+var_58($sp)
 # ---------------------------------------------------------------------------

loc_1F764:                               # CODE XREF: ssl23_get_client_hello+44↑j
                la      $t9, ssl3_setup_buffers
                jalr    $t9 ; ssl3_setup_buffers
                nop
                beqz    $v0, loc_1F658
                lw      $gp, 0x68+var_48($sp)
                la      $t9, ssl23_read_bytes
                move    $a0, $s5
                jalr    $t9 ; ssl23_read_bytes
                li      $a1, 0xB
                move    $s7, $v0
                li      $v0, 0xB
                bne     $s7, $v0, loc_1F278
                lw      $gp, 0x68+var_48($sp)
                lw      $s0, 0x4C($s5)
                lwl     $v0, 3($s0)
                lwl     $v1, 7($s0)
                lwr     $v0, 0($s0)
                lwr     $v1, 4($s0)
                sw      $v0, 0x68+var_40($sp)
                sw      $v1, 0x68+var_3C($sp)
                lbu     $v0, 8($s0)
                sb      $v0, 0x68+var_38($sp)
                lbu     $v1, 9($s0)
                sb      $v1, 0x68+var_37($sp)
                lbu     $v0, 0xA($s0)
                sb      $v0, 0x68+var_36($sp)
                lbu     $a0, 0($s0)
                sll     $v0, $a0, 24
                sra     $v0, 24
                bltz    $v0, loc_1F904
                li      $v0, 1
                li      $v0, 0x16

loc_1F7E4:                               # CODE XREF: ssl23_get_client_hello+730↓j
                bne     $a0, $v0, loc_1F800
                la      $a0, loc_40000
                lbu     $v1, 1($s0)
                li      $v0, 3
                beq     $v1, $v0, loc_1F870
                li      $v0, 1

loc_1F7FC:                               # CODE XREF: ssl23_get_client_hello+6C8↓j
                la      $a0, loc_40000

loc_1F800:                               # CODE XREF: ssl23_get_client_hello:loc_1F7E4↑j
                                         # ssl23_get_client_hello+69C↓j
                la      $t9, strncmp
                addiu   $a0, (aGet - 0x40000)  # "GET "
                move    $a1, $s0
                jalr    $t9 ; strncmp
                li      $a2, 4
                beqz    $v0, loc_1F83C
                lw      $gp, 0x68+var_48($sp)
                la      $a0, loc_40000
                la      $t9, strncmp
                addiu   $a0, (aPost - 0x40000)  # "POST "
                move    $a1, $s0
                jalr    $t9 ; strncmp
                li      $a2, 5
                bnez    $v0, loc_1F940
                lw      $gp, 0x68+var_48($sp)

loc_1F83C:                               # CODE XREF: ssl23_get_client_hello+63C↑j
                                         # ssl23_get_client_hello+780↓j ...
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x76  # 'v'
                li      $a2, 0x9C
                b       loc_1F6AC
                sw      $zero, 0x68+var_58($sp)
 # ---------------------------------------------------------------------------

loc_1F854:                               # CODE XREF: ssl23_get_client_hello+438↑j
                la      $t9, ssl3_setup_read_buffer
                jalr    $t9 ; ssl3_setup_read_buffer
                move    $a0, $s5
                beqz    $v0, loc_1F658
                lw      $gp, 0x68+var_48($sp)
                b       loc_1F618
                lw      $a0, 0x58($s5)
 # ---------------------------------------------------------------------------

loc_1F870:                               # CODE XREF: ssl23_get_client_hello+61C↑j
                lbu     $v1, 5($s0)
                bne     $v1, $v0, loc_1F800
                la      $a0, loc_40000
                lbu     $v1, 3($s0)
                bnez    $v1, loc_1F898
                nop
                lbu     $v0, 4($s0)
                sltiu   $v0, 5
                bnez    $v0, loc_1F9BC
                li      $a0, 1

loc_1F898:                               # CODE XREF: ssl23_get_client_hello+6A8↑j
                lbu     $a0, 9($s0)
                sltiu   $v0, $a0, 3
                bnez    $v0, loc_1F7FC
                nop
                bnez    $v1, loc_1F8C0
                sltiu   $v0, $a0, 4
                lbu     $v0, 4($s0)
                sltiu   $v0, 6
                bnez    $v0, loc_1F9B8
                sltiu   $v0, $a0, 4

loc_1F8C0:                               # CODE XREF: ssl23_get_client_hello+6D0↑j
                beqz    $v0, loc_1F8DC
                nop
                lbu     $a0, 0xA($s0)
                beqz    $a0, loc_1FA58
                slti    $v0, $a0, 3
                bnez    $v0, loc_1F9C0
                li      $v0, 1

loc_1F8DC:                               # CODE XREF: ssl23_get_client_hello:loc_1F8C0↑j
                lw      $v1, 0xF8($s5)
                lui     $v0, 0x800
                and     $v0, $v1, $v0
                bnez    $v0, loc_1F9CC
                lui     $v0, 0x1000
                lw      $v1, 0x34($s5)
                li      $v0, 0x303
                li      $s1, 3
                b       loc_1F22C
                sw      $v0, 0($s5)
 # ---------------------------------------------------------------------------

loc_1F904:                               # CODE XREF: ssl23_get_client_hello+600↑j
                lbu     $v1, 2($s0)
                bne     $v1, $v0, loc_1F7E4
                li      $v0, 0x16
                lbu     $a0, 3($s0)
                bnez    $a0, loc_1F92C
                li      $v0, 3
                lbu     $v1, 4($s0)
                li      $v0, 2
                beq     $v1, $v0, loc_1FADC
                li      $v0, 3

loc_1F92C:                               # CODE XREF: ssl23_get_client_hello+73C↑j
                beq     $a0, $v0, loc_1FA1C
                nop

loc_1F934:                               # CODE XREF: ssl23_get_client_hello+7C0↓j
                                         # ssl23_get_client_hello+828↓j ...
                lw      $v1, 0x34($s5)
                b       loc_1F22C
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_1F940:                               # CODE XREF: ssl23_get_client_hello+65C↑j
                la      $a0, loc_40000
                la      $t9, strncmp
                addiu   $a0, (aHead - 0x40000)  # "HEAD "
                move    $a1, $s0
                jalr    $t9 ; strncmp
                li      $a2, 5
                beqz    $v0, loc_1F83C
                lw      $gp, 0x68+var_48($sp)
                la      $a0, loc_40000
                la      $t9, strncmp
                addiu   $a0, (aPut - 0x40000)  # "PUT "
                move    $a1, $s0
                jalr    $t9 ; strncmp
                li      $a2, 4
                beqz    $v0, loc_1F83C
                lw      $gp, 0x68+var_48($sp)
                la      $a0, loc_40000
                la      $t9, strncmp
                addiu   $a0, (aConnect - 0x40000)  # "CONNECT"
                move    $a1, $s0
                jalr    $t9 ; strncmp
                li      $a2, 7
                bnez    $v0, loc_1F934
                lw      $gp, 0x68+var_48($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x76  # 'v'
                li      $a2, 0x9B
                b       loc_1F6AC
                sw      $zero, 0x68+var_58($sp)
 # ---------------------------------------------------------------------------

loc_1F9B8:                               # CODE XREF: ssl23_get_client_hello+6E0↑j
                li      $a0, 1

loc_1F9BC:                               # CODE XREF: ssl23_get_client_hello+6B8↑j
                li      $v0, 1

loc_1F9C0:                               # CODE XREF: ssl23_get_client_hello+6FC↑j
                beq     $a0, $v0, loc_1F9EC
                lw      $v1, 0xF8($s5)
                lui     $v0, 0x1000

loc_1F9CC:                               # CODE XREF: ssl23_get_client_hello+710↑j
                and     $v0, $v1, $v0
                bnez    $v0, loc_1F9F0
                lui     $v0, 0x400
                lw      $v1, 0x34($s5)
                li      $v0, 0x302
                li      $s1, 3
                b       loc_1F22C
                sw      $v0, 0($s5)
 # ---------------------------------------------------------------------------

loc_1F9EC:                               # CODE XREF: ssl23_get_client_hello:loc_1F9C0↑j
                lui     $v0, 0x400

loc_1F9F0:                               # CODE XREF: ssl23_get_client_hello+7F8↑j
                and     $v0, $v1, $v0
                beqz    $v0, loc_1FA78
                lui     $v0, 0x200
                and     $v0, $v1, $v0
                bnez    $v0, loc_1F934
                nop

loc_1FA08:                               # CODE XREF: ssl23_get_client_hello+88C↓j
                lw      $v1, 0x34($s5)
                li      $v0, 0x300
                li      $s1, 3
                b       loc_1F22C
                sw      $v0, 0($s5)
 # ---------------------------------------------------------------------------

loc_1FA1C:                               # CODE XREF: ssl23_get_client_hello:loc_1F92C↑j
                lbu     $v1, 4($s0)
                beqz    $v1, loc_1FAFC
                sltiu   $v0, $v1, 3
                bnez    $v0, loc_1FAB0
                sltiu   $v0, $v1, 2
                lw      $v1, 0xF8($s5)
                lui     $v0, 0x800
                and     $v0, $v1, $v0
                bnez    $v0, loc_1FA90
                lui     $v0, 0x1000
                li      $v0, 0x303
                li      $v1, 0x2211
                sw      $v0, 0($s5)
                b       loc_1F2B0
                sw      $v1, 0x34($s5)
 # ---------------------------------------------------------------------------

loc_1FA58:                               # CODE XREF: ssl23_get_client_hello+6F4↑j
                lw      $v1, 0xF8($s5)
                lui     $v0, 0x200
                and     $v0, $v1, $v0
                beqz    $v0, loc_1FA08
                lui     $v0, 0x400
                and     $v0, $v1, $v0
                bnez    $v0, loc_1F934
                nop

loc_1FA78:                               # CODE XREF: ssl23_get_client_hello+81C↑j
                lw      $v1, 0x34($s5)
                li      $v0, 0x301
                li      $s1, 3
                b       loc_1F22C
                sw      $v0, 0($s5)
 # ---------------------------------------------------------------------------

loc_1FA8C:                               # CODE XREF: ssl23_get_client_hello:loc_1FAB0↓j
                lui     $v0, 0x1000

loc_1FA90:                               # CODE XREF: ssl23_get_client_hello+864↑j
                and     $v0, $v1, $v0
                bnez    $v0, loc_1FABC
                lui     $v0, 0x400
                li      $v0, 0x302
                li      $v1, 0x2211
                sw      $v0, 0($s5)
                b       loc_1F2B0
                sw      $v1, 0x34($s5)
 # ---------------------------------------------------------------------------

loc_1FAB0:                               # CODE XREF: ssl23_get_client_hello+850↑j
                beqz    $v0, loc_1FA8C
                lw      $v1, 0xF8($s5)
                lui     $v0, 0x400

loc_1FABC:                               # CODE XREF: ssl23_get_client_hello+8BC↑j
                and     $v0, $v1, $v0
                bnez    $v0, loc_1FB04
                lui     $v0, 0x200
                li      $v0, 0x301
                li      $v1, 0x2211
                sw      $v0, 0($s5)
                b       loc_1F2B0
                sw      $v1, 0x34($s5)
 # ---------------------------------------------------------------------------

loc_1FADC:                               # CODE XREF: ssl23_get_client_hello+74C↑j
                lw      $v0, 0xF8($s5)
                lui     $v1, 0x100
                and     $v0, $v1
                bnez    $v0, loc_1F934
                nop
                lw      $v1, 0x34($s5)

loc_1FAF4:                               # CODE XREF: ssl23_get_client_hello+958↓j
                b       loc_1F22C
                li      $s1, 1
 # ---------------------------------------------------------------------------

loc_1FAFC:                               # CODE XREF: ssl23_get_client_hello+848↑j
                lw      $v1, 0xF8($s5)
                lui     $v0, 0x200

loc_1FB04:                               # CODE XREF: ssl23_get_client_hello+8E8↑j
                and     $v0, $v1, $v0
                bnez    $v0, loc_1FB24
                lui     $v0, 0x100
                li      $v0, 0x300
                li      $v1, 0x2211
                sw      $v0, 0($s5)
                b       loc_1F2B0
                sw      $v1, 0x34($s5)
 # ---------------------------------------------------------------------------

loc_1FB24:                               # CODE XREF: ssl23_get_client_hello+930↑j
                and     $v0, $v1, $v0
                bnez    $v0, loc_1F934
                nop
                b       loc_1FAF4
                lw      $v1, 0x34($s5)
 # End of function ssl23_get_client_hello


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_accept
ssl23_accept:                            # DATA XREF: LOAD:000049C8↑o
                                         # .got:ssl23_accept_ptr↓o

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl23_accept)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_28($sp)
                la      $t9, time
                move    $s2, $a0
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x40+var_28($sp)
                la      $t9, RAND_add
                sw      $v0, 0x40+var_20($sp)
                addiu   $a0, $sp, 0x40+var_20
                li      $a1, 4
                move    $a2, $zero
                jalr    $t9 ; RAND_add
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x40+var_28($sp)
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $s3, 0xD0($s2)
                lw      $gp, 0x40+var_28($sp)
                beqz    $s3, loc_1FD94
                sw      $zero, 0($v0)

loc_1FBC0:                               # CODE XREF: ssl23_accept+260↓j
                lw      $v0, 0x1C($s2)
                la      $t9, SSL_state
                addiu   $v0, 1
                sw      $v0, 0x1C($s2)
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x3000
                beqz    $v0, loc_1FC60
                lw      $gp, 0x40+var_28($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x4000
                bnez    $v0, loc_1FC60
                lw      $gp, 0x40+var_28($sp)

loc_1FBFC:                               # CODE XREF: ssl23_accept+134↓j
                lw      $s0, 0x34($s2)

loc_1FC00:                               # CODE XREF: ssl23_accept:loc_1FD8C↓j
                                         # ssl23_accept+2A4↓j
                slti    $v0, $s0, 0x2212
                beqz    $v0, loc_1FC74
                li      $v0, 0x4000
                slti    $v0, $s0, 0x2210
                bnez    $v0, loc_1FCF0
                li      $v0, 0x2000
                la      $t9, ssl23_get_client_hello
                sw      $zero, 0x30($s2)
                jalr    $t9 ; ssl23_get_client_hello
                move    $a0, $s2
                move    $s0, $v0
                bltz    $v0, loc_1FCA8
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x1C($s2)
                lw      $ra, 0x40+var_8($sp)
                addiu   $v0, -1
                sw      $v0, 0x1C($s2)
                lw      $s3, 0x40+var_C($sp)
                move    $v0, $s0
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1FC60:                               # CODE XREF: ssl23_accept+A4↑j
                                         # ssl23_accept+BC↑j
                la      $t9, SSL_clear
                jalr    $t9 ; SSL_clear
                move    $a0, $s2
                b       loc_1FBFC
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_1FC74:                               # CODE XREF: ssl23_accept+CC↑j
                beq     $s0, $v0, loc_1FD00
                li      $v0, 0x6000
                beq     $s0, $v0, loc_1FD04
                li      $v0, 1
                la      $t9, ERR_put_error

loc_1FC88:                               # CODE XREF: ssl23_accept+1C0↓j
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x73  # 's'
                li      $a2, 0xFF
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                li      $s0, 0xFFFFFFFF

loc_1FCA8:                               # CODE XREF: ssl23_accept+F4↑j
                                         # ssl23_accept:loc_1FDE4↓j
                lw      $v0, 0x1C($s2)
                addiu   $v0, -1
                beqz    $s3, loc_1FCD0
                sw      $v0, 0x1C($s2)
                move    $a0, $s2
                li      $a1, 0x2002
                move    $t9, $s3
                jalr    $t9
                move    $a2, $s0
                lw      $gp, 0x40+var_28($sp)

loc_1FCD0:                               # CODE XREF: ssl23_accept+178↑j
                move    $v0, $s0
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_1FCF0:                               # CODE XREF: ssl23_accept+D8↑j
                beq     $s0, $v0, loc_1FD00
                li      $v0, 0x2003
                bne     $s0, $v0, loc_1FC88
                la      $t9, ERR_put_error

loc_1FD00:                               # CODE XREF: ssl23_accept:loc_1FC74↑j
                                         # ssl23_accept:loc_1FCF0↑j
                li      $v0, 1

loc_1FD04:                               # CODE XREF: ssl23_accept+144↑j
                beqz    $s3, loc_1FD24
                sw      $v0, 0x24($s2)
                move    $a0, $s2
                li      $a1, 0x10
                move    $t9, $s3
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x40+var_28($sp)

loc_1FD24:                               # CODE XREF: ssl23_accept:loc_1FD04↑j
                lw      $v1, 0x3C($s2)
                li      $v0, 0x2000
                beqz    $v1, loc_1FDA0
                sw      $v0, 4($s2)

loc_1FD34:                               # CODE XREF: ssl23_accept+298↓j
                la      $t9, ssl3_init_finished_mac
                jalr    $t9 ; ssl3_init_finished_mac
                move    $a0, $s2
                lw      $a0, 0xDC($s2)
                li      $v1, 0x2210
                lw      $gp, 0x40+var_28($sp)
                sw      $v1, 0x34($s2)
                lw      $v0, 0x40($a0)
                addiu   $v0, 1
                sw      $v0, 0x40($a0)
                beqz    $s3, loc_1FDD8
                sw      $zero, 0x44($s2)
                lw      $s1, 0x34($s2)
                beq     $s1, $s0, loc_1FD8C
                li      $a1, 0x2001
                sw      $s0, 0x34($s2)
                move    $a0, $s2
                move    $t9, $s3
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x40+var_28($sp)
                sw      $s1, 0x34($s2)

loc_1FD8C:                               # CODE XREF: ssl23_accept+230↑j
                b       loc_1FC00
                move    $s0, $s1
 # ---------------------------------------------------------------------------

loc_1FD94:                               # CODE XREF: ssl23_accept+80↑j
                lw      $v0, 0xDC($s2)
                b       loc_1FBC0
                lw      $s3, 0x9C($v0)
 # ---------------------------------------------------------------------------

loc_1FDA0:                               # CODE XREF: ssl23_accept+1F4↑j
                la      $t9, BUF_MEM_new
                jalr    $t9 ; BUF_MEM_new
                nop
                move    $s1, $v0
                beqz    $v0, loc_1FDE4
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BUF_MEM_grow
                move    $a0, $v0
                jalr    $t9 ; BUF_MEM_grow
                li      $a1, 0x4000
                beqz    $v0, loc_1FDE4
                lw      $gp, 0x40+var_28($sp)
                b       loc_1FD34
                sw      $s1, 0x3C($s2)
 # ---------------------------------------------------------------------------

loc_1FDD8:                               # CODE XREF: ssl23_accept+224↑j
                lw      $s1, 0x34($s2)
                b       loc_1FC00
                move    $s0, $s1
 # ---------------------------------------------------------------------------

loc_1FDE4:                               # CODE XREF: ssl23_accept+278↑j
                                         # ssl23_accept+290↑j
                b       loc_1FCA8
                li      $s0, 0xFFFFFFFF
 # End of function ssl23_accept


 # =============== S U B R O U T I N E =======================================


                .globl SSLv23_client_method
SSLv23_client_method:                    # DATA XREF: LOAD:00001DB8↑o
                la      $gp, (off_5A360+0x7FF0 - SSLv23_client_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58D0C - 0x60000)
 # End of function SSLv23_client_method


 # =============== S U B R O U T I N E =======================================


sub_1FE04:                               # DATA XREF: .data.rel.ro:00058D68↓o
                la      $gp, (off_5A360+0x7FF0 - sub_1FE04)
                addu    $gp, $t9
                li      $v0, 2
                beq     $a0, $v0, loc_1FE5C
                li      $v0, 0x300
                beq     $a0, $v0, loc_1FE68
                li      $v0, 0x301
                beq     $a0, $v0, loc_1FE74
                li      $v0, 0x302
                bne     $a0, $v0, loc_1FE3C
                la      $t9, TLSv1_1_client_method
                jr      $t9 ; TLSv1_1_client_method
                nop
 # ---------------------------------------------------------------------------

loc_1FE3C:                               # CODE XREF: sub_1FE04+28↑j
                li      $v0, 0x303
                beq     $a0, $v0, loc_1FE50
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_1FE50:                               # CODE XREF: sub_1FE04+3C↑j
                la      $t9, TLSv1_2_client_method
                jr      $t9 ; TLSv1_2_client_method
                nop
 # ---------------------------------------------------------------------------

loc_1FE5C:                               # CODE XREF: sub_1FE04+10↑j
                la      $t9, SSLv2_client_method
                jr      $t9 ; SSLv2_client_method
                nop
 # ---------------------------------------------------------------------------

loc_1FE68:                               # CODE XREF: sub_1FE04+18↑j
                la      $t9, SSLv3_client_method
                jr      $t9 ; SSLv3_client_method
                nop
 # ---------------------------------------------------------------------------

loc_1FE74:                               # CODE XREF: sub_1FE04+20↑j
                la      $t9, TLSv1_client_method
                jr      $t9 ; TLSv1_client_method
                nop
 # End of function sub_1FE04


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_connect
ssl23_connect:                           # DATA XREF: LOAD:00004868↑o
                                         # .got:ssl23_connect_ptr↓o

var_68          = -0x68
var_64          = -0x64
var_60          = -0x60
var_58          = -0x58
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_47          = -0x47
var_46          = -0x46
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl23_connect)
                addu    $gp, $t9
                addiu   $sp, -0x78
                sw      $ra, 0x78+var_4($sp)
                sw      $fp, 0x78+var_8($sp)
                sw      $s7, 0x78+var_C($sp)
                sw      $s6, 0x78+var_10($sp)
                sw      $s5, 0x78+var_14($sp)
                sw      $s4, 0x78+var_18($sp)
                sw      $s3, 0x78+var_1C($sp)
                sw      $s2, 0x78+var_20($sp)
                sw      $s1, 0x78+var_24($sp)
                sw      $s0, 0x78+var_28($sp)
                sw      $gp, 0x78+var_58($sp)
                la      $t9, time
                move    $s3, $a0
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x78+var_58($sp)
                la      $t9, RAND_add
                sw      $v0, 0x78+var_50($sp)
                addiu   $a0, $sp, 0x78+var_50
                li      $a1, 4
                move    $a2, $zero
                jalr    $t9 ; RAND_add
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x78+var_58($sp)
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $s7, 0xD0($s3)
                lw      $gp, 0x78+var_58($sp)
                beqz    $s7, loc_2057C
                sw      $zero, 0($v0)

loc_1FF1C:                               # CODE XREF: ssl23_connect+700↓j
                lw      $v0, 0x1C($s3)
                la      $t9, SSL_state
                addiu   $v0, 1
                sw      $v0, 0x1C($s3)
                jalr    $t9 ; SSL_state
                move    $a0, $s3
                andi    $v0, 0x3000
                beqz    $v0, loc_20008
                lw      $gp, 0x78+var_58($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s3
                andi    $v0, 0x4000
                bnez    $v0, loc_20008
                lw      $gp, 0x78+var_58($sp)

loc_1FF58:                               # CODE XREF: ssl23_connect+194↓j
                lw      $s4, 0x34($s3)
                slti    $v0, $s4, 0x1212
                sw      $v0, 0x78+var_2C($sp)

loc_1FF64:                               # CODE XREF: ssl23_connect+24C↓j
                                         # ssl23_connect+278↓j ...
                lw      $a0, 0x78+var_2C($sp)
                beqz    $a0, loc_2001C
                li      $v0, 0x4000
                slti    $v0, $s4, 0x1210
                beqz    $v0, loc_20100
                li      $v0, 0x1000
                beq     $s4, $v0, loc_20038
                li      $v0, 0x1003
                beq     $s4, $v0, loc_20038
                la      $t9, ERR_put_error

loc_1FF8C:                               # CODE XREF: ssl23_connect+1B0↓j
                                         # ssl23_connect+2CC↓j
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0x75  # 'u'
                li      $a2, 0xFF

loc_1FF9C:                               # CODE XREF: ssl23_connect+C84↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)
                li      $s0, 0xFFFFFFFF

loc_1FFAC:                               # CODE XREF: ssl23_connect:loc_20174↓j
                                         # ssl23_connect+2FC↓j ...
                lw      $v0, 0x1C($s3)

loc_1FFB0:                               # CODE XREF: ssl23_connect+774↓j
                addiu   $v0, -1
                sw      $v0, 0x1C($s3)

loc_1FFB8:                               # CODE XREF: ssl23_connect+D10↓j
                beqz    $s7, loc_1FFD4
                move    $a0, $s3
                li      $a1, 0x1002
                move    $t9, $s7
                jalr    $t9
                move    $a2, $s0
                lw      $gp, 0x78+var_58($sp)

loc_1FFD4:                               # CODE XREF: ssl23_connect:loc_1FFB8↑j
                move    $v0, $s0
                lw      $ra, 0x78+var_4($sp)
                lw      $fp, 0x78+var_8($sp)
                lw      $s7, 0x78+var_C($sp)
                lw      $s6, 0x78+var_10($sp)
                lw      $s5, 0x78+var_14($sp)
                lw      $s4, 0x78+var_18($sp)
                lw      $s3, 0x78+var_1C($sp)
                lw      $s2, 0x78+var_20($sp)
                lw      $s1, 0x78+var_24($sp)
                lw      $s0, 0x78+var_28($sp)

locret_20000:                            # DATA XREF: ssl3_ctx_ctrl:loc_18EF0↑o
                                         # ssl3_final_finish_mac+30↑o ...
                jr      $ra
                addiu   $sp, 0x78
 # ---------------------------------------------------------------------------

loc_20008:                               # CODE XREF: ssl23_connect+B8↑j
                                         # ssl23_connect+D0↑j
                la      $t9, SSL_clear
                jalr    $t9 ; SSL_clear
                move    $a0, $s3
                b       loc_1FF58
                lw      $gp, 0x78+var_58($sp)
 # ---------------------------------------------------------------------------

loc_2001C:                               # CODE XREF: ssl23_connect+E8↑j
                beq     $s4, $v0, loc_20038
                slti    $v0, $s4, 0x4001
                bnez    $v0, loc_20148
                addiu   $v0, $s4, -0x1220
                li      $v0, 0x5000
                bne     $s4, $v0, loc_1FF8C
                la      $t9, ERR_put_error

loc_20038:                               # CODE XREF: ssl23_connect+FC↑j
                                         # ssl23_connect+104↑j ...
                lw      $v0, 0xC0($s3)
                bnez    $v0, loc_20AF8
                la      $t9, ERR_put_error
                beqz    $s7, loc_20064
                sw      $zero, 0x24($s3)
                move    $a0, $s3
                li      $a1, 0x10
                move    $t9, $s7
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x78+var_58($sp)

loc_20064:                               # CODE XREF: ssl23_connect+1C4↑j
                lw      $v1, 0x3C($s3)
                li      $v0, 0x1000
                beqz    $v1, loc_205FC
                sw      $v0, 4($s3)

loc_20074:                               # CODE XREF: ssl23_connect+7AC↓j
                la      $t9, ssl3_setup_buffers
                jalr    $t9 ; ssl3_setup_buffers
                move    $a0, $s3

loc_20080:                               # DATA XREF: ssl_get_algorithm2+44↑o
                beqz    $v0, loc_20574
                lw      $gp, 0x78+var_58($sp)
                la      $t9, ssl3_init_finished_mac
                jalr    $t9 ; ssl3_init_finished_mac
                move    $a0, $s3
                lw      $a0, 0xDC($s3)
                li      $v1, 0x1210
                lw      $gp, 0x78+var_58($sp)
                sw      $v1, 0x34($s3)
                lw      $v0, 0x34($a0)
                addiu   $v0, 1
                sw      $v0, 0x34($a0)
                sw      $zero, 0x44($s3)

loc_200B4:                               # CODE XREF: ssl23_connect+640↓j
                                         # ssl23_connect+680↓j
                lw      $v0, 0xE0($s3)
                bnez    $v0, loc_20184
                la      $t9, BIO_ctrl
                beqz    $s7, loc_201A0
                nop

loc_200C8:                               # CODE XREF: ssl23_connect+318↓j
                lw      $s0, 0x34($s3)
                beq     $s4, $s0, loc_1FF64
                move    $a0, $s3
                sw      $s4, 0x34($s3)
                li      $a1, 0x1001
                move    $t9, $s7
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x78+var_58($sp)
                slti    $v0, $s0, 0x1212
                move    $s4, $s0
                sw      $v0, 0x78+var_2C($sp)
                b       loc_1FF64
                sw      $s0, 0x34($s3)
 # ---------------------------------------------------------------------------

loc_20100:                               # CODE XREF: ssl23_connect+F4↑j
                lw      $s1, 0xF8($s3)
                srl     $v0, $s1, 24
                xori    $v0, 1
                andi    $fp, $v0, 1
                bnez    $fp, loc_20588
                sw      $zero, 0x30($s3)

loc_20118:                               # CODE XREF: ssl23_connect+764↓j
                lui     $v1, 0x1600
                lui     $a0, 0x600
                lui     $a1, 0x200
                move    $a2, $zero

loc_20128:                               # CODE XREF: ssl23_connect+7C0↓j
                lui     $v0, 0x800
                and     $v0, $s1, $v0
                beqz    $v0, loc_201B0
                and     $v0, $v1, $s1
                beq     $v1, $v0, loc_201B0
                li      $v0, 0x302
                b       loc_201B8
                sw      $v0, 0x78+var_30($sp)
 # ---------------------------------------------------------------------------

loc_20148:                               # CODE XREF: ssl23_connect+1A4↑j
                sltiu   $v0, 2
                beqz    $v0, loc_1FF8C
                la      $t9, ERR_put_error
                la      $t9, ssl23_read_bytes
                move    $a0, $s3
                jalr    $t9 ; ssl23_read_bytes
                li      $a1, 7
                move    $s0, $v0
                li      $v0, 7
                beq     $s0, $v0, loc_20508
                lw      $gp, 0x78+var_58($sp)

loc_20174:                               # CODE XREF: ssl23_connect+C60↓j
                bltz    $s0, loc_1FFAC
                nop
                b       loc_1FFAC
                move    $s7, $zero
 # ---------------------------------------------------------------------------

loc_20184:                               # CODE XREF: ssl23_connect+238↑j
                lw      $a0, 0x10($s3)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                bnez    $s7, loc_200C8
                lw      $gp, 0x78+var_58($sp)

loc_201A0:                               # CODE XREF: ssl23_connect+240↑j
                lw      $s4, 0x34($s3)
                slti    $v1, $s4, 0x1212
                b       loc_1FF64
                sw      $v1, 0x78+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_201B0:                               # CODE XREF: ssl23_connect+2B0↑j
                                         # ssl23_connect+2B8↑j
                li      $v1, 0x303
                sw      $v1, 0x78+var_30($sp)

loc_201B8:                               # CODE XREF: ssl23_connect+2C0↑j
                lui     $v0, 0x1000
                and     $v0, $s1, $v0
                beqz    $v0, loc_201E4
                lui     $v0, 0x400
                and     $v0, $a0, $s1
                xor     $v0, $a0
                lw      $a0, 0x78+var_30($sp)
                li      $v1, 0x301
                movn    $a0, $v1, $v0
                sw      $a0, 0x78+var_30($sp)
                lui     $v0, 0x400

loc_201E4:                               # CODE XREF: ssl23_connect+340↑j
                and     $v0, $s1, $v0
                beqz    $v0, loc_2020C
                lui     $v0, 0x200
                lw      $t9, 0x78+var_30($sp)
                and     $v0, $a1, $s1
                xor     $v0, $a1
                li      $v1, 0x300
                movn    $t9, $v1, $v0
                sw      $t9, 0x78+var_30($sp)
                lui     $v0, 0x200

loc_2020C:                               # CODE XREF: ssl23_connect+368↑j
                and     $v0, $s1, $v0
                beqz    $v0, loc_20420
                lw      $v1, 0x78+var_30($sp)
                and     $v0, $a2, $s1
                beq     $v0, $a2, loc_20420
                li      $v0, 2
                sw      $v0, 0x78+var_30($sp)
                lw      $a0, 0x34($s3)
                lw      $v0, 0x3C($s3)
                li      $v1, 0x1210
                bne     $a0, $v1, loc_20454
                lw      $s5, 4($v0)

loc_2023C:                               # CODE XREF: ssl23_connect+5CC↓j
                la      $t9, time
                move    $a0, $zero
                jalr    $t9 ; time
                lw      $s0, 0x58($s3)
                lw      $gp, 0x78+var_58($sp)
                srl     $a0, $v0, 16
                srl     $a1, $v0, 8
                la      $t9, RAND_pseudo_bytes
                srl     $v1, $v0, 24
                sb      $a0, 0xC1($s0)
                sb      $a1, 0xC2($s0)
                sb      $v1, 0xC0($s0)
                sb      $v0, 0xC3($s0)
                addiu   $a0, $s0, 0xC4
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x1C
                blez    $v0, loc_20574
                lw      $gp, 0x78+var_58($sp)
                lw      $a0, 0x78+var_30($sp)
                li      $v0, 0x303
                beq     $a0, $v0, loc_20938
                li      $v0, 0x302
                beq     $a0, $v0, loc_20948
                lw      $v1, 0x78+var_30($sp)
                li      $v0, 0x301
                beq     $v1, $v0, loc_20700
                li      $v0, 0x300
                beq     $v1, $v0, loc_20AE8
                li      $v0, 2
                bne     $v1, $v0, loc_20BC0
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_40($sp)
                sw      $v0, 0x78+var_3C($sp)

loc_202C0:                               # CODE XREF: ssl23_connect+88C↓j
                                         # ssl23_connect+AC0↓j ...
                lw      $v1, 0x78+var_30($sp)
                beqz    $fp, loc_20714
                sw      $v1, 0x108($s3)
                li      $v0, 1
                sb      $v0, 2($s5)
                lw      $a0, 0x78+var_40($sp)
                la      $t9, SSL_get_ciphers
                sb      $a0, 3($s5)
                lw      $v0, 0x78+var_3C($sp)
                move    $a0, $s3
                jalr    $t9 ; SSL_get_ciphers
                sb      $v0, 4($s5)
                lw      $gp, 0x78+var_58($sp)
                addiu   $s6, $s5, 0xB
                la      $t9, ssl_cipher_list_to_bytes
                move    $a1, $v0
                move    $a0, $s3
                move    $a2, $s6
                jalr    $t9 ; ssl_cipher_list_to_bytes
                move    $a3, $zero
                addiu   $v1, $s5, 2
                lw      $gp, 0x78+var_58($sp)
                move    $s0, $v0
                beqz    $v0, loc_20B4C
                sw      $v1, 0x78+var_34($sp)
                sra     $v0, 8
                sb      $v0, 5($s5)
                sb      $s0, 6($s5)
                sb      $zero, 7($s5)
                sb      $zero, 8($s5)
                lw      $v1, 0xF8($s3)
                li      $a1, 0x10
                andi    $v1, 2
                li      $v0, 0x20  # ' '
                move    $s1, $a1
                movz    $s1, $v0, $v1
                sb      $zero, 9($s5)
                sb      $s1, 0xA($s5)
                lw      $a0, 0x58($s3)
                move    $s2, $a1
                addiu   $v0, $a0, 0xC0
                sw      $zero, 0xC0($a0)
                sw      $zero, 0x1C($v0)
                sw      $zero, 4($v0)
                sw      $zero, 8($v0)
                sw      $zero, 0xC($v0)
                sw      $zero, 0x10($v0)
                sw      $zero, 0x14($v0)
                sw      $zero, 0x18($v0)
                lw      $a0, 0x58($s3)
                la      $t9, RAND_pseudo_bytes
                movz    $s2, $zero, $v1
                addiu   $a0, 0xC0
                addu    $a0, $s2, $a0
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a1, $s1
                blez    $v0, loc_20574
                lw      $gp, 0x78+var_58($sp)
                lw      $a1, 0x58($s3)
                la      $t9, memcpy
                addu    $s0, $s6, $s0
                addiu   $a1, 0xC0
                move    $a0, $s0
                addu    $a1, $s2, $a1
                jalr    $t9 ; memcpy
                move    $a2, $s1
                lw      $a0, 0x78+var_34($sp)
                addu    $s0, $s1
                subu    $s0, $a0
                li      $v0, 0xFFFFFF80
                sra     $v1, $s0, 8
                lw      $gp, 0x78+var_58($sp)
                or      $v1, $v0
                sb      $v1, 0($s5)
                sb      $s0, 1($s5)
                addiu   $v0, $s0, 2
                la      $t9, ssl3_finish_mac
                lw      $a1, 0x78+var_34($sp)
                sw      $v0, 0x44($s3)
                sw      $zero, 0x48($s3)
                move    $a2, $s0
                jalr    $t9 ; ssl3_finish_mac
                move    $a0, $s3
                lw      $gp, 0x78+var_58($sp)

loc_20410:                               # CODE XREF: ssl23_connect+AA0↓j
                li      $v0, 0x1211
                sw      $v0, 0x34($s3)
                b       loc_20454
                sw      $zero, 0x48($s3)
 # ---------------------------------------------------------------------------

loc_20420:                               # CODE XREF: ssl23_connect+390↑j
                                         # ssl23_connect+39C↑j
                li      $v0, 2
                beq     $v1, $v0, loc_20440
                nop
                lw      $v1, 0x118($s3)
                lw      $v0, 0x120($s3)
                movn    $fp, $zero, $v1
                nor     $v0, $zero, $v0
                movn    $fp, $zero, $v0

loc_20440:                               # CODE XREF: ssl23_connect+5A4↑j
                lw      $v0, 0x3C($s3)
                lw      $a0, 0x34($s3)
                li      $v1, 0x1210
                beq     $a0, $v1, loc_2023C
                lw      $s5, 4($v0)

loc_20454:                               # CODE XREF: ssl23_connect+3B4↑j
                                         # ssl23_connect+598↑j
                la      $t9, ssl23_write_bytes
                jalr    $t9 ; ssl23_write_bytes
                move    $a0, $s3
                move    $s0, $v0
                slti    $v0, 2
                bnez    $v0, loc_205EC
                lw      $gp, 0x78+var_58($sp)
                lw      $t9, 0x64($s3)
                beqz    $t9, loc_204BC
                li      $v0, 0x1220
                beqz    $fp, loc_204C8
                addiu   $v0, $s0, -5
                lw      $v1, 0x3C($s3)
                lw      $a0, 0x68($s3)
                lw      $a3, 4($v1)
                addiu   $v0, $s0, -2
                sw      $a0, 0x78+var_60($sp)
                sw      $v0, 0x78+var_68($sp)
                sw      $s3, 0x78+var_64($sp)
                addiu   $a3, 2
                li      $a0, 1
                li      $a1, 2
                jalr    $t9
                move    $a2, $zero
                lw      $gp, 0x78+var_58($sp)

loc_204B8:                               # CODE XREF: ssl23_connect:loc_205EC↓j
                li      $v0, 0x1220

loc_204BC:                               # CODE XREF: ssl23_connect+5F4↑j
                sw      $v0, 0x34($s3)
                b       loc_200B4
                sw      $zero, 0x44($s3)
 # ---------------------------------------------------------------------------

loc_204C8:                               # CODE XREF: ssl23_connect+5FC↑j
                lw      $v1, 0x3C($s3)
                lw      $a0, 0x68($s3)
                lw      $a3, 4($v1)
                lw      $a1, 0x78+var_30($sp)
                sw      $v0, 0x78+var_68($sp)
                sw      $a0, 0x78+var_60($sp)
                sw      $s3, 0x78+var_64($sp)
                addiu   $a3, 5
                li      $a0, 1
                jalr    $t9
                li      $a2, 0x16
                lw      $gp, 0x78+var_58($sp)
                li      $v0, 0x1220
                sw      $v0, 0x34($s3)
                b       loc_200B4
                sw      $zero, 0x44($s3)
 # ---------------------------------------------------------------------------

loc_20508:                               # CODE XREF: ssl23_connect+2EC↑j
                lw      $s0, 0x4C($s3)
                ulw     $v0, 0($s0)
                sw      $v0, 0x78+var_4C($sp)
                lbu     $v1, 4($s0)
                sb      $v1, 0x78+var_48($sp)
                lbu     $v0, 5($s0)
                sb      $v0, 0x78+var_47($sp)
                lbu     $v1, 6($s0)
                sb      $v1, 0x78+var_46($sp)
                lbu     $a0, 0($s0)
                sll     $v0, $a0, 24
                sra     $v0, 24
                bltz    $v0, loc_20974
                li      $v0, 4

loc_20544:                               # CODE XREF: ssl23_connect+AF8↓j
                                         # ssl23_connect+B04↓j ...
                lbu     $v1, 1($s0)
                li      $v0, 3
                beq     $v1, $v0, loc_20648
                nop

loc_20554:                               # CODE XREF: ssl23_connect+C94↓j
                la      $t9, ERR_put_error

loc_20558:                               # CODE XREF: ssl23_connect+7D0↓j
                                         # ssl23_connect+7E4↓j ...
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0x77  # 'w'
                li      $a2, 0xFC
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)

loc_20574:                               # CODE XREF: ssl23_connect:loc_20080↑j
                                         # ssl23_connect+3FC↑j ...
                b       loc_1FFAC
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_2057C:                               # CODE XREF: ssl23_connect+94↑j
                lw      $v0, 0xDC($s3)
                b       loc_1FF1C
                lw      $s7, 0x9C($v0)
 # ---------------------------------------------------------------------------

loc_20588:                               # CODE XREF: ssl23_connect+290↑j
                la      $t9, SSL_get_ciphers
                jalr    $t9 ; SSL_get_ciphers
                move    $a0, $s3
                lw      $gp, 0x78+var_58($sp)
                move    $s2, $v0
                b       loc_205BC
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_205A4:                               # CODE XREF: ssl23_connect+75C↓j
                jalr    $t9 ; sk_value
                nop
                lw      $v1, 0x1C($v0)
                li      $v0, 1
                beq     $v1, $v0, loc_20634
                lw      $gp, 0x78+var_58($sp)

loc_205BC:                               # CODE XREF: ssl23_connect+71C↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s2
                lw      $gp, 0x78+var_58($sp)
                slt     $v0, $s0, $v0
                move    $a1, $s0
                move    $a0, $s2
                addiu   $s0, 1
                bnez    $v0, loc_205A4
                la      $t9, sk_value
                b       loc_20118
                move    $fp, $zero
 # ---------------------------------------------------------------------------

loc_205EC:                               # CODE XREF: ssl23_connect+5E8↑j
                bgtz    $s0, loc_204B8
                nop
                b       loc_1FFB0
                lw      $v0, 0x1C($s3)
 # ---------------------------------------------------------------------------

loc_205FC:                               # CODE XREF: ssl23_connect+1EC↑j
                la      $t9, BUF_MEM_new
                jalr    $t9 ; BUF_MEM_new
                nop
                move    $s0, $v0
                beqz    $v0, loc_20574
                lw      $gp, 0x78+var_58($sp)
                la      $t9, BUF_MEM_grow
                move    $a0, $v0
                jalr    $t9 ; BUF_MEM_grow
                li      $a1, 0x4000
                beqz    $v0, loc_20B74
                lw      $gp, 0x78+var_58($sp)
                b       loc_20074
                sw      $s0, 0x3C($s3)
 # ---------------------------------------------------------------------------

loc_20634:                               # CODE XREF: ssl23_connect+734↑j
                lui     $v1, 0x1700
                lui     $a0, 0x700
                lui     $a1, 0x300
                b       loc_20128
                lui     $a2, 0x100
 # ---------------------------------------------------------------------------

loc_20648:                               # CODE XREF: ssl23_connect+6CC↑j
                lbu     $a1, 2($s0)
                sltiu   $v0, $a1, 4
                beqz    $v0, loc_20558
                la      $t9, ERR_put_error
                li      $v0, 0x16
                beq     $a0, $v0, loc_20B0C
                li      $v0, 0x15
                bne     $a0, $v0, loc_20558
                nop
                lbu     $v0, 3($s0)
                bnez    $v0, loc_20558
                li      $v0, 2
                lbu     $v1, 4($s0)
                bne     $v1, $v0, loc_20558
                nop

loc_20684:                               # CODE XREF: ssl23_connect+C9C↓j
                bnez    $a1, loc_206A4
                li      $v0, 1
                lw      $v0, 0xF8($s3)
                lui     $v1, 0x200
                and     $v0, $v1
                beqz    $v0, loc_20D40
                nop
                li      $v0, 1

loc_206A4:                               # CODE XREF: ssl23_connect:loc_20684↑j
                beq     $a1, $v0, loc_20BE4
                lui     $v1, 0x400
                li      $v0, 2

loc_206B0:                               # CODE XREF: ssl23_connect+D6C↓j
                beq     $a1, $v0, loc_20D4C
                lui     $v1, 0x1000

loc_206B8:                               # CODE XREF: ssl23_connect+ED4↓j
                li      $v0, 3
                bne     $a1, $v0, loc_206DC
                la      $t9, ERR_put_error
                lw      $v0, 0xF8($s3)
                lui     $v1, 0x800
                and     $v0, $v1
                beqz    $v0, loc_20D64
                la      $t9, TLSv1_2_client_method
                la      $t9, ERR_put_error

loc_206DC:                               # CODE XREF: ssl23_connect+83C↑j
                                         # ssl23_connect+B20↓j
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0x77  # 'w'
                li      $a2, 0x102
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)
                b       loc_1FFAC
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_20700:                               # CODE XREF: ssl23_connect+420↑j
                li      $a0, 3
                li      $t9, 1
                sw      $a0, 0x78+var_40($sp)
                b       loc_202C0
                sw      $t9, 0x78+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_20714:                               # CODE XREF: ssl23_connect+444↑j
                lw      $t9, 0x78+var_40($sp)
                addiu   $s0, $s5, 0x2E  # '.'
                sb      $t9, 9($s5)
                lw      $v0, 0x78+var_3C($sp)
                la      $t9, SSL_get_ciphers
                sb      $v0, 0xA($s5)
                lw      $v1, 0x58($s3)
                addiu   $v0, $s5, 0xB
                lw      $a3, 0xC0($v1)
                addiu   $v1, 0xC0
                lw      $t3, 0x1C($v1)
                lw      $t1, 0x14($v1)
                lw      $t2, 0x18($v1)
                lw      $a0, 4($v1)
                lw      $a1, 8($v1)
                lw      $a2, 0xC($v1)
                lw      $t0, 0x10($v1)
                usw     $a3, 0($v0)
                usw     $a0, 4($v0)
                usw     $a1, 8($v0)
                usw     $a2, 0xC($v0)
                usw     $t0, 0x10($v0)
                usw     $t1, 0x14($v0)
                usw     $t2, 0x18($v0)
                usw     $t3, 0x1C($v0)
                move    $a0, $s3
                jalr    $t9 ; SSL_get_ciphers
                sb      $zero, 0x2B($s5)
                lw      $gp, 0x78+var_58($sp)
                la      $a3, ssl3_put_cipher_by_char
                la      $t9, ssl_cipher_list_to_bytes
                move    $a2, $s0
                move    $a1, $v0
                jalr    $t9 ; ssl_cipher_list_to_bytes
                move    $a0, $s3
                addiu   $v1, $s5, 9
                sw      $v1, 0x78+var_38($sp)
                lw      $gp, 0x78+var_58($sp)
                move    $a2, $v0
                beqz    $v0, loc_20B4C
                addiu   $v1, $s5, 0x2C  # ','
                sra     $v0, 8
                sb      $v0, 0x2C($s5)
                sb      $a2, 1($v1)
                lw      $v0, 0xF8($s3)
                lui     $v1, 2
                and     $v0, $v1
                bnez    $v0, loc_20928
                addu    $s2, $s0, $a2
                lw      $v0, 0xDC($s3)
                lw      $a0, 0x98($v0)
                beqz    $a0, loc_20928
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                addiu   $s6, $s2, 1
                move    $s1, $v0
                addiu   $v0, 1
                lw      $gp, 0x78+var_58($sp)
                blez    $s1, loc_20858
                sb      $v0, 0($s2)
                move    $s0, $zero

loc_20828:                               # CODE XREF: ssl23_connect+9CC↓j
                lw      $v0, 0xDC($s3)
                la      $t9, sk_value
                lw      $a0, 0x98($v0)
                jalr    $t9 ; sk_value
                move    $a1, $s0
                lw      $v1, 0($v0)
                addu    $v0, $s2, $s0
                addiu   $s0, 1
                lw      $gp, 0x78+var_58($sp)
                bne     $s0, $s1, loc_20828
                sb      $v1, 1($v0)
                addu    $s6, $s1

loc_20858:                               # CODE XREF: ssl23_connect+99C↑j
                                         # ssl23_connect+AB0↓j
                la      $t9, ssl_prepare_clienthello_tlsext
                sb      $zero, 0($s6)
                jalr    $t9 ; ssl_prepare_clienthello_tlsext
                move    $a0, $s3
                blez    $v0, loc_20B98
                lw      $gp, 0x78+var_58($sp)
                la      $t9, ssl_add_clienthello_tlsext
                addiu   $a1, $s6, 1
                move    $a0, $s3
                jalr    $t9 ; ssl_add_clienthello_tlsext
                addiu   $a2, $s5, 0x4000
                move    $t0, $v0
                beqz    $v0, loc_20B24
                lw      $gp, 0x78+var_58($sp)
                lw      $a0, 0x78+var_38($sp)
                addiu   $a1, $s5, 6
                subu    $v0, $a0
                addiu   $a3, $v0, 4
                li      $t1, 1
                srl     $v1, $v0, 16
                srl     $a0, $v0, 8
                sltiu   $a2, $a3, 0x4001
                sb      $v1, 6($s5)
                sb      $t1, 5($s5)
                sb      $a0, 1($a1)
                sb      $v0, 2($a1)
                beqz    $a2, loc_20B24
                addiu   $a1, $s5, 5
                li      $v0, 0x16
                sb      $v0, 0($s5)
                lw      $t9, 0x78+var_40($sp)
                li      $v0, 3
                sb      $t9, 1($s5)
                lw      $a2, 0x108($s3)
                sra     $v1, $a2, 8
                beq     $v1, $v0, loc_2095C
                addiu   $a0, $s5, 2
                lw      $v0, 0x78+var_3C($sp)

loc_208F0:                               # CODE XREF: ssl23_connect+AE0↓j
                addiu   $v1, $a0, 1
                sb      $v0, 0($a0)

loc_208F8:                               # CODE XREF: ssl23_connect+AEC↓j
                subu    $a2, $t0, $s5
                la      $t9, ssl3_finish_mac
                sra     $v0, $a3, 8
                sb      $a3, 1($v1)
                sb      $v0, 0($v1)
                move    $a0, $s3
                sw      $a2, 0x44($s3)
                sw      $zero, 0x48($s3)
                jalr    $t9 ; ssl3_finish_mac
                addiu   $a2, -5
                b       loc_20410
                lw      $gp, 0x78+var_58($sp)
 # ---------------------------------------------------------------------------

loc_20928:                               # CODE XREF: ssl23_connect+970↑j
                                         # ssl23_connect+980↑j
                li      $v0, 1
                addiu   $s6, $s2, 1
                b       loc_20858
                sb      $v0, 0($s2)
 # ---------------------------------------------------------------------------

loc_20938:                               # CODE XREF: ssl23_connect+40C↑j
                li      $v0, 3
                sw      $v0, 0x78+var_40($sp)
                b       loc_202C0
                sw      $v0, 0x78+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_20948:                               # CODE XREF: ssl23_connect+414↑j
                li      $t9, 3
                li      $v0, 2
                sw      $t9, 0x78+var_40($sp)
                b       loc_202C0
                sw      $v0, 0x78+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_2095C:                               # CODE XREF: ssl23_connect+A64↑j
                slti    $v0, $a2, 0x302
                bnez    $v0, loc_208F0
                lw      $v0, 0x78+var_3C($sp)
                addiu   $v1, $s5, 3
                b       loc_208F8
                sb      $t1, 2($s5)
 # ---------------------------------------------------------------------------

loc_20974:                               # CODE XREF: ssl23_connect+6BC↑j
                lbu     $v1, 2($s0)
                bne     $v1, $v0, loc_20544
                nop
                lbu     $v0, 5($s0)
                bnez    $v0, loc_20544
                li      $v0, 2
                lbu     $v1, 6($s0)
                bne     $v1, $v0, loc_20544
                lui     $v1, 0x100
                lw      $v0, 0xF8($s3)
                and     $v0, $v1
                bnez    $v0, loc_206DC
                la      $t9, ERR_put_error
                lw      $v0, 0x54($s3)
                beqz    $v0, loc_20DD0
                la      $t9, ssl2_clear
                jalr    $t9 ; ssl2_clear
                move    $a0, $s3
                lw      $gp, 0x78+var_58($sp)

loc_209C0:                               # CODE XREF: ssl23_connect+F5C↓j
                lw      $v0, 0xF8($s3)
                lw      $v1, 0x58($s3)
                andi    $v0, 2
                lw      $a0, 0x54($s3)
                li      $a1, 0x10
                li      $a2, 0x20  # ' '
                movn    $a2, $a1, $v0
                addiu   $v1, 0xC0
                la      $t9, memcpy
                movz    $a1, $zero, $v0
                addu    $a1, $v1
                sw      $a2, 0x64($a0)
                jalr    $t9 ; memcpy
                addiu   $a0, 0x68  # 'h'
                lw      $v1, 0x58($s3)
                beqz    $v1, loc_20A14
                lw      $gp, 0x78+var_58($sp)
                la      $t9, ssl3_free
                jalr    $t9 ; ssl3_free
                move    $a0, $s3
                lw      $gp, 0x78+var_58($sp)

loc_20A14:                               # CODE XREF: ssl23_connect+B7C↑j
                la      $t9, BUF_MEM_grow_clean
                lw      $a0, 0x3C($s3)
                jalr    $t9 ; BUF_MEM_grow_clean
                li      $a1, 0x3FFF
                beqz    $v0, loc_20D6C
                lw      $gp, 0x78+var_58($sp)
                lw      $v0, 0x108($s3)
                li      $v1, 0x1020
                li      $a0, 2
                beq     $v0, $a0, loc_20DB0
                sw      $v1, 0x34($s3)
                lw      $v1, 0x54($s3)
                li      $v0, 1
                sw      $v0, 0xC($v1)

loc_20A4C:                               # CODE XREF: ssl23_connect:loc_20DB0↓j
                lw      $v0, 0x30($v1)
                lw      $a0, 0x78+var_4C($sp)
                li      $a1, 7
                li      $v1, 0xF0
                sw      $v1, 0x38($s3)
                sw      $a1, 0x50($s3)
                sw      $v0, 0x4C($s3)
                usw     $a0, 0($v0)
                lbu     $v1, 0x78+var_48($sp)
                la      $t9, SSLv2_client_method
                sb      $v1, 4($v0)
                lbu     $a0, 0x78+var_47($sp)
                sb      $a0, 5($v0)
                lbu     $v1, 0x78+var_46($sp)
                sb      $v1, 6($v0)
                lw      $a0, 0x54($s3)
                li      $v0, 1
                sw      $v0, 0xD4($a0)
                sw      $a1, 0x28($a0)
                jalr    $t9 ; SSLv2_client_method
                sw      $zero, 0x2C($a0)
                lw      $v1, 0x14($v0)
                lw      $gp, 0x78+var_58($sp)
                sw      $v1, 0x20($s3)
                sw      $v0, 8($s3)

loc_20AB4:                               # CODE XREF: ssl23_connect+EB8↓j
                la      $t9, ssl_get_new_session
                sw      $zero, 0x44($s3)
                move    $a0, $s3
                jalr    $t9 ; ssl_get_new_session
                move    $a1, $zero
                beqz    $v0, loc_20574
                lw      $gp, 0x78+var_58($sp)
                la      $t9, SSL_connect
                jalr    $t9 ; SSL_connect
                move    $a0, $s3
                lw      $gp, 0x78+var_58($sp)
                b       loc_20174
                move    $s0, $v0
 # ---------------------------------------------------------------------------

loc_20AE8:                               # CODE XREF: ssl23_connect+428↑j
                li      $a0, 3
                sw      $a0, 0x78+var_40($sp)
                b       loc_202C0
                sw      $zero, 0x78+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_20AF8:                               # CODE XREF: ssl23_connect+1BC↑j
                li      $a0, 0x14
                li      $a1, 0x75  # 'u'
                li      $a2, 0xDD
                b       loc_1FF9C
                sw      $zero, 0x78+var_68($sp)
 # ---------------------------------------------------------------------------

loc_20B0C:                               # CODE XREF: ssl23_connect+7DC↑j
                lbu     $v1, 5($s0)
                li      $v0, 2
                bne     $v1, $v0, loc_20554
                nop
                b       loc_20684
                nop
 # ---------------------------------------------------------------------------

loc_20B24:                               # CODE XREF: ssl23_connect+A08↑j
                                         # ssl23_connect+A40↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0x74  # 't'
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)
                b       loc_1FFAC
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_20B4C:                               # CODE XREF: ssl23_connect+49C↑j
                                         # ssl23_connect+950↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0x74  # 't'
                li      $a2, 0xB5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)
                b       loc_1FFAC
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_20B74:                               # CODE XREF: ssl23_connect+7A4↑j
                lw      $v0, 0x1C($s3)
                la      $t9, BUF_MEM_free
                addiu   $v0, -1
                move    $a0, $s0
                jalr    $t9 ; BUF_MEM_free
                sw      $v0, 0x1C($s3)
                lw      $gp, 0x78+var_58($sp)
                b       loc_1FFB8
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_20B98:                               # CODE XREF: ssl23_connect+9E8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0x74  # 't'
                li      $a2, 0xE2
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)
                b       loc_1FFAC
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_20BC0:                               # CODE XREF: ssl23_connect+430↑j
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0x74  # 't'
                li      $a2, 0xBF
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)
                b       loc_1FFAC
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_20BE4:                               # CODE XREF: ssl23_connect:loc_206A4↑j
                lw      $v0, 0xF8($s3)
                and     $v0, $v1
                bnez    $v0, loc_206B0
                li      $v0, 2
                la      $t9, TLSv1_client_method
                li      $v0, 0x301

loc_20BFC:                               # CODE XREF: ssl23_connect+EC4↓j
                                         # ssl23_connect+EDC↓j ...
                jalr    $t9
                sw      $v0, 0($s3)
                lw      $gp, 0x78+var_58($sp)
                sw      $v0, 8($s3)
                lbu     $v1, 0($s0)
                li      $v0, 0x15
                bne     $v1, $v0, loc_20CC0
                la      $t9, ssl_init_wbio_buffer
                lbu     $a2, 5($s0)
                li      $v0, 1
                beq     $a2, $v0, loc_20CC0
                addiu   $s1, $s0, 5
                lw      $t9, 0xD0($s3)
                beqz    $t9, loc_20DB8
                nop

loc_20C38:                               # CODE XREF: ssl23_connect+F40↓j
                lbu     $v0, 6($s0)
                sll     $a2, 8
                or      $a2, $v0
                move    $a0, $s3
                jalr    $t9
                li      $a1, 0x4004
                lw      $gp, 0x78+var_58($sp)
                addiu   $s0, 6

loc_20C58:                               # CODE XREF: ssl23_connect+F48↓j
                lw      $t9, 0x64($s3)
                beqz    $t9, loc_20C8C
                li      $v0, 2
                lw      $v1, 0x68($s3)
                lw      $a1, 0($s3)
                sw      $v0, 0x78+var_68($sp)
                sw      $v1, 0x78+var_60($sp)
                sw      $s3, 0x78+var_64($sp)
                move    $a3, $s1
                move    $a0, $zero
                jalr    $t9
                li      $a2, 0x15
                lw      $gp, 0x78+var_58($sp)

loc_20C8C:                               # CODE XREF: ssl23_connect+DDC↑j
                li      $v0, 1
                sw      $v0, 0x18($s3)
                lbu     $a2, 0($s0)
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_68($sp)
                addiu   $a2, 0x3E8
                li      $a0, 0x14
                li      $a1, 0x77  # 'w'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)
                b       loc_1FFAC
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_20CC0:                               # CODE XREF: ssl23_connect+D94↑j
                                         # ssl23_connect+DA4↑j
                move    $a0, $s3
                jalr    $t9 ; ssl_init_wbio_buffer
                li      $a1, 1
                beqz    $v0, loc_20574
                lw      $gp, 0x78+var_58($sp)
                lw      $a1, 0x58($s3)
                li      $s0, 7
                lw      $v0, 0xEC($a1)
                li      $v1, 0x1120
                li      $a0, 0xF0
                sw      $v1, 0x34($s3)
                sw      $a0, 0x38($s3)
                beqz    $v0, loc_20D94
                sw      $s0, 0x50($s3)

loc_20CF8:                               # CODE XREF: ssl23_connect+F28↓j
                lw      $v0, 0xEC($a1)
                lw      $a0, 0x78+var_4C($sp)
                sw      $v0, 0x4C($s3)
                usw     $a0, 0($v0)
                lbu     $v1, 0x78+var_48($sp)
                sb      $v1, 4($v0)
                lbu     $a0, 0x78+var_47($sp)
                sb      $a0, 5($v0)
                lbu     $v1, 0x78+var_46($sp)
                sb      $v1, 6($v0)
                lw      $a0, 8($s3)
                lw      $v0, 0x58($s3)
                lw      $v1, 0x14($a0)
                sw      $s0, 0xF8($v0)
                sw      $zero, 0xF4($v0)
                b       loc_20AB4
                sw      $v1, 0x20($s3)
 # ---------------------------------------------------------------------------

loc_20D40:                               # CODE XREF: ssl23_connect+818↑j
                la      $t9, SSLv3_client_method
                b       loc_20BFC
                li      $v0, 0x300
 # ---------------------------------------------------------------------------

loc_20D4C:                               # CODE XREF: ssl23_connect:loc_206B0↑j
                lw      $v0, 0xF8($s3)
                and     $v0, $v1
                bnez    $v0, loc_206B8
                la      $t9, TLSv1_1_client_method
                b       loc_20BFC
                li      $v0, 0x302
 # ---------------------------------------------------------------------------

loc_20D64:                               # CODE XREF: ssl23_connect+850↑j
                b       loc_20BFC
                li      $v0, 0x303
 # ---------------------------------------------------------------------------

loc_20D6C:                               # CODE XREF: ssl23_connect+BA4↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0x77  # 'w'
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_58($sp)
                b       loc_1FFAC
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_20D94:                               # CODE XREF: ssl23_connect+E70↑j
                la      $t9, ssl3_setup_read_buffer
                jalr    $t9 ; ssl3_setup_read_buffer
                move    $a0, $s3
                beqz    $v0, loc_20574
                lw      $gp, 0x78+var_58($sp)
                b       loc_20CF8
                lw      $a1, 0x58($s3)
 # ---------------------------------------------------------------------------

loc_20DB0:                               # CODE XREF: ssl23_connect+BB8↑j
                b       loc_20A4C
                lw      $v1, 0x54($s3)
 # ---------------------------------------------------------------------------

loc_20DB8:                               # CODE XREF: ssl23_connect+DB0↑j
                lw      $v0, 0xDC($s3)
                lw      $t9, 0x9C($v0)
                bnez    $t9, loc_20C38
                nop
                b       loc_20C58
                addiu   $s0, 6
 # ---------------------------------------------------------------------------

loc_20DD0:                               # CODE XREF: ssl23_connect+B2C↑j
                la      $t9, ssl2_new
                jalr    $t9 ; ssl2_new
                move    $a0, $s3
                bnez    $v0, loc_209C0
                lw      $gp, 0x78+var_58($sp)
                b       loc_1FFAC
                li      $s0, 0xFFFFFFFF
 # End of function ssl23_connect


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_default_timeout
ssl23_default_timeout:                   # DATA XREF: LOAD:00004B18↑o
                                         # .got:ssl23_default_timeout_ptr↓o
                jr      $ra
                li      $v0, 0x12C
 # End of function ssl23_default_timeout


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_put_cipher_by_char
ssl23_put_cipher_by_char:                # DATA XREF: LOAD:00004A68↑o
                                         # .got:ssl23_put_cipher_by_char_ptr↓o
                beqz    $a1, locret_20E14
                nop
                lw      $v0, 8($a0)
                sra     $v1, $v0, 16
                sra     $a0, $v0, 8
                sb      $v0, 2($a1)
                sb      $v1, 0($a1)
                sb      $a0, 1($a1)

locret_20E14:                            # CODE XREF: ssl23_put_cipher_by_char↑j
                jr      $ra
                li      $v0, 3
 # End of function ssl23_put_cipher_by_char


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_write
ssl23_write:                             # DATA XREF: LOAD:00004B78↑o
                                         # .got:ssl23_write_ptr↓o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl23_write)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $t9, __errno_location
                move    $s0, $a0
                move    $s1, $a1
                jalr    $t9 ; __errno_location
                move    $s2, $a2
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_state
                sw      $zero, 0($v0)
                jalr    $t9 ; SSL_state
                move    $a0, $s0
                andi    $v0, 0x3000
                beqz    $v0, loc_20E80
                lw      $gp, 0x30+var_18($sp)
                lw      $v0, 0x1C($s0)
                beqz    $v0, loc_20EAC
                nop

loc_20E80:                               # CODE XREF: ssl23_write+50↑j
                la      $t9, ssl_undefined_function
                jalr    $t9 ; ssl_undefined_function
                move    $a0, $s0
                lw      $gp, 0x30+var_18($sp)
                li      $v0, 0xFFFFFFFF

loc_20E94:                               # CODE XREF: ssl23_write+9C↓j
                                         # ssl23_write+F0↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_20EAC:                               # CODE XREF: ssl23_write+5C↑j
                lw      $t9, 0x20($s0)
                jalr    $t9
                move    $a0, $s0
                bltz    $v0, loc_20E94
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_20EEC
                la      $t9, SSL_write
                move    $a0, $s0
                move    $a1, $s1
                move    $a2, $s2
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $t9 ; SSL_write
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_20EEC:                               # CODE XREF: ssl23_write+A4↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x79  # 'y'
                li      $a2, 0xE5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_20E94
                li      $v0, 0xFFFFFFFF
 # End of function ssl23_write


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_peek
ssl23_peek:                              # DATA XREF: LOAD:00004B58↑o
                                         # .got:ssl23_peek_ptr↓o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl23_peek)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $t9, __errno_location
                move    $s0, $a0
                move    $s1, $a1
                jalr    $t9 ; __errno_location
                move    $s2, $a2
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_state
                sw      $zero, 0($v0)
                jalr    $t9 ; SSL_state
                move    $a0, $s0
                andi    $v0, 0x3000
                beqz    $v0, loc_20F78
                lw      $gp, 0x30+var_18($sp)
                lw      $v0, 0x1C($s0)
                beqz    $v0, loc_20FA4
                nop

loc_20F78:                               # CODE XREF: ssl23_peek+50↑j
                la      $t9, ssl_undefined_function
                jalr    $t9 ; ssl_undefined_function
                move    $a0, $s0
                lw      $gp, 0x30+var_18($sp)
                li      $v0, 0xFFFFFFFF

loc_20F8C:                               # CODE XREF: ssl23_peek+9C↓j
                                         # ssl23_peek+F0↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_20FA4:                               # CODE XREF: ssl23_peek+5C↑j
                lw      $t9, 0x20($s0)
                jalr    $t9
                move    $a0, $s0
                bltz    $v0, loc_20F8C
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_20FE4
                la      $t9, SSL_peek
                move    $a0, $s0
                move    $a1, $s1
                move    $a2, $s2
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $t9 ; SSL_peek
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_20FE4:                               # CODE XREF: ssl23_peek+A4↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xED
                li      $a2, 0xE5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_20F8C
                li      $v0, 0xFFFFFFFF
 # End of function ssl23_peek


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_read
ssl23_read:                              # DATA XREF: LOAD:00004838↑o
                                         # .got:ssl23_read_ptr↓o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl23_read)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $t9, __errno_location
                move    $s0, $a0
                move    $s1, $a1
                jalr    $t9 ; __errno_location
                move    $s2, $a2
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_state
                sw      $zero, 0($v0)
                jalr    $t9 ; SSL_state
                move    $a0, $s0
                andi    $v0, 0x3000
                beqz    $v0, loc_21070
                lw      $gp, 0x30+var_18($sp)
                lw      $v0, 0x1C($s0)
                beqz    $v0, loc_2109C
                nop

loc_21070:                               # CODE XREF: ssl23_read+50↑j
                la      $t9, ssl_undefined_function
                jalr    $t9 ; ssl_undefined_function
                move    $a0, $s0
                lw      $gp, 0x30+var_18($sp)
                li      $v0, 0xFFFFFFFF

loc_21084:                               # CODE XREF: ssl23_read+9C↓j
                                         # ssl23_read+F0↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_2109C:                               # CODE XREF: ssl23_read+5C↑j
                lw      $t9, 0x20($s0)
                jalr    $t9
                move    $a0, $s0
                bltz    $v0, loc_21084
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_210DC
                la      $t9, SSL_read
                move    $a0, $s0
                move    $a1, $s1
                move    $a2, $s2
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $t9 ; SSL_read
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_210DC:                               # CODE XREF: ssl23_read+A4↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x78  # 'x'
                li      $a2, 0xE5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_21084
                li      $v0, 0xFFFFFFFF
 # End of function ssl23_read


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_get_cipher_by_char
ssl23_get_cipher_by_char:                # DATA XREF: LOAD:00004768↑o
                                         # .got:ssl23_get_cipher_by_char_ptr↓o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl23_get_cipher_by_char)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_get_cipher_by_char
                jalr    $t9 ; ssl3_get_cipher_by_char
                move    $s0, $a0
                beqz    $v0, loc_21144
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_21144:                               # CODE XREF: ssl23_get_cipher_by_char+28↑j
                la      $t9, ssl2_get_cipher_by_char
                move    $a0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9 ; ssl2_get_cipher_by_char
                addiu   $sp, 0x20
 # End of function ssl23_get_cipher_by_char


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_get_cipher
ssl23_get_cipher:                        # DATA XREF: LOAD:00004AB8↑o
                                         # .got:ssl23_get_cipher_ptr↓o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl23_get_cipher)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_num_ciphers
                jalr    $t9 ; ssl3_num_ciphers
                move    $s0, $a0
                move    $v1, $v0
                sltu    $v0, $s0, $v0
                beqz    $v0, loc_211AC
                lw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_get_cipher
                move    $a0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9 ; ssl3_get_cipher
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_211AC:                               # CODE XREF: ssl23_get_cipher+30↑j
                la      $t9, ssl2_get_cipher
                subu    $a0, $s0, $v1
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9 ; ssl2_get_cipher
                addiu   $sp, 0x20
 # End of function ssl23_get_cipher


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_num_ciphers
ssl23_num_ciphers:                       # DATA XREF: LOAD:00004828↑o
                                         # .got:ssl23_num_ciphers_ptr↓o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl23_num_ciphers)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_num_ciphers
                jalr    $t9 ; ssl3_num_ciphers
                nop
                lw      $gp, 0x20+var_10($sp)
                la      $t9, ssl2_num_ciphers
                jalr    $t9 ; ssl2_num_ciphers
                move    $s0, $v0
                addu    $v0, $s0
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function ssl23_num_ciphers


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_read_bytes
ssl23_read_bytes:                        # CODE XREF: ssl23_get_client_hello+104↑p
                                         # ssl23_get_client_hello+5A8↑p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl23_read_bytes)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                lw      $a3, 0x50($a0)
                move    $s0, $a0
                sltu    $v0, $a3, $a1
                beqz    $v0, loc_212B4
                move    $s1, $a1
                lw      $s2, 0x4C($a0)

loc_21250:                               # CODE XREF: ssl23_read_bytes+7C↓j
                la      $t9, BIO_read
                li      $v0, 3
                lw      $a0, 0xC($s0)
                sw      $v0, 0x18($s0)
                subu    $a2, $s1, $a3
                jalr    $t9 ; BIO_read
                addu    $a1, $a3, $s2
                move    $v1, $v0
                blez    $v0, loc_21298
                lw      $gp, 0x28+var_18($sp)
                lw      $a3, 0x50($s0)
                li      $v0, 1
                addu    $v1, $a3
                sw      $v0, 0x18($s0)
                sltu    $v0, $v1, $s1
                sw      $v1, 0x50($s0)
                bnez    $v0, loc_21250
                move    $a3, $v1

loc_21298:                               # CODE XREF: ssl23_read_bytes+5C↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_212B4:                               # CODE XREF: ssl23_read_bytes+30↑j
                move    $v1, $a1
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl23_read_bytes


 # =============== S U B R O U T I N E =======================================


                .globl ssl23_write_bytes
ssl23_write_bytes:                       # CODE XREF: ssl23_connect+5D8↑p
                                         # DATA XREF: LOAD:00002778↑o ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl23_write_bytes)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $v0, 0x3C($a0)
                lw      $s1, 0x48($a0)
                lw      $s3, 4($v0)
                lw      $s0, 0x44($a0)
                b       loc_21328
                move    $s2, $a0
 # ---------------------------------------------------------------------------

loc_21314:                               # CODE XREF: ssl23_write_bytes+74↓j
                li      $v0, 1
                beq     $s0, $v1, loc_21378
                sw      $v0, 0x18($s2)
                addu    $s1, $v1
                subu    $s0, $v1

loc_21328:                               # CODE XREF: ssl23_write_bytes+38↑j
                la      $t9, BIO_write
                li      $v0, 2
                lw      $a0, 0x10($s2)
                sw      $v0, 0x18($s2)
                addu    $a1, $s3, $s1
                jalr    $t9 ; BIO_write
                move    $a2, $s0
                move    $v1, $v0
                bgtz    $v0, loc_21314
                lw      $gp, 0x30+var_20($sp)
                sw      $s0, 0x44($s2)
                sw      $s1, 0x48($s2)
                lw      $ra, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_21378:                               # CODE XREF: ssl23_write_bytes+44↑j
                addu    $v1, $s1, $v1
                lw      $ra, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # End of function ssl23_write_bytes


 # =============== S U B R O U T I N E =======================================


                .globl TLSv1_2_method
TLSv1_2_method:                          # CODE XREF: sub_1F0C8+50↑j
                                         # sub_213E4+40↓j
                                         # DATA XREF: ...
                la      $gp, (off_5A360+0x7FF0 - TLSv1_2_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58E68 - 0x60000)
 # End of function TLSv1_2_method


 # =============== S U B R O U T I N E =======================================


                .globl TLSv1_1_method
TLSv1_1_method:                          # CODE XREF: sub_1F0C8+30↑j
                                         # sub_213E4+20↓j
                                         # DATA XREF: ...
                la      $gp, (off_5A360+0x7FF0 - TLSv1_1_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58DF4 - 0x60000)
 # End of function TLSv1_1_method


 # =============== S U B R O U T I N E =======================================


                .globl TLSv1_method
TLSv1_method:                            # CODE XREF: sub_1F0C8+74↑j
                                         # sub_213E4+4C↓j
                                         # DATA XREF: ...
                la      $gp, (off_5A360+0x7FF0 - TLSv1_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58D80 - 0x60000)
 # End of function TLSv1_method


 # =============== S U B R O U T I N E =======================================


sub_213E4:                               # DATA XREF: .data.rel.ro:00058DDC↓o
                                         # .data.rel.ro:00058E50↓o ...
                la      $gp, (off_5A360+0x7FF0 - sub_213E4)
                addu    $gp, $t9
                li      $v0, 0x303
                beq     $a0, $v0, loc_21420
                li      $v0, 0x302
                bne     $a0, $v0, loc_2140C
                la      $t9, TLSv1_1_method
                jr      $t9 ; TLSv1_1_method
                nop
 # ---------------------------------------------------------------------------

loc_2140C:                               # CODE XREF: sub_213E4+18↑j
                li      $v0, 0x301
                beq     $a0, $v0, loc_2142C
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_21420:                               # CODE XREF: sub_213E4+10↑j
                la      $t9, TLSv1_2_method
                jr      $t9 ; TLSv1_2_method
                nop
 # ---------------------------------------------------------------------------

loc_2142C:                               # CODE XREF: sub_213E4+2C↑j
                la      $t9, TLSv1_method
                jr      $t9 ; TLSv1_method
                nop
 # End of function sub_213E4


 # =============== S U B R O U T I N E =======================================


                .globl TLSv1_2_server_method
TLSv1_2_server_method:                   # CODE XREF: sub_1F15C+50↑j
                                         # ssl23_get_client_hello+518↑p ...
                la      $gp, (off_5A360+0x7FF0 - TLSv1_2_server_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58FC4 - 0x60000)
 # End of function TLSv1_2_server_method


 # =============== S U B R O U T I N E =======================================


                .globl TLSv1_1_server_method
TLSv1_1_server_method:                   # CODE XREF: sub_1F15C+30↑j
                                         # ssl23_get_client_hello+54C↑p ...
                la      $gp, (off_5A360+0x7FF0 - TLSv1_1_server_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58F50 - 0x60000)
 # End of function TLSv1_1_server_method


 # =============== S U B R O U T I N E =======================================


                .globl TLSv1_server_method
TLSv1_server_method:                     # CODE XREF: sub_1F15C+74↑j
                                         # ssl23_get_client_hello+4EC↑p ...
                la      $gp, (off_5A360+0x7FF0 - TLSv1_server_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_58EDC - 0x60000)
 # End of function TLSv1_server_method


 # =============== S U B R O U T I N E =======================================


sub_21480:                               # DATA XREF: .data.rel.ro:00058F38↓o
                                         # .data.rel.ro:00058FAC↓o ...
                la      $gp, (off_5A360+0x7FF0 - sub_21480)
                addu    $gp, $t9
                li      $v0, 0x303
                beq     $a0, $v0, loc_214BC
                li      $v0, 0x302
                bne     $a0, $v0, loc_214A8
                la      $t9, TLSv1_1_server_method
                jr      $t9 ; TLSv1_1_server_method
                nop
 # ---------------------------------------------------------------------------

loc_214A8:                               # CODE XREF: sub_21480+18↑j
                li      $v0, 0x301
                beq     $a0, $v0, loc_214C8
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_214BC:                               # CODE XREF: sub_21480+10↑j
                la      $t9, TLSv1_2_server_method
                jr      $t9 ; TLSv1_2_server_method
                nop
 # ---------------------------------------------------------------------------

loc_214C8:                               # CODE XREF: sub_21480+2C↑j
                la      $t9, TLSv1_server_method
                jr      $t9 ; TLSv1_server_method
                nop
 # End of function sub_21480


 # =============== S U B R O U T I N E =======================================


                .globl TLSv1_2_client_method
TLSv1_2_client_method:                   # CODE XREF: sub_1FE04+50↑j
                                         # sub_2151C+40↓j
                                         # DATA XREF: ...
                la      $gp, (off_5A360+0x7FF0 - TLSv1_2_client_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_59120 - 0x60000)
 # End of function TLSv1_2_client_method


 # =============== S U B R O U T I N E =======================================


                .globl TLSv1_1_client_method
TLSv1_1_client_method:                   # CODE XREF: sub_1FE04+30↑j
                                         # sub_2151C+20↓j
                                         # DATA XREF: ...
                la      $gp, (off_5A360+0x7FF0 - TLSv1_1_client_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_590AC - 0x60000)
 # End of function TLSv1_1_client_method


 # =============== S U B R O U T I N E =======================================


                .globl TLSv1_client_method
TLSv1_client_method:                     # CODE XREF: sub_1FE04+74↑j
                                         # sub_2151C+4C↓j
                                         # DATA XREF: ...
                la      $gp, (off_5A360+0x7FF0 - TLSv1_client_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_59038 - 0x60000)
 # End of function TLSv1_client_method


 # =============== S U B R O U T I N E =======================================


sub_2151C:                               # DATA XREF: .data.rel.ro:00059094↓o
                                         # .data.rel.ro:00059108↓o ...
                la      $gp, (off_5A360+0x7FF0 - sub_2151C)
                addu    $gp, $t9
                li      $v0, 0x303
                beq     $a0, $v0, loc_21558
                li      $v0, 0x302
                bne     $a0, $v0, loc_21544
                la      $t9, TLSv1_1_client_method
                jr      $t9 ; TLSv1_1_client_method
                nop
 # ---------------------------------------------------------------------------

loc_21544:                               # CODE XREF: sub_2151C+18↑j
                li      $v0, 0x301
                beq     $a0, $v0, loc_21564
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_21558:                               # CODE XREF: sub_2151C+10↑j
                la      $t9, TLSv1_2_client_method
                jr      $t9 ; TLSv1_2_client_method
                nop
 # ---------------------------------------------------------------------------

loc_21564:                               # CODE XREF: sub_2151C+2C↑j
                la      $t9, TLSv1_client_method
                jr      $t9 ; TLSv1_client_method
                nop
 # End of function sub_2151C


 # =============== S U B R O U T I N E =======================================


                .globl tls1_default_timeout
tls1_default_timeout:                    # DATA XREF: LOAD:00004A58↑o
                                         # .got:tls1_default_timeout_ptr↓o
                jr      $ra
                li      $v0, 0x1C20
 # End of function tls1_default_timeout


 # =============== S U B R O U T I N E =======================================


                .globl ssl_prepare_clienthello_tlsext
ssl_prepare_clienthello_tlsext:          # CODE XREF: ssl3_client_hello+27C↑p
                                         # ssl23_connect+9E0↑p
                                         # DATA XREF: ...
                jr      $ra
                li      $v0, 1
 # End of function ssl_prepare_clienthello_tlsext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_prepare_serverhello_tlsext
ssl_prepare_serverhello_tlsext:          # CODE XREF: ssl3_send_server_hello+174↑p
                                         # DATA XREF: LOAD:00003098↑o ...
                jr      $ra
                li      $v0, 1
 # End of function ssl_prepare_serverhello_tlsext


 # =============== S U B R O U T I N E =======================================


                .globl tls12_get_sigid
tls12_get_sigid:                         # CODE XREF: ssl3_get_cert_verify+300↑p
                                         # ssl3_get_key_exchange+858↑p ...
                la      $gp, (off_5A360+0x7FF0 - tls12_get_sigid)
                addu    $gp, $t9
                li      $v1, 0x60000
                lw      $a0, 0($a0)
                lw      $v0, (dword_5A200 - 0x60000)($v1)
                beq     $a0, $v0, loc_215C0
                nop
                li      $v0, 0x60000
                lw      $v1, (off_5A208 - 0x60000)($v0)
                beq     $a0, $v1, locret_215C4
                addiu   $v0, (off_5A208 - 0x60000)
                jr      $ra
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_215C0:                               # CODE XREF: tls12_get_sigid+18↑j
                addiu   $v0, $v1, (dword_5A200 - 0x60000)

locret_215C4:                            # CODE XREF: tls12_get_sigid+28↑j
                jr      $ra
                lw      $v0, 4($v0)
 # End of function tls12_get_sigid


 # =============== S U B R O U T I N E =======================================


                .globl tls1_heartbeat
tls1_heartbeat:                          # DATA XREF: LOAD:000031F8↑o
                                         # ssl3_ctrl+2E0↑o ...

var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - tls1_heartbeat)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_20($sp)
                lw      $v0, 0x16C($a0)
                li      $v1, 1
                andi    $s2, $v0, 3
                bne     $s2, $v1, loc_21770
                move    $s1, $a0
                lw      $v0, 0x170($a0)
                bnez    $v0, loc_21788
                la      $t9, ERR_put_error
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                nop
                andi    $v0, 0x3000
                bnez    $v0, loc_21638
                lw      $gp, 0x40+var_20($sp)
                lw      $v0, 0x1C($s1)
                beqz    $v0, loc_2167C
                la      $a1, loc_40000

loc_21638:                               # CODE XREF: tls1_heartbeat+58↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x13B
                li      $a2, 0xF4

loc_2164C:                               # CODE XREF: tls1_heartbeat+1B4↓j
                                         # tls1_heartbeat+1C8↓j
                li      $s3, 0xFFFFFFFF
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s3
                lw      $gp, 0x40+var_20($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_2167C:                               # CODE XREF: tls1_heartbeat+64↑j
                la      $t9, CRYPTO_malloc
                li      $a2, 0x9F5
                addiu   $a1, (aT1LibC - 0x40000)  # "t1_lib.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a0, 0x25  # '%'
                move    $s0, $v0
                li      $v0, 0x12
                lw      $gp, 0x40+var_20($sp)
                sb      $v0, 2($s0)
                sb      $s2, 0($s0)
                sb      $zero, 1($s0)
                lw      $v0, 0x174($s1)
                srl     $v0, 8
                sb      $v0, 3($s0)
                lw      $v1, 0x174($s1)
                la      $t9, RAND_pseudo_bytes
                sb      $v1, 4($s0)
                addiu   $a0, $s0, 5
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                lw      $gp, 0x40+var_20($sp)
                la      $t9, RAND_pseudo_bytes
                addiu   $a0, $s0, 0x15
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                lw      $gp, 0x40+var_20($sp)
                la      $t9, ssl3_write_bytes
                move    $a0, $s1
                li      $a1, 0x18
                move    $a2, $s0
                jalr    $t9 ; ssl3_write_bytes
                li      $a3, 0x25  # '%'
                move    $s3, $v0
                bltz    $v0, loc_21740
                lw      $gp, 0x40+var_20($sp)
                lw      $t9, 0x64($s1)
                beqz    $t9, loc_2173C
                li      $v0, 0x25  # '%'
                lw      $v1, 0x68($s1)
                lw      $a1, 0($s1)
                sw      $v0, 0x40+var_30($sp)
                sw      $v1, 0x40+var_28($sp)
                sw      $s1, 0x40+var_2C($sp)
                li      $a0, 1
                li      $a2, 0x18
                jalr    $t9
                move    $a3, $s0
                lw      $gp, 0x40+var_20($sp)

loc_2173C:                               # CODE XREF: tls1_heartbeat+140↑j
                sw      $s2, 0x170($s1)

loc_21740:                               # CODE XREF: tls1_heartbeat+134↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                move    $v0, $s3
                lw      $gp, 0x40+var_20($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_21770:                               # CODE XREF: tls1_heartbeat+34↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x13B
                li      $a2, 0x16D
                b       loc_2164C
                sw      $zero, 0x40+var_30($sp)
 # ---------------------------------------------------------------------------

loc_21788:                               # CODE XREF: tls1_heartbeat+40↑j
                li      $a0, 0x14
                li      $a1, 0x13B
                li      $a2, 0x16E
                b       loc_2164C
                sw      $zero, 0x40+var_30($sp)
 # End of function tls1_heartbeat


 # =============== S U B R O U T I N E =======================================


                .globl tls1_process_heartbeat
tls1_process_heartbeat:                  # CODE XREF: ssl3_read_bytes:loc_1D8E4↑p
                                         # DATA XREF: LOAD:000036B8↑o ...

var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - tls1_process_heartbeat)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_8($sp)
                sw      $s5, 0x48+var_C($sp)
                sw      $s4, 0x48+var_10($sp)
                sw      $s3, 0x48+var_14($sp)
                sw      $s2, 0x48+var_18($sp)
                sw      $s1, 0x48+var_1C($sp)
                sw      $s0, 0x48+var_20($sp)
                sw      $gp, 0x48+var_28($sp)
                move    $s2, $a0
                lw      $a0, 0x58($a0)
                lw      $t9, 0x64($s2)
                lw      $s0, 0x118($a0)
                lbu     $v0, 1($s0)
                lbu     $v1, 2($s0)
                sll     $v0, 8
                or      $s3, $v1, $v0
                lbu     $s1, 0($s0)
                beqz    $t9, loc_21824
                addiu   $s4, $s0, 3
                lw      $v0, 0x110($a0)
                lw      $v1, 0x68($s2)
                lw      $a1, 0($s2)
                move    $a0, $zero
                sw      $v0, 0x48+var_38($sp)
                sw      $v1, 0x48+var_30($sp)
                sw      $s2, 0x48+var_34($sp)
                li      $a2, 0x18
                jalr    $t9
                move    $a3, $s0
                lw      $gp, 0x48+var_28($sp)

loc_21824:                               # CODE XREF: tls1_process_heartbeat+54↑j
                li      $v0, 1
                beq     $s1, $v0, loc_21894
                li      $v0, 2
                beq     $s1, $v0, loc_21864
                li      $v0, 0x12

loc_21838:                               # CODE XREF: tls1_process_heartbeat+CC↓j
                                         # tls1_process_heartbeat+E0↓j
                move    $s0, $zero

loc_2183C:                               # CODE XREF: tls1_process_heartbeat+F0↓j
                                         # tls1_process_heartbeat+1FC↓j
                move    $v0, $s0
                lw      $ra, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_21864:                               # CODE XREF: tls1_process_heartbeat+94↑j
                lbu     $a3, 3($s0)
                bne     $s3, $v0, loc_21838
                lbu     $a1, 1($s4)
                sll     $v0, $a3, 8
                lw      $v1, 0x174($s2)
                or      $v0, $a1, $v0
                bne     $v1, $v0, loc_21838
                addiu   $v0, $v1, 1
                move    $s0, $zero
                sw      $v0, 0x174($s2)
                b       loc_2183C
                sw      $zero, 0x170($s2)
 # ---------------------------------------------------------------------------

loc_21894:                               # CODE XREF: tls1_process_heartbeat+8C↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $s5, $s3, 0x13
                addiu   $a1, (aT1LibC - 0x40000)  # "t1_lib.c"
                move    $a0, $s5
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x99F
                lw      $gp, 0x48+var_28($sp)
                move    $s1, $v0
                addiu   $s0, $v0, 3
                srl     $v1, $s3, 8
                li      $v0, 2
                la      $t9, memcpy
                sb      $v1, 1($s1)
                move    $a2, $s3
                move    $a0, $s0
                move    $a1, $s4
                sb      $v0, 0($s1)
                jalr    $t9 ; memcpy
                sb      $s3, 2($s1)
                lw      $gp, 0x48+var_28($sp)
                la      $t9, RAND_pseudo_bytes
                addu    $a0, $s0, $s3
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                lw      $gp, 0x48+var_28($sp)
                la      $t9, ssl3_write_bytes
                move    $a0, $s2
                li      $a1, 0x18
                move    $a2, $s1
                jalr    $t9 ; ssl3_write_bytes
                move    $a3, $s5
                move    $s0, $v0
                bltz    $v0, loc_2198C
                lw      $gp, 0x48+var_28($sp)
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_21950
                li      $a0, 1
                lw      $v0, 0x68($s2)
                lw      $a1, 0($s2)
                sw      $s5, 0x48+var_38($sp)
                sw      $v0, 0x48+var_30($sp)
                sw      $s2, 0x48+var_34($sp)
                li      $a2, 0x18
                jalr    $t9
                move    $a3, $s1
                lw      $gp, 0x48+var_28($sp)

loc_21950:                               # CODE XREF: tls1_process_heartbeat+188↑j
                la      $t9, CRYPTO_free
                move    $a0, $s1
                jalr    $t9 ; CRYPTO_free
                move    $s0, $zero
                move    $v0, $s0
                lw      $gp, 0x48+var_28($sp)
                lw      $ra, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_2198C:                               # CODE XREF: tls1_process_heartbeat+17C↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                b       loc_2183C
                lw      $gp, 0x48+var_28($sp)
 # End of function tls1_process_heartbeat


 # =============== S U B R O U T I N E =======================================


                .globl tls12_get_req_sig_algs
tls12_get_req_sig_algs:                  # CODE XREF: ssl3_send_certificate_request+2F4↑p
                                         # DATA XREF: LOAD:00002D68↑o ...
                la      $gp, (off_5A360+0x7FF0 - tls12_get_req_sig_algs)
                addu    $gp, $t9
                beqz    $a1, locret_21A08
                move    $t0, $a1
                li      $a0, 0x60000
                lw      $v0, (dword_5A240 - 0x60000)($a0)
                addiu   $a0, (dword_5A240 - 0x60000)
                lw      $v1, (dword_5A244 - 0x5A240)($a0)
                lw      $a1, (dword_5A248 - 0x5A240)($a0)
                lw      $a2, (dword_5A24C - 0x5A240)($a0)
                lw      $a3, (dword_5A250 - 0x5A240)($a0)
                usw     $v0, 0($t0)
                usw     $v1, 4($t0)
                usw     $a1, 8($t0)
                usw     $a2, 0xC($t0)
                usw     $a3, 0x10($t0)
                lbu     $v0, (byte_5A254 - 0x5A240)($a0)
                sb      $v0, 0x14($t0)
                lbu     $v1, (byte_5A255 - 0x5A240)($a0)
                sb      $v1, 0x15($t0)

locret_21A08:                            # CODE XREF: tls12_get_req_sig_algs+C↑j
                jr      $ra
                li      $v0, 0x16
 # End of function tls12_get_req_sig_algs


 # =============== S U B R O U T I N E =======================================


                .globl tls12_get_hash
tls12_get_hash:                          # CODE XREF: ssl3_get_cert_verify+5C4↑p
                                         # ssl3_get_key_exchange+924↑p ...
                la      $gp, (off_5A360+0x7FF0 - tls12_get_hash)
                addu    $gp, $t9
                andi    $a0, 0xFF
                sltiu   $v0, $a0, 7      # switch 7 cases
                bnez    $v0, loc_21A34

def_21A48:                               # jumptable 00021A48 default case
                la      $v1, loc_40000

locret_21A2C:                            # CODE XREF: tls12_get_hash+38↓j
                                         # DATA XREF: .rodata:jpt_21A48↓o
                jr      $ra              # jumptable 00021A48 case 0
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_21A34:                               # CODE XREF: tls12_get_hash+14↑j
                sll     $v0, $a0, 2
                addiu   $v1, (jpt_21A48 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_21A50:                               # CODE XREF: tls12_get_hash+38↑j
                                         # DATA XREF: .rodata:jpt_21A48↓o
                la      $t9, EVP_sha512  # jumptable 00021A48 case 6
                jr      $t9 ; EVP_sha512
                nop
 # ---------------------------------------------------------------------------

loc_21A5C:                               # CODE XREF: tls12_get_hash+38↑j
                                         # DATA XREF: .rodata:jpt_21A48↓o
                la      $t9, EVP_md5     # jumptable 00021A48 case 1
                jr      $t9 ; EVP_md5
                nop
 # ---------------------------------------------------------------------------

loc_21A68:                               # CODE XREF: tls12_get_hash+38↑j
                                         # DATA XREF: .rodata:jpt_21A48↓o
                la      $t9, EVP_sha1    # jumptable 00021A48 case 2
                jr      $t9 ; EVP_sha1
                nop
 # ---------------------------------------------------------------------------

loc_21A74:                               # CODE XREF: tls12_get_hash+38↑j
                                         # DATA XREF: .rodata:jpt_21A48↓o
                la      $t9, EVP_sha224  # jumptable 00021A48 case 3
                jr      $t9 ; EVP_sha224
                nop
 # ---------------------------------------------------------------------------

loc_21A80:                               # CODE XREF: tls12_get_hash+38↑j
                                         # DATA XREF: .rodata:jpt_21A48↓o
                la      $t9, EVP_sha256  # jumptable 00021A48 case 4
                jr      $t9 ; EVP_sha256
                nop
 # ---------------------------------------------------------------------------

loc_21A8C:                               # CODE XREF: tls12_get_hash+38↑j
                                         # DATA XREF: .rodata:jpt_21A48↓o
                la      $t9, EVP_sha384  # jumptable 00021A48 case 5
                jr      $t9 ; EVP_sha384
                nop
 # End of function tls12_get_hash


 # =============== S U B R O U T I N E =======================================


                .globl tls1_process_sigalgs
tls1_process_sigalgs:                    # CODE XREF: ssl3_get_certificate_request+3F8↑p
                                         # ssl_parse_clienthello_tlsext+6DC↓p
                                         # DATA XREF: ...

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - tls1_process_sigalgs)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                lw      $a3, 0($a0)
                li      $v0, 3
                sra     $v1, $a3, 8
                move    $s5, $a2
                beq     $v1, $v0, loc_21B0C
                lw      $s3, 0x98($a0)

loc_21AE0:                               # CODE XREF: tls1_process_sigalgs+134↓j
                li      $v1, 1

loc_21AE4:                               # CODE XREF: tls1_process_sigalgs+78↓j
                                         # tls1_process_sigalgs+80↓j ...
                lw      $ra, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_21B0C:                               # CODE XREF: tls1_process_sigalgs+40↑j
                slti    $v0, $a3, 0x303
                bnez    $v0, loc_21AE4
                li      $v1, 1
                beqz    $s3, loc_21AE4
                move    $v1, $zero
                sw      $zero, 0x40($s3)
                sw      $zero, 0x34($s3)
                sw      $zero, 0x28($s3)
                blez    $a2, loc_21BBC
                sw      $zero, 0x64($s3)
                move    $s0, $a1
                b       loc_21B5C
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_21B40:                               # CODE XREF: tls1_process_sigalgs+CC↓j
                li      $v0, 2
                beq     $v1, $v0, loc_21B70
                li      $s2, 2

loc_21B4C:                               # CODE XREF: tls1_process_sigalgs+104↓j
                                         # tls1_process_sigalgs+114↓j ...
                addiu   $s4, 2

loc_21B50:                               # CODE XREF: tls1_process_sigalgs+EC↓j
                slt     $v0, $s4, $s5
                beqz    $v0, loc_21BBC
                addiu   $s0, 2

loc_21B5C:                               # CODE XREF: tls1_process_sigalgs+A0↑j
                lbu     $v1, 1($s0)
                li      $v0, 1
                bne     $v1, $v0, loc_21B40
                lbu     $a0, 0($s0)
                li      $s2, 1

loc_21B70:                               # CODE XREF: tls1_process_sigalgs+AC↑j
                sll     $v0, $s2, 2
                sll     $v1, $s2, 4
                subu    $v1, $v0
                addu    $s1, $v1, $s3
                lw      $v0, 0x28($s1)
                bnez    $v0, loc_21B50
                addiu   $s4, 2
                la      $t9, tls12_get_hash
                jalr    $t9 ; tls12_get_hash
                addiu   $s4, -2
                move    $v1, $v0
                beqz    $v0, loc_21B4C
                lw      $gp, 0x38+var_28($sp)
                sw      $v0, 0x28($s1)
                li      $v0, 1
                bne     $s2, $v0, loc_21B4C
                nop
                b       loc_21B4C
                sw      $v1, 0x28($s3)
 # ---------------------------------------------------------------------------

loc_21BBC:                               # CODE XREF: tls1_process_sigalgs+94↑j
                                         # tls1_process_sigalgs+BC↑j
                lw      $v0, 0x40($s3)
                beqz    $v0, loc_21BFC
                la      $t9, EVP_dss1

loc_21BC8:                               # CODE XREF: tls1_process_sigalgs+170↓j
                lw      $v0, 0x34($s3)
                bnez    $v0, loc_21AE0
                la      $t9, EVP_sha1
                jalr    $t9 ; EVP_sha1
                nop
                lw      $gp, 0x38+var_28($sp)
                la      $t9, EVP_sha1
                jalr    $t9 ; EVP_sha1
                sw      $v0, 0x34($s3)
                lw      $gp, 0x38+var_28($sp)
                li      $v1, 1
                b       loc_21AE4
                sw      $v0, 0x28($s3)
 # ---------------------------------------------------------------------------

loc_21BFC:                               # CODE XREF: tls1_process_sigalgs+128↑j
                jalr    $t9 ; EVP_dss1
                nop
                lw      $gp, 0x38+var_28($sp)
                b       loc_21BC8
                sw      $v0, 0x40($s3)
 # End of function tls1_process_sigalgs


 # =============== S U B R O U T I N E =======================================


                .globl tls1_process_ticket
tls1_process_ticket:                     # CODE XREF: ssl_get_prev_session+7C↓p
                                         # DATA XREF: LOAD:00004098↑o ...

var_1E8         = -0x1E8
var_1E4         = -0x1E4
var_1E0         = -0x1E0
var_1D8         = -0x1D8
var_1D4         = -0x1D4
var_1D0         = -0x1D0
var_1CC         = -0x1CC
var_100         = -0x100
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - tls1_process_ticket)
                addu    $gp, $t9
                addiu   $sp, -0x1F8
                sw      $ra, 0x1F8+var_4($sp)
                sw      $fp, 0x1F8+var_8($sp)
                sw      $s7, 0x1F8+var_C($sp)
                sw      $s6, 0x1F8+var_10($sp)
                sw      $s5, 0x1F8+var_14($sp)
                sw      $s4, 0x1F8+var_18($sp)
                sw      $s3, 0x1F8+var_1C($sp)
                sw      $s2, 0x1F8+var_20($sp)
                sw      $s1, 0x1F8+var_24($sp)
                sw      $s0, 0x1F8+var_28($sp)
                sw      $gp, 0x1F8+var_1E0($sp)
                lw      $s3, 0x1F8+arg_10($sp)
                la      $t9, SSL_ctrl
                move    $s4, $a1
                move    $s2, $a2
                move    $s0, $a3
                sw      $zero, 0($s3)
                sw      $zero, 0x138($a0)
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                move    $a3, $zero
                jalr    $t9 ; SSL_ctrl
                move    $s1, $a0
                andi    $v0, 0x4000
                bnez    $v0, loc_21CA0
                lw      $gp, 0x1F8+var_1E0($sp)
                lw      $v1, 0($s1)
                slti    $v0, $v1, 0x301
                bnez    $v0, loc_21CA0
                nop
                bnez    $s0, loc_21CD8
                addu    $a1, $s4, $s2

loc_21CA0:                               # CODE XREF: tls1_process_ticket+70↑j
                                         # tls1_process_ticket+80↑j ...
                move    $v1, $zero

loc_21CA4:                               # CODE XREF: tls1_process_ticket+120↓j
                                         # tls1_process_ticket+130↓j ...
                lw      $ra, 0x1F8+var_4($sp)

loc_21CA8:                               # CODE XREF: tls1_process_ticket+188↓j
                lw      $fp, 0x1F8+var_8($sp)
                lw      $s7, 0x1F8+var_C($sp)
                lw      $s6, 0x1F8+var_10($sp)
                lw      $s5, 0x1F8+var_14($sp)
                lw      $s4, 0x1F8+var_18($sp)
                lw      $s3, 0x1F8+var_1C($sp)
                lw      $s2, 0x1F8+var_20($sp)
                lw      $s1, 0x1F8+var_24($sp)
                lw      $s0, 0x1F8+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x1F8
 # ---------------------------------------------------------------------------

loc_21CD8:                               # CODE XREF: tls1_process_ticket+88↑j
                sltu    $v0, $a1, $s0
                beqz    $v0, loc_21DB4
                li      $v0, 0xFEFF
                beq     $v1, $v0, loc_21DA0
                addiu   $v1, $a1, 1

loc_21CEC:                               # CODE XREF: tls1_process_ticket+19C↓j
                lbu     $v0, 0($a1)
                lbu     $v1, 1($a1)
                sll     $v0, 8
                or      $v0, $v1
                andi    $v0, 0xFFFF
                addiu   $v1, $a1, 2
                addu    $v1, $v0, $v1
                sltu    $a0, $v1, $s0
                beqz    $a0, loc_21DB4
                nop
                lbu     $v0, 0($v1)
                addiu   $v1, 1
                addu    $v0, $v1
                sltu    $a0, $s0, $v0
                bnez    $a0, loc_21DB4
                addiu   $a0, $v0, 2
                sltu    $v0, $a0, $s0
                beqz    $v0, loc_21CA4
                move    $v1, $zero

loc_21D38:                               # CODE XREF: tls1_process_ticket+16C↓j
                addiu   $s5, $a0, 4
                sltu    $v0, $s0, $s5
                bnez    $v0, loc_21CA4
                move    $v1, $zero
                lbu     $v0, 2($a0)
                lbu     $v1, 3($a0)
                sll     $v0, 8
                or      $v0, $v1
                lbu     $v1, 0($a0)
                andi    $s6, $v0, 0xFFFF
                lbu     $v0, 1($a0)
                sll     $v1, 8
                addu    $a0, $s6, $s5
                or      $v1, $v0, $v1
                sltu    $v0, $s0, $a0
                bnez    $v0, loc_21CA0
                li      $v0, 0x23  # '#'
                bne     $v1, $v0, loc_21D38
                nop
                beqz    $s6, loc_21DD8
                li      $v0, 1
                lw      $v0, 0x150($s1)
                beqz    $v0, loc_21DBC
                li      $v1, 2
                b       loc_21CA8
                lw      $ra, 0x1F8+var_4($sp)
 # ---------------------------------------------------------------------------

loc_21DA0:                               # CODE XREF: tls1_process_ticket+D4↑j
                lbu     $v0, 0($a1)
                addu    $a1, $v0, $v1
                sltu    $a0, $a1, $s0
                bnez    $a0, loc_21CEC
                nop

loc_21DB4:                               # CODE XREF: tls1_process_ticket+CC↑j
                                         # tls1_process_ticket+FC↑j ...
                b       loc_21CA4
                li      $v1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_21DBC:                               # CODE XREF: tls1_process_ticket+180↑j
                slti    $v0, $s6, 0x30  # '0'
                beqz    $v0, loc_21DE4
                lw      $s0, 0x158($s1)

loc_21DC8:                               # CODE XREF: tls1_process_ticket+21C↓j
                                         # tls1_process_ticket+2F8↓j ...
                li      $v0, 1
                li      $v1, 2
                b       loc_21CA4
                sw      $v0, 0x138($s1)
 # ---------------------------------------------------------------------------

loc_21DD8:                               # CODE XREF: tls1_process_ticket+174↑j
                li      $v1, 1
                b       loc_21CA4
                sw      $v0, 0x138($s1)
 # ---------------------------------------------------------------------------

loc_21DE4:                               # CODE XREF: tls1_process_ticket+1B0↑j
                la      $t9, HMAC_CTX_init
                addiu   $v0, $sp, 0x1F8+var_100
                move    $a0, $v0
                jalr    $t9 ; HMAC_CTX_init
                sw      $v0, 0x1F8+var_2C($sp)
                lw      $gp, 0x1F8+var_1E0($sp)
                addiu   $fp, $sp, 0x6C  # 'l'
                la      $t9, EVP_CIPHER_CTX_init
                jalr    $t9 ; EVP_CIPHER_CTX_init
                move    $a0, $fp
                lw      $t9, 0x138($s0)
                bnez    $t9, loc_22064
                lw      $gp, 0x1F8+var_1E0($sp)
                la      $t9, memcmp
                move    $a0, $s5
                addiu   $a1, $s0, 0x108
                jalr    $t9 ; memcmp
                li      $a2, 0x10
                bnez    $v0, loc_21DC8
                lw      $gp, 0x1F8+var_1E0($sp)
                la      $t9, EVP_sha256
                jalr    $t9 ; EVP_sha256
                addiu   $s7, $s5, 0x10
                lw      $gp, 0x1F8+var_1E0($sp)
                lw      $a0, 0x1F8+var_2C($sp)
                la      $t9, HMAC_Init_ex
                move    $a3, $v0
                addiu   $a1, $s0, 0x118
                li      $a2, 0x10
                jalr    $t9 ; HMAC_Init_ex
                sw      $zero, 0x1F8+var_1E8($sp)
                lw      $gp, 0x1F8+var_1E0($sp)
                la      $t9, EVP_aes_128_cbc
                jalr    $t9 ; EVP_aes_128_cbc
                sw      $zero, 0x1F8+var_30($sp)
                lw      $gp, 0x1F8+var_1E0($sp)
                la      $t9, EVP_DecryptInit_ex
                sw      $s7, 0x1F8+var_1E8($sp)
                move    $a1, $v0
                addiu   $a3, $s0, 0x128
                move    $a0, $fp
                jalr    $t9 ; EVP_DecryptInit_ex
                move    $a2, $zero
                lw      $gp, 0x1F8+var_1E0($sp)

loc_21E94:                               # CODE XREF: tls1_process_ticket+48C↓j
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                lw      $a0, 0x1F8+var_100($sp)
                sw      $v0, 0x1F8+var_1D0($sp)
                bltz    $v0, loc_2204C
                lw      $gp, 0x1F8+var_1E0($sp)
                la      $t9, HMAC_Update
                subu    $s6, $v0
                lw      $a0, 0x1F8+var_2C($sp)
                move    $a1, $s5
                jalr    $t9 ; HMAC_Update
                move    $a2, $s6
                lw      $gp, 0x1F8+var_1E0($sp)
                addiu   $s0, $sp, 0x1F8+var_1CC
                la      $t9, HMAC_Final
                lw      $a0, 0x1F8+var_2C($sp)
                move    $a1, $s0
                jalr    $t9 ; HMAC_Final
                move    $a2, $zero
                lw      $gp, 0x1F8+var_1E0($sp)
                la      $t9, HMAC_CTX_cleanup
                jalr    $t9 ; HMAC_CTX_cleanup
                lw      $a0, 0x1F8+var_2C($sp)
                lw      $gp, 0x1F8+var_1E0($sp)
                lw      $a2, 0x1F8+var_1D0($sp)
                la      $t9, memcmp
                move    $a0, $s0
                jalr    $t9 ; memcmp
                addu    $a1, $s5, $s6
                bnez    $v0, loc_21DC8
                lw      $gp, 0x1F8+var_1E0($sp)
                la      $t9, EVP_CIPHER_CTX_iv_length
                jalr    $t9 ; EVP_CIPHER_CTX_iv_length
                move    $a0, $fp
                lw      $gp, 0x1F8+var_1E0($sp)
                addu    $v0, $s7, $v0
                la      $t9, EVP_CIPHER_CTX_iv_length
                move    $a0, $fp
                jalr    $t9 ; EVP_CIPHER_CTX_iv_length
                sw      $v0, 0x1F8+var_1D8($sp)
                lw      $gp, 0x1F8+var_1E0($sp)
                addiu   $v1, $s6, -0x10
                la      $a1, loc_40000
                subu    $s0, $v1, $v0
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aT1LibC - 0x40000)  # "t1_lib.c"
                move    $a0, $s0
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x896
                move    $s5, $v0
                beqz    $v0, loc_2204C
                lw      $gp, 0x1F8+var_1E0($sp)
                la      $t9, EVP_DecryptUpdate
                lw      $a3, 0x1F8+var_1D8($sp)
                move    $a0, $fp
                move    $a1, $v0
                addiu   $a2, $sp, 0x1F8+var_1D4
                jalr    $t9 ; EVP_DecryptUpdate
                sw      $s0, 0x1F8+var_1E8($sp)
                lw      $gp, 0x1F8+var_1E0($sp)
                lw      $a1, 0x1F8+var_1D4($sp)
                la      $t9, EVP_DecryptFinal
                addu    $a1, $s5, $a1
                move    $a0, $fp
                jalr    $t9 ; EVP_DecryptFinal
                addiu   $a2, $sp, 0x1F8+var_1D0
                blez    $v0, loc_21DC8
                lw      $gp, 0x1F8+var_1E0($sp)
                lw      $v1, 0x1F8+var_1D0($sp)
                lw      $v0, 0x1F8+var_1D4($sp)
                la      $t9, EVP_CIPHER_CTX_cleanup
                addu    $v0, $v1
                move    $a0, $fp
                jalr    $t9 ; EVP_CIPHER_CTX_cleanup
                sw      $v0, 0x1F8+var_1D4($sp)
                lw      $gp, 0x1F8+var_1E0($sp)
                lw      $a2, 0x1F8+var_1D4($sp)
                la      $t9, d2i_SSL_SESSION
                move    $a0, $zero
                addiu   $a1, $sp, 0x1F8+var_1D8
                jalr    $t9 ; d2i_SSL_SESSION
                sw      $s5, 0x1F8+var_1D8($sp)
                lw      $gp, 0x1F8+var_1E0($sp)
                la      $t9, CRYPTO_free
                move    $s0, $v0
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s5
                beqz    $s0, loc_22038
                lw      $gp, 0x1F8+var_1E0($sp)
                beqz    $s2, loc_2201C
                lw      $v0, 0x1F8+var_30($sp)
                la      $t9, memcpy
                move    $a1, $s4
                addiu   $a0, $s0, 0x48  # 'H'
                jalr    $t9 ; memcpy
                move    $a2, $s2
                lw      $gp, 0x1F8+var_1E0($sp)
                lw      $v0, 0x1F8+var_30($sp)

loc_2201C:                               # CODE XREF: tls1_process_ticket+3E8↑j
                sw      $s0, 0($s3)
                beqz    $v0, loc_22030
                sw      $s2, 0x44($s0)
                li      $v0, 1
                sw      $v0, 0x138($s1)

loc_22030:                               # CODE XREF: tls1_process_ticket+410↑j
                b       loc_21CA4
                li      $v1, 3
 # ---------------------------------------------------------------------------

loc_22038:                               # CODE XREF: tls1_process_ticket+3E0↑j
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                b       loc_21DC8
                lw      $gp, 0x1F8+var_1E0($sp)
 # ---------------------------------------------------------------------------

loc_2204C:                               # CODE XREF: tls1_process_ticket+294↑j
                                         # tls1_process_ticket+34C↑j
                la      $t9, EVP_CIPHER_CTX_cleanup
                jalr    $t9 ; EVP_CIPHER_CTX_cleanup
                move    $a0, $fp
                lw      $gp, 0x1F8+var_1E0($sp)
                b       loc_21CA4
                li      $v1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_22064:                               # CODE XREF: tls1_process_ticket+200↑j
                lw      $v0, 0x1F8+var_2C($sp)
                addiu   $s7, $s5, 0x10
                sw      $v0, 0x1F8+var_1E8($sp)
                sw      $zero, 0x1F8+var_1E4($sp)
                move    $a0, $s1
                move    $a1, $s5
                move    $a2, $s7
                jalr    $t9
                move    $a3, $fp
                bltz    $v0, loc_21DB4
                lw      $gp, 0x1F8+var_1E0($sp)
                beqz    $v0, loc_21DC8
                xori    $v0, 2
                sltiu   $v0, 1
                b       loc_21E94
                sw      $v0, 0x1F8+var_30($sp)
 # End of function tls1_process_ticket


 # =============== S U B R O U T I N E =======================================


                .globl ssl_check_serverhello_tlsext
ssl_check_serverhello_tlsext:            # CODE XREF: ssl3_get_server_hello+71C↑p
                                         # DATA XREF: LOAD:00003308↑o ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_check_serverhello_tlsext)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $v1, 0xDC($a0)
                li      $v0, 0x70  # 'p'
                move    $s1, $a0
                beqz    $v1, loc_22214
                sw      $v0, 0x30+var_18($sp)
                lw      $t9, 0x100($v1)
                beqz    $t9, loc_22214
                nop
                lw      $a2, 0x104($v1)

loc_220EC:                               # CODE XREF: ssl_check_serverhello_tlsext+188↓j
                jalr    $t9
                addiu   $a1, $sp, 0x30+var_18
                lw      $gp, 0x30+var_20($sp)
                move    $s0, $v0

loc_220FC:                               # CODE XREF: ssl_check_serverhello_tlsext+174↓j
                                         # ssl_check_serverhello_tlsext+180↓j
                lw      $v0, 0x120($s1)
                li      $s2, 0xFFFFFFFF
                beq     $v0, $s2, loc_221AC
                li      $v0, 2
                lw      $v0, 0x124($s1)
                bnez    $v0, loc_221AC
                li      $v0, 2
                lw      $v1, 0xDC($s1)
                beqz    $v1, loc_221AC
                nop
                lw      $v0, 0x13C($v1)
                beqz    $v0, loc_221AC
                li      $v0, 2
                lw      $a0, 0x130($s1)
                beqz    $a0, loc_2214C
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $v1, 0xDC($s1)
                sw      $zero, 0x130($s1)

loc_2214C:                               # CODE XREF: ssl_check_serverhello_tlsext+90↑j
                lw      $a1, 0x140($v1)
                lw      $t9, 0x13C($v1)
                sw      $s2, 0x134($s1)
                jalr    $t9
                move    $a0, $s1
                bnez    $v0, loc_221A4
                lw      $gp, 0x30+var_20($sp)
                li      $v0, 0x71  # 'q'
                sw      $v0, 0x30+var_18($sp)

loc_22170:                               # CODE XREF: ssl_check_serverhello_tlsext:loc_221AC↓j
                                         # ssl_check_serverhello_tlsext+194↓j
                la      $t9, ssl3_send_alert
                lw      $a2, 0x30+var_18($sp)
                move    $a0, $s1
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x30+var_20($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_221A4:                               # CODE XREF: ssl_check_serverhello_tlsext+BC↑j
                bltz    $v0, loc_22234
                li      $v0, 2

loc_221AC:                               # CODE XREF: ssl_check_serverhello_tlsext+60↑j
                                         # ssl_check_serverhello_tlsext+6C↑j ...
                beq     $s0, $v0, loc_22170
                li      $v0, 3
                beq     $s0, $v0, loc_221F8
                li      $v0, 1
                bne     $s0, $v0, loc_221E4
                lw      $ra, 0x30+var_4($sp)
                la      $t9, ssl3_send_alert
                lw      $a2, 0x30+var_18($sp)
                move    $a0, $s1
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 1
                lw      $gp, 0x30+var_20($sp)
                li      $v0, 1
                lw      $ra, 0x30+var_4($sp)

loc_221E4:                               # CODE XREF: ssl_check_serverhello_tlsext+118↑j
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_221F8:                               # CODE XREF: ssl_check_serverhello_tlsext+110↑j
                sw      $zero, 0x11C($s1)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_22214:                               # CODE XREF: ssl_check_serverhello_tlsext+30↑j
                                         # ssl_check_serverhello_tlsext+3C↑j
                lw      $v0, 0x158($s1)
                beqz    $v0, loc_220FC
                li      $s0, 3
                lw      $t9, 0x100($v0)
                beqz    $t9, loc_220FC
                move    $a0, $s1
                b       loc_220EC
                lw      $a2, 0x104($v0)
 # ---------------------------------------------------------------------------

loc_22234:                               # CODE XREF: ssl_check_serverhello_tlsext:loc_221A4↑j
                li      $v0, 0x50  # 'P'
                b       loc_22170
                sw      $v0, 0x30+var_18($sp)
 # End of function ssl_check_serverhello_tlsext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_check_clienthello_tlsext
ssl_check_clienthello_tlsext:            # CODE XREF: ssl3_get_client_hello+498↑p
                                         # DATA XREF: LOAD:000024A8↑o ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_check_clienthello_tlsext)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $v1, 0xDC($a0)
                li      $v0, 0x70  # 'p'
                move    $s1, $a0
                beqz    $v1, loc_22368
                sw      $v0, 0x30+var_18($sp)
                lw      $t9, 0x100($v1)
                beqz    $t9, loc_22368
                nop
                lw      $a2, 0x104($v1)

loc_22284:                               # CODE XREF: ssl_check_clienthello_tlsext+140↓j
                jalr    $t9
                addiu   $a1, $sp, 0x30+var_18
                lw      $gp, 0x30+var_20($sp)
                move    $s0, $v0

loc_22294:                               # CODE XREF: ssl_check_clienthello_tlsext+12C↓j
                                         # ssl_check_clienthello_tlsext+138↓j
                lw      $v1, 0x120($s1)
                li      $v0, 0xFFFFFFFF
                beq     $v1, $v0, loc_22300
                nop
                lw      $v0, 0xDC($s1)
                beqz    $v0, loc_22300
                nop
                lw      $t9, 0x13C($v0)
                beqz    $t9, loc_22300
                nop
                lw      $a1, 0x140($v0)
                jalr    $t9
                move    $a0, $s1
                move    $v1, $v0
                li      $v0, 2
                beq     $v1, $v0, loc_22388
                lw      $gp, 0x30+var_20($sp)
                li      $v0, 3
                beq     $v1, $v0, loc_22300
                nop
                bnez    $v1, loc_22308
                li      $v0, 2
                lw      $v0, 0x130($s1)
                beqz    $v0, loc_22300
                li      $v0, 1
                b       loc_22304
                sw      $v0, 0x124($s1)
 # ---------------------------------------------------------------------------

loc_22300:                               # CODE XREF: ssl_check_clienthello_tlsext+5C↑j
                                         # ssl_check_clienthello_tlsext+68↑j ...
                sw      $zero, 0x124($s1)

loc_22304:                               # CODE XREF: ssl_check_clienthello_tlsext+B8↑j
                li      $v0, 2

loc_22308:                               # CODE XREF: ssl_check_clienthello_tlsext+A4↑j
                beq     $s0, $v0, loc_22390
                li      $v0, 3
                beq     $s0, $v0, loc_22350
                li      $v0, 1
                bne     $s0, $v0, loc_22340
                lw      $ra, 0x30+var_8($sp)
                la      $t9, ssl3_send_alert
                lw      $a2, 0x30+var_18($sp)
                move    $a0, $s1
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 1
                lw      $gp, 0x30+var_20($sp)
                li      $v0, 1
                lw      $ra, 0x30+var_8($sp)

loc_22340:                               # CODE XREF: ssl_check_clienthello_tlsext+D8↑j
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_22350:                               # CODE XREF: ssl_check_clienthello_tlsext+D0↑j
                sw      $zero, 0x11C($s1)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_22368:                               # CODE XREF: ssl_check_clienthello_tlsext+2C↑j
                                         # ssl_check_clienthello_tlsext+38↑j
                lw      $v0, 0x158($s1)
                beqz    $v0, loc_22294
                li      $s0, 3
                lw      $t9, 0x100($v0)
                beqz    $t9, loc_22294
                move    $a0, $s1
                b       loc_22284
                lw      $a2, 0x104($v0)
 # ---------------------------------------------------------------------------

loc_22388:                               # CODE XREF: ssl_check_clienthello_tlsext+90↑j
                li      $v0, 0x50  # 'P'
                sw      $v0, 0x30+var_18($sp)

loc_22390:                               # CODE XREF: ssl_check_clienthello_tlsext:loc_22308↑j
                la      $t9, ssl3_send_alert
                lw      $a2, 0x30+var_18($sp)
                move    $a0, $s1
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x30+var_20($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x30
 # End of function ssl_check_clienthello_tlsext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_parse_serverhello_tlsext
ssl_parse_serverhello_tlsext:            # CODE XREF: ssl3_get_server_hello+6BC↑p
                                         # DATA XREF: LOAD:00003668↑o ...

var_60          = -0x60
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - ssl_parse_serverhello_tlsext)
                addu    $gp, $t9
                addiu   $sp, -0x60
                sw      $ra, 0x60+var_4($sp)
                sw      $fp, 0x60+var_8($sp)
                sw      $s7, 0x60+var_C($sp)
                sw      $s6, 0x60+var_10($sp)
                sw      $s5, 0x60+var_14($sp)
                sw      $s4, 0x60+var_18($sp)
                sw      $s3, 0x60+var_1C($sp)
                sw      $s2, 0x60+var_20($sp)
                sw      $s1, 0x60+var_24($sp)
                sw      $s0, 0x60+var_28($sp)
                sw      $gp, 0x60+var_48($sp)
                lw      $v0, 0x58($a0)
                move    $fp, $a1
                sw      $zero, 0x414($v0)
                lw      $v1, 0x16C($a0)
                addu    $s5, $a2, $a3
                lw      $a1, 0($a1)
                move    $s4, $a0
                li      $v0, 0xFFFFFFFC
                addiu   $a0, $s5, -2
                and     $v1, $v0
                sltu    $a0, $a1, $a0
                beqz    $a0, loc_224C4
                sw      $v1, 0x16C($s4)
                lbu     $v0, 0($a1)
                lbu     $v1, 1($a1)
                sll     $v0, 8
                or      $v0, $v1
                andi    $v0, 0xFFFF
                addiu   $s1, $a1, 2
                addu    $s6, $v0, $s1
                beq     $s5, $s6, loc_22574
                addiu   $v0, $sp, 0x60+var_3C

loc_22454:                               # CODE XREF: ssl_parse_serverhello_tlsext+368↓j
                                         # ssl_parse_serverhello_tlsext+37C↓j ...
                lw      $a0, 0x60+arg_10($sp)

loc_22458:                               # CODE XREF: ssl_parse_serverhello_tlsext:loc_22498↓j
                                         # ssl_parse_serverhello_tlsext+394↓j
                li      $v0, 0x32  # '2'
                move    $v1, $zero
                sw      $v0, 0($a0)

loc_22464:                               # CODE XREF: ssl_parse_serverhello_tlsext:loc_22670↓j
                                         # ssl_parse_serverhello_tlsext+434↓j ...
                lw      $ra, 0x60+var_4($sp)
                lw      $fp, 0x60+var_8($sp)
                lw      $s7, 0x60+var_C($sp)
                lw      $s6, 0x60+var_10($sp)
                lw      $s5, 0x60+var_14($sp)
                lw      $s4, 0x60+var_18($sp)
                lw      $s3, 0x60+var_1C($sp)
                lw      $s2, 0x60+var_20($sp)
                lw      $s1, 0x60+var_24($sp)
                lw      $s0, 0x60+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_22498:                               # CODE XREF: ssl_parse_serverhello_tlsext:loc_22590↓j
                bne     $s6, $s1, loc_22458
                lw      $a0, 0x60+arg_10($sp)
                lw      $v0, 0x6C($s4)
                bnez    $v0, loc_224B4
                lw      $v0, 0x60+var_34($sp)
                bnez    $v0, loc_22834
                nop

loc_224B4:                               # CODE XREF: ssl_parse_serverhello_tlsext+E4↑j
                                         # ssl_parse_serverhello_tlsext+478↓j ...
                sw      $s6, 0x60+var_60($fp)

loc_224B8:                               # CODE XREF: ssl_parse_serverhello_tlsext+1FC↓j
                lw      $v0, 0x60+var_38($sp)
                bnez    $v0, loc_224DC
                li      $v1, 1

loc_224C4:                               # CODE XREF: ssl_parse_serverhello_tlsext+68↑j
                lw      $v1, 0xF8($s4)
                la      $v0, loc_40004
                and     $v1, $v0
                beqz    $v1, loc_22510
                li      $v1, 1

loc_224DC:                               # CODE XREF: ssl_parse_serverhello_tlsext+FC↑j
                lw      $ra, 0x60+var_4($sp)
                lw      $fp, 0x60+var_8($sp)
                lw      $s7, 0x60+var_C($sp)
                lw      $s6, 0x60+var_10($sp)
                lw      $s5, 0x60+var_14($sp)
                lw      $s4, 0x60+var_18($sp)
                lw      $s3, 0x60+var_1C($sp)
                lw      $s2, 0x60+var_20($sp)
                lw      $s1, 0x60+var_24($sp)
                lw      $s0, 0x60+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_22510:                               # CODE XREF: ssl_parse_serverhello_tlsext+114↑j
                lw      $v1, 0x60+arg_10($sp)
                la      $t9, ERR_put_error
                li      $v0, 0x28  # '('
                sw      $v0, 0($v1)
                li      $a0, 0x14
                sw      $zero, 0x60+var_50($sp)
                li      $a1, 0x12F
                li      $a2, 0x152
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x60+var_48($sp)
                move    $v1, $zero
                lw      $ra, 0x60+var_4($sp)
                lw      $fp, 0x60+var_8($sp)
                lw      $s7, 0x60+var_C($sp)
                lw      $s6, 0x60+var_10($sp)
                lw      $s5, 0x60+var_14($sp)
                lw      $s4, 0x60+var_18($sp)
                lw      $s3, 0x60+var_1C($sp)
                lw      $s2, 0x60+var_20($sp)
                lw      $s1, 0x60+var_24($sp)
                lw      $s0, 0x60+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_22574:                               # CODE XREF: ssl_parse_serverhello_tlsext+8C↑j
                addiu   $v1, $sp, 0x60+var_40
                addiu   $s7, $s6, -4
                sw      $zero, 0x60+var_34($sp)
                sw      $zero, 0x60+var_38($sp)
                sw      $v0, 0x60+var_30($sp)
                sw      $v1, 0x60+var_2C($sp)

loc_2258C:                               # CODE XREF: ssl_parse_serverhello_tlsext+250↓j
                                         # ssl_parse_serverhello_tlsext+2A8↓j ...
                sltu    $v0, $s7, $s1

loc_22590:                               # CODE XREF: ssl_parse_serverhello_tlsext+288↓j
                bnez    $v0, loc_22498
                addiu   $s2, $s1, 4
                lbu     $v0, 2($s1)
                lbu     $v1, 3($s1)
                sll     $v0, 8
                or      $v0, $v1
                andi    $s3, $v0, 0xFFFF
                lbu     $v1, 0($s1)
                lbu     $a2, 1($s1)
                addu    $s1, $s3, $s2
                sltu    $v0, $s5, $s1
                bnez    $v0, loc_224B8
                sll     $v0, $v1, 8
                lw      $t9, 0x110($s4)
                beqz    $t9, loc_225F4
                or      $s0, $a2, $v0
                lw      $v0, 0x114($s4)
                move    $a0, $s4
                sw      $s3, 0x60+var_50($sp)
                sw      $v0, 0x60+var_4C($sp)
                li      $a1, 1
                move    $a2, $s0
                jalr    $t9
                move    $a3, $s2
                lw      $gp, 0x60+var_48($sp)

loc_225F4:                               # CODE XREF: ssl_parse_serverhello_tlsext+208↑j
                bnez    $s0, loc_22618
                li      $v0, 0x23  # '#'
                lw      $v0, 0x118($s4)
                beqz    $v0, loc_22870
                lw      $a0, 0x60+arg_10($sp)
                bnez    $s3, loc_22870
                li      $v0, 1
                b       loc_2258C
                sw      $v0, 0x60+var_34($sp)
 # ---------------------------------------------------------------------------

loc_22618:                               # CODE XREF: ssl_parse_serverhello_tlsext:loc_225F4↑j
                beq     $s0, $v0, loc_22678
                li      $v0, 5
                beq     $s0, $v0, loc_226D0
                li      $v0, 0x3374
                beq     $s0, $v0, loc_226FC
                li      $v0, 0xFF01
                beq     $s0, $v0, loc_2280C
                la      $t9, ssl_parse_serverhello_renegotiate_ext

loc_22638:                               # CODE XREF: ssl_parse_serverhello_tlsext+344↓j
                li      $v0, 0xF
                beq     $s0, $v0, loc_227D8
                li      $v0, 1

loc_22644:                               # CODE XREF: ssl_parse_serverhello_tlsext+318↓j
                li      $v0, 0xE
                bne     $s0, $v0, loc_22590
                sltu    $v0, $s7, $s1
                la      $t9, ssl_parse_serverhello_use_srtp_ext
                lw      $a3, 0x60+arg_10($sp)
                move    $a1, $s2
                move    $a2, $s3
                jalr    $t9 ; ssl_parse_serverhello_use_srtp_ext
                move    $a0, $s4
                beqz    $v0, loc_2258C
                lw      $gp, 0x60+var_48($sp)

loc_22670:                               # CODE XREF: ssl_parse_serverhello_tlsext+460↓j
                b       loc_22464
                move    $v1, $zero
 # ---------------------------------------------------------------------------

loc_22678:                               # CODE XREF: ssl_parse_serverhello_tlsext:loc_22618↑j
                lw      $t9, 0x148($s4)
                beqz    $t9, loc_2269C
                move    $a1, $s2
                lw      $a3, 0x14C($s4)
                move    $a0, $s4
                jalr    $t9
                move    $a2, $s3
                beqz    $v0, loc_228A4
                lw      $gp, 0x60+var_48($sp)

loc_2269C:                               # CODE XREF: ssl_parse_serverhello_tlsext+2BC↑j
                la      $t9, SSL_ctrl
                move    $a0, $s4
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                jalr    $t9 ; SSL_ctrl
                move    $a3, $zero
                andi    $v0, 0x4000
                bnez    $v0, loc_22890
                lw      $gp, 0x60+var_48($sp)
                bnez    $s3, loc_22890
                li      $v0, 1
                b       loc_2258C
                sw      $v0, 0x138($s4)
 # ---------------------------------------------------------------------------

loc_226D0:                               # CODE XREF: ssl_parse_serverhello_tlsext+260↑j
                lw      $v1, 0($s4)
                li      $v0, 0xFEFF
                beq     $v1, $v0, loc_22644
                li      $v0, 0xFFFFFFFF
                lw      $v1, 0x120($s4)
                beq     $v1, $v0, loc_22894
                lw      $a0, 0x60+arg_10($sp)
                bnez    $s3, loc_22894
                li      $v0, 1
                b       loc_2258C
                sw      $v0, 0x124($s4)
 # ---------------------------------------------------------------------------

loc_226FC:                               # CODE XREF: ssl_parse_serverhello_tlsext+268↑j
                lw      $v0, 0x58($s4)
                lw      $v1, 0x2B4($v0)
                bnez    $v1, loc_22638
                nop
                lw      $a1, 0xDC($s4)
                lw      $t9, 0x1A0($a1)
                beqz    $t9, loc_22894
                lw      $a0, 0x60+arg_10($sp)
                beqz    $s3, loc_2275C
                nop
                lbu     $v1, 0($s2)
                beqz    $v1, loc_22454
                move    $a0, $zero
                b       loc_22744
                addiu   $v0, $a0, (_X509_NAME_free+1)
 # ---------------------------------------------------------------------------

loc_22738:                               # CODE XREF: ssl_parse_serverhello_tlsext+38C↓j
                lbu     $v1, 0($v1)
                beqz    $v1, loc_22454
                addiu   $v0, $a0, 1

loc_22744:                               # CODE XREF: ssl_parse_serverhello_tlsext+370↑j
                addu    $a0, $v0, $v1
                sltu    $v0, $a0, $s3
                bnez    $v0, loc_22738
                addu    $v1, $s2, $a0
                bne     $a0, $s3, loc_22458
                lw      $a0, 0x60+arg_10($sp)

loc_2275C:                               # CODE XREF: ssl_parse_serverhello_tlsext+35C↑j
                sw      $s3, 0x60+var_50($sp)
                lw      $v0, 0x1A4($a1)
                lw      $a2, 0x60+var_2C($sp)
                lw      $a1, 0x60+var_30($sp)
                move    $a3, $s2
                sw      $v0, 0x60+var_4C($sp)
                jalr    $t9
                move    $a0, $s4
                bnez    $v0, loc_228A4
                lw      $gp, 0x60+var_48($sp)
                la      $v0, loc_40000
                la      $t9, CRYPTO_malloc
                lbu     $a0, 0x60+var_40($sp)
                addiu   $a1, $v0, (aT1LibC - 0x40000)  # "t1_lib.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x60A
                lw      $gp, 0x60+var_48($sp)
                beqz    $v0, loc_228A4
                sw      $v0, 0x15C($s4)
                la      $t9, memcpy
                lw      $a1, 0x60+var_3C($sp)
                lbu     $a2, 0x60+var_40($sp)
                jalr    $t9 ; memcpy
                move    $a0, $v0
                lw      $gp, 0x60+var_48($sp)
                lbu     $v0, 0x60+var_40($sp)
                lw      $a0, 0x58($s4)
                li      $v1, 1
                sb      $v0, 0x160($s4)
                b       loc_2258C
                sw      $v1, 0x414($a0)
 # ---------------------------------------------------------------------------

loc_227D8:                               # CODE XREF: ssl_parse_serverhello_tlsext+27C↑j
                lbu     $a1, 0($s2)
                beq     $a1, $v0, loc_227FC
                li      $v0, 2
                beq     $a1, $v0, loc_22880
                lw      $a0, 0x60+arg_10($sp)
                li      $v0, 0x2F  # '/'
                move    $v1, $zero
                b       loc_22464
                sw      $v0, 0($a0)
 # ---------------------------------------------------------------------------

loc_227FC:                               # CODE XREF: ssl_parse_serverhello_tlsext+41C↑j
                lw      $v0, 0x16C($s4)
                ori     $v0, 1
                b       loc_2258C
                sw      $v0, 0x16C($s4)
 # ---------------------------------------------------------------------------

loc_2280C:                               # CODE XREF: ssl_parse_serverhello_tlsext+270↑j
                lw      $a3, 0x60+arg_10($sp)
                move    $a1, $s2
                move    $a2, $s3
                jalr    $t9 ; ssl_parse_serverhello_renegotiate_ext
                move    $a0, $s4
                beqz    $v0, loc_22670
                lw      $gp, 0x60+var_48($sp)
                li      $v0, 1
                b       loc_2258C
                sw      $v0, 0x60+var_38($sp)
 # ---------------------------------------------------------------------------

loc_22834:                               # CODE XREF: ssl_parse_serverhello_tlsext+EC↑j
                lw      $a0, 0x118($s4)
                beqz    $a0, loc_224B4
                nop
                lw      $s0, 0xC0($s4)
                lw      $v0, 0xC8($s0)
                bnez    $v0, loc_22454
                la      $t9, BUF_strdup
                jalr    $t9 ; BUF_strdup
                nop
                lw      $v1, 0xC0($s4)
                lw      $gp, 0x60+var_48($sp)
                sw      $v0, 0xC8($s0)
                lw      $v0, 0xC8($v1)
                bnez    $v0, loc_224B4
                lw      $a0, 0x60+arg_10($sp)

loc_22870:                               # CODE XREF: ssl_parse_serverhello_tlsext+240↑j
                                         # ssl_parse_serverhello_tlsext+248↑j
                li      $v0, 0x70  # 'p'
                move    $v1, $zero
                b       loc_22464
                sw      $v0, 0($a0)
 # ---------------------------------------------------------------------------

loc_22880:                               # CODE XREF: ssl_parse_serverhello_tlsext+424↑j
                lw      $v0, 0x16C($s4)
                ori     $v0, 3
                b       loc_2258C
                sw      $v0, 0x16C($s4)
 # ---------------------------------------------------------------------------

loc_22890:                               # CODE XREF: ssl_parse_serverhello_tlsext+2F8↑j
                                         # ssl_parse_serverhello_tlsext+300↑j
                lw      $a0, 0x60+arg_10($sp)

loc_22894:                               # CODE XREF: ssl_parse_serverhello_tlsext+324↑j
                                         # ssl_parse_serverhello_tlsext+32C↑j ...
                li      $v0, 0x6E  # 'n'
                move    $v1, $zero
                b       loc_22464
                sw      $v0, 0($a0)
 # ---------------------------------------------------------------------------

loc_228A4:                               # CODE XREF: ssl_parse_serverhello_tlsext+2D4↑j
                                         # ssl_parse_serverhello_tlsext+3BC↑j ...
                lw      $a0, 0x60+arg_10($sp)
                li      $v0, 0x50  # 'P'
                move    $v1, $zero
                b       loc_22464
                sw      $v0, 0($a0)
 # End of function ssl_parse_serverhello_tlsext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_parse_clienthello_tlsext
ssl_parse_clienthello_tlsext:            # CODE XREF: ssl3_get_client_hello+484↑p
                                         # DATA XREF: LOAD:00002708↑o ...

var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_40          = -0x40
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4           =  4
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - ssl_parse_clienthello_tlsext)
                addu    $gp, $t9
                addiu   $sp, -0x60
                sw      $ra, 0x60+var_4($sp)
                sw      $fp, 0x60+var_8($sp)
                sw      $s7, 0x60+var_C($sp)
                sw      $s6, 0x60+var_10($sp)
                sw      $s5, 0x60+var_14($sp)
                sw      $s4, 0x60+var_18($sp)
                sw      $s3, 0x60+var_1C($sp)
                sw      $s2, 0x60+var_20($sp)
                sw      $s1, 0x60+var_24($sp)
                sw      $s0, 0x60+var_28($sp)
                sw      $gp, 0x60+var_48($sp)
                lw      $v1, 0x58($a0)
                li      $v0, 0xFFFFFFFF
                sw      $v0, 0x120($a0)
                sw      $zero, 0x11C($a0)
                sw      $zero, 0x414($v1)
                lw      $v1, 0x16C($a0)
                sw      $a1, 0x60+arg_4($sp)
                addu    $s7, $a2, $a3
                lw      $a1, 0($a1)
                move    $s4, $a0
                li      $v0, 0xFFFFFFFC
                addiu   $a0, $s7, -2
                and     $v1, $v0
                sltu    $a0, $a1, $a0
                beqz    $a0, loc_22BB8
                sw      $v1, 0x16C($s4)
                lbu     $v0, 0($a1)
                lbu     $v1, 1($a1)
                sll     $v0, 8
                or      $v0, $v1
                andi    $v0, 0xFFFF
                subu    $v0, $s7, $v0
                addiu   $a3, $a1, 2
                sltu    $v0, $a3
                bnez    $v0, loc_22BB8
                addiu   $fp, $s7, -4
                sltu    $v0, $fp, $a3
                bnez    $v0, loc_22BA0
                addiu   $s5, $a1, 6
                lbu     $v0, 4($a1)
                lbu     $v1, 5($a1)
                sll     $v0, 8
                or      $v0, $v1
                andi    $s6, $v0, 0xFFFF
                addu    $s1, $s6, $s5
                sltu    $v0, $s7, $s1
                lbu     $a2, 1($a3)
                bnez    $v0, loc_22BB8
                lbu     $a0, 2($a1)
                sll     $v0, $a0, 8
                addiu   $v1, $sp, 0x60+var_40
                or      $s0, $a2, $v0
                sw      $zero, 0x60+var_34($sp)
                sw      $zero, 0x60+var_38($sp)
                sw      $v1, 0x60+var_30($sp)

loc_229A8:                               # CODE XREF: ssl_parse_clienthello_tlsext+2E0↓j
                lw      $t9, 0x110($s4)
                beqz    $t9, loc_229D4
                move    $a0, $s4
                lw      $v0, 0x114($s4)
                sw      $s6, 0x60+var_50($sp)
                sw      $v0, 0x60+var_4C($sp)
                move    $a1, $zero
                move    $a2, $s0
                jalr    $t9
                move    $a3, $s5
                lw      $gp, 0x60+var_48($sp)

loc_229D4:                               # CODE XREF: ssl_parse_clienthello_tlsext+F4↑j
                bnez    $s0, loc_22C6C
                li      $v0, 0xC
                sltiu   $v0, $s6, 2
                bnez    $v0, loc_22E5C
                addiu   $v1, $s6, -2
                lbu     $v0, 0($s5)
                lbu     $a0, 1($s5)
                sll     $v0, 8
                or      $a0, $v0
                andi    $s6, $v1, 0xFFFF
                slt     $v0, $s6, $a0
                bnez    $v0, loc_22F1C
                slti    $v0, $a0, 4
                bnez    $v0, loc_22B54
                addiu   $s5, 2
                lbu     $v0, 1($s5)
                lbu     $v1, 2($s5)
                sll     $v0, 8
                or      $v0, $v1
                andi    $s1, $v0, 0xFFFF
                addiu   $s2, $a0, -3
                slt     $v0, $s2, $s1
                bnez    $v0, loc_22E5C
                lbu     $v1, 0($s5)
                b       loc_22AFC
                addiu   $s0, $s5, 3
 # ---------------------------------------------------------------------------

loc_22A3C:                               # CODE XREF: ssl_parse_clienthello_tlsext+25C↓j
                lw      $s3, 0xC0($s4)
                lw      $v0, 0xC8($s3)
                bnez    $v0, loc_22F1C
                sltiu   $v0, $s1, 0x100
                beqz    $v0, loc_23050
                la      $v0, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a0, $s1, 1
                addiu   $a1, $v0, (aT1LibC - 0x40000)  # "t1_lib.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x3CF
                lw      $gp, 0x60+var_48($sp)
                beqz    $v0, loc_23064
                sw      $v0, 0xC8($s3)
                lw      $v0, 0xC0($s4)
                la      $t9, memcpy
                lw      $a0, 0xC8($v0)
                move    $a1, $s0
                jalr    $t9 ; memcpy
                move    $a2, $s1
                lw      $v1, 0xC0($s4)
                lw      $gp, 0x60+var_48($sp)
                lw      $v0, 0xC8($v1)
                addu    $v0, $s1
                sb      $zero, 0($v0)
                lw      $v1, 0xC0($s4)
                la      $t9, strlen
                lw      $s3, 0xC8($v1)
                jalr    $t9 ; strlen
                move    $a0, $s3
                bne     $s1, $v0, loc_23078
                lw      $gp, 0x60+var_48($sp)
                li      $v0, 1
                sw      $v0, 0x11C($s4)
                subu    $a0, $s2, $s1

loc_22AC8:                               # CODE XREF: ssl_parse_clienthello_tlsext+248↓j
                slti    $v0, $a0, 4

loc_22ACC:                               # CODE XREF: ssl_parse_clienthello_tlsext+250↓j
                bnez    $v0, loc_22B54
                nop

loc_22AD4:                               # CODE XREF: ssl_parse_clienthello_tlsext+294↓j
                lbu     $v0, 1($s0)
                lbu     $v1, 2($s0)
                sll     $v0, 8
                or      $v0, $v1
                andi    $s1, $v0, 0xFFFF
                addiu   $s2, $a0, -3
                slt     $v0, $s2, $s1
                bnez    $v0, loc_22E5C
                lbu     $v1, 0($s0)
                addiu   $s0, 3

loc_22AFC:                               # CODE XREF: ssl_parse_clienthello_tlsext+17C↑j
                lw      $v0, 0x11C($s4)
                bnez    $v0, loc_22AC8
                subu    $a0, $s2, $s1
                bnez    $v1, loc_22ACC
                slti    $v0, $a0, 4
                lw      $v0, 0x6C($s4)
                beqz    $v0, loc_22A3C
                nop
                lw      $v0, 0xC0($s4)
                lw      $s3, 0xC8($v0)
                beqz    $s3, loc_22B3C
                la      $t9, strlen
                jalr    $t9 ; strlen
                move    $a0, $s3
                beq     $v0, $s1, loc_22CDC
                lw      $gp, 0x60+var_48($sp)

loc_22B3C:                               # CODE XREF: ssl_parse_clienthello_tlsext+26C↑j
                move    $v0, $zero
                sw      $v0, 0x11C($s4)

loc_22B44:                               # CODE XREF: ssl_parse_clienthello_tlsext+440↓j
                subu    $a0, $s2, $s1
                slti    $v0, $a0, 4
                beqz    $v0, loc_22AD4
                nop

loc_22B54:                               # CODE XREF: ssl_parse_clienthello_tlsext+150↑j
                                         # ssl_parse_clienthello_tlsext:loc_22ACC↑j
                bnez    $a0, loc_22F1C
                addu    $s1, $s6, $s5

loc_22B5C:                               # CODE XREF: ssl_parse_clienthello_tlsext+414↓j
                                         # ssl_parse_clienthello_tlsext+44C↓j ...
                sltu    $v0, $fp, $s1

loc_22B60:                               # CODE XREF: ssl_parse_clienthello_tlsext+3F4↓j
                                         # ssl_parse_clienthello_tlsext+680↓j
                bnez    $v0, loc_22BA4
                move    $a3, $s1
                lbu     $v0, 2($a3)
                lbu     $v1, 3($a3)
                sll     $v0, 8
                or      $v0, $v1
                andi    $s6, $v0, 0xFFFF
                addiu   $s5, $a3, 4
                addu    $s1, $s6, $s5
                sltu    $v0, $s7, $s1
                lbu     $v1, 0($a3)
                bnez    $v0, loc_22BAC
                lbu     $a0, 1($a3)
                sll     $v0, $v1, 8
                b       loc_229A8
                or      $s0, $a0, $v0
 # ---------------------------------------------------------------------------

loc_22BA0:                               # CODE XREF: ssl_parse_clienthello_tlsext+A8↑j
                sw      $zero, 0x60+var_34($sp)

loc_22BA4:                               # CODE XREF: ssl_parse_clienthello_tlsext:loc_22B60↑j
                lw      $a1, 0x60+arg_4($sp)
                sw      $a3, 0($a1)

loc_22BAC:                               # CODE XREF: ssl_parse_clienthello_tlsext+2D4↑j
                lw      $v0, 0x60+var_34($sp)
                bnez    $v0, loc_22BD8
                li      $a0, 1

loc_22BB8:                               # CODE XREF: ssl_parse_clienthello_tlsext+74↑j
                                         # ssl_parse_clienthello_tlsext+9C↑j ...
                lw      $v0, 0x178($s4)
                beqz    $v0, loc_22BD4
                lui     $v1, 4
                lw      $v0, 0xF8($s4)
                and     $v0, $v1
                beqz    $v0, loc_22C0C
                lw      $v1, 0x60+arg_10($sp)

loc_22BD4:                               # CODE XREF: ssl_parse_clienthello_tlsext+304↑j
                li      $a0, 1

loc_22BD8:                               # CODE XREF: ssl_parse_clienthello_tlsext+2F8↑j
                                         # ssl_parse_clienthello_tlsext:loc_22CD4↓j ...
                lw      $ra, 0x60+var_4($sp)
                lw      $fp, 0x60+var_8($sp)
                lw      $s7, 0x60+var_C($sp)
                lw      $s6, 0x60+var_10($sp)
                lw      $s5, 0x60+var_14($sp)
                lw      $s4, 0x60+var_18($sp)
                lw      $s3, 0x60+var_1C($sp)
                lw      $s2, 0x60+var_20($sp)
                lw      $s1, 0x60+var_24($sp)
                lw      $s0, 0x60+var_28($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_22C0C:                               # CODE XREF: ssl_parse_clienthello_tlsext+314↑j
                la      $t9, ERR_put_error
                li      $v0, 0x28  # '('
                sw      $v0, 0($v1)
                li      $a0, 0x14
                sw      $zero, 0x60+var_50($sp)
                li      $a1, 0x12E
                li      $a2, 0x152
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x60+var_48($sp)
                move    $a0, $zero
                lw      $ra, 0x60+var_4($sp)
                lw      $fp, 0x60+var_8($sp)
                lw      $s7, 0x60+var_C($sp)
                lw      $s6, 0x60+var_10($sp)
                lw      $s5, 0x60+var_14($sp)
                lw      $s4, 0x60+var_18($sp)
                lw      $s3, 0x60+var_1C($sp)
                lw      $s2, 0x60+var_20($sp)
                lw      $s1, 0x60+var_24($sp)
                lw      $s0, 0x60+var_28($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x60
 # ---------------------------------------------------------------------------

loc_22C6C:                               # CODE XREF: ssl_parse_clienthello_tlsext:loc_229D4↑j
                beq     $s0, $v0, loc_22EA0
                li      $v0, 0x23  # '#'
                beq     $s0, $v0, loc_22D00
                li      $v0, 0xFF01
                beq     $s0, $v0, loc_23000
                li      $v0, 0xD
                beq     $s0, $v0, loc_22F4C
                li      $v0, 5
                beq     $s0, $v0, loc_22FB4
                li      $v0, 0xFEFF
                li      $v0, 0xF

loc_22C98:                               # CODE XREF: ssl_parse_clienthello_tlsext+700↓j
                beq     $s0, $v0, loc_2302C
                li      $v0, 1

loc_22CA0:                               # CODE XREF: ssl_parse_clienthello_tlsext+710↓j
                li      $v0, 0x3374
                beq     $s0, $v0, loc_22F30
                li      $v0, 0xE
                bne     $s0, $v0, loc_22B60
                sltu    $v0, $fp, $s1
                la      $t9, ssl_parse_clienthello_use_srtp_ext
                lw      $a3, 0x60+arg_10($sp)
                move    $a1, $s5
                move    $a2, $s6
                jalr    $t9 ; ssl_parse_clienthello_use_srtp_ext
                move    $a0, $s4
                beqz    $v0, loc_22B5C
                lw      $gp, 0x60+var_48($sp)

loc_22CD4:                               # CODE XREF: ssl_parse_clienthello_tlsext+760↓j
                b       loc_22BD8
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_22CDC:                               # CODE XREF: ssl_parse_clienthello_tlsext+27C↑j
                la      $t9, strncmp
                move    $a0, $s3
                move    $a1, $s0
                jalr    $t9 ; strncmp
                move    $a2, $s1
                lw      $gp, 0x60+var_48($sp)
                sltiu   $v0, 1
                b       loc_22B44
                sw      $v0, 0x11C($s4)
 # ---------------------------------------------------------------------------

loc_22D00:                               # CODE XREF: ssl_parse_clienthello_tlsext+3BC↑j
                lw      $t9, 0x148($s4)
                beqz    $t9, loc_22B5C
                move    $a1, $s5
                lw      $a3, 0x14C($s4)
                move    $a2, $s6
                jalr    $t9
                move    $a0, $s4
                bnez    $v0, loc_22B5C
                lw      $gp, 0x60+var_48($sp)
                lw      $a1, 0x60+arg_10($sp)
                li      $v0, 0x50  # 'P'
                move    $a0, $zero
                b       loc_22BD8
                sw      $v0, 0($a1)
 # ---------------------------------------------------------------------------

loc_22D38:                               # CODE XREF: ssl_parse_clienthello_tlsext+730↓j
                lbu     $v0, 0($s5)
                lbu     $a0, 1($s5)
                sll     $v0, 8
                addiu   $v1, $s6, -2
                or      $a1, $a0, $v0
                andi    $s3, $v1, 0xFFFF
                slt     $v0, $s3, $a1
                bnez    $v0, loc_22F1C
                nop
                blez    $a1, loc_23134
                addiu   $s0, $s5, 2
                slti    $v0, $a1, 4
                bnez    $v0, loc_22E5C
                addiu   $v1, $a1, -2
                lbu     $v0, 2($s5)
                lbu     $a0, 1($s0)
                sll     $v0, 8
                or      $s0, $a0, $v0
                subu    $s2, $v1, $s0
                bltz    $s2, loc_22F1C
                subu    $v0, $s3, $s0
                addiu   $s5, 4
                la      $t9, d2i_OCSP_RESPID
                lw      $a1, 0x60+var_30($sp)
                addiu   $v0, -2
                sw      $s5, 0x60+var_40($sp)
                move    $a2, $s0
                move    $a0, $zero
                andi    $s3, $v0, 0xFFFF
                jalr    $t9 ; d2i_OCSP_RESPID
                addu    $s0, $s5, $s0
                move    $s1, $v0
                lw      $gp, 0x60+var_48($sp)
                beqz    $v0, loc_22E5C
                addiu   $s5, $s0, 2

loc_22DC4:                               # CODE XREF: ssl_parse_clienthello_tlsext+59C↓j
                lw      $v0, 0x60+var_40($sp)
                bne     $s0, $v0, loc_231B8
                la      $t9, OCSP_RESPID_free
                lw      $v0, 0x128($s4)
                beqz    $v0, loc_230C4
                la      $t9, sk_new_null

loc_22DDC:                               # CODE XREF: ssl_parse_clienthello_tlsext+818↓j
                la      $t9, sk_push
                move    $a1, $s1
                jalr    $t9 ; sk_push
                move    $a0, $v0
                lw      $gp, 0x60+var_48($sp)
                addiu   $a1, $s2, -2
                beqz    $v0, loc_230FC
                slti    $v1, $s2, 4
                blez    $s2, loc_23128
                nop
                bnez    $v1, loc_22E5C
                nop
                lbu     $v0, 0($s0)
                lbu     $v1, 1($s0)
                sll     $v0, 8
                or      $s0, $v1, $v0
                subu    $a0, $s3, $s0
                subu    $s2, $a1, $s0
                bltz    $s2, loc_22F1C
                addiu   $v0, $a0, -2
                la      $t9, d2i_OCSP_RESPID
                lw      $a1, 0x60+var_30($sp)
                sw      $s5, 0x60+var_40($sp)
                move    $a2, $s0
                move    $a0, $zero
                andi    $s3, $v0, 0xFFFF
                jalr    $t9 ; d2i_OCSP_RESPID
                addu    $s0, $s5, $s0
                move    $s1, $v0
                lw      $gp, 0x60+var_48($sp)
                bnez    $v0, loc_22DC4
                addiu   $s5, $s0, 2

loc_22E5C:                               # CODE XREF: ssl_parse_clienthello_tlsext+128↑j
                                         # ssl_parse_clienthello_tlsext+174↑j ...
                lw      $a1, 0x60+arg_10($sp)

loc_22E60:                               # CODE XREF: ssl_parse_clienthello_tlsext:loc_22EA0↓j
                                         # ssl_parse_clienthello_tlsext+698↓j ...
                li      $v0, 0x32  # '2'

loc_22E64:                               # CODE XREF: ssl_parse_clienthello_tlsext+5F8↓j
                                         # ssl_parse_clienthello_tlsext+8F0↓j
                move    $a0, $zero
                lw      $ra, 0x60+var_4($sp)
                lw      $fp, 0x60+var_8($sp)
                lw      $s7, 0x60+var_C($sp)
                lw      $s6, 0x60+var_10($sp)
                lw      $s5, 0x60+var_14($sp)
                lw      $s4, 0x60+var_18($sp)
                lw      $s3, 0x60+var_1C($sp)
                lw      $s2, 0x60+var_20($sp)
                lw      $s1, 0x60+var_24($sp)
                lw      $s0, 0x60+var_28($sp)
                sw      $v0, 0($a1)
                addiu   $sp, 0x60
                jr      $ra
                move    $v0, $a0
 # ---------------------------------------------------------------------------

loc_22EA0:                               # CODE XREF: ssl_parse_clienthello_tlsext:loc_22C6C↑j
                beqz    $s6, loc_22E60
                lw      $a1, 0x60+arg_10($sp)
                lbu     $s0, 0($s5)
                addiu   $v0, $s6, -1
                bne     $s0, $v0, loc_22E64
                li      $v0, 0x32  # '2'
                lw      $v0, 0x18C($s4)
                bnez    $v0, loc_22F1C
                la      $v0, loc_40000
                la      $t9, CRYPTO_malloc
                move    $a0, $s6
                addiu   $a1, $v0, (aT1LibC - 0x40000)  # "t1_lib.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x400
                lw      $gp, 0x60+var_48($sp)
                beqz    $v0, loc_23120
                sw      $v0, 0x18C($s4)
                la      $t9, memcpy
                move    $a0, $v0
                addiu   $a1, $s5, 1
                jalr    $t9 ; memcpy
                move    $a2, $s0
                lw      $v1, 0x18C($s4)
                lw      $gp, 0x60+var_48($sp)
                addu    $v1, $s0
                sb      $zero, 0($v1)
                la      $t9, strlen
                jalr    $t9 ; strlen
                lw      $a0, 0x18C($s4)
                beq     $s0, $v0, loc_22B5C
                lw      $gp, 0x60+var_48($sp)

loc_22F1C:                               # CODE XREF: ssl_parse_clienthello_tlsext+148↑j
                                         # ssl_parse_clienthello_tlsext+18C↑j ...
                lw      $v1, 0x60+arg_10($sp)
                li      $v0, 0x32  # '2'
                move    $a0, $zero
                b       loc_22BD8
                sw      $v0, 0($v1)
 # ---------------------------------------------------------------------------

loc_22F30:                               # CODE XREF: ssl_parse_clienthello_tlsext+3EC↑j
                lw      $v1, 0x58($s4)
                lw      $v0, 0x2B4($v1)
                bnez    $v0, loc_22B60
                sltu    $v0, $fp, $s1
                li      $v0, 1
                b       loc_22B5C
                sw      $v0, 0x414($v1)
 # ---------------------------------------------------------------------------

loc_22F4C:                               # CODE XREF: ssl_parse_clienthello_tlsext+3CC↑j
                lw      $v1, 0x60+var_38($sp)
                bnez    $v1, loc_22E60
                lw      $a1, 0x60+arg_10($sp)
                sltiu   $v0, $s6, 2
                bnez    $v0, loc_22E60
                addiu   $a0, $s6, -2
                lbu     $v0, 0($s5)
                lbu     $v1, 1($s5)
                sll     $v0, 8
                or      $v1, $v0
                andi    $s6, $a0, 0xFFFF
                bne     $s6, $v1, loc_22F1C
                andi    $v0, $s6, 1
                bnez    $v0, loc_22F1C
                la      $t9, tls1_process_sigalgs
                addiu   $s5, 2
                move    $a0, $s4
                move    $a1, $s5
                jalr    $t9 ; tls1_process_sigalgs
                move    $a2, $s6
                beqz    $v0, loc_22F1C
                lw      $gp, 0x60+var_48($sp)
                li      $a1, 1
                addu    $s1, $s6, $s5
                b       loc_22B5C
                sw      $a1, 0x60+var_38($sp)
 # ---------------------------------------------------------------------------

loc_22FB4:                               # CODE XREF: ssl_parse_clienthello_tlsext+3D4↑j
                lw      $v1, 0($s4)
                beq     $v1, $v0, loc_22C98
                li      $v0, 0xF
                lw      $v0, 0xDC($s4)
                lw      $v1, 0x13C($v0)
                beqz    $v1, loc_22CA0
                sltiu   $v0, $s6, 5
                bnez    $v0, loc_22E5C
                addiu   $v1, $s6, -1
                lbu     $a0, 0($s5)
                li      $v0, 1
                sw      $a0, 0x120($s4)
                addiu   $s5, 1
                beq     $a0, $v0, loc_22D38
                andi    $s6, $v1, 0xFFFF
                li      $v0, 0xFFFFFFFF
                addu    $s1, $s6, $s5
                b       loc_22B5C
                sw      $v0, 0x120($s4)
 # ---------------------------------------------------------------------------

loc_23000:                               # CODE XREF: ssl_parse_clienthello_tlsext+3C4↑j
                la      $t9, ssl_parse_clienthello_renegotiate_ext
                lw      $a3, 0x60+arg_10($sp)
                move    $a1, $s5
                move    $a2, $s6
                jalr    $t9 ; ssl_parse_clienthello_renegotiate_ext
                move    $a0, $s4
                beqz    $v0, loc_22CD4
                lw      $gp, 0x60+var_48($sp)
                li      $v0, 1
                b       loc_22B5C
                sw      $v0, 0x60+var_34($sp)
 # ---------------------------------------------------------------------------

loc_2302C:                               # CODE XREF: ssl_parse_clienthello_tlsext:loc_22C98↑j
                lbu     $a1, 0($s5)
                beq     $a1, $v0, loc_230B4
                li      $v0, 2
                beq     $a1, $v0, loc_230A4
                lw      $v1, 0x60+arg_10($sp)
                li      $v0, 0x2F  # '/'
                move    $a0, $zero
                b       loc_22BD8
                sw      $v0, 0($v1)
 # ---------------------------------------------------------------------------

loc_23050:                               # CODE XREF: ssl_parse_clienthello_tlsext+194↑j
                lw      $a1, 0x60+arg_10($sp)
                li      $v0, 0x70  # 'p'
                move    $a0, $zero
                b       loc_22BD8
                sw      $v0, 0($a1)
 # ---------------------------------------------------------------------------

loc_23064:                               # CODE XREF: ssl_parse_clienthello_tlsext+1B4↑j
                lw      $v1, 0x60+arg_10($sp)
                li      $v0, 0x50  # 'P'
                move    $a0, $zero
                b       loc_22BD8
                sw      $v0, 0($v1)
 # ---------------------------------------------------------------------------

loc_23078:                               # CODE XREF: ssl_parse_clienthello_tlsext+1FC↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s3
                lw      $gp, 0x60+var_48($sp)
                lw      $v1, 0xC0($s4)
                lw      $a1, 0x60+arg_10($sp)
                li      $v0, 0x70  # 'p'
                move    $a0, $zero
                sw      $v0, 0($a1)
                b       loc_22BD8
                sw      $zero, 0xC8($v1)
 # ---------------------------------------------------------------------------

loc_230A4:                               # CODE XREF: ssl_parse_clienthello_tlsext+780↑j
                lw      $v0, 0x16C($s4)
                ori     $v0, 3
                b       loc_22B5C
                sw      $v0, 0x16C($s4)
 # ---------------------------------------------------------------------------

loc_230B4:                               # CODE XREF: ssl_parse_clienthello_tlsext+778↑j
                lw      $v0, 0x16C($s4)
                ori     $v0, 1
                b       loc_22B5C
                sw      $v0, 0x16C($s4)
 # ---------------------------------------------------------------------------

loc_230C4:                               # CODE XREF: ssl_parse_clienthello_tlsext+51C↑j
                jalr    $t9 ; sk_new_null
                nop
                lw      $gp, 0x60+var_48($sp)
                bnez    $v0, loc_22DDC
                sw      $v0, 0x128($s4)
                la      $t9, OCSP_RESPID_free
                jalr    $t9 ; OCSP_RESPID_free
                move    $a0, $s1
                lw      $gp, 0x60+var_48($sp)
                lw      $a1, 0x60+arg_10($sp)
                li      $v0, 0x50  # 'P'
                move    $a0, $zero
                b       loc_22BD8
                sw      $v0, 0($a1)
 # ---------------------------------------------------------------------------

loc_230FC:                               # CODE XREF: ssl_parse_clienthello_tlsext+53C↑j
                la      $t9, OCSP_RESPID_free
                jalr    $t9 ; OCSP_RESPID_free
                move    $a0, $s1
                lw      $gp, 0x60+var_48($sp)
                lw      $v1, 0x60+arg_10($sp)
                li      $v0, 0x50  # 'P'
                move    $a0, $zero
                b       loc_22BD8
                sw      $v0, 0($v1)
 # ---------------------------------------------------------------------------

loc_23120:                               # CODE XREF: ssl_parse_clienthello_tlsext+624↑j
                b       loc_22BD8
                li      $a0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_23128:                               # CODE XREF: ssl_parse_clienthello_tlsext+544↑j
                sltiu   $v0, $s3, 2
                bnez    $v0, loc_22E60
                lw      $a1, 0x60+arg_10($sp)

loc_23134:                               # CODE XREF: ssl_parse_clienthello_tlsext+4A4↑j
                lbu     $v0, 0($s0)
                lbu     $v1, 1($s0)
                sll     $v0, 8
                addiu   $a0, $s3, -2
                or      $v1, $v0
                andi    $s6, $a0, 0xFFFF
                bne     $s6, $v1, loc_22F1C
                addiu   $s5, $s0, 2
                beqz    $s6, loc_231B0
                sw      $s5, 0x60+var_40($sp)
                lw      $a0, 0x12C($s4)
                beqz    $a0, loc_23178
                la      $t9, sk_pop_free
                la      $a1, X509_EXTENSION_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x60+var_48($sp)

loc_23178:                               # CODE XREF: ssl_parse_clienthello_tlsext+8A8↑j
                la      $t9, d2i_X509_EXTENSIONS
                lw      $a1, 0x60+var_30($sp)
                move    $a0, $zero
                jalr    $t9 ; d2i_X509_EXTENSIONS
                move    $a2, $s6
                lw      $gp, 0x60+var_48($sp)
                beqz    $v0, loc_22E5C
                sw      $v0, 0x12C($s4)
                lw      $v0, 0x60+var_40($sp)
                addu    $s1, $s5, $s6
                beq     $s1, $v0, loc_22B5C
                lw      $a1, 0x60+arg_10($sp)
                b       loc_22E64
                li      $v0, 0x32  # '2'
 # ---------------------------------------------------------------------------

loc_231B0:                               # CODE XREF: ssl_parse_clienthello_tlsext+89C↑j
                b       loc_22B5C
                move    $s1, $s5
 # ---------------------------------------------------------------------------

loc_231B8:                               # CODE XREF: ssl_parse_clienthello_tlsext+510↑j
                jalr    $t9 ; OCSP_RESPID_free
                move    $a0, $s1
                lw      $gp, 0x60+var_48($sp)
                lw      $v1, 0x60+arg_10($sp)
                li      $v0, 0x32  # '2'
                move    $a0, $zero
                b       loc_22BD8
                sw      $v0, 0($v1)
 # End of function ssl_parse_clienthello_tlsext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_add_serverhello_tlsext
ssl_add_serverhello_tlsext:              # CODE XREF: ssl3_send_server_hello+190↑p
                                         # dtls1_send_server_hello+1C4↓p
                                         # DATA XREF: ...

var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_add_serverhello_tlsext)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_8($sp)
                sw      $s5, 0x48+var_C($sp)
                sw      $s4, 0x48+var_10($sp)
                sw      $s3, 0x48+var_14($sp)
                sw      $s2, 0x48+var_18($sp)
                sw      $s1, 0x48+var_1C($sp)
                sw      $s0, 0x48+var_20($sp)
                sw      $gp, 0x48+var_30($sp)
                lw      $v1, 0($a0)
                li      $v0, 0x300
                move    $s3, $a0
                move    $s2, $a1
                bne     $v1, $v0, loc_23230
                move    $s4, $a2
                lw      $v0, 0x58($a0)
                lw      $v1, 0x410($v0)
                beqz    $v1, loc_2333C
                move    $v0, $s2

loc_23230:                               # CODE XREF: ssl_add_serverhello_tlsext+40↑j
                addiu   $s1, $s2, 2
                sltu    $v0, $s1, $s4
                beqz    $v0, loc_23360
                nop
                lw      $v0, 0x6C($s3)
                bnez    $v0, loc_23258
                li      $v0, 1
                lw      $v1, 0x11C($s3)
                beq     $v1, $v0, loc_2338C
                nop

loc_23258:                               # CODE XREF: ssl_add_serverhello_tlsext+6C↑j
                                         # ssl_add_serverhello_tlsext+1BC↓j ...
                lw      $v0, 0x58($s3)
                lw      $v1, 0x410($v0)
                bnez    $v1, loc_233C0
                la      $t9, ssl_add_serverhello_renegotiate_ext

loc_23268:                               # CODE XREF: ssl_add_serverhello_tlsext+268↓j
                lw      $v0, 0x138($s3)
                bnez    $v0, loc_23448
                la      $t9, SSL_ctrl

loc_23274:                               # CODE XREF: ssl_add_serverhello_tlsext+288↓j
                                         # ssl_add_serverhello_tlsext+2B0↓j
                lw      $v0, 0x124($s3)
                bnez    $v0, loc_235B0
                subu    $v0, $s4, $s1

loc_23280:                               # CODE XREF: ssl_add_serverhello_tlsext+3F4↓j
                lw      $v0, 0x168($s3)
                bnez    $v0, loc_2349C
                la      $t9, ssl_add_serverhello_use_srtp_ext

loc_2328C:                               # CODE XREF: ssl_add_serverhello_tlsext+33C↓j
                lw      $v0, 0x58($s3)
                lw      $a0, 0x344($v0)
                lhu     $v1, 8($a0)
                addiu   $v1, -0x80
                sltiu   $v1, 2
                bnez    $v1, loc_235D4
                la      $t9, SSL_ctrl

loc_232A8:                               # CODE XREF: ssl_add_serverhello_tlsext+410↓j
                                         # ssl_add_serverhello_tlsext+47C↓j
                lw      $v0, 0x16C($s3)
                andi    $v0, 1
                beqz    $v0, loc_232E4
                li      $v0, 0xF
                li      $v1, 1
                sb      $v0, 1($s1)
                sb      $zero, 0($s1)
                sb      $zero, 2($s1)
                sb      $v1, 3($s1)
                lw      $v0, 0x16C($s3)
                andi    $v0, 4
                beqz    $v0, loc_23490
                li      $v0, 2
                sb      $v0, 4($s1)
                addiu   $s1, 5

loc_232E4:                               # CODE XREF: ssl_add_serverhello_tlsext+D8↑j
                                         # ssl_add_serverhello_tlsext+2BC↓j
                lw      $v0, 0x58($s3)
                lw      $v1, 0x414($v0)
                beqz    $v1, loc_2331C
                sw      $zero, 0x414($v0)
                lw      $v0, 0xDC($s3)
                lw      $t9, 0x198($v0)
                beqz    $t9, loc_2331C
                move    $a0, $s3
                lw      $a3, 0x19C($v0)
                addiu   $a1, $sp, 0x48+var_28
                jalr    $t9
                addiu   $a2, $sp, 0x48+var_24
                beqz    $v0, loc_2351C
                lw      $gp, 0x48+var_30($sp)

loc_2331C:                               # CODE XREF: ssl_add_serverhello_tlsext+114↑j
                                         # ssl_add_serverhello_tlsext+124↑j ...
                subu    $v0, $s1, $s2
                addiu   $v1, $v0, -2
                beqz    $v1, loc_23338
                sra     $v0, $v1, 8
                sb      $v1, 1($s2)
                sb      $v0, 0($s2)
                move    $s2, $s1

loc_23338:                               # CODE XREF: ssl_add_serverhello_tlsext+14C↑j
                                         # ssl_add_serverhello_tlsext+3D0↓j
                move    $v0, $s2

loc_2333C:                               # CODE XREF: ssl_add_serverhello_tlsext+50↑j
                lw      $ra, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_23360:                               # CODE XREF: ssl_add_serverhello_tlsext+60↑j
                                         # ssl_add_serverhello_tlsext+1C8↓j ...
                move    $s2, $zero
                move    $v0, $s2
                lw      $ra, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_2338C:                               # CODE XREF: ssl_add_serverhello_tlsext+78↑j
                lw      $v0, 0xC0($s3)
                lw      $v1, 0xC8($v0)
                beqz    $v1, loc_23258
                subu    $v0, $s4, $s1
                slti    $v0, 4
                bnez    $v0, loc_23360
                nop
                sb      $zero, 2($s2)
                sb      $zero, 1($s1)
                addiu   $s1, $s2, 6
                sb      $zero, 4($s2)
                b       loc_23258
                sb      $zero, 5($s2)
 # ---------------------------------------------------------------------------

loc_233C0:                               # CODE XREF: ssl_add_serverhello_tlsext+88↑j
                addiu   $s5, $sp, 0x48+var_24
                move    $a0, $s3
                move    $a1, $zero
                move    $a2, $s5
                jalr    $t9 ; ssl_add_serverhello_renegotiate_ext
                move    $a3, $zero
                beqz    $v0, loc_23588
                lw      $gp, 0x48+var_30($sp)
                subu    $v0, $s4, $s2
                lw      $v1, 0x48+var_24($sp)
                addiu   $v0, -4
                subu    $v0, $v1
                bltz    $v0, loc_23360
                li      $v0, 0xFFFFFFFF
                li      $v1, 1
                sb      $v0, 0($s1)
                sb      $v1, 1($s1)
                lw      $v0, 0x48+var_24($sp)
                la      $t9, ssl_add_serverhello_renegotiate_ext
                sra     $v0, 8
                sb      $v0, 2($s1)
                lw      $v0, 0x48+var_24($sp)
                addiu   $s0, $s1, 4
                sb      $v0, 3($s1)
                lw      $a3, 0x48+var_24($sp)
                move    $a2, $s5
                move    $a0, $s3
                jalr    $t9 ; ssl_add_serverhello_renegotiate_ext
                move    $a1, $s0
                beqz    $v0, loc_23588
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x48+var_24($sp)
                b       loc_23268
                addu    $s1, $s0, $v0
 # ---------------------------------------------------------------------------

loc_23448:                               # CODE XREF: ssl_add_serverhello_tlsext+94↑j
                move    $a0, $s3
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                jalr    $t9 ; SSL_ctrl
                move    $a3, $zero
                andi    $v0, 0x4000
                bnez    $v0, loc_23274
                lw      $gp, 0x48+var_30($sp)
                subu    $v0, $s4, $s1
                slti    $v0, 4
                bnez    $v0, loc_23360
                li      $v0, 0x23  # '#'
                sb      $v0, 1($s1)
                sb      $zero, 0($s1)
                sb      $zero, 2($s1)
                sb      $zero, 3($s1)
                b       loc_23274
                addiu   $s1, 4
 # ---------------------------------------------------------------------------

loc_23490:                               # CODE XREF: ssl_add_serverhello_tlsext+FC↑j
                sb      $v1, 4($s1)
                b       loc_232E4
                addiu   $s1, 5
 # ---------------------------------------------------------------------------

loc_2349C:                               # CODE XREF: ssl_add_serverhello_tlsext+AC↑j
                addiu   $s5, $sp, 0x48+var_24
                move    $a0, $s3
                move    $a1, $zero
                move    $a2, $s5
                jalr    $t9 ; ssl_add_serverhello_use_srtp_ext
                move    $a3, $zero
                subu    $v1, $s4, $s2
                lw      $v0, 0x48+var_24($sp)
                addiu   $v1, -4
                subu    $v1, $v0
                bltz    $v1, loc_23360
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 0xE
                sb      $v0, 1($s1)
                sb      $zero, 0($s1)
                lw      $v0, 0x48+var_24($sp)
                la      $t9, ssl_add_serverhello_use_srtp_ext
                sra     $v0, 8
                sb      $v0, 2($s1)
                lw      $v0, 0x48+var_24($sp)
                addiu   $s0, $s1, 4
                sb      $v0, 3($s1)
                lw      $a3, 0x48+var_24($sp)
                move    $a2, $s5
                move    $a0, $s3
                jalr    $t9 ; ssl_add_serverhello_use_srtp_ext
                move    $a1, $s0
                bnez    $v0, loc_23588
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x48+var_24($sp)
                b       loc_2328C
                addu    $s1, $s0, $v0
 # ---------------------------------------------------------------------------

loc_2351C:                               # CODE XREF: ssl_add_serverhello_tlsext+13C↑j
                lw      $v1, 0x48+var_24($sp)
                subu    $v0, $s4, $s1
                subu    $v0, $v1
                addiu   $v0, -4
                bltz    $v0, loc_23360
                li      $v1, 0x74  # 't'
                li      $v0, 0x33  # '3'
                sb      $v1, 1($s1)
                sb      $v0, 0($s1)
                lw      $v0, 0x48+var_24($sp)
                la      $t9, memcpy
                srl     $v0, 8
                sb      $v0, 2($s1)
                lw      $v0, 0x48+var_24($sp)
                addiu   $s0, $s1, 4
                sb      $v0, 3($s1)
                lw      $a1, 0x48+var_28($sp)
                lw      $a2, 0x48+var_24($sp)
                jalr    $t9 ; memcpy
                move    $a0, $s0
                lw      $a0, 0x58($s3)
                li      $v0, 1
                lw      $gp, 0x48+var_30($sp)
                sw      $v0, 0x414($a0)
                lw      $v1, 0x48+var_24($sp)
                b       loc_2331C
                addu    $s1, $s0, $v1
 # ---------------------------------------------------------------------------

loc_23588:                               # CODE XREF: ssl_add_serverhello_tlsext+200↑j
                                         # ssl_add_serverhello_tlsext+25C↑j ...
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x116
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_23338
                move    $s2, $zero
 # ---------------------------------------------------------------------------

loc_235B0:                               # CODE XREF: ssl_add_serverhello_tlsext+A0↑j
                slti    $v0, 4
                bnez    $v0, loc_23360
                li      $v0, 5
                sb      $v0, 1($s1)
                sb      $zero, 0($s1)
                sb      $zero, 2($s1)
                sb      $zero, 3($s1)
                b       loc_23280
                addiu   $s1, 4
 # ---------------------------------------------------------------------------

loc_235D4:                               # CODE XREF: ssl_add_serverhello_tlsext+C8↑j
                move    $a0, $s3
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                jalr    $t9 ; SSL_ctrl
                move    $a3, $zero
                bgez    $v0, loc_232A8
                lw      $gp, 0x48+var_30($sp)
                subu    $v0, $s4, $s1
                slti    $v0, 0x24  # '$'
                bnez    $v0, loc_23360
                la      $v0, loc_40000
                move    $a0, $s1
                addiu   $a1, $v0, (dword_44EF8 - 0x40000)
                addiu   $a2, $a1, (dword_44F18 - 0x44EF8)

loc_2360C:                               # CODE XREF: ssl_add_serverhello_tlsext+468↓j
                lw      $v0, 0($a1)
                lw      $v1, 4($a1)
                usw     $v0, 0($a0)
                swl     $v1, 7($a0)
                lw      $v0, 8($a1)
                swr     $v1, 4($a0)
                swl     $v0, 0xB($a0)
                lw      $v1, 0xC($a1)
                swr     $v0, 8($a0)
                swl     $v1, 0xF($a0)
                addiu   $a1, 0x10
                swr     $v1, 0xC($a0)
                bne     $a1, $a2, loc_2360C
                addiu   $a0, 0x10
                lw      $v0, 0($a1)
                addiu   $s1, 0x24  # '$'
                swl     $v0, 3($a0)
                b       loc_232A8
                swr     $v0, 0($a0)
 # End of function ssl_add_serverhello_tlsext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_add_clienthello_tlsext
ssl_add_clienthello_tlsext:              # CODE XREF: ssl3_client_hello+298↑p
                                         # ssl23_connect+9FC↑p ...

var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_add_clienthello_tlsext)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_4($sp)
                sw      $s6, 0x48+var_8($sp)
                sw      $s5, 0x48+var_C($sp)
                sw      $s4, 0x48+var_10($sp)
                sw      $s3, 0x48+var_14($sp)
                sw      $s2, 0x48+var_18($sp)
                sw      $s1, 0x48+var_1C($sp)
                sw      $s0, 0x48+var_20($sp)
                sw      $gp, 0x48+var_30($sp)
                lw      $v1, 0x108($a0)
                li      $v0, 0x300
                move    $s2, $a0
                move    $s1, $a1
                move    $s4, $a2
                bne     $v1, $v0, loc_236BC
                sw      $a1, 0x48+var_28($sp)
                lw      $v0, 0x58($a0)
                lw      $v1, 0x410($v0)
                beqz    $v1, loc_23738
                move    $v0, $s1

loc_236BC:                               # CODE XREF: ssl_add_clienthello_tlsext+48↑j
                addiu   $t1, $s1, 2
                sltu    $v0, $t1, $s4
                beqz    $v0, loc_2376C
                sw      $t1, 0x48+var_28($sp)
                lw      $a0, 0x118($s2)
                bnez    $a0, loc_23760
                subu    $v0, $s4, $t1

loc_236D8:                               # CODE XREF: ssl_add_clienthello_tlsext+4F4↓j
                lw      $v0, 0x178($s2)
                bnez    $v0, loc_2379C
                la      $t9, ssl_add_clienthello_renegotiate_ext

loc_236E4:                               # CODE XREF: ssl_add_clienthello_tlsext+1E8↓j
                lw      $a0, 0x18C($s2)
                beqz    $a0, loc_238C8
                la      $t9, strlen
                jalr    $t9 ; strlen
                nop
                move    $s0, $v0
                slti    $v0, 0x100
                beqz    $v0, loc_23710
                lw      $gp, 0x48+var_30($sp)
                bnez    $s0, loc_2384C
                lw      $v1, 0x48+var_28($sp)

loc_23710:                               # CODE XREF: ssl_add_clienthello_tlsext+A4↑j
                                         # ssl_add_clienthello_tlsext+158↓j ...
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x115
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                move    $s1, $zero

loc_23734:                               # CODE XREF: ssl_add_clienthello_tlsext+40C↓j
                                         # ssl_add_clienthello_tlsext+41C↓j
                move    $v0, $s1

loc_23738:                               # CODE XREF: ssl_add_clienthello_tlsext+58↑j
                lw      $ra, 0x48+var_4($sp)
                lw      $s6, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_23760:                               # CODE XREF: ssl_add_clienthello_tlsext+74↑j
                addiu   $s0, $v0, -9
                bgez    $s0, loc_23A94
                la      $t9, strlen

loc_2376C:                               # CODE XREF: ssl_add_clienthello_tlsext+68↑j
                                         # ssl_add_clienthello_tlsext+170↓j ...
                move    $s1, $zero
                move    $v0, $s1
                lw      $ra, 0x48+var_4($sp)
                lw      $s6, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_2379C:                               # CODE XREF: ssl_add_clienthello_tlsext+80↑j
                addiu   $s0, $sp, 0x48+var_24
                move    $a0, $s2
                move    $a1, $zero
                move    $a2, $s0
                jalr    $t9 ; ssl_add_clienthello_renegotiate_ext
                move    $a3, $zero
                beqz    $v0, loc_23710
                lw      $gp, 0x48+var_30($sp)
                subu    $v0, $s4, $s1
                lw      $v1, 0x48+var_24($sp)
                addiu   $v0, -4
                subu    $v0, $v1
                bltz    $v0, loc_2376C
                lw      $v0, 0x48+var_28($sp)
                li      $v1, 0xFFFFFFFF
                sb      $v1, 0($v0)
                lw      $v0, 0x48+var_28($sp)
                li      $a0, 1
                sb      $a0, 1($v0)
                lw      $v1, 0x48+var_28($sp)
                lw      $v0, 0x48+var_24($sp)
                addiu   $t1, $v1, 2
                sra     $v0, 8
                sw      $t1, 0x48+var_28($sp)
                sb      $v0, 2($v1)
                lw      $v0, 0x48+var_28($sp)
                lw      $v1, 0x48+var_24($sp)
                la      $t9, ssl_add_clienthello_renegotiate_ext
                sb      $v1, 1($v0)
                lw      $v0, 0x48+var_28($sp)
                lw      $a3, 0x48+var_24($sp)
                addiu   $t1, $v0, 2
                sw      $t1, 0x48+var_28($sp)
                move    $a1, $t1
                move    $a2, $s0
                jalr    $t9 ; ssl_add_clienthello_renegotiate_ext
                move    $a0, $s2
                beqz    $v0, loc_23710
                lw      $gp, 0x48+var_30($sp)
                lw      $v1, 0x48+var_28($sp)
                lw      $v0, 0x48+var_24($sp)
                addu    $t1, $v1, $v0
                b       loc_236E4
                sw      $t1, 0x48+var_28($sp)
 # ---------------------------------------------------------------------------

loc_2384C:                               # CODE XREF: ssl_add_clienthello_tlsext+AC↑j
                subu    $v0, $s4, $v1
                addiu   $v0, -5
                subu    $v0, $s0
                bltz    $v0, loc_2376C
                andi    $a1, $s0, 0xFF
                sb      $zero, 0($v1)
                lw      $v0, 0x48+var_28($sp)
                li      $v1, 0xC
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                addiu   $v0, $s0, 1
                addiu   $t1, $a0, 2
                sra     $v0, 8
                sw      $t1, 0x48+var_28($sp)
                sb      $v0, 2($a0)
                lw      $v0, 0x48+var_28($sp)
                addiu   $v1, $a1, 1
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                la      $t9, memcpy
                sb      $a1, 2($a0)
                addiu   $t1, $a0, 3
                lw      $a1, 0x18C($s2)
                sw      $t1, 0x48+var_28($sp)
                move    $a0, $t1
                jalr    $t9 ; memcpy
                move    $a2, $s0
                lw      $v0, 0x48+var_28($sp)
                lw      $gp, 0x48+var_30($sp)
                addu    $t1, $v0, $s0
                sw      $t1, 0x48+var_28($sp)

loc_238C8:                               # CODE XREF: ssl_add_clienthello_tlsext+8C↑j
                la      $t9, SSL_ctrl
                move    $a0, $s2
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                jalr    $t9 ; SSL_ctrl
                move    $a3, $zero
                andi    $v0, 0x4000
                bnez    $v0, loc_239B0
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x28($s2)
                bnez    $v0, loc_23DE4
                nop
                lw      $s0, 0xC0($s2)
                beqz    $s0, loc_2391C
                move    $s3, $zero
                lw      $v0, 0xCC($s0)
                beqz    $v0, loc_23DF0
                nop
                lw      $s3, 0xD0($s0)

loc_23914:                               # CODE XREF: ssl_add_clienthello_tlsext+7F4↓j
                bnez    $s3, loc_23938
                lw      $v1, 0x48+var_28($sp)

loc_2391C:                               # CODE XREF: ssl_add_clienthello_tlsext+2A0↑j
                                         # ssl_add_clienthello_tlsext+78C↓j
                lw      $v0, 0x144($s2)
                beqz    $v0, loc_23938
                lw      $v1, 0x48+var_28($sp)
                lw      $v0, 4($v0)
                beqz    $v0, loc_239B0
                nop

loc_23934:                               # CODE XREF: ssl_add_clienthello_tlsext+798↓j
                lw      $v1, 0x48+var_28($sp)

loc_23938:                               # CODE XREF: ssl_add_clienthello_tlsext:loc_23914↑j
                                         # ssl_add_clienthello_tlsext+2C4↑j
                subu    $v0, $s4, $v1
                addiu   $v0, -4
                subu    $v0, $s3
                bltz    $v0, loc_2376C
                nop
                sb      $zero, 0($v1)
                lw      $v0, 0x48+var_28($sp)
                li      $v1, 0x23  # '#'
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                sra     $v1, $s3, 8
                addiu   $t1, $a0, 2
                sw      $t1, 0x48+var_28($sp)
                sb      $v1, 2($a0)
                lw      $v0, 0x48+var_28($sp)
                sb      $s3, 1($v0)
                lw      $t1, 0x48+var_28($sp)
                addiu   $t1, 2
                beqz    $s3, loc_239B0
                sw      $t1, 0x48+var_28($sp)
                lw      $v0, 0xC0($s2)
                la      $t9, memcpy
                lw      $a1, 0xCC($v0)
                move    $a0, $t1
                jalr    $t9 ; memcpy
                move    $a2, $s3
                lw      $t1, 0x48+var_28($sp)
                lw      $gp, 0x48+var_30($sp)
                addu    $t1, $s3
                sw      $t1, 0x48+var_28($sp)

loc_239B0:                               # CODE XREF: ssl_add_clienthello_tlsext+288↑j
                                         # ssl_add_clienthello_tlsext+2D0↑j ...
                lw      $a0, 0x108($s2)
                li      $v0, 3
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_23B58
                slti    $v0, $a0, 0x303

loc_239C4:                               # CODE XREF: ssl_add_clienthello_tlsext:loc_23B58↓j
                                         # ssl_add_clienthello_tlsext+5C0↓j
                lw      $v1, 0x120($s2)
                li      $v0, 1
                beq     $v1, $v0, loc_23C24
                li      $v0, 0xFEFF

loc_239D4:                               # CODE XREF: ssl_add_clienthello_tlsext+5CC↓j
                lw      $t1, 0x48+var_28($sp)

loc_239D8:                               # CODE XREF: ssl_add_clienthello_tlsext+764↓j
                                         # ssl_add_clienthello_tlsext+780↓j
                sb      $zero, 0($t1)
                lw      $v0, 0x48+var_28($sp)
                li      $v1, 0xF
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                li      $a1, 1
                addiu   $t1, $a0, 2
                sw      $t1, 0x48+var_28($sp)
                sb      $zero, 2($a0)
                lw      $v0, 0x48+var_28($sp)
                sb      $a1, 1($v0)
                lw      $v1, 0x48+var_28($sp)
                lw      $v0, 0x16C($s2)
                addiu   $t1, $v1, 2
                andi    $v0, 4
                bnez    $v0, loc_23A80
                sw      $t1, 0x48+var_28($sp)
                addiu   $t1, $v1, 3
                sb      $a1, 2($v1)
                sw      $t1, 0x48+var_28($sp)

loc_23A28:                               # CODE XREF: ssl_add_clienthello_tlsext+430↓j
                lw      $v0, 0xDC($s2)
                lw      $v1, 0x1A0($v0)
                beqz    $v1, loc_23A4C
                la      $t9, SSL_get_srtp_profiles
                lw      $v0, 0x58($s2)
                lw      $v1, 0x2B4($v0)
                beqz    $v1, loc_23F04
                lw      $v1, 0x48+var_28($sp)

loc_23A48:                               # CODE XREF: ssl_add_clienthello_tlsext+8E8↓j
                la      $t9, SSL_get_srtp_profiles

loc_23A4C:                               # CODE XREF: ssl_add_clienthello_tlsext+3D4↑j
                jalr    $t9 ; SSL_get_srtp_profiles
                move    $a0, $s2
                bnez    $v0, loc_23E58
                lw      $gp, 0x48+var_30($sp)
                lw      $t1, 0x48+var_28($sp)

loc_23A60:                               # CODE XREF: ssl_add_clienthello_tlsext+8A0↓j
                subu    $v0, $t1, $s1
                addiu   $v1, $v0, -2
                beqz    $v1, loc_23734
                sra     $v0, $v1, 8
                sb      $v1, 1($s1)
                sb      $v0, 0($s1)
                b       loc_23734
                lw      $s1, 0x48+var_28($sp)
 # ---------------------------------------------------------------------------

loc_23A80:                               # CODE XREF: ssl_add_clienthello_tlsext+3B8↑j
                addiu   $t1, $v1, 3
                li      $v0, 2
                sb      $v0, 2($v1)
                b       loc_23A28
                sw      $t1, 0x48+var_28($sp)
 # ---------------------------------------------------------------------------

loc_23A94:                               # CODE XREF: ssl_add_clienthello_tlsext+108↑j
                jalr    $t9 ; strlen
                nop
                move    $s3, $v0
                sltu    $v0, $s0, $v0
                bnez    $v0, loc_2376C
                lw      $gp, 0x48+var_30($sp)
                sb      $zero, 2($s1)
                lw      $v0, 0x48+var_28($sp)
                addiu   $v1, $s3, 5
                sb      $zero, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                srl     $v1, 8
                addiu   $t1, $a0, 2
                sw      $t1, 0x48+var_28($sp)
                sb      $v1, 2($a0)
                lw      $v0, 0x48+var_28($sp)
                andi    $a2, $s3, 0xFF
                addiu   $v1, $a2, 5
                sb      $v1, 1($v0)
                lw      $a1, 0x48+var_28($sp)
                addiu   $v0, $s3, 3
                addiu   $t1, $a1, 2
                srl     $v0, 8
                sw      $t1, 0x48+var_28($sp)
                sb      $v0, 2($a1)
                lw      $v0, 0x48+var_28($sp)
                addiu   $a0, $a2, 3
                sb      $a0, 1($v0)
                lw      $v1, 0x48+var_28($sp)
                srl     $v0, $s3, 8
                addiu   $t1, $v1, 3
                sb      $zero, 2($v1)
                sw      $t1, 0x48+var_28($sp)
                sb      $v0, 3($v1)
                lw      $v0, 0x48+var_28($sp)
                la      $t9, memcpy
                sb      $a2, 1($v0)
                lw      $v0, 0x48+var_28($sp)
                lw      $a1, 0x118($s2)
                addiu   $t1, $v0, 2
                sw      $t1, 0x48+var_28($sp)
                move    $a0, $t1
                jalr    $t9 ; memcpy
                move    $a2, $s3
                lw      $v0, 0x48+var_28($sp)
                lw      $gp, 0x48+var_30($sp)
                addu    $t1, $v0, $s3
                b       loc_236D8
                sw      $t1, 0x48+var_28($sp)
 # ---------------------------------------------------------------------------

loc_23B58:                               # CODE XREF: ssl_add_clienthello_tlsext+360↑j
                bnez    $v0, loc_239C4
                lw      $v1, 0x48+var_28($sp)
                subu    $v0, $s4, $v1
                sltiu   $v0, 0x1C
                bnez    $v0, loc_2376C
                li      $a2, 0x60000
                sb      $zero, 0($v1)
                lw      $v0, 0x48+var_28($sp)
                li      $v1, 0xD
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                li      $v1, 0x18
                addiu   $t1, $a0, 2
                sw      $t1, 0x48+var_28($sp)
                sb      $zero, 2($a0)
                lw      $v0, 0x48+var_28($sp)
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                li      $v1, 0x16
                addiu   $t1, $a0, 2
                sw      $t1, 0x48+var_28($sp)
                sb      $zero, 2($a0)
                lw      $v0, 0x48+var_28($sp)
                addiu   $a1, $a2, (dword_5A240 - 0x60000)
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                lw      $a3, (dword_5A240 - 0x60000)($a2)
                addiu   $t1, $a0, 2
                sw      $t1, 0x48+var_28($sp)
                lw      $a2, (dword_5A250 - 0x5A240)($a1)
                lw      $t0, (dword_5A24C - 0x5A240)($a1)
                lw      $v0, (dword_5A244 - 0x5A240)($a1)
                lw      $v1, (dword_5A248 - 0x5A240)($a1)
                usw     $a3, 0($t1)
                usw     $v0, 4($t1)
                usw     $v1, 8($t1)
                usw     $t0, 0xC($t1)
                usw     $a2, 0x10($t1)
                lbu     $v0, (byte_5A254 - 0x5A240)($a1)
                sb      $v0, 0x14($t1)
                lbu     $v1, (byte_5A255 - 0x5A240)($a1)
                sb      $v1, 0x15($t1)
                lw      $t1, 0x48+var_28($sp)
                addiu   $t1, 0x16
                b       loc_239C4
                sw      $t1, 0x48+var_28($sp)
 # ---------------------------------------------------------------------------

loc_23C24:                               # CODE XREF: ssl_add_clienthello_tlsext+370↑j
                lw      $v1, 0($s2)
                beq     $v1, $v0, loc_239D4
                move    $s0, $zero
                b       loc_23C64
                move    $s3, $zero
 # ---------------------------------------------------------------------------

loc_23C38:                               # CODE XREF: ssl_add_clienthello_tlsext+624↓j
                jalr    $t9 ; sk_value
                lw      $a0, 0x128($s2)
                lw      $gp, 0x48+var_30($sp)
                la      $t9, i2d_OCSP_RESPID
                move    $a0, $v0
                jalr    $t9 ; i2d_OCSP_RESPID
                move    $a1, $zero
                addiu   $v1, $s3, 2
                lw      $gp, 0x48+var_30($sp)
                blez    $v0, loc_2376C
                addu    $s3, $v1, $v0

loc_23C64:                               # CODE XREF: ssl_add_clienthello_tlsext+5D4↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                lw      $a0, 0x128($s2)
                lw      $gp, 0x48+var_30($sp)
                slt     $v0, $s0, $v0
                move    $a1, $s0
                addiu   $s0, 1
                bnez    $v0, loc_23C38
                la      $t9, sk_value
                lw      $a0, 0x12C($s2)
                beqz    $a0, loc_23F4C
                la      $t9, i2d_X509_EXTENSIONS
                jalr    $t9 ; i2d_X509_EXTENSIONS
                move    $a1, $zero
                bltz    $v0, loc_2376C
                lw      $gp, 0x48+var_30($sp)
                move    $s6, $v0

loc_23CA8:                               # CODE XREF: ssl_add_clienthello_tlsext:loc_23F4C↓j
                lw      $v1, 0x48+var_28($sp)
                subu    $v0, $s4, $v1
                addiu   $v0, -7
                subu    $v0, $s6
                subu    $v0, $s3
                bltz    $v0, loc_2376C
                li      $v0, 5
                sb      $zero, 0($v1)
                lw      $v1, 0x48+var_28($sp)
                sb      $v0, 1($v1)
                lw      $a0, 0x48+var_28($sp)
                addu    $v1, $s6, $s3
                li      $v0, 0xFFF0
                addiu   $t1, $a0, 2
                slt     $v0, $v1
                bnez    $v0, loc_2376C
                sw      $t1, 0x48+var_28($sp)
                addiu   $v0, $v1, 5
                sra     $v0, 8
                sb      $v0, 2($a0)
                lw      $v0, 0x48+var_28($sp)
                addiu   $v1, $s3, 5
                addu    $v1, $s6
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                sra     $v1, $s3, 8
                addiu   $t1, $a0, 3
                li      $v0, 1
                sb      $v0, 2($a0)
                sw      $t1, 0x48+var_28($sp)
                sb      $v1, 3($a0)
                lw      $v0, 0x48+var_28($sp)
                move    $s5, $zero
                sb      $s3, 1($v0)
                lw      $v0, 0x48+var_28($sp)
                addiu   $s3, $sp, 0x48+var_28
                addiu   $t1, $v0, 2
                b       loc_23D80
                sw      $t1, 0x48+var_28($sp)
 # ---------------------------------------------------------------------------

loc_23D44:                               # CODE XREF: ssl_add_clienthello_tlsext+740↓j
                lw      $a0, 0x128($s2)
                jalr    $t9 ; sk_value
                lw      $s0, 0x48+var_28($sp)
                lw      $v1, 0x48+var_28($sp)
                lw      $gp, 0x48+var_30($sp)
                addiu   $t1, $v1, 2
                la      $t9, i2d_OCSP_RESPID
                sw      $t1, 0x48+var_28($sp)
                move    $a0, $v0
                jalr    $t9 ; i2d_OCSP_RESPID
                move    $a1, $s3
                sra     $v1, $v0, 8
                lw      $gp, 0x48+var_30($sp)
                sb      $v0, 1($s0)
                sb      $v1, 0($s0)

loc_23D80:                               # CODE XREF: ssl_add_clienthello_tlsext+6E0↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                lw      $a0, 0x128($s2)
                lw      $gp, 0x48+var_30($sp)
                slt     $v0, $s5, $v0
                move    $a1, $s5
                addiu   $s5, 1
                bnez    $v0, loc_23D44
                la      $t9, sk_value
                lw      $v1, 0x48+var_28($sp)
                sra     $v0, $s6, 8
                sb      $v0, 0($v1)
                lw      $a0, 0x48+var_28($sp)
                sb      $s6, 1($a0)
                lw      $t1, 0x48+var_28($sp)
                addiu   $t1, 2
                beqz    $s6, loc_239D8
                sw      $t1, 0x48+var_28($sp)
                la      $t9, i2d_X509_EXTENSIONS
                lw      $a0, 0x12C($s2)
                jalr    $t9 ; i2d_X509_EXTENSIONS
                addiu   $a1, $sp, 0x48+var_28
                lw      $gp, 0x48+var_30($sp)
                b       loc_239D8
                lw      $t1, 0x48+var_28($sp)
 # ---------------------------------------------------------------------------

loc_23DE4:                               # CODE XREF: ssl_add_clienthello_tlsext+294↑j
                lw      $s0, 0xC0($s2)
                beqz    $s0, loc_2391C
                move    $s3, $zero

loc_23DF0:                               # CODE XREF: ssl_add_clienthello_tlsext+2AC↑j
                lw      $v1, 0x144($s2)
                beqz    $v1, loc_23934
                move    $s3, $zero
                lw      $v0, 4($v1)
                beqz    $v0, loc_239B0
                la      $a1, loc_40000
                lhu     $s3, 0($v1)
                la      $t9, CRYPTO_malloc
                move    $a0, $s3
                addiu   $a1, (aT1LibC - 0x40000)  # "t1_lib.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x208
                lw      $v1, 0xC0($s2)
                lw      $gp, 0x48+var_30($sp)
                sw      $v0, 0xCC($s0)
                lw      $a0, 0xCC($v1)
                beqz    $a0, loc_2376C
                la      $t9, memcpy
                lw      $v0, 0x144($s2)
                lw      $a1, 4($v0)
                jalr    $t9 ; memcpy
                move    $a2, $s3
                lw      $gp, 0x48+var_30($sp)
                lw      $v1, 0xC0($s2)
                b       loc_23914
                sw      $s3, 0xD0($v1)
 # ---------------------------------------------------------------------------

loc_23E58:                               # CODE XREF: ssl_add_clienthello_tlsext+3F8↑j
                la      $t9, ssl_add_clienthello_use_srtp_ext
                addiu   $s0, $sp, 0x48+var_24
                move    $a0, $s2
                move    $a1, $zero
                move    $a2, $s0
                jalr    $t9 ; ssl_add_clienthello_use_srtp_ext
                move    $a3, $zero
                subu    $v1, $s4, $s1
                lw      $v0, 0x48+var_24($sp)
                addiu   $v1, -4
                subu    $v1, $v0
                bltz    $v1, loc_2376C
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x48+var_28($sp)
                li      $v1, 0xE
                sb      $zero, 0($v0)
                lw      $v0, 0x48+var_28($sp)
                la      $t9, ssl_add_clienthello_use_srtp_ext
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                lw      $v0, 0x48+var_24($sp)
                addiu   $t1, $a0, 2
                sra     $v0, 8
                sw      $t1, 0x48+var_28($sp)
                sb      $v0, 2($a0)
                lw      $v0, 0x48+var_28($sp)
                lw      $v1, 0x48+var_24($sp)
                move    $a0, $s2
                sb      $v1, 1($v0)
                lw      $v0, 0x48+var_28($sp)
                lw      $a3, 0x48+var_24($sp)
                addiu   $t1, $v0, 2
                sw      $t1, 0x48+var_28($sp)
                move    $a1, $t1
                jalr    $t9 ; ssl_add_clienthello_use_srtp_ext
                move    $a2, $s0
                bnez    $v0, loc_23710
                lw      $gp, 0x48+var_30($sp)
                lw      $t1, 0x48+var_28($sp)
                lw      $v0, 0x48+var_24($sp)
                addu    $t1, $v0
                b       loc_23A60
                sw      $t1, 0x48+var_28($sp)
 # ---------------------------------------------------------------------------

loc_23F04:                               # CODE XREF: ssl_add_clienthello_tlsext+3E4↑j
                subu    $v0, $s4, $v1
                slti    $v0, 4
                bnez    $v0, loc_2376C
                li      $v0, 0x33  # '3'
                sb      $v0, 0($v1)
                lw      $v0, 0x48+var_28($sp)
                li      $v1, 0x74  # 't'
                sb      $v1, 1($v0)
                lw      $a0, 0x48+var_28($sp)
                addiu   $t1, $a0, 2
                sw      $t1, 0x48+var_28($sp)
                sb      $zero, 2($a0)
                lw      $v0, 0x48+var_28($sp)
                sb      $zero, 1($v0)
                lw      $v1, 0x48+var_28($sp)
                addiu   $t1, $v1, 2
                b       loc_23A48
                sw      $t1, 0x48+var_28($sp)
 # ---------------------------------------------------------------------------

loc_23F4C:                               # CODE XREF: ssl_add_clienthello_tlsext+630↑j
                b       loc_23CA8
                move    $s6, $zero
 # End of function ssl_add_clienthello_tlsext


 # =============== S U B R O U T I N E =======================================


                .globl tls1_clear
tls1_clear:                              # DATA XREF: LOAD:00004B08↑o
                                         # .got:tls1_clear_ptr↓o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - tls1_clear)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_clear
                jalr    $t9 ; ssl3_clear
                move    $s0, $a0
                lw      $v1, 8($s0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0($v1)
                lw      $ra, 0x20+var_4($sp)
                sw      $v0, 0($s0)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function tls1_clear


 # =============== S U B R O U T I N E =======================================


                .globl tls1_free
tls1_free:                               # DATA XREF: LOAD:000047C8↑o
                                         # .got:tls1_free_ptr↓o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - tls1_free)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                move    $s0, $a0
                lw      $a0, 0x144($a0)
                beqz    $a0, loc_23FD4
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x20+var_10($sp)

loc_23FD4:                               # CODE XREF: tls1_free+24↑j
                la      $t9, ssl3_free
                move    $a0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9 ; ssl3_free
                addiu   $sp, 0x20
 # End of function tls1_free


 # =============== S U B R O U T I N E =======================================


                .globl tls1_new
tls1_new:                                # DATA XREF: LOAD:00004898↑o
                                         # .got:tls1_new_ptr↓o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - tls1_new)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_new
                jalr    $t9 ; ssl3_new
                move    $s0, $a0
                beqz    $v0, loc_24034
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 8($s0)
                lw      $t9, 8($v0)
                jalr    $t9
                move    $a0, $s0
                lw      $gp, 0x20+var_10($sp)
                li      $v0, 1

loc_24034:                               # CODE XREF: tls1_new+28↑j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function tls1_new


 # =============== S U B R O U T I N E =======================================


                .globl tls12_get_sigandhash
tls12_get_sigandhash:                    # CODE XREF: ssl3_send_server_key_exchange+5C4↑p
                                         # ssl3_send_client_verify+25C↑p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - tls12_get_sigandhash)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                move    $s3, $a0
                beqz    $a2, loc_240E8
                move    $s2, $a1
                la      $t9, EVP_MD_type
                jalr    $t9 ; EVP_MD_type
                move    $a0, $a2
                lw      $gp, 0x30+var_20($sp)
                move    $a0, $v0
                li      $v1, 0x60000
                lw      $v0, (dword_5A210 - 0x60000)($v1)
                beq     $a0, $v0, loc_24108
                li      $v0, 0x60000
                lw      $v1, (off_5A218 - 0x60000)($v0)
                beq     $a0, $v1, loc_2410C
                addiu   $v0, (off_5A218 - 0x60000)
                li      $v0, 0x60000
                lw      $v1, (dword_5A220 - 0x60000)($v0)
                beq     $a0, $v1, loc_2410C
                addiu   $v0, (dword_5A220 - 0x60000)
                li      $v0, 0x60000
                lw      $v1, (dword_5A228 - 0x60000)($v0)
                beq     $a0, $v1, loc_2410C
                addiu   $v0, (dword_5A228 - 0x60000)
                li      $v0, 0x60000
                lw      $v1, (dword_5A230 - 0x60000)($v0)
                beq     $a0, $v1, loc_2410C
                addiu   $v0, (dword_5A230 - 0x60000)
                li      $v0, 0x60000
                lw      $v1, (dword_5A238 - 0x60000)($v0)
                beq     $a0, $v1, loc_2410C
                addiu   $v0, (dword_5A238 - 0x60000)

loc_240E8:                               # CODE XREF: tls12_get_sigandhash+2C↑j
                                         # tls12_get_sigandhash+D0↓j ...
                lw      $ra, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_24108:                               # CODE XREF: tls12_get_sigandhash+50↑j
                addiu   $v0, $v1, (dword_5A210 - 0x60000)

loc_2410C:                               # CODE XREF: tls12_get_sigandhash+5C↑j
                                         # tls12_get_sigandhash+6C↑j ...
                lw      $s0, 4($v0)
                li      $s1, 0xFFFFFFFF
                beq     $s0, $s1, loc_240E8
                la      $t9, tls12_get_sigid
                jalr    $t9 ; tls12_get_sigid
                move    $a0, $s2
                move    $v1, $v0
                beq     $v0, $s1, loc_240E8
                lw      $gp, 0x30+var_20($sp)
                sb      $v1, 1($s3)
                sb      $s0, 0($s3)
                lw      $ra, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # End of function tls12_get_sigandhash


 # =============== S U B R O U T I N E =======================================


                .globl tls1_alert_code
tls1_alert_code:                         # DATA XREF: LOAD:00004778↑o
                                         # .got:tls1_alert_code_ptr↓o
                la      $gp, (off_5A360+0x7FF0 - tls1_alert_code)
                addu    $gp, $t9
                sltiu   $v0, $a0, 0x74   # switch 116 cases
                bnez    $v0, loc_24178

def_2418C:                               # jumptable 0002418C default case
                la      $v1, loc_40000

locret_24170:                            # CODE XREF: tls1_alert_code+34↓j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C cases 1-9,11-19,23-29,31-39,41,52-59,61-69,72-79,81-89,91-99,101-109
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_24178:                               # CODE XREF: tls1_alert_code+10↑j
                sll     $v0, $a0, 2
                addiu   $v1, (jpt_2418C - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

locret_24194:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 115
                li      $v0, 0x73  # 's'
 # ---------------------------------------------------------------------------

locret_2419C:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 114
                li      $v0, 0x72  # 'r'
 # ---------------------------------------------------------------------------

locret_241A4:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 113
                li      $v0, 0x71  # 'q'
 # ---------------------------------------------------------------------------

locret_241AC:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 112
                li      $v0, 0x70  # 'p'
 # ---------------------------------------------------------------------------

locret_241B4:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 111
                li      $v0, 0x6F  # 'o'
 # ---------------------------------------------------------------------------

locret_241BC:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 110
                li      $v0, 0x6E  # 'n'
 # ---------------------------------------------------------------------------

locret_241C4:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 100
                li      $v0, 0x64  # 'd'
 # ---------------------------------------------------------------------------

locret_241CC:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 90
                li      $v0, 0x5A  # 'Z'
 # ---------------------------------------------------------------------------

locret_241D4:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 80
                li      $v0, 0x50  # 'P'
 # ---------------------------------------------------------------------------

locret_241DC:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 71
                li      $v0, 0x47  # 'G'
 # ---------------------------------------------------------------------------

locret_241E4:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 70
                li      $v0, 0x46  # 'F'
 # ---------------------------------------------------------------------------

locret_241EC:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 60
                li      $v0, 0x3C  # '<'
 # ---------------------------------------------------------------------------

locret_241F4:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 51
                li      $v0, 0x33  # '3'
 # ---------------------------------------------------------------------------

locret_241FC:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 50
                li      $v0, 0x32  # '2'
 # ---------------------------------------------------------------------------

locret_24204:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 49
                li      $v0, 0x31  # '1'
 # ---------------------------------------------------------------------------

locret_2420C:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 48
                li      $v0, 0x30  # '0'
 # ---------------------------------------------------------------------------

locret_24214:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 47
                li      $v0, 0x2F  # '/'
 # ---------------------------------------------------------------------------

locret_2421C:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 46
                li      $v0, 0x2E  # '.'
 # ---------------------------------------------------------------------------

locret_24224:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 45
                li      $v0, 0x2D  # '-'
 # ---------------------------------------------------------------------------

locret_2422C:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 44
                li      $v0, 0x2C  # ','
 # ---------------------------------------------------------------------------

locret_24234:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 43
                li      $v0, 0x2B  # '+'
 # ---------------------------------------------------------------------------

locret_2423C:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 42
                li      $v0, 0x2A  # '*'
 # ---------------------------------------------------------------------------

locret_24244:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 40
                li      $v0, 0x28  # '('
 # ---------------------------------------------------------------------------

locret_2424C:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 30
                li      $v0, 0x1E
 # ---------------------------------------------------------------------------

locret_24254:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 22
                li      $v0, 0x16
 # ---------------------------------------------------------------------------

locret_2425C:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 21
                li      $v0, 0x15
 # ---------------------------------------------------------------------------

locret_24264:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 20
                li      $v0, 0x14
 # ---------------------------------------------------------------------------

locret_2426C:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 10
                li      $v0, 0xA
 # ---------------------------------------------------------------------------

locret_24274:                            # CODE XREF: tls1_alert_code+34↑j
                                         # DATA XREF: .rodata:jpt_2418C↓o
                jr      $ra              # jumptable 0002418C case 0
                move    $v0, $zero
 # End of function tls1_alert_code


 # =============== S U B R O U T I N E =======================================


sub_2427C:                               # CODE XREF: tls1_export_keying_material+390↓p
                                         # tls1_generate_master_secret+A0↓p ...

var_E8          = -0xE8
var_E0          = -0xE0
var_D8          = -0xD8
var_D4          = -0xD4
var_D0          = -0xD0
var_CC          = -0xCC
var_C8          = -0xC8
var_B0          = -0xB0
var_98          = -0x98
var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_0           =  0
arg_4           =  4
arg_8           =  8
arg_C           =  0xC
arg_10          =  0x10
arg_14          =  0x14
arg_18          =  0x18
arg_1C          =  0x1C
arg_20          =  0x20
arg_24          =  0x24
arg_28          =  0x28
arg_2C          =  0x2C
arg_30          =  0x30
arg_34          =  0x34
arg_38          =  0x38
arg_3C          =  0x3C

                la      $gp, (off_5A360+0x7FF0 - sub_2427C)
                addu    $gp, $t9
                addiu   $sp, -0xF8
                sw      $ra, 0xF8+var_4($sp)
                sw      $fp, 0xF8+var_8($sp)
                sw      $s7, 0xF8+var_C($sp)
                sw      $s6, 0xF8+var_10($sp)
                sw      $s5, 0xF8+var_14($sp)
                sw      $s4, 0xF8+var_18($sp)
                sw      $s3, 0xF8+var_1C($sp)
                sw      $s2, 0xF8+var_20($sp)
                sw      $s1, 0xF8+var_24($sp)
                sw      $s0, 0xF8+var_28($sp)
                sw      $gp, 0xF8+var_E0($sp)
                addiu   $v0, $sp, 0xF8+var_D4
                addiu   $v1, $sp, 0xF8+var_D8
                lw      $s2, 0xF8+arg_30($sp)
                sw      $a1, 0xF8+arg_4($sp)
                sw      $a2, 0xF8+arg_8($sp)
                move    $s1, $zero
                move    $s0, $zero
                move    $a1, $v1
                move    $a2, $v0
                sw      $a0, 0xF8+arg_0($sp)
                sw      $a3, 0xF8+arg_C($sp)
                sw      $v0, 0xF8+var_40($sp)
                b       loc_24310
                sw      $v1, 0xF8+var_44($sp)
 # ---------------------------------------------------------------------------

loc_242F0:                               # CODE XREF: sub_2427C+A4↓j
                lw      $v0, 0xF8+var_D8($sp)
                lw      $a0, 0xF8+arg_0($sp)
                sll     $v0, 10
                and     $v0, $a0, $v0
                lw      $a1, 0xF8+var_44($sp)
                lw      $a2, 0xF8+var_40($sp)
                addiu   $s1, 1
                movn    $s0, $v1, $v0

loc_24310:                               # CODE XREF: sub_2427C+6C↑j
                la      $t9, ssl_get_handshake_digest
                jalr    $t9 ; ssl_get_handshake_digest
                move    $a0, $s1
                lw      $gp, 0xF8+var_E0($sp)
                bnez    $v0, loc_242F0
                addiu   $v1, $s0, 1
                div     $s2, $s0
                teq     $s0, $zero  #7
                la      $t9, memset
                lw      $a0, 0xF8+arg_34($sp)
                lw      $a2, 0xF8+arg_3C($sp)
                move    $a1, $zero
                addiu   $s1, $sp, 0xF8+var_C8
                addiu   $s6, $sp, 0xF8+var_B0
                addiu   $s7, $sp, 0xF8+var_98
                mflo    $v0
                sw      $v0, 0xF8+var_4C($sp)
                xori    $v0, $s0, 1
                jalr    $t9 ; memset
                movz    $s2, $zero, $v0
                lw      $a0, 0xF8+arg_2C($sp)
                addiu   $v0, $sp, 0xF8+var_CC
                sw      $v0, 0xF8+var_34($sp)
                lw      $v0, 0xF8+var_4C($sp)
                andi    $v1, $s2, 1
                sw      $a0, 0xF8+var_50($sp)
                sw      $zero, 0xF8+var_58($sp)
                addiu   $a0, $sp, 0xF8+var_D0
                sw      $a0, 0xF8+var_30($sp)
                addu    $v1, $v0
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a0, 0xF8+var_58($sp)
                sw      $v1, 0xF8+var_38($sp)

loc_24394:                               # CODE XREF: sub_2427C+5EC↓j
                la      $t9, ssl_get_handshake_digest
                lw      $a1, 0xF8+var_44($sp)
                jalr    $t9 ; ssl_get_handshake_digest
                lw      $a2, 0xF8+var_40($sp)
                beqz    $v0, loc_2489C
                lw      $gp, 0xF8+var_E0($sp)
                lw      $v0, 0xF8+var_D8($sp)
                lw      $v1, 0xF8+arg_0($sp)
                sll     $v0, 10
                and     $v0, $v1, $v0
                beqz    $v0, loc_24860
                lw      $v1, 0xF8+var_58($sp)
                lw      $s5, 0xF8+var_D4($sp)
                beqz    $s5, loc_248A4
                la      $t9, ERR_put_error
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $s5
                sw      $v0, 0xF8+var_54($sp)
                bltz    $v0, loc_24878
                lw      $gp, 0xF8+var_E0($sp)

loc_243E8:                               # CODE XREF: sub_2427C+618↓j
                la      $t9, EVP_MD_CTX_init
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s1
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_MD_CTX_init
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s6
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_MD_CTX_set_flags
                move    $a0, $s1
                jalr    $t9 ; EVP_MD_CTX_set_flags
                li      $a1, 8
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_MD_CTX_set_flags
                move    $a0, $s6
                jalr    $t9 ; EVP_MD_CTX_set_flags
                li      $a1, 8
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a2, 0xF8+var_50($sp)
                la      $t9, EVP_PKEY_new_mac_key
                lw      $a3, 0xF8+var_38($sp)
                li      $a0, 0x357
                jalr    $t9 ; EVP_PKEY_new_mac_key
                move    $a1, $zero
                move    $s2, $v0
                lw      $gp, 0xF8+var_E0($sp)
                sw      $s1, 0xF8+var_3C($sp)
                beqz    $v0, loc_24870
                sw      $s6, 0xF8+var_48($sp)
                la      $t9, EVP_DigestSignInit
                sw      $v0, 0xF8+var_E8($sp)
                move    $a0, $s1
                move    $a1, $zero
                move    $a2, $s5
                jalr    $t9 ; EVP_DigestSignInit
                move    $a3, $zero
                beqz    $v0, loc_24870
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_DigestSignInit
                sw      $s2, 0xF8+var_E8($sp)
                move    $a0, $s6
                move    $a1, $zero
                move    $a2, $s5
                jalr    $t9 ; EVP_DigestSignInit
                move    $a3, $zero
                beqz    $v0, loc_24870
                lw      $gp, 0xF8+var_E0($sp)
                lw      $a0, 0xF8+arg_4($sp)
                beqz    $a0, loc_244C8
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+arg_8($sp)
                move    $a1, $a0
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s1
                beqz    $v0, loc_24870
                lw      $gp, 0xF8+var_E0($sp)

loc_244C8:                               # CODE XREF: sub_2427C+22C↑j
                lw      $v0, 0xF8+arg_C($sp)
                beqz    $v0, loc_244EC
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+arg_10($sp)
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $v0
                beqz    $v0, loc_24870
                lw      $gp, 0xF8+var_E0($sp)

loc_244EC:                               # CODE XREF: sub_2427C+250↑j
                lw      $v1, 0xF8+arg_14($sp)
                beqz    $v1, loc_24510
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+arg_18($sp)
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $v1
                beqz    $v0, loc_24870
                lw      $gp, 0xF8+var_E0($sp)

loc_24510:                               # CODE XREF: sub_2427C+274↑j
                lw      $a0, 0xF8+arg_1C($sp)
                beqz    $a0, loc_24534
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+arg_20($sp)
                move    $a1, $a0
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s1
                beqz    $v0, loc_24870
                lw      $gp, 0xF8+var_E0($sp)

loc_24534:                               # CODE XREF: sub_2427C+298↑j
                lw      $v0, 0xF8+arg_24($sp)
                beqz    $v0, loc_24558
                la      $t9, EVP_DigestUpdate
                lw      $a0, 0xF8+var_3C($sp)
                lw      $a2, 0xF8+arg_28($sp)
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $v0
                beqz    $v0, loc_24870
                lw      $gp, 0xF8+var_E0($sp)

loc_24558:                               # CODE XREF: sub_2427C+2BC↑j
                la      $t9, EVP_DigestSignFinal
                lw      $a0, 0xF8+var_3C($sp)
                lw      $a2, 0xF8+var_34($sp)
                jalr    $t9 ; EVP_DigestSignFinal
                move    $a1, $s7
                move    $fp, $s7
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_DigestSignInit
                sw      $s2, 0xF8+var_E8($sp)
                move    $a0, $s1
                move    $a1, $zero
                move    $a2, $s5
                move    $a3, $zero
                lw      $s4, 0xF8+arg_38($sp)
                jalr    $t9 ; EVP_DigestSignInit
                lw      $s3, 0xF8+arg_3C($sp)
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)

loc_245A4:                               # CODE XREF: sub_2427C+4A4↓j
                la      $t9, EVP_DigestSignInit
                sw      $s2, 0xF8+var_E8($sp)
                move    $a0, $s6
                move    $a1, $zero
                move    $a2, $s5
                jalr    $t9 ; EVP_DigestSignInit
                move    $a3, $zero
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+var_CC($sp)
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $s7
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+var_CC($sp)
                move    $a0, $s6
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $s7
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)
                lw      $v1, 0xF8+arg_4($sp)
                beqz    $v1, loc_24624
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+arg_8($sp)
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $v1
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)

loc_24624:                               # CODE XREF: sub_2427C+388↑j
                lw      $a0, 0xF8+arg_C($sp)
                beqz    $a0, loc_24648
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+arg_10($sp)
                move    $a1, $a0
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s1
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)

loc_24648:                               # CODE XREF: sub_2427C+3AC↑j
                lw      $v0, 0xF8+arg_14($sp)
                beqz    $v0, loc_2466C
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+arg_18($sp)
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $v0
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)

loc_2466C:                               # CODE XREF: sub_2427C+3D0↑j
                lw      $v1, 0xF8+arg_1C($sp)
                beqz    $v1, loc_24690
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+arg_20($sp)
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestUpdate
                move    $a1, $v1
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)

loc_24690:                               # CODE XREF: sub_2427C+3F4↑j
                lw      $a0, 0xF8+arg_24($sp)
                beqz    $a0, loc_246B4
                la      $t9, EVP_DigestUpdate
                lw      $a2, 0xF8+arg_28($sp)
                move    $a1, $a0
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s1
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)

loc_246B4:                               # CODE XREF: sub_2427C+418↑j
                lw      $v1, 0xF8+var_54($sp)
                slt     $v0, $v1, $s3
                beqz    $v0, loc_247A0
                la      $t9, EVP_DigestSignFinal
                lw      $a2, 0xF8+var_30($sp)
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestSignFinal
                move    $a1, $s4
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_DigestSignFinal
                lw      $a2, 0xF8+var_34($sp)
                move    $a0, $s6
                move    $a1, $s7
                jalr    $t9 ; EVP_DigestSignFinal
                lw      $s0, 0xF8+var_D0($sp)
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_DigestSignInit
                sw      $s2, 0xF8+var_E8($sp)
                move    $a0, $s1
                move    $a1, $zero
                move    $a2, $s5
                jalr    $t9 ; EVP_DigestSignInit
                move    $a3, $zero
                subu    $s3, $s0
                addu    $s4, $s0
                bnez    $v0, loc_245A4
                lw      $gp, 0xF8+var_E0($sp)

loc_24728:                               # CODE XREF: sub_2427C+2F4↑j
                                         # sub_2427C+320↑j ...
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s2
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                lw      $a0, 0xF8+var_3C($sp)
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                lw      $a0, 0xF8+var_48($sp)
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, OPENSSL_cleanse
                move    $a0, $fp
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x40  # '@'
                lw      $gp, 0xF8+var_E0($sp)
                move    $v0, $zero

loc_24770:                               # CODE XREF: sub_2427C:loc_2489C↓j
                                         # sub_2427C+644↓j
                lw      $ra, 0xF8+var_4($sp)
                lw      $fp, 0xF8+var_8($sp)
                lw      $s7, 0xF8+var_C($sp)
                lw      $s6, 0xF8+var_10($sp)
                lw      $s5, 0xF8+var_14($sp)
                lw      $s4, 0xF8+var_18($sp)
                lw      $s3, 0xF8+var_1C($sp)
                lw      $s2, 0xF8+var_20($sp)
                lw      $s1, 0xF8+var_24($sp)
                lw      $s0, 0xF8+var_28($sp)
                jr      $ra
                addiu   $sp, 0xF8
 # ---------------------------------------------------------------------------

loc_247A0:                               # CODE XREF: sub_2427C+440↑j
                lw      $a2, 0xF8+var_34($sp)
                move    $a0, $s1
                jalr    $t9 ; EVP_DigestSignFinal
                move    $a1, $s7
                beqz    $v0, loc_24728
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, memcpy
                move    $a2, $s3
                move    $a1, $s7
                jalr    $t9 ; memcpy
                move    $a0, $s4
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s2
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s1
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s6
                lw      $gp, 0xF8+var_E0($sp)
                la      $t9, OPENSSL_cleanse
                move    $a0, $s7
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x40  # '@'
                lw      $a0, 0xF8+var_50($sp)
                lw      $v0, 0xF8+var_4C($sp)
                lw      $v1, 0xF8+arg_3C($sp)
                addu    $a0, $v0
                lw      $gp, 0xF8+var_E0($sp)
                blez    $v1, loc_2485C
                sw      $a0, 0xF8+var_50($sp)
                lw      $a1, 0xF8+arg_34($sp)
                move    $a2, $zero

loc_24834:                               # CODE XREF: sub_2427C+5D8↓j
                lw      $a0, 0xF8+arg_38($sp)
                lbu     $v1, 0($a1)
                addu    $v0, $a0, $a2
                lbu     $a0, 0($v0)
                addiu   $a2, 1
                xor     $v1, $a0
                sb      $v1, 0($a1)
                lw      $v0, 0xF8+arg_3C($sp)
                bne     $a2, $v0, loc_24834
                addiu   $a1, 1

loc_2485C:                               # CODE XREF: sub_2427C+5A8↑j
                lw      $v1, 0xF8+var_58($sp)

loc_24860:                               # CODE XREF: sub_2427C+140↑j
                addiu   $v1, 1
                move    $a0, $v1
                b       loc_24394
                sw      $v1, 0xF8+var_58($sp)
 # ---------------------------------------------------------------------------

loc_24870:                               # CODE XREF: sub_2427C+1D8↑j
                                         # sub_2427C+1FC↑j ...
                b       loc_24728
                addiu   $fp, $sp, 0x60  # '`'
 # ---------------------------------------------------------------------------

loc_24878:                               # CODE XREF: sub_2427C+164↑j
                la      $v0, loc_40000
                la      $v1, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, $v0, (aT1EncC - 0x40000)  # "t1_enc.c"
                li      $a1, 0xAA
                jalr    $t9 ; OpenSSLDie
                addiu   $a2, $v1, (aChunk0 - 0x40000)  # "chunk >= 0"
                b       loc_243E8
                lw      $gp, 0xF8+var_E0($sp)
 # ---------------------------------------------------------------------------

loc_2489C:                               # CODE XREF: sub_2427C+128↑j
                b       loc_24770
                li      $v0, 1
 # ---------------------------------------------------------------------------

loc_248A4:                               # CODE XREF: sub_2427C+14C↑j
                sw      $zero, 0xF8+var_E8($sp)
                li      $a0, 0x14
                li      $a1, 0x11C
                li      $a2, 0x146
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xF8+var_E0($sp)
                b       loc_24770
                move    $v0, $zero
 # End of function sub_2427C


 # =============== S U B R O U T I N E =======================================


                .globl tls1_export_keying_material
tls1_export_keying_material:             # DATA XREF: LOAD:00004938↑o
                                         # .got:tls1_export_keying_material_ptr↓o

var_60          = -0x60
var_5C          = -0x5C
var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4           =  4
arg_8           =  8
arg_10          =  0x10
arg_14          =  0x14
arg_18          =  0x18
arg_1C          =  0x1C

                la      $gp, (off_5A360+0x7FF0 - tls1_export_keying_material)
                addu    $gp, $t9
                addiu   $sp, -0x70
                sw      $ra, 0x70+var_4($sp)
                sw      $fp, 0x70+var_8($sp)
                sw      $s7, 0x70+var_C($sp)
                sw      $s6, 0x70+var_10($sp)
                sw      $s5, 0x70+var_14($sp)
                sw      $s4, 0x70+var_18($sp)
                sw      $s3, 0x70+var_1C($sp)
                sw      $s2, 0x70+var_20($sp)
                sw      $s1, 0x70+var_24($sp)
                sw      $s0, 0x70+var_28($sp)
                sw      $gp, 0x70+var_30($sp)
                la      $s1, loc_40000
                la      $t9, CRYPTO_malloc
                sw      $a2, 0x70+arg_8($sp)
                sw      $a1, 0x70+arg_4($sp)
                move    $s7, $a0
                addiu   $a1, $s1, (aT1EncC - 0x40000)  # "t1_enc.c"
                move    $a0, $a2
                li      $a2, 0x474
                move    $s4, $a3
                lw      $s0, 0x70+arg_10($sp)
                lw      $s5, 0x70+arg_18($sp)
                jalr    $t9 ; CRYPTO_malloc
                lw      $fp, 0x70+arg_1C($sp)
                move    $s3, $v0
                beqz    $v0, loc_24C6C
                lw      $gp, 0x70+var_30($sp)
                addiu   $s2, $s0, 0x40  # '@'
                bnez    $fp, loc_24B44
                move    $s6, $s2
                la      $t9, CRYPTO_malloc
                addiu   $a1, $s1, (aT1EncC - 0x40000)  # "t1_enc.c"
                move    $a0, $s2
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x482
                move    $s1, $v0
                beqz    $v0, loc_24B6C
                lw      $gp, 0x70+var_30($sp)

loc_24970:                               # CODE XREF: tls1_export_keying_material+29C↓j
                la      $t9, memcpy
                move    $a1, $s4
                move    $a0, $v0
                jalr    $t9 ; memcpy
                move    $a2, $s0
                lw      $v1, 0x58($s7)
                addu    $v0, $s1, $s0
                lw      $a3, 0xC0($v1)
                addiu   $v1, 0xC0
                lw      $t3, 0x1C($v1)
                lw      $t2, 0x18($v1)
                lw      $t1, 0x14($v1)
                lw      $a0, 4($v1)
                lw      $a1, 8($v1)
                lw      $a2, 0xC($v1)
                lw      $t0, 0x10($v1)
                lw      $gp, 0x70+var_30($sp)
                usw     $a3, 0($v0)
                usw     $a0, 4($v0)
                usw     $a1, 8($v0)
                usw     $a2, 0xC($v0)
                usw     $t0, 0x10($v0)
                usw     $t1, 0x14($v0)
                usw     $t2, 0x18($v0)
                usw     $t3, 0x1C($v0)
                lw      $v1, 0x58($s7)
                addiu   $v0, $s0, 0x20  # ' '
                lw      $a2, 0xA0($v1)
                addu    $v0, $s1, $v0
                addiu   $v1, 0xA0
                lw      $t3, 0x1C($v1)
                lw      $a3, 0xC($v1)
                lw      $t0, 0x10($v1)
                lw      $t1, 0x14($v1)
                lw      $t2, 0x18($v1)
                lw      $a1, 8($v1)
                lw      $a0, 4($v1)
                usw     $a2, 0($v0)
                usw     $a0, 4($v0)
                usw     $a1, 8($v0)
                usw     $a3, 0xC($v0)
                usw     $t0, 0x10($v0)
                usw     $t1, 0x14($v0)
                usw     $t2, 0x18($v0)
                swl     $t3, 0x1F($v0)
                beqz    $fp, loc_24AA8
                swr     $t3, 0x1C($v0)
                addu    $v0, $s1, $s6
                srl     $v1, $s5, 8
                addu    $a0, $s1, $s0
                sb      $v1, 0($v0)
                bnez    $s5, loc_24A8C
                sb      $s5, 0x41($a0)
                lw      $v0, 0x70+arg_14($sp)
                beqz    $v0, loc_24AAC
                la      $a1, loc_40000

loc_24A8C:                               # CODE XREF: tls1_export_keying_material+1B0↑j
                la      $t9, memcpy
                addiu   $a0, $s0, 0x42  # 'B'
                lw      $a1, 0x70+arg_14($sp)
                addu    $a0, $s1, $a0
                jalr    $t9 ; memcpy
                move    $a2, $s5
                lw      $gp, 0x70+var_30($sp)

loc_24AA8:                               # CODE XREF: tls1_export_keying_material+198↑j
                la      $a1, loc_40000

loc_24AAC:                               # CODE XREF: tls1_export_keying_material+1BC↑j
                la      $t9, memcmp
                addiu   $a1, (aClientFinished - 0x40000)  # "client finished"
                move    $a0, $s1
                jalr    $t9 ; memcmp
                li      $a2, 0xF
                bnez    $v0, loc_24B98
                lw      $gp, 0x70+var_30($sp)

loc_24AC8:                               # CODE XREF: tls1_export_keying_material+2E8↓j
                                         # tls1_export_keying_material+308↓j ...
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x13A
                li      $a2, 0x16F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_30($sp)
                move    $s0, $zero

loc_24AEC:                               # CODE XREF: tls1_export_keying_material+2C8↓j
                                         # tls1_export_keying_material+39C↓j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s3
                lw      $gp, 0x70+var_30($sp)

loc_24AFC:                               # CODE XREF: tls1_export_keying_material:loc_24C74↓j
                beqz    $s1, loc_24B10
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                lw      $gp, 0x70+var_30($sp)

loc_24B10:                               # CODE XREF: tls1_export_keying_material:loc_24AFC↑j
                move    $v0, $s0
                lw      $ra, 0x70+var_4($sp)
                lw      $fp, 0x70+var_8($sp)
                lw      $s7, 0x70+var_C($sp)
                lw      $s6, 0x70+var_10($sp)
                lw      $s5, 0x70+var_14($sp)
                lw      $s4, 0x70+var_18($sp)
                lw      $s3, 0x70+var_1C($sp)
                lw      $s2, 0x70+var_20($sp)
                lw      $s1, 0x70+var_24($sp)
                lw      $s0, 0x70+var_28($sp)
                jr      $ra
                addiu   $sp, 0x70
 # ---------------------------------------------------------------------------

loc_24B44:                               # CODE XREF: tls1_export_keying_material+80↑j
                addiu   $v0, $s0, 0x42  # 'B'
                la      $t9, CRYPTO_malloc
                addu    $s2, $v0, $s5
                addiu   $a1, $s1, (aT1EncC - 0x40000)  # "t1_enc.c"
                move    $a0, $s2
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x482
                move    $s1, $v0
                bnez    $v0, loc_24970
                lw      $gp, 0x70+var_30($sp)

loc_24B6C:                               # CODE XREF: tls1_export_keying_material+A0↑j
                                         # tls1_export_keying_material:loc_24C6C↓j
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x13A
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                beqz    $s3, loc_24C74
                lw      $gp, 0x70+var_30($sp)
                b       loc_24AEC
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_24B98:                               # CODE XREF: tls1_export_keying_material+1F8↑j
                la      $a1, loc_40000
                la      $t9, memcmp
                addiu   $a1, (aServerFinished - 0x40000)  # "server finished"
                move    $a0, $s1
                jalr    $t9 ; memcmp
                li      $a2, 0xF
                beqz    $v0, loc_24AC8
                lw      $gp, 0x70+var_30($sp)
                la      $a1, loc_40000
                la      $t9, memcmp
                addiu   $a1, (aMasterSecret - 0x40000)  # "master secret"
                move    $a0, $s1
                jalr    $t9 ; memcmp
                li      $a2, 0xD
                beqz    $v0, loc_24AC8
                lw      $gp, 0x70+var_30($sp)
                la      $a1, loc_40000
                la      $t9, memcmp
                addiu   $a1, (aKeyExpansion - 0x40000)  # "key expansion"
                move    $a0, $s1
                jalr    $t9 ; memcmp
                li      $a2, 0xD
                beqz    $v0, loc_24AC8
                lw      $gp, 0x70+var_30($sp)
                lw      $v0, 0x58($s7)
                lw      $a2, 0xC0($s7)
                lw      $v1, 0x344($v0)
                addiu   $a1, $a2, 0x14
                lw      $a0, 0x24($v1)
                sw      $a1, 0x70+var_44($sp)
                sw      $zero, 0x70+var_60($sp)
                sw      $zero, 0x70+var_5C($sp)
                sw      $zero, 0x70+var_58($sp)
                sw      $zero, 0x70+var_54($sp)
                sw      $zero, 0x70+var_50($sp)
                sw      $zero, 0x70+var_4C($sp)
                sw      $zero, 0x70+var_48($sp)
                lw      $v0, 0x10($a2)
                la      $t9, locret_20000
                sw      $v0, 0x70+var_40($sp)
                lw      $v0, 0x70+arg_4($sp)
                move    $a2, $s2
                sw      $v0, 0x70+var_3C($sp)
                lw      $v0, 0x70+arg_8($sp)
                move    $a1, $s1
                move    $a3, $zero
                sw      $v0, 0x70+var_34($sp)
                addiu   $t9, (sub_2427C - 0x20000)
                jalr    $t9 ; sub_2427C
                sw      $s3, 0x70+var_38($sp)
                lw      $gp, 0x70+var_30($sp)
                b       loc_24AEC
                move    $s0, $v0
 # ---------------------------------------------------------------------------

loc_24C6C:                               # CODE XREF: tls1_export_keying_material+74↑j
                b       loc_24B6C
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_24C74:                               # CODE XREF: tls1_export_keying_material+2C0↑j
                b       loc_24AFC
                move    $s0, $zero
 # End of function tls1_export_keying_material


 # =============== S U B R O U T I N E =======================================


                .globl tls1_generate_master_secret
tls1_generate_master_secret:             # DATA XREF: LOAD:00004998↑o
                                         # .got:tls1_generate_master_secret_ptr↓o

var_78          = -0x78
var_74          = -0x74
var_70          = -0x70
var_6C          = -0x6C
var_68          = -0x68
var_64          = -0x64
var_60          = -0x60
var_5C          = -0x5C
var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_40          = -0x40
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - tls1_generate_master_secret)
                addu    $gp, $t9
                addiu   $sp, -0x88
                sw      $ra, 0x88+var_4($sp)
                sw      $s2, 0x88+var_8($sp)
                sw      $s1, 0x88+var_C($sp)
                sw      $s0, 0x88+var_10($sp)
                sw      $gp, 0x88+var_48($sp)
                la      $t9, ssl_get_algorithm2
                move    $s0, $a0
                move    $s1, $a2
                jalr    $t9 ; ssl_get_algorithm2
                move    $s2, $a3
                lw      $v1, 0x58($s0)
                lw      $gp, 0x88+var_48($sp)
                lw      $t0, 0xC0($s0)
                la      $a1, loc_40000
                la      $t9, locret_20000
                addiu   $a3, $v1, 0xC0
                addiu   $v1, 0xA0
                li      $t1, 0x20  # ' '
                sw      $v1, 0x88+var_6C($sp)
                addiu   $t0, 0x14
                move    $a0, $v0
                li      $v1, 0x30  # '0'
                addiu   $v0, $sp, 0x88+var_40
                sw      $s1, 0x88+var_5C($sp)
                sw      $s2, 0x88+var_58($sp)
                sw      $t1, 0x88+var_68($sp)
                sw      $t0, 0x88+var_54($sp)
                sw      $v0, 0x88+var_50($sp)
                sw      $v1, 0x88+var_4C($sp)
                sw      $t1, 0x88+var_78($sp)
                sw      $zero, 0x88+var_74($sp)
                sw      $zero, 0x88+var_70($sp)
                sw      $zero, 0x88+var_64($sp)
                sw      $zero, 0x88+var_60($sp)
                addiu   $a1, (aMasterSecret - 0x40000)  # "master secret"
                addiu   $t9, (sub_2427C - 0x20000)
                jalr    $t9 ; sub_2427C
                li      $a2, 0xD
                lw      $gp, 0x88+var_48($sp)
                lw      $ra, 0x88+var_4($sp)
                lw      $s2, 0x88+var_8($sp)
                lw      $s1, 0x88+var_C($sp)
                lw      $s0, 0x88+var_10($sp)
                li      $v0, 0x30  # '0'
                jr      $ra
                addiu   $sp, 0x88
 # End of function tls1_generate_master_secret


 # =============== S U B R O U T I N E =======================================


                .globl tls1_mac
tls1_mac:                                # DATA XREF: LOAD:000048E8↑o
                                         # .got:tls1_mac_ptr↓o

var_60          = -0x60
var_58          = -0x58
var_54          = -0x54
var_53          = -0x53
var_52          = -0x52
var_51          = -0x51
var_50          = -0x50
var_4F          = -0x4F
var_4E          = -0x4E
var_4D          = -0x4D
var_49          = -0x49
var_48          = -0x48
var_44          = -0x44
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - tls1_mac)
                addu    $gp, $t9
                addiu   $sp, -0x70
                sw      $ra, 0x70+var_8($sp)
                sw      $s7, 0x70+var_C($sp)
                sw      $s6, 0x70+var_10($sp)
                sw      $s5, 0x70+var_14($sp)
                sw      $s4, 0x70+var_18($sp)
                sw      $s3, 0x70+var_1C($sp)
                sw      $s2, 0x70+var_20($sp)
                sw      $s1, 0x70+var_24($sp)
                sw      $s0, 0x70+var_28($sp)
                sw      $gp, 0x70+var_60($sp)
                move    $s6, $a2
                move    $s4, $a0
                beqz    $a2, loc_24FC4
                move    $s7, $a1
                lw      $s2, 0x90($a0)
                lw      $v1, 0x58($a0)
                la      $t9, EVP_MD_CTX_md
                lw      $v0, 0x7C($a0)
                move    $a0, $s2
                addiu   $s1, $v1, 0x54  # 'T'
                addiu   $s3, $v1, 0x130
                jalr    $t9 ; EVP_MD_CTX_md
                andi    $s5, $v0, 2
                lw      $gp, 0x70+var_60($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                move    $s0, $v0
                bltz    $v0, loc_25004
                lw      $gp, 0x70+var_60($sp)

loc_24DCC:                               # CODE XREF: tls1_mac+2B8↓j
                lw      $a0, 0($s4)
                lw      $v0, 0($s3)
                sra     $v1, $a0, 8
                sb      $v0, 0x70+var_54($sp)
                sb      $v1, 0x70+var_53($sp)
                sb      $a0, 0x70+var_52($sp)
                lw      $v0, 4($s3)
                sw      $s0, 0x70+var_58($sp)
                srl     $v0, 8
                sb      $v0, 0x70+var_51($sp)
                lw      $v1, 4($s3)
                beqz    $s5, loc_25058
                sb      $v1, 0x70+var_50($sp)

loc_24E00:                               # CODE XREF: tls1_mac+30C↓j
                move    $s0, $s2

loc_24E04:                               # CODE XREF: tls1_mac+32C↓j
                li      $v0, 0xFEFF
                beq     $a0, $v0, loc_24F60
                li      $v0, 0x100
                beq     $a0, $v0, loc_24F60
                la      $t9, EVP_DigestUpdate
                move    $a0, $s0
                move    $a1, $s1
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 8
                lw      $gp, 0x70+var_60($sp)

loc_24E2C:                               # CODE XREF: tls1_mac+278↓j
                la      $t9, EVP_DigestUpdate
                move    $a0, $s0
                addiu   $a1, $sp, 0x70+var_54
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 5
                lw      $gp, 0x70+var_60($sp)
                lw      $a2, 4($s3)
                la      $t9, EVP_DigestUpdate
                lw      $a1, 0x10($s3)
                jalr    $t9 ; EVP_DigestUpdate
                move    $a0, $s0
                lw      $gp, 0x70+var_60($sp)
                la      $t9, EVP_DigestSignFinal
                move    $a0, $s0
                move    $a1, $s7
                jalr    $t9 ; EVP_DigestSignFinal
                addiu   $a2, $sp, 0x70+var_58
                blez    $v0, loc_250A0
                lw      $gp, 0x70+var_60($sp)

loc_24E78:                               # CODE XREF: tls1_mac+378↓j
                beqz    $s5, loc_25090
                la      $t9, EVP_MD_CTX_cleanup

loc_24E80:                               # CODE XREF: tls1_mac+354↓j
                lw      $a0, 0($s4)
                li      $v0, 0xFEFF
                beq     $a0, $v0, loc_24F30
                li      $v0, 0x100
                beq     $a0, $v0, loc_24F34
                lw      $v0, 0x70+var_58($sp)
                lbu     $v0, 7($s1)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_24F30
                sb      $v0, 7($s1)
                lbu     $v0, 6($s1)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_24F30
                sb      $v0, 6($s1)
                lbu     $v0, 5($s1)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_24F30
                sb      $v0, 5($s1)
                lbu     $v0, 4($s1)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_24F30
                sb      $v0, 4($s1)
                lbu     $v0, 3($s1)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_24F30
                sb      $v0, 3($s1)
                lbu     $v0, 2($s1)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_24F30
                sb      $v0, 2($s1)
                lbu     $v0, 1($s1)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_24F30
                sb      $v0, 1($s1)
                lbu     $v0, 0($s1)
                addiu   $v0, 1
                sb      $v0, 0($s1)

loc_24F30:                               # CODE XREF: tls1_mac+144↑j
                                         # tls1_mac+160↑j ...
                lw      $v0, 0x70+var_58($sp)

loc_24F34:                               # CODE XREF: tls1_mac+14C↑j
                lw      $ra, 0x70+var_8($sp)
                lw      $s7, 0x70+var_C($sp)
                lw      $s6, 0x70+var_10($sp)
                lw      $s5, 0x70+var_14($sp)
                lw      $s4, 0x70+var_18($sp)
                lw      $s3, 0x70+var_1C($sp)
                lw      $s2, 0x70+var_20($sp)
                lw      $s1, 0x70+var_24($sp)
                lw      $s0, 0x70+var_28($sp)
                jr      $ra
                addiu   $sp, 0x70
 # ---------------------------------------------------------------------------

loc_24F60:                               # CODE XREF: tls1_mac+C4↑j
                                         # tls1_mac+CC↑j
                bnez    $s6, loc_25078
                nop
                lw      $v0, 0x5C($s4)
                lhu     $a0, 0x208($v0)
                sra     $v1, $a0, 8
                sb      $v1, 0x70+var_4F($sp)
                andi    $a0, 0xFF

loc_24F7C:                               # CODE XREF: tls1_mac+344↓j
                sb      $a0, 0x70+var_4E($sp)
                addiu   $a1, $s1, 2
                lwl     $v1, 3($a1)
                addiu   $v0, $sp, 0x70+var_4D
                lwr     $v1, 0($a1)
                la      $t9, EVP_DigestUpdate
                usw     $v1, 0($v0)
                lbu     $a2, 4($a1)
                move    $a0, $s0
                sb      $a2, 0x70+var_49($sp)
                lbu     $v0, 5($a1)
                li      $a2, 8
                addiu   $a1, $sp, 0x70+var_4F
                jalr    $t9 ; EVP_DigestUpdate
                sb      $v0, 0x70+var_48($sp)
                b       loc_24E2C
                lw      $gp, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_24FC4:                               # CODE XREF: tls1_mac+40↑j
                lw      $s2, 0x84($a0)
                lw      $v1, 0x58($a0)
                la      $t9, EVP_MD_CTX_md
                lw      $v0, 0x7C($a0)
                move    $a0, $s2
                addiu   $s1, $v1, 8
                addiu   $s3, $v1, 0x10C
                jalr    $t9 ; EVP_MD_CTX_md
                andi    $s5, $v0, 1
                lw      $gp, 0x70+var_60($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                move    $s0, $v0
                bgez    $v0, loc_24DCC
                lw      $gp, 0x70+var_60($sp)

loc_25004:                               # CODE XREF: tls1_mac+80↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aT1EncC - 0x40000)  # "t1_enc.c"
                addiu   $a2, (aT0 - 0x40000)  # "t >= 0"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x3F6
                lw      $a0, 0($s4)
                lw      $v0, 0($s3)
                sra     $v1, $a0, 8
                sb      $v0, 0x70+var_54($sp)
                sb      $v1, 0x70+var_53($sp)
                sb      $a0, 0x70+var_52($sp)
                lw      $v0, 4($s3)
                sw      $s0, 0x70+var_58($sp)
                srl     $v0, 8
                sb      $v0, 0x70+var_51($sp)
                lw      $v1, 4($s3)
                lw      $gp, 0x70+var_60($sp)
                bnez    $s5, loc_24E00
                sb      $v1, 0x70+var_50($sp)

loc_25058:                               # CODE XREF: tls1_mac+B4↑j
                la      $t9, EVP_MD_CTX_copy
                addiu   $s0, $sp, 0x70+var_44
                move    $a0, $s0
                jalr    $t9 ; EVP_MD_CTX_copy
                move    $a1, $s2
                lw      $gp, 0x70+var_60($sp)
                b       loc_24E04
                lw      $a0, 0($s4)
 # ---------------------------------------------------------------------------

loc_25078:                               # CODE XREF: tls1_mac:loc_24F60↑j
                lw      $v1, 0x5C($s4)
                lhu     $v0, 0x20A($v1)
                andi    $a0, $v0, 0xFF
                sra     $v0, 8
                b       loc_24F7C
                sb      $v0, 0x70+var_4F($sp)
 # ---------------------------------------------------------------------------

loc_25090:                               # CODE XREF: tls1_mac:loc_24E78↑j
                jalr    $t9 ; EVP_MD_CTX_cleanup
                addiu   $a0, $sp, 0x70+var_44
                b       loc_24E80
                lw      $gp, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_250A0:                               # CODE XREF: tls1_mac+12C↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aT1EncC - 0x40000)  # "t1_enc.c"
                addiu   $a2, (aT0_0 - 0x40000)  # "t > 0"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x419
                b       loc_24E78
                lw      $gp, 0x70+var_60($sp)
 # End of function tls1_mac


 # =============== S U B R O U T I N E =======================================


                .globl tls1_final_finish_mac
tls1_final_finish_mac:                   # DATA XREF: LOAD:00004928↑o
                                         # .got:tls1_final_finish_mac_ptr↓o

var_118         = -0x118
var_114         = -0x114
var_110         = -0x110
var_10C         = -0x10C
var_108         = -0x108
var_104         = -0x104
var_100         = -0x100
var_FC          = -0xFC
var_F8          = -0xF8
var_F4          = -0xF4
var_F0          = -0xF0
var_EC          = -0xEC
var_E8          = -0xE8
var_E0          = -0xE0
var_DC          = -0xDC
var_D8          = -0xD8
var_D4          = -0xD4
var_B0          = -0xB0
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4           =  4
arg_8           =  8
arg_C           =  0xC

                la      $gp, (off_5A360+0x7FF0 - tls1_final_finish_mac)
                addu    $gp, $t9
                addiu   $sp, -0x128
                sw      $ra, 0x128+var_4($sp)
                sw      $fp, 0x128+var_8($sp)
                sw      $s7, 0x128+var_C($sp)
                sw      $s6, 0x128+var_10($sp)
                sw      $s5, 0x128+var_14($sp)
                sw      $s4, 0x128+var_18($sp)
                sw      $s3, 0x128+var_1C($sp)
                sw      $s2, 0x128+var_20($sp)
                sw      $s1, 0x128+var_24($sp)
                sw      $s0, 0x128+var_28($sp)
                sw      $gp, 0x128+var_E8($sp)
                lw      $v0, 0x58($a0)
                move    $s2, $a0
                lw      $v1, 0x178($v0)
                sw      $a1, 0x128+arg_4($sp)
                sw      $a2, 0x128+arg_8($sp)
                beqz    $v1, loc_25130
                sw      $a3, 0x128+arg_C($sp)
                la      $t9, ssl3_digest_cached_records
                jalr    $t9 ; ssl3_digest_cached_records
                nop
                beqz    $v0, loc_25258
                lw      $gp, 0x128+var_E8($sp)

loc_25130:                               # CODE XREF: tls1_final_finish_mac+50↑j
                la      $t9, EVP_MD_CTX_init
                addiu   $fp, $sp, 0x60  # '`'
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $fp
                lw      $gp, 0x128+var_E8($sp)
                addiu   $v0, $sp, 0x128+var_E0
                la      $t9, ssl_get_handshake_digest
                move    $s1, $zero
                addiu   $s5, $sp, 0x128+var_DC
                addiu   $s4, $sp, 0x128+var_D8
                move    $a0, $s1
                sw      $v0, 0x128+var_30($sp)
                move    $a2, $s4
                jalr    $t9 ; ssl_get_handshake_digest
                move    $a1, $s5
                lw      $gp, 0x128+var_E8($sp)
                addiu   $s6, $sp, 0x128+var_B0
                move    $s3, $s6
                move    $s7, $zero
                move    $a0, $s2
                beqz    $v0, loc_251C8
                la      $t9, ssl_get_algorithm2

loc_25188:                               # CODE XREF: tls1_final_finish_mac+FC↓j
                jalr    $t9 ; ssl_get_algorithm2
                nop
                lw      $v1, 0x128+var_DC($sp)
                and     $v0, $v1
                bnez    $v0, loc_2528C
                lw      $gp, 0x128+var_E8($sp)
                addiu   $s1, 1

loc_251A4:                               # CODE XREF: tls1_final_finish_mac+1F8↓j
                                         # tls1_final_finish_mac+24C↓j
                la      $t9, ssl_get_handshake_digest
                move    $a0, $s1
                move    $a2, $s4
                jalr    $t9 ; ssl_get_handshake_digest
                move    $a1, $s5
                lw      $gp, 0x128+var_E8($sp)
                move    $a0, $s2
                bnez    $v0, loc_25188
                la      $t9, ssl_get_algorithm2

loc_251C8:                               # CODE XREF: tls1_final_finish_mac+BC↑j
                jalr    $t9 ; ssl_get_algorithm2
                nop
                lw      $a1, 0xC0($s2)
                subu    $v1, $s3, $s6
                addiu   $a0, $a1, 0x14
                lw      $gp, 0x128+var_E8($sp)
                sw      $a0, 0x128+var_FC($sp)
                sw      $v1, 0x128+var_118($sp)
                sw      $zero, 0x128+var_114($sp)
                sw      $zero, 0x128+var_110($sp)
                sw      $zero, 0x128+var_10C($sp)
                sw      $zero, 0x128+var_108($sp)
                sw      $zero, 0x128+var_104($sp)
                sw      $zero, 0x128+var_100($sp)
                lw      $v1, 0x10($a1)
                move    $a0, $v0
                lw      $v0, 0x128+arg_C($sp)
                la      $t9, locret_20000
                sw      $v1, 0x128+var_F8($sp)
                sw      $v0, 0x128+var_F4($sp)
                li      $v1, 0xC
                addiu   $v0, $sp, 0x128+var_D4
                lw      $a1, 0x128+arg_4($sp)
                lw      $a2, 0x128+arg_8($sp)
                move    $a3, $s6
                sw      $v0, 0x128+var_F0($sp)
                addiu   $t9, (sub_2427C - 0x20000)
                jalr    $t9 ; sub_2427C
                sw      $v1, 0x128+var_EC($sp)
                beqz    $v0, loc_2534C
                lw      $gp, 0x128+var_E8($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $fp
                beqz    $s7, loc_25318
                lw      $gp, 0x128+var_E8($sp)

loc_25258:                               # CODE XREF: tls1_final_finish_mac+64↑j
                move    $v0, $zero

loc_2525C:                               # CODE XREF: tls1_final_finish_mac+298↓j
                lw      $ra, 0x128+var_4($sp)
                lw      $fp, 0x128+var_8($sp)
                lw      $s7, 0x128+var_C($sp)
                lw      $s6, 0x128+var_10($sp)
                lw      $s5, 0x128+var_14($sp)
                lw      $s4, 0x128+var_18($sp)
                lw      $s3, 0x128+var_1C($sp)
                lw      $s2, 0x128+var_20($sp)
                lw      $s1, 0x128+var_24($sp)
                lw      $s0, 0x128+var_28($sp)
                jr      $ra
                addiu   $sp, 0x128
 # ---------------------------------------------------------------------------

loc_2528C:                               # CODE XREF: tls1_final_finish_mac+D4↑j
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                lw      $a0, 0x128+var_D8($sp)
                subu    $v1, $s6, $s3
                addiu   $v1, 0x80
                move    $s0, $v0
                lw      $gp, 0x128+var_E8($sp)
                bltz    $s0, loc_252B8
                slt     $v0, $v1, $v0
                beqz    $v0, loc_252C4
                sll     $v0, $s1, 2

loc_252B8:                               # CODE XREF: tls1_final_finish_mac+1E4↑j
                li      $s7, 1
                b       loc_251A4
                addiu   $s1, 1
 # ---------------------------------------------------------------------------

loc_252C4:                               # CODE XREF: tls1_final_finish_mac+1EC↑j
                lw      $v1, 0x58($s2)
                lw      $a0, 0x17C($v1)
                la      $t9, EVP_MD_CTX_copy_ex
                addu    $v0, $a0
                lw      $a1, 0($v0)
                jalr    $t9 ; EVP_MD_CTX_copy_ex
                move    $a0, $fp
                lw      $gp, 0x128+var_E8($sp)
                lw      $a2, 0x128+var_30($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a1, $s3
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a0, $fp
                lw      $a0, 0x128+var_E0($sp)
                li      $v0, 1
                xor     $v1, $s0, $a0
                lw      $gp, 0x128+var_E8($sp)
                movn    $s7, $v0, $v1
                addu    $s3, $a0
                b       loc_251A4
                addiu   $s1, 1
 # ---------------------------------------------------------------------------

loc_25318:                               # CODE XREF: tls1_final_finish_mac+18C↑j
                lw      $ra, 0x128+var_4($sp)
                lw      $fp, 0x128+var_8($sp)
                lw      $s7, 0x128+var_C($sp)
                lw      $s6, 0x128+var_10($sp)
                lw      $s5, 0x128+var_14($sp)
                lw      $s4, 0x128+var_18($sp)
                lw      $s3, 0x128+var_1C($sp)
                lw      $s2, 0x128+var_20($sp)
                lw      $s1, 0x128+var_24($sp)
                lw      $s0, 0x128+var_28($sp)
                li      $v0, 0xC
                jr      $ra
                addiu   $sp, 0x128
 # ---------------------------------------------------------------------------

loc_2534C:                               # CODE XREF: tls1_final_finish_mac+178↑j
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $fp
                lw      $gp, 0x128+var_E8($sp)
                b       loc_2525C
                move    $v0, $zero
 # End of function tls1_final_finish_mac


 # =============== S U B R O U T I N E =======================================


                .globl tls1_cert_verify_mac
tls1_cert_verify_mac:                    # DATA XREF: LOAD:000047A8↑o
                                         # .got:tls1_cert_verify_mac_ptr↓o

var_40          = -0x40
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - tls1_cert_verify_mac)
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_4($sp)
                sw      $s2, 0x50+var_8($sp)
                sw      $s1, 0x50+var_C($sp)
                sw      $s0, 0x50+var_10($sp)
                sw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($a0)
                move    $s0, $a0
                lw      $v0, 0x178($v1)
                move    $s1, $a1
                beqz    $v0, loc_253B8
                move    $s2, $a2
                la      $t9, ssl3_digest_cached_records
                jalr    $t9 ; ssl3_digest_cached_records
                nop
                beqz    $v0, loc_25510
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($s0)

loc_253B8:                               # CODE XREF: tls1_cert_verify_mac+34↑j
                lw      $v0, 0x17C($v1)
                lw      $a0, 0($v0)
                beqz    $a0, loc_253F0
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                nop
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_type
                jalr    $t9 ; EVP_MD_type
                move    $a0, $v0
                beq     $v0, $s1, loc_25528
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($s0)
                lw      $v0, 0x17C($v1)

loc_253F0:                               # CODE XREF: tls1_cert_verify_mac+5C↑j
                lw      $a0, 4($v0)
                beqz    $a0, loc_25424
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                nop
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_type
                jalr    $t9 ; EVP_MD_type
                move    $a0, $v0
                beq     $v0, $s1, loc_255A0
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($s0)
                lw      $v0, 0x17C($v1)

loc_25424:                               # CODE XREF: tls1_cert_verify_mac+90↑j
                lw      $a0, 8($v0)
                beqz    $a0, loc_25458
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                nop
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_type
                jalr    $t9 ; EVP_MD_type
                move    $a0, $v0
                beq     $v0, $s1, loc_255A8
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($s0)
                lw      $v0, 0x17C($v1)

loc_25458:                               # CODE XREF: tls1_cert_verify_mac+C4↑j
                lw      $a0, 0xC($v0)
                beqz    $a0, loc_2548C
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                nop
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_type
                jalr    $t9 ; EVP_MD_type
                move    $a0, $v0
                beq     $v0, $s1, loc_255B0
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($s0)
                lw      $v0, 0x17C($v1)

loc_2548C:                               # CODE XREF: tls1_cert_verify_mac+F8↑j
                lw      $a0, 0x10($v0)
                beqz    $a0, loc_254C0
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                nop
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_type
                jalr    $t9 ; EVP_MD_type
                move    $a0, $v0
                beq     $v0, $s1, loc_255B8
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($s0)
                lw      $v0, 0x17C($v1)

loc_254C0:                               # CODE XREF: tls1_cert_verify_mac+12C↑j
                lw      $a0, 0x14($v0)
                beqz    $a0, loc_254EC
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                nop
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_type
                jalr    $t9 ; EVP_MD_type
                move    $a0, $v0
                beq     $v0, $s1, loc_25598
                lw      $gp, 0x50+var_38($sp)

loc_254EC:                               # CODE XREF: tls1_cert_verify_mac+160↑j
                                         # tls1_cert_verify_mac+1D8↓j
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0x11E
                li      $a2, 0x144
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                move    $v0, $zero

loc_25510:                               # CODE XREF: tls1_cert_verify_mac+48↑j
                                         # tls1_cert_verify_mac+22C↓j
                lw      $ra, 0x50+var_4($sp)
                lw      $s2, 0x50+var_8($sp)
                lw      $s1, 0x50+var_C($sp)
                lw      $s0, 0x50+var_10($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_25528:                               # CODE XREF: tls1_cert_verify_mac+7C↑j
                move    $a0, $zero

loc_2552C:                               # CODE XREF: tls1_cert_verify_mac:loc_25598↓j
                                         # tls1_cert_verify_mac:loc_255A0↓j ...
                lw      $v1, 0x58($s0)
                lw      $v0, 0x17C($v1)
                addu    $v0, $a0, $v0
                lw      $s1, 0($v0)
                beqz    $s1, loc_254EC
                addiu   $s0, $sp, 0x50+var_2C
                la      $t9, EVP_MD_CTX_init
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $s0
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_CTX_copy_ex
                move    $a1, $s1
                jalr    $t9 ; EVP_MD_CTX_copy_ex
                move    $a0, $s0
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a1, $s2
                move    $a0, $s0
                jalr    $t9 ; EVP_DigestFinal_ex
                addiu   $a2, $sp, 0x50+var_30
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $s0
                lw      $gp, 0x50+var_38($sp)
                b       loc_25510
                lw      $v0, 0x50+var_30($sp)
 # ---------------------------------------------------------------------------

loc_25598:                               # CODE XREF: tls1_cert_verify_mac+180↑j
                b       loc_2552C
                li      $a0, 0x14
 # ---------------------------------------------------------------------------

loc_255A0:                               # CODE XREF: tls1_cert_verify_mac+B0↑j
                b       loc_2552C
                li      $a0, 4
 # ---------------------------------------------------------------------------

loc_255A8:                               # CODE XREF: tls1_cert_verify_mac+E4↑j
                b       loc_2552C
                li      $a0, 8
 # ---------------------------------------------------------------------------

loc_255B0:                               # CODE XREF: tls1_cert_verify_mac+118↑j
                b       loc_2552C
                li      $a0, 0xC
 # ---------------------------------------------------------------------------

loc_255B8:                               # CODE XREF: tls1_cert_verify_mac+14C↑j
                b       loc_2552C
                li      $a0, 0x10
 # End of function tls1_cert_verify_mac


 # =============== S U B R O U T I N E =======================================


                .globl tls1_enc
tls1_enc:                                # DATA XREF: LOAD:00004B88↑o
                                         # .got:tls1_enc_ptr↓o

var_58          = -0x58
var_50          = -0x50
var_48          = -0x48
var_42          = -0x42
var_41          = -0x41
var_3F          = -0x3F
var_37          = -0x37
var_36          = -0x36
var_35          = -0x35
var_34          = -0x34
var_33          = -0x33
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - tls1_enc)
                addu    $gp, $t9
                addiu   $sp, -0x68
                sw      $ra, 0x68+var_4($sp)
                sw      $fp, 0x68+var_8($sp)
                sw      $s7, 0x68+var_C($sp)
                sw      $s6, 0x68+var_10($sp)
                sw      $s5, 0x68+var_14($sp)
                sw      $s4, 0x68+var_18($sp)
                sw      $s3, 0x68+var_1C($sp)
                sw      $s2, 0x68+var_20($sp)
                sw      $s1, 0x68+var_24($sp)
                sw      $s0, 0x68+var_28($sp)
                sw      $gp, 0x68+var_50($sp)
                move    $fp, $a1
                beqz    $a1, loc_256E8
                move    $s4, $a0
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x90($a0)
                beqz    $v0, loc_25640
                lw      $gp, 0x68+var_50($sp)
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x90($s4)
                lw      $gp, 0x68+var_50($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                bltz    $v0, loc_25B98
                lw      $gp, 0x68+var_50($sp)

loc_25640:                               # CODE XREF: tls1_enc+54↑j
                                         # tls1_enc+5F4↓j
                lw      $s1, 0x58($s4)
                lw      $s2, 0x8C($s4)
                beqz    $s2, loc_2594C
                addiu   $s0, $s1, 0x130
                la      $t9, EVP_CIPHER_CTX_cipher
                jalr    $t9 ; EVP_CIPHER_CTX_cipher
                move    $a0, $s2
                lw      $v1, 0($s4)
                lw      $gp, 0x68+var_50($sp)
                slti    $v1, 0x302
                bnez    $v1, loc_25744
                move    $s7, $v0
                la      $t9, EVP_CIPHER_flags
                jalr    $t9 ; EVP_CIPHER_flags
                move    $a0, $v0
                li      $v1, 0xF0007
                and     $v0, $v1
                li      $v1, 2
                bne     $v0, $v1, loc_25744
                lw      $gp, 0x68+var_50($sp)
                la      $t9, EVP_CIPHER_iv_length
                jalr    $t9 ; EVP_CIPHER_iv_length
                move    $a0, $s7
                move    $a1, $v0
                slti    $v0, 2
                bnez    $v0, loc_25744
                lw      $gp, 0x68+var_50($sp)
                lw      $v0, 0x140($s1)
                lw      $a0, 0x13C($s1)
                beq     $a0, $v0, loc_25D5C
                la      $v0, stderr
                la      $a1, loc_40000
                la      $a2, loc_40000
                la      $t9, fprintf
                lw      $a0, (stderr - 0x5B0A8)($v0)
                addiu   $a1, (aSDRecDataRecIn - 0x40000)  # "%s:%d: rec->data != rec->input\n"
                addiu   $a2, (aT1EncC - 0x40000)  # "t1_enc.c"
                jalr    $t9 ; fprintf
                li      $a3, 0x2C3
                b       loc_25744
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_256E8:                               # CODE XREF: tls1_enc+40↑j
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x84($a0)
                beqz    $v0, loc_25720
                lw      $gp, 0x68+var_50($sp)
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x84($s4)
                lw      $gp, 0x68+var_50($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                bltz    $v0, loc_25BBC
                lw      $gp, 0x68+var_50($sp)

loc_25720:                               # CODE XREF: tls1_enc+134↑j
                                         # tls1_enc+618↓j
                lw      $v0, 0x58($s4)
                lw      $s2, 0x80($s4)
                beqz    $s2, loc_2594C
                addiu   $s0, $v0, 0x10C
                la      $t9, EVP_CIPHER_CTX_cipher
                jalr    $t9 ; EVP_CIPHER_CTX_cipher
                move    $a0, $s2
                lw      $gp, 0x68+var_50($sp)
                move    $s7, $v0

loc_25744:                               # CODE XREF: tls1_enc+A8↑j
                                         # tls1_enc+CC↑j ...
                lw      $v0, 0xC0($s4)
                beqz    $v0, loc_25958
                la      $t9, memmove
                beqz    $s2, loc_25958
                nop
                beqz    $s7, loc_25954
                la      $t9, EVP_CIPHER_block_size
                lw      $a0, 0($s2)
                jalr    $t9 ; EVP_CIPHER_block_size
                lw      $s3, 4($s0)
                lw      $gp, 0x68+var_50($sp)
                lw      $a0, 0($s2)
                la      $t9, EVP_CIPHER_flags
                jalr    $t9 ; EVP_CIPHER_flags
                move    $s6, $v0
                lui     $v1, 0x20  # ' '
                and     $v0, $v1
                beqz    $v0, loc_259AC
                lw      $gp, 0x68+var_50($sp)
                bnez    $fp, loc_25A74
                nop
                lw      $v0, 0x58($s4)
                addiu   $a0, $v0, 8

loc_257A0:                               # CODE XREF: tls1_enc+4B8↓j
                lw      $t0, 0($s4)
                li      $v0, 0xFEFF
                beq     $t0, $v0, loc_25B04
                li      $v0, 0x100
                beq     $t0, $v0, loc_25B04
                addiu   $a3, $sp, 0x68+var_3F
                lwl     $v0, 3($a0)
                lwl     $v1, 7($a0)
                lwr     $v0, 0($a0)
                lwr     $v1, 4($a0)
                swl     $v0, 3($a3)
                swl     $v1, 7($a3)
                swr     $v0, 0($a3)
                swr     $v1, 4($a3)
                lbu     $v0, 7($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_25CF4
                sb      $v0, 7($a0)
                lbu     $v0, 6($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_25CF4
                sb      $v0, 6($a0)
                lbu     $v0, 5($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_25CF4
                sb      $v0, 5($a0)
                lbu     $v0, 4($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_25CF4
                sb      $v0, 4($a0)
                lbu     $v0, 3($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_25CF4
                sb      $v0, 3($a0)
                lbu     $v0, 2($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_25CF4
                sb      $v0, 2($a0)
                lbu     $v0, 1($a0)
                addiu   $v0, 1
                andi    $v0, 0xFF
                bnez    $v0, loc_25CF4
                sb      $v0, 1($a0)
                lbu     $v0, 0($a0)
                addiu   $v0, 1
                sb      $v0, 0($a0)
                lw      $t0, 0($s4)

loc_25874:                               # CODE XREF: tls1_enc+5A4↓j
                                         # tls1_enc:loc_25CF4↓j
                lw      $v0, 0($s0)
                sra     $v1, $t0, 8
                sb      $v0, 0x68+var_37($sp)
                sb      $v1, 0x68+var_36($sp)
                sb      $t0, 0x68+var_35($sp)
                lw      $v0, 4($s0)
                la      $t9, EVP_CIPHER_CTX_ctrl
                srl     $v0, 8
                sb      $v0, 0x68+var_34($sp)
                lw      $v1, 4($s0)
                move    $a0, $s2
                sb      $v1, 0x68+var_33($sp)
                li      $a1, 0x16
                jalr    $t9 ; EVP_CIPHER_CTX_ctrl
                li      $a2, 0xD
                move    $s5, $v0
                beqz    $fp, loc_25A88
                lw      $gp, 0x68+var_50($sp)
                lw      $v0, 4($s0)
                addu    $s3, $s5
                addu    $v0, $s5
                sw      $v0, 4($s0)

loc_258CC:                               # CODE XREF: tls1_enc+458↓j
                                         # tls1_enc:loc_25A80↓j
                la      $t9, EVP_Cipher

loc_258D0:                               # CODE XREF: tls1_enc+4DC↓j
                lw      $a1, 0xC($s0)
                lw      $a2, 0x10($s0)
                move    $a0, $s2
                jalr    $t9 ; EVP_Cipher
                move    $a3, $s3
                lw      $gp, 0x68+var_50($sp)
                lw      $a0, 0($s2)
                la      $t9, EVP_CIPHER_flags
                jalr    $t9 ; EVP_CIPHER_flags
                move    $s1, $v0
                lui     $v1, 0x10
                and     $v0, $v1
                beqz    $v0, loc_25AF0
                lw      $gp, 0x68+var_50($sp)
                srl     $v0, $s1, 31
                beqz    $v0, loc_25A20
                la      $t9, EVP_CIPHER_flags

loc_25914:                               # CODE XREF: tls1_enc+4EC↓j
                                         # tls1_enc+650↓j ...
                li      $a0, 0xFFFFFFFF

loc_25918:                               # CODE XREF: tls1_enc+534↓j
                                         # tls1_enc+678↓j ...
                lw      $ra, 0x68+var_4($sp)
                lw      $fp, 0x68+var_8($sp)
                lw      $s7, 0x68+var_C($sp)
                lw      $s6, 0x68+var_10($sp)
                lw      $s5, 0x68+var_14($sp)
                lw      $s4, 0x68+var_18($sp)
                lw      $s3, 0x68+var_1C($sp)
                lw      $s2, 0x68+var_20($sp)
                lw      $s1, 0x68+var_24($sp)
                lw      $s0, 0x68+var_28($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x68
 # ---------------------------------------------------------------------------

loc_2594C:                               # CODE XREF: tls1_enc+88↑j
                                         # tls1_enc+168↑j
                b       loc_25744
                move    $s7, $zero
 # ---------------------------------------------------------------------------

loc_25954:                               # CODE XREF: tls1_enc+198↑j
                la      $t9, memmove

loc_25958:                               # CODE XREF: tls1_enc+188↑j
                                         # tls1_enc+190↑j
                lw      $a0, 0xC($s0)
                lw      $a1, 0x10($s0)
                jalr    $t9 ; memmove
                lw      $a2, 4($s0)
                lw      $v1, 0xC($s0)
                lw      $gp, 0x68+var_50($sp)
                li      $a0, 1
                sw      $v1, 0x10($s0)

loc_25978:                               # CODE XREF: tls1_enc:loc_25A54↓j
                                         # tls1_enc+4AC↓j ...
                lw      $ra, 0x68+var_4($sp)

loc_2597C:                               # CODE XREF: tls1_enc+49C↓j
                lw      $fp, 0x68+var_8($sp)
                lw      $s7, 0x68+var_C($sp)
                lw      $s6, 0x68+var_10($sp)
                lw      $s5, 0x68+var_14($sp)
                lw      $s4, 0x68+var_18($sp)
                lw      $s3, 0x68+var_1C($sp)
                lw      $s2, 0x68+var_20($sp)
                lw      $s1, 0x68+var_24($sp)
                lw      $s0, 0x68+var_28($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x68
 # ---------------------------------------------------------------------------

loc_259AC:                               # CODE XREF: tls1_enc+1C8↑j
                li      $v0, 1
                beq     $s6, $v0, loc_25A80
                nop
                beqz    $fp, loc_25A88
                move    $s5, $zero
                div     $s3, $s6
                teq     $s6, $zero  #7
                lw      $v1, 0xF8($s4)
                move    $a0, $s3
                andi    $v1, 0x200
                mfhi    $v0
                subu    $a2, $s6, $v0
                bnez    $v1, loc_25B84
                addiu   $a1, $a2, -1

loc_259E4:                               # CODE XREF: tls1_enc+5D0↓j
                addu    $s3, $a2
                slt     $v0, $a0, $s3
                beqz    $v0, loc_25A0C
                andi    $a1, 0xFF

loc_259F4:                               # CODE XREF: tls1_enc+444↓j
                lw      $v0, 0x10($s0)
                addu    $v0, $a0
                addiu   $a0, 1
                slt     $v1, $a0, $s3
                bnez    $v1, loc_259F4
                sb      $a1, 0($v0)

loc_25A0C:                               # CODE XREF: tls1_enc+42C↑j
                lw      $v0, 4($s0)
                move    $s5, $zero
                addu    $v0, $a2
                b       loc_258CC
                sw      $v0, 4($s0)
 # ---------------------------------------------------------------------------

loc_25A20:                               # CODE XREF: tls1_enc+34C↑j
                                         # tls1_enc+53C↓j
                jalr    $t9 ; EVP_CIPHER_flags
                move    $a0, $s7
                li      $v1, 0xF0007
                and     $v0, $v1
                li      $v1, 6
                beq     $v0, $v1, loc_25CC4
                lw      $gp, 0x68+var_50($sp)

loc_25A40:                               # CODE XREF: tls1_enc+72C↓j
                li      $v0, 1

loc_25A44:                               # CODE XREF: tls1_enc:loc_25CC4↓j
                beq     $s6, $v0, loc_25A54
                nop
                beqz    $fp, loc_25BE0
                nop

loc_25A54:                               # CODE XREF: tls1_enc:loc_25A44↑j
                                         # tls1_enc+6AC↓j ...
                beqz    $s5, loc_25978
                li      $a0, 1
                bnez    $fp, loc_2597C
                lw      $ra, 0x68+var_4($sp)
                lw      $v0, 4($s0)
                subu    $v0, $s5
                b       loc_25978
                sw      $v0, 4($s0)
 # ---------------------------------------------------------------------------

loc_25A74:                               # CODE XREF: tls1_enc+1D0↑j
                lw      $v0, 0x58($s4)
                b       loc_257A0
                addiu   $a0, $v0, 0x54  # 'T'
 # ---------------------------------------------------------------------------

loc_25A80:                               # CODE XREF: tls1_enc+3F0↑j
                bnez    $fp, loc_258CC
                move    $s5, $zero

loc_25A88:                               # CODE XREF: tls1_enc+2F4↑j
                                         # tls1_enc+3F8↑j
                beqz    $s3, loc_25AA4
                nop
                divu    $s3, $s6
                teq     $s6, $zero  #7
                mfhi    $v0
                beqz    $v0, loc_258D0
                la      $t9, EVP_Cipher

loc_25AA4:                               # CODE XREF: tls1_enc:loc_25A88↑j
                lw      $v0, 0($s4)
                slti    $v0, 0x302
                beqz    $v0, loc_25914
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xD2
                li      $a2, 0x81
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x68+var_58($sp)
                lw      $gp, 0x68+var_50($sp)
                la      $t9, ssl3_send_alert
                move    $a0, $s4
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x15
                lw      $gp, 0x68+var_50($sp)
                b       loc_25978
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_25AF0:                               # CODE XREF: tls1_enc+340↑j
                sltiu   $v0, $s1, 1
                bnez    $v0, loc_25918
                li      $a0, 0xFFFFFFFF
                b       loc_25A20
                la      $t9, EVP_CIPHER_flags
 # ---------------------------------------------------------------------------

loc_25B04:                               # CODE XREF: tls1_enc+1E8↑j
                                         # tls1_enc+1F0↑j
                beqz    $fp, loc_25B6C
                nop
                lw      $v1, 0x5C($s4)
                lhu     $v0, 0x20A($v1)
                sra     $v0, 8
                sb      $v0, 0x68+var_48($sp)
                lbu     $v0, 0x20A($v1)

loc_25B20:                               # CODE XREF: tls1_enc+5BC↓j
                sb      $v0, 0x68+var_48+1($sp)
                addiu   $a0, 2
                lwl     $v1, 3($a0)
                addiu   $v0, $sp, 0x68+var_48+2
                lwr     $v1, 0($a0)
                addiu   $a3, $sp, 0x68+var_3F
                usw     $v1, 0($v0)
                lbu     $a1, 4($a0)
                lw      $a2, 0x68+var_48($sp)
                sb      $a1, 0x68+var_42($sp)
                lbu     $v0, 5($a0)
                swl     $a2, 3($a3)
                sb      $v0, 0x68+var_41($sp)
                lw      $v1, 0x24($sp)
                swr     $a2, 0($a3)
                swl     $v1, 7($a3)
                b       loc_25874
                swr     $v1, 4($a3)
 # ---------------------------------------------------------------------------

loc_25B6C:                               # CODE XREF: tls1_enc:loc_25B04↑j
                lw      $v1, 0x5C($s4)
                lhu     $v0, 0x208($v1)
                sra     $v0, 8
                sb      $v0, 0x68+var_48($sp)
                b       loc_25B20
                lbu     $v0, 0x208($v1)
 # ---------------------------------------------------------------------------

loc_25B84:                               # CODE XREF: tls1_enc+41C↑j
                lw      $v1, 0x58($s4)
                lw      $v0, 0($v1)
                andi    $v0, 8
                b       loc_259E4
                movn    $a1, $a2, $v0
 # ---------------------------------------------------------------------------

loc_25B98:                               # CODE XREF: tls1_enc+78↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aT1EncC - 0x40000)  # "t1_enc.c"
                addiu   $a2, (aN0 - 0x40000)  # "n >= 0"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x2AB
                b       loc_25640
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_25BBC:                               # CODE XREF: tls1_enc+158↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aT1EncC - 0x40000)  # "t1_enc.c"
                addiu   $a2, (aN0 - 0x40000)  # "n >= 0"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x2CE
                b       loc_25720
                lw      $gp, 0x68+var_50($sp)
 # ---------------------------------------------------------------------------

loc_25BE0:                               # CODE XREF: tls1_enc+48C↑j
                lw      $s1, 0xC($s0)
                lw      $v1, 0xF8($s4)
                addu    $v0, $s3, $s1
                lbu     $s7, -1($v0)
                andi    $v1, 0x200
                beqz    $v1, loc_25C08
                addiu   $t0, $s7, 1
                lw      $v0, 0x88($s4)
                beqz    $v0, loc_25CFC
                la      $a1, loc_40000

loc_25C08:                               # CODE XREF: tls1_enc+634↑j
                                         # tls1_enc+78C↓j
                lw      $v1, 4($s0)
                slt     $v0, $v1, $t0
                bnez    $v0, loc_25914
                subu    $a1, $s3, $t0
                slt     $v0, $a1, $s3
                beqz    $v0, loc_25C5C
                nop
                addu    $a0, $s1, $a1
                lbu     $v0, 0($a0)
                beq     $s7, $v0, loc_25C50
                addiu   $a1, 1
                addiu   $a1, -1
                b       loc_25918
                li      $a0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_25C40:                               # CODE XREF: tls1_enc+694↓j
                lbu     $v0, 1($a0)
                bne     $s7, $v0, loc_25914
                addiu   $a0, 1
                addiu   $a1, 1

loc_25C50:                               # CODE XREF: tls1_enc+66C↑j
                slt     $v0, $a1, $s3
                bnez    $v0, loc_25C40
                nop

loc_25C5C:                               # CODE XREF: tls1_enc+65C↑j
                subu    $v1, $t0
                sw      $v1, 4($s0)
                lw      $v0, 0($s4)
                slti    $v0, 0x302
                bnez    $v0, loc_25A54
                la      $t9, EVP_CIPHER_CTX_flags
                jalr    $t9 ; EVP_CIPHER_CTX_flags
                move    $a0, $s2
                li      $v1, 0xF0007
                and     $v0, $v1
                li      $v1, 2
                bne     $v0, $v1, loc_25A54
                lw      $gp, 0x68+var_50($sp)
                lw      $a0, 4($s0)
                slt     $v0, $a0, $s6
                bnez    $v0, loc_25914
                subu    $a0, $s6
                lw      $v0, 0xC($s0)
                lw      $v1, 0x10($s0)
                addu    $v0, $s6
                addu    $v1, $s6
                sw      $v0, 0xC($s0)
                sw      $v1, 0x10($s0)
                b       loc_25A54
                sw      $a0, 4($s0)
 # ---------------------------------------------------------------------------

loc_25CC4:                               # CODE XREF: tls1_enc+478↑j
                bnez    $fp, loc_25A44
                li      $v0, 1
                lw      $v0, 0xC($s0)
                lw      $v1, 0x10($s0)
                lw      $a0, 4($s0)
                addiu   $s1, $v0, 8
                addiu   $v1, 8
                addiu   $a0, -8
                sw      $s1, 0xC($s0)
                sw      $v1, 0x10($s0)
                b       loc_25A40
                sw      $a0, 4($s0)
 # ---------------------------------------------------------------------------

loc_25CF4:                               # CODE XREF: tls1_enc+224↑j
                                         # tls1_enc+238↑j ...
                b       loc_25874
                lw      $t0, 0($s4)
 # ---------------------------------------------------------------------------

loc_25CFC:                               # CODE XREF: tls1_enc+640↑j
                lw      $a3, 0x58($s4)
                la      $t9, memcmp
                addiu   $a0, $a3, 8
                sw      $a3, 0x68+var_30($sp)
                sw      $t0, 0x68+var_2C($sp)
                addiu   $a1, (dword_45190 - 0x40000)
                jalr    $t9 ; memcmp
                li      $a2, 8
                lw      $gp, 0x68+var_50($sp)
                lw      $a3, 0x68+var_30($sp)
                bnez    $v0, loc_25D54
                lw      $t0, 0x68+var_2C($sp)
                andi    $v0, $s7, 1
                bnez    $v0, loc_25D54
                nop
                lw      $v1, 0($a3)
                ori     $v1, 8
                sw      $v1, 0($a3)

loc_25D44:                               # CODE XREF: tls1_enc:loc_25D54↓j
                andi    $v1, 8
                addiu   $v0, $t0, -1
                b       loc_25C08
                movn    $t0, $v0, $v1
 # ---------------------------------------------------------------------------

loc_25D54:                               # CODE XREF: tls1_enc+764↑j
                                         # tls1_enc+770↑j
                b       loc_25D44
                lw      $v1, 0($a3)
 # ---------------------------------------------------------------------------

loc_25D5C:                               # CODE XREF: tls1_enc+F8↑j
                la      $t9, RAND_bytes
                jalr    $t9 ; RAND_bytes
                nop
                bgtz    $v0, loc_25744
                lw      $gp, 0x68+var_50($sp)
                b       loc_25918
                li      $a0, 0xFFFFFFFF
 # End of function tls1_enc


 # =============== S U B R O U T I N E =======================================


                .globl tls1_setup_key_block
tls1_setup_key_block:                    # DATA XREF: LOAD:00004B98↑o
                                         # .got:tls1_setup_key_block_ptr↓o

var_68          = -0x68
var_64          = -0x64
var_60          = -0x60
var_5C          = -0x5C
var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - tls1_setup_key_block)
                addu    $gp, $t9
                addiu   $sp, -0x78
                sw      $ra, 0x78+var_4($sp)
                sw      $s4, 0x78+var_8($sp)
                sw      $s3, 0x78+var_C($sp)
                sw      $s2, 0x78+var_10($sp)
                sw      $s1, 0x78+var_14($sp)
                sw      $s0, 0x78+var_18($sp)
                sw      $gp, 0x78+var_38($sp)
                lw      $v0, 0x58($a0)
                lw      $v1, 0x36C($v0)
                beqz    $v1, loc_25DDC
                move    $s2, $a0
                li      $s1, 1

loc_25DB8:                               # CODE XREF: tls1_setup_key_block+240↓j
                                         # tls1_setup_key_block+290↓j
                move    $v0, $s1
                lw      $ra, 0x78+var_4($sp)
                lw      $s4, 0x78+var_8($sp)
                lw      $s3, 0x78+var_C($sp)
                lw      $s2, 0x78+var_10($sp)
                lw      $s1, 0x78+var_14($sp)
                lw      $s0, 0x78+var_18($sp)
                jr      $ra
                addiu   $sp, 0x78
 # ---------------------------------------------------------------------------

loc_25DDC:                               # CODE XREF: tls1_setup_key_block+34↑j
                lw      $a0, 0xC0($a0)
                la      $t9, ssl_cipher_get_evp
                addiu   $v0, $sp, 0x78+var_20
                addiu   $v1, $sp, 0x78+var_28
                sw      $v0, 0x78+var_68($sp)
                sw      $v1, 0x78+var_64($sp)
                sw      $zero, 0x78+var_20($sp)
                sw      $zero, 0x78+var_24($sp)
                addiu   $a1, $sp, 0x78+var_30
                addiu   $a2, $sp, 0x78+var_2C
                jalr    $t9 ; ssl_cipher_get_evp
                addiu   $a3, $sp, 0x78+var_24
                bnez    $v0, loc_25E5C
                lw      $gp, 0x78+var_38($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0xD3
                li      $a2, 0x8A

loc_25E28:                               # CODE XREF: tls1_setup_key_block+2A8↓j
                move    $s1, $zero
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s1
                lw      $gp, 0x78+var_38($sp)
                lw      $ra, 0x78+var_4($sp)
                lw      $s4, 0x78+var_8($sp)
                lw      $s3, 0x78+var_C($sp)
                lw      $s2, 0x78+var_10($sp)
                lw      $s1, 0x78+var_14($sp)
                lw      $s0, 0x78+var_18($sp)
                jr      $ra
                addiu   $sp, 0x78
 # ---------------------------------------------------------------------------

loc_25E5C:                               # CODE XREF: tls1_setup_key_block+94↑j
                lw      $a1, 0x58($s2)
                lw      $v0, 0x78+var_20($sp)
                lw      $a2, 0x78+var_30($sp)
                sw      $v0, 0x380($a1)
                lw      $v1, 0x78+var_2C($sp)
                lw      $v0, 0x78+var_24($sp)
                la      $t9, EVP_CIPHER_key_length
                sw      $v1, 0x378($a1)
                move    $a0, $a2
                sw      $a2, 0x374($a1)
                jalr    $t9 ; EVP_CIPHER_key_length
                sw      $v0, 0x37C($a1)
                lw      $gp, 0x78+var_38($sp)
                lw      $a0, 0x78+var_30($sp)
                la      $t9, EVP_CIPHER_iv_length
                lw      $s1, 0x78+var_20($sp)
                jalr    $t9 ; EVP_CIPHER_iv_length
                move    $s0, $v0
                lw      $gp, 0x78+var_38($sp)
                la      $t9, ssl3_cleanup_key_block
                move    $a0, $s2
                la      $s3, loc_40000
                jalr    $t9 ; ssl3_cleanup_key_block
                addu    $s0, $v0
                lw      $gp, 0x78+var_38($sp)
                addu    $s0, $s1
                sll     $s0, 1
                la      $t9, CRYPTO_malloc
                move    $a0, $s0
                addiu   $a1, $s3, (aT1EncC - 0x40000)  # "t1_enc.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x262
                move    $s1, $v0
                beqz    $v0, loc_25FEC
                lw      $gp, 0x78+var_38($sp)
                lw      $v0, 0x58($s2)
                la      $t9, CRYPTO_malloc
                addiu   $a1, $s3, (aT1EncC - 0x40000)  # "t1_enc.c"
                sw      $s1, 0x370($v0)
                sw      $s0, 0x36C($v0)
                move    $a0, $s0
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x26B
                move    $s3, $v0
                beqz    $v0, loc_26010
                lw      $gp, 0x78+var_38($sp)
                la      $t9, ssl_get_algorithm2
                jalr    $t9 ; ssl_get_algorithm2
                move    $a0, $s2
                lw      $a1, 0xC0($s2)
                lw      $a3, 0x58($s2)
                lw      $gp, 0x78+var_38($sp)
                addiu   $v1, $a3, 0xC0
                addiu   $a0, $a1, 0x14
                li      $s4, 0x20  # ' '
                sw      $a0, 0x78+var_4C($sp)
                sw      $v1, 0x78+var_64($sp)
                sw      $s4, 0x78+var_68($sp)
                sw      $s4, 0x78+var_60($sp)
                sw      $zero, 0x78+var_5C($sp)
                sw      $zero, 0x78+var_58($sp)
                sw      $zero, 0x78+var_54($sp)
                sw      $zero, 0x78+var_50($sp)
                lw      $v1, 0x10($a1)
                la      $t9, locret_20000
                la      $a1, loc_40000
                move    $a0, $v0
                addiu   $a1, (aKeyExpansion - 0x40000)  # "key expansion"
                addiu   $a3, 0xA0
                li      $a2, 0xD
                sw      $v1, 0x78+var_48($sp)
                sw      $s1, 0x78+var_44($sp)
                sw      $s3, 0x78+var_40($sp)
                addiu   $t9, (sub_2427C - 0x20000)
                jalr    $t9 ; sub_2427C
                sw      $s0, 0x78+var_3C($sp)
                bnez    $v0, loc_25FC0
                lw      $gp, 0x78+var_38($sp)
                move    $s1, $zero

loc_25F98:                               # CODE XREF: tls1_setup_key_block+250↓j
                                         # tls1_setup_key_block:loc_25FE4↓j ...
                la      $t9, OPENSSL_cleanse
                move    $a1, $s0
                jalr    $t9 ; OPENSSL_cleanse
                move    $a0, $s3
                lw      $gp, 0x78+var_38($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s3
                b       loc_25DB8
                lw      $gp, 0x78+var_38($sp)
 # ---------------------------------------------------------------------------

loc_25FC0:                               # CODE XREF: tls1_setup_key_block+214↑j
                lw      $v0, 0xF8($s2)
                andi    $v0, 0x800
                bnez    $v0, loc_25F98
                li      $s1, 1
                lw      $v1, 8($s2)
                lw      $v0, 0($v1)
                slti    $v0, 0x302
                bnez    $v0, loc_26028
                li      $v0, 1

loc_25FE4:                               # CODE XREF: tls1_setup_key_block+2BC↓j
                                         # tls1_setup_key_block+2D4↓j
                b       loc_25F98
                li      $s1, 1
 # ---------------------------------------------------------------------------

loc_25FEC:                               # CODE XREF: tls1_setup_key_block+168↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0xD3
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_25DB8
                lw      $gp, 0x78+var_38($sp)
 # ---------------------------------------------------------------------------

loc_26010:                               # CODE XREF: tls1_setup_key_block+194↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xD3
                li      $a2, 0x41  # 'A'
                b       loc_25E28
                sw      $zero, 0x78+var_68($sp)
 # ---------------------------------------------------------------------------

loc_26028:                               # CODE XREF: tls1_setup_key_block+264↑j
                lw      $v1, 0xC0($s2)
                lw      $a0, 0x58($s2)
                lw      $v1, 0xAC($v1)
                beqz    $v1, loc_25FE4
                sw      $v0, 0xE0($a0)
                lw      $v1, 0x14($v1)
                beq     $v1, $s4, loc_26060
                nop

loc_26048:                               # CODE XREF: tls1_setup_key_block:loc_26060↓j
                li      $v0, 4
                bne     $v1, $v0, loc_25FE4
                nop
                li      $s1, 1
                b       loc_25F98
                sw      $zero, 0xE0($a0)
 # ---------------------------------------------------------------------------

loc_26060:                               # CODE XREF: tls1_setup_key_block+2C8↑j
                b       loc_26048
                sw      $zero, 0xE0($a0)
 # End of function tls1_setup_key_block


 # =============== S U B R O U T I N E =======================================


                .globl tls1_change_cipher_state
tls1_change_cipher_state:                # DATA XREF: LOAD:00004968↑o
                                         # .got:tls1_change_cipher_state_ptr↓o

var_148         = -0x148
var_144         = -0x144
var_140         = -0x140
var_13C         = -0x13C
var_138         = -0x138
var_134         = -0x134
var_130         = -0x130
var_12C         = -0x12C
var_128         = -0x128
var_124         = -0x124
var_120         = -0x120
var_11C         = -0x11C
var_118         = -0x118
var_110         = -0x110
var_F0          = -0xF0
var_D0          = -0xD0
var_90          = -0x90
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4           =  4

                la      $gp, (off_5A360+0x7FF0 - tls1_change_cipher_state)
                addu    $gp, $t9
                addiu   $sp, -0x158
                sw      $ra, 0x158+var_4($sp)
                sw      $fp, 0x158+var_8($sp)
                sw      $s7, 0x158+var_C($sp)
                sw      $s6, 0x158+var_10($sp)
                sw      $s5, 0x158+var_14($sp)
                sw      $s4, 0x158+var_18($sp)
                sw      $s3, 0x158+var_1C($sp)
                sw      $s2, 0x158+var_20($sp)
                sw      $s1, 0x158+var_24($sp)
                sw      $s0, 0x158+var_28($sp)
                sw      $gp, 0x158+var_118($sp)
                lw      $v0, 0x58($a0)
                sw      $a1, 0x158+arg_4($sp)
                move    $s2, $a0
                andi    $v1, $a1, 1
                lw      $a0, 0x344($v0)
                lw      $a1, 0x378($v0)
                lw      $s0, 0x384($v0)
                lw      $s5, 0x374($v0)
                lw      $v0, 0x37C($v0)
                lw      $s3, 0x20($a0)
                sw      $a1, 0x158+var_44($sp)
                beqz    $v1, loc_262D4
                sw      $v0, 0x158+var_48($sp)
                lw      $v0, 0x24($a0)
                andi    $v0, 4
                bnez    $v0, loc_263AC
                li      $v1, 0xFFFFFFFE
                lw      $v0, 0x7C($s2)
                and     $v0, $v1
                sw      $v0, 0x7C($s2)

loc_260F4:                               # CODE XREF: tls1_change_cipher_state+34C↓j
                lw      $v0, 0x80($s2)
                beqz    $v0, loc_267B8
                li      $s1, 1

loc_26100:                               # CODE XREF: tls1_change_cipher_state+788↓j
                la      $t9, ssl_replace_hash
                addiu   $a0, $s2, 0x84
                move    $a1, $zero
                jalr    $t9 ; ssl_replace_hash
                sw      $v0, 0x158+var_40($sp)
                lw      $a0, 0x88($s2)
                lw      $gp, 0x158+var_118($sp)
                beqz    $a0, loc_26138
                sw      $v0, 0x158+var_50($sp)
                la      $t9, COMP_CTX_free
                jalr    $t9 ; COMP_CTX_free
                nop
                lw      $gp, 0x158+var_118($sp)
                sw      $zero, 0x88($s2)

loc_26138:                               # CODE XREF: tls1_change_cipher_state+B4↑j
                beqz    $s0, loc_26764
                la      $t9, COMP_CTX_new
                jalr    $t9 ; COMP_CTX_new
                lw      $a0, 8($s0)
                lw      $gp, 0x158+var_118($sp)
                beqz    $v0, loc_2688C
                sw      $v0, 0x88($s2)
                lw      $s0, 0x58($s2)
                lw      $v0, 0x120($s0)
                beqz    $v0, loc_26838
                la      $a1, loc_40000

loc_26164:                               # CODE XREF: tls1_change_cipher_state:loc_26764↓j
                                         # tls1_change_cipher_state+7F4↓j
                lw      $v1, 0($s2)
                li      $v0, 0xFEFF
                beq     $v1, $v0, loc_26184
                addiu   $t9, $s0, 0x14
                sw      $zero, 0xC($s0)
                sw      $zero, 8($s0)
                lw      $s0, 0x58($s2)
                addiu   $t9, $s0, 0x14

loc_26184:                               # CODE XREF: tls1_change_cipher_state+104↑j
                addiu   $v0, $s0, 0x10
                sw      $t9, 0x158+var_34($sp)
                bnez    $s1, loc_26384
                sw      $v0, 0x158+var_4C($sp)

loc_26194:                               # CODE XREF: tls1_change_cipher_state+314↓j
                                         # tls1_change_cipher_state+32C↓j
                lw      $s1, 0x380($s0)
                lw      $v0, 0x158+var_4C($sp)
                la      $t9, EVP_CIPHER_key_length
                sw      $s1, 0($v0)
                move    $a0, $s5
                andi    $fp, $s3, 2
                jalr    $t9 ; EVP_CIPHER_key_length
                lw      $s0, 0x370($s0)
                move    $s3, $v0
                beqz    $fp, loc_26204
                lw      $gp, 0x158+var_118($sp)
                lw      $v0, 0x58($s2)
                lw      $a1, 0x344($v0)
                lw      $v1, 0x20($a1)
                andi    $a2, $v1, 8
                beqz    $a2, loc_266C4
                li      $a0, 8
                li      $a0, 5

loc_261DC:                               # CODE XREF: tls1_change_cipher_state+668↓j
                slt     $v0, $s3, $a0
                bnez    $v0, loc_26208
                la      $t9, EVP_CIPHER_flags
                bnez    $a2, loc_26208
                li      $s3, 5
                lw      $v0, 0x14($a1)
                li      $s3, 8
                xori    $v0, 1
                li      $v1, 7
                movn    $s3, $v1, $v0

loc_26204:                               # CODE XREF: tls1_change_cipher_state+150↑j
                la      $t9, EVP_CIPHER_flags

loc_26208:                               # CODE XREF: tls1_change_cipher_state+178↑j
                                         # tls1_change_cipher_state+180↑j
                jalr    $t9 ; EVP_CIPHER_flags
                move    $a0, $s5
                li      $v1, 0xF0007
                and     $v0, $v1
                li      $v1, 6
                bne     $v0, $v1, loc_263BC
                lw      $gp, 0x158+var_118($sp)
                lw      $v1, 0x158+arg_4($sp)
                li      $v0, 0x12
                beq     $v1, $v0, loc_263DC
                li      $s6, 4

loc_26238:                               # CODE XREF: tls1_change_cipher_state+36C↓j
                li      $v0, 0x21  # '!'
                beq     $v1, $v0, loc_263DC
                sll     $v0, $s1, 1
                addu    $v0, $s3
                addu    $v1, $v0, $s3
                addu    $v1, $s6
                addu    $a2, $v1, $s6
                addu    $s7, $s0, $v1
                lw      $v1, 0x58($s2)
                la      $a0, loc_40000
                addu    $s4, $s0, $v0
                lw      $v0, 0x36C($v1)
                addiu   $a0, (aServerWriteKey - 0x40000)  # "server write key"
                slt     $v0, $a2
                sw      $a0, 0x158+var_38($sp)
                addu    $a3, $s0, $s1
                beqz    $v0, loc_26420
                sw      $zero, 0x158+var_3C($sp)

loc_26280:                               # CODE XREF: tls1_change_cipher_state+3B0↓j
                la      $t9, ERR_put_error
                sw      $zero, 0x158+var_148($sp)
                li      $a0, 0x14
                li      $a1, 0xD1
                li      $a2, 0x44  # 'D'

loc_26294:                               # CODE XREF: tls1_change_cipher_state+80C↓j
                                         # tls1_change_cipher_state+834↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x158+var_118($sp)
                lw      $ra, 0x158+var_4($sp)
                lw      $fp, 0x158+var_8($sp)
                lw      $s7, 0x158+var_C($sp)
                lw      $s6, 0x158+var_10($sp)
                lw      $s5, 0x158+var_14($sp)
                lw      $s4, 0x158+var_18($sp)
                lw      $s3, 0x158+var_1C($sp)
                lw      $s2, 0x158+var_20($sp)
                lw      $s1, 0x158+var_24($sp)
                lw      $s0, 0x158+var_28($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x158
 # ---------------------------------------------------------------------------

loc_262D4:                               # CODE XREF: tls1_change_cipher_state+68↑j
                lw      $v0, 0x24($a0)
                andi    $v0, 4
                bnez    $v0, loc_2639C
                li      $v1, 0xFFFFFFFD
                lw      $v0, 0x7C($s2)
                and     $v0, $v1
                sw      $v0, 0x7C($s2)

loc_262F0:                               # CODE XREF: tls1_change_cipher_state+33C↓j
                lw      $v0, 0x8C($s2)
                beqz    $v0, loc_267F8
                li      $s1, 1

loc_262FC:                               # CODE XREF: tls1_change_cipher_state+7C8↓j
                la      $t9, ssl_replace_hash
                addiu   $a0, $s2, 0x90
                move    $a1, $zero
                jalr    $t9 ; ssl_replace_hash
                sw      $v0, 0x158+var_40($sp)
                lw      $a0, 0x94($s2)
                lw      $gp, 0x158+var_118($sp)
                beqz    $a0, loc_26334
                sw      $v0, 0x158+var_50($sp)
                la      $t9, COMP_CTX_free
                jalr    $t9 ; COMP_CTX_free
                nop
                lw      $gp, 0x158+var_118($sp)
                sw      $zero, 0x94($s2)

loc_26334:                               # CODE XREF: tls1_change_cipher_state+2B0↑j
                beqz    $s0, loc_26350
                la      $t9, COMP_CTX_new
                jalr    $t9 ; COMP_CTX_new
                lw      $a0, 8($s0)
                lw      $gp, 0x158+var_118($sp)
                beqz    $v0, loc_2688C
                sw      $v0, 0x94($s2)

loc_26350:                               # CODE XREF: tls1_change_cipher_state:loc_26334↑j
                lw      $v1, 0($s2)
                li      $v0, 0xFEFF
                beq     $v1, $v0, loc_2636C
                nop
                lw      $v0, 0x58($s2)
                sw      $zero, 0x58($v0)
                sw      $zero, 0x54($v0)

loc_2636C:                               # CODE XREF: tls1_change_cipher_state+2F0↑j
                lw      $s0, 0x58($s2)
                addiu   $v1, $s0, 0x60  # '`'
                addiu   $a1, $s0, 0x5C  # '\'
                sw      $v1, 0x158+var_34($sp)
                beqz    $s1, loc_26194
                sw      $a1, 0x158+var_4C($sp)

loc_26384:                               # CODE XREF: tls1_change_cipher_state+124↑j
                la      $t9, EVP_CIPHER_CTX_cleanup
                jalr    $t9 ; EVP_CIPHER_CTX_cleanup
                lw      $a0, 0x158+var_40($sp)
                lw      $gp, 0x158+var_118($sp)
                b       loc_26194
                lw      $s0, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_2639C:                               # CODE XREF: tls1_change_cipher_state+274↑j
                lw      $v0, 0x7C($s2)
                ori     $v0, 2
                b       loc_262F0
                sw      $v0, 0x7C($s2)
 # ---------------------------------------------------------------------------

loc_263AC:                               # CODE XREF: tls1_change_cipher_state+78↑j
                lw      $v0, 0x7C($s2)
                ori     $v0, 1
                b       loc_260F4
                sw      $v0, 0x7C($s2)
 # ---------------------------------------------------------------------------

loc_263BC:                               # CODE XREF: tls1_change_cipher_state+1B8↑j
                la      $t9, EVP_CIPHER_iv_length
                jalr    $t9 ; EVP_CIPHER_iv_length
                move    $a0, $s5
                lw      $v1, 0x158+arg_4($sp)
                move    $s6, $v0
                li      $v0, 0x12
                bne     $v1, $v0, loc_26238
                lw      $gp, 0x158+var_118($sp)

loc_263DC:                               # CODE XREF: tls1_change_cipher_state+1C8↑j
                                         # tls1_change_cipher_state+1D4↑j
                la      $v1, loc_40000
                sll     $a1, $s1, 1
                addiu   $v1, (aClientWriteKey - 0x40000)  # "client write key"
                sll     $a0, $s3, 1
                sw      $v1, 0x158+var_38($sp)
                lw      $v1, 0x58($s2)
                addu    $a0, $a1
                sll     $v0, $s6, 1
                addu    $a2, $v0, $a0
                lw      $v0, 0x36C($v1)
                addu    $s4, $s0, $a1
                slt     $v0, $a2
                li      $a1, 1
                move    $a3, $s0
                addu    $s7, $s0, $a0
                bnez    $v0, loc_26280
                sw      $a1, 0x158+var_3C($sp)

loc_26420:                               # CODE XREF: tls1_change_cipher_state+210↑j
                la      $t9, memcpy
                lw      $a0, 0x158+var_34($sp)
                move    $a1, $a3
                jalr    $t9 ; memcpy
                move    $a2, $s1
                lw      $gp, 0x158+var_118($sp)
                la      $t9, EVP_CIPHER_flags
                jalr    $t9 ; EVP_CIPHER_flags
                move    $a0, $s5
                lui     $v1, 0x20  # ' '
                and     $v0, $v1
                beqz    $v0, loc_266D8
                lw      $gp, 0x158+var_118($sp)

loc_26454:                               # CODE XREF: tls1_change_cipher_state+6C0↓j
                beqz    $fp, loc_26590
                addiu   $v1, $sp, 0x158+var_D0
                la      $t9, ssl_get_algorithm2
                jalr    $t9 ; ssl_get_algorithm2
                move    $a0, $s2
                lw      $gp, 0x158+var_118($sp)
                la      $t9, EVP_CIPHER_key_length
                move    $a0, $s5
                move    $s1, $v0
                jalr    $t9 ; EVP_CIPHER_key_length
                lw      $s0, 0x58($s2)
                lw      $gp, 0x158+var_118($sp)
                addiu   $t9, $sp, 0x158+var_90
                la      $v1, locret_20000
                move    $a0, $s1
                addiu   $a3, $s0, 0xC0
                addiu   $fp, $v1, (sub_2427C - 0x20000)
                li      $s1, 0x20  # ' '
                addiu   $v1, $sp, 0x158+var_D0
                lw      $a1, 0x158+var_38($sp)
                addiu   $s0, 0xA0
                sw      $t9, 0x158+var_30($sp)
                sw      $t9, 0x158+var_120($sp)
                sw      $v1, 0x158+var_2C($sp)
                li      $a2, 0x10
                sw      $s0, 0x158+var_144($sp)
                sw      $s4, 0x158+var_12C($sp)
                sw      $s3, 0x158+var_128($sp)
                sw      $v0, 0x158+var_11C($sp)
                sw      $s1, 0x158+var_148($sp)
                sw      $s1, 0x158+var_140($sp)
                sw      $zero, 0x158+var_13C($sp)
                sw      $zero, 0x158+var_138($sp)
                sw      $zero, 0x158+var_134($sp)
                sw      $zero, 0x158+var_130($sp)
                move    $t9, $fp
                jalr    $t9 ; sub_2427C
                sw      $v1, 0x158+var_124($sp)
                beqz    $v0, loc_26730
                lw      $gp, 0x158+var_118($sp)
                blez    $s6, loc_2687C
                la      $t9, ssl_get_algorithm2
                jalr    $t9 ; ssl_get_algorithm2
                move    $a0, $s2
                lw      $gp, 0x158+var_118($sp)
                lw      $v1, 0x58($s2)
                move    $a0, $v0
                la      $v0, loc_40000
                la      $a1, loc_40000
                addiu   $a3, $v1, 0xC0
                sll     $t0, $s6, 1
                addiu   $v1, 0xA0
                addiu   $v0, (dword_451A0 - 0x40000)
                addiu   $s0, $sp, 0x158+var_110
                addiu   $s3, $sp, 0x158+var_F0
                addiu   $a1, (aIvBlock - 0x40000)  # "IV block"
                li      $a2, 8
                sw      $v1, 0x158+var_144($sp)
                sw      $s1, 0x158+var_140($sp)
                sw      $v0, 0x158+var_12C($sp)
                sw      $t0, 0x158+var_11C($sp)
                sw      $s1, 0x158+var_148($sp)
                sw      $zero, 0x158+var_13C($sp)
                sw      $zero, 0x158+var_138($sp)
                sw      $zero, 0x158+var_134($sp)
                sw      $zero, 0x158+var_130($sp)
                sw      $zero, 0x158+var_128($sp)
                sw      $s0, 0x158+var_124($sp)
                move    $t9, $fp
                jalr    $t9 ; sub_2427C
                sw      $s3, 0x158+var_120($sp)
                beqz    $v0, loc_26730
                lw      $gp, 0x158+var_118($sp)
                lw      $v0, 0x158+var_3C($sp)
                beqz    $v0, loc_268A4
                nop
                lw      $s4, 0x158+var_2C($sp)
                b       loc_265A4
                move    $s7, $s0
 # ---------------------------------------------------------------------------

loc_26590:                               # CODE XREF: tls1_change_cipher_state:loc_26454↑j
                addiu   $a1, $sp, 0x158+var_90
                sw      $v1, 0x158+var_2C($sp)
                sw      $a1, 0x158+var_30($sp)
                addiu   $s0, $sp, 0x158+var_110
                addiu   $s3, $sp, 0x158+var_F0

loc_265A4:                               # CODE XREF: tls1_change_cipher_state+520↑j
                                         # tls1_change_cipher_state+81C↓j ...
                lw      $v0, 0xC0($s2)
                la      $t9, EVP_CIPHER_flags
                sw      $zero, 4($v0)
                jalr    $t9 ; EVP_CIPHER_flags
                move    $a0, $s5
                li      $v1, 0xF0007
                and     $v0, $v1
                li      $v1, 6
                beq     $v0, $v1, loc_2676C
                lw      $gp, 0x158+var_118($sp)
                lw      $v1, 0x158+arg_4($sp)
                la      $t9, EVP_CipherInit_ex
                andi    $v0, $v1, 2
                lw      $a0, 0x158+var_40($sp)
                sw      $s7, 0x158+var_148($sp)
                sw      $v0, 0x158+var_144($sp)
                move    $a3, $s4
                move    $a1, $s5
                jalr    $t9 ; EVP_CipherInit_ex
                move    $a2, $zero
                lw      $gp, 0x158+var_118($sp)

loc_265FC:                               # CODE XREF: tls1_change_cipher_state+748↓j
                la      $t9, EVP_CIPHER_flags
                jalr    $t9 ; EVP_CIPHER_flags
                move    $a0, $s5
                lui     $v1, 0x20  # ' '
                and     $v0, $v1
                beqz    $v0, loc_26640
                lw      $gp, 0x158+var_118($sp)
                lw      $a1, 0x158+var_4C($sp)
                lw      $a2, 0($a1)
                beqz    $a2, loc_26644
                la      $t9, OPENSSL_cleanse
                la      $t9, EVP_CIPHER_CTX_ctrl
                lw      $a0, 0x158+var_40($sp)
                lw      $a3, 0x158+var_34($sp)
                jalr    $t9 ; EVP_CIPHER_CTX_ctrl
                li      $a1, 0x17
                lw      $gp, 0x158+var_118($sp)

loc_26640:                               # CODE XREF: tls1_change_cipher_state+5A8↑j
                la      $t9, OPENSSL_cleanse

loc_26644:                               # CODE XREF: tls1_change_cipher_state+5B8↑j
                lw      $a0, 0x158+var_2C($sp)
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x40  # '@'
                lw      $gp, 0x158+var_118($sp)
                lw      $a0, 0x158+var_30($sp)
                la      $t9, OPENSSL_cleanse
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x40  # '@'
                lw      $gp, 0x158+var_118($sp)
                la      $t9, OPENSSL_cleanse
                move    $a0, $s0
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x20  # ' '
                lw      $gp, 0x158+var_118($sp)
                la      $t9, OPENSSL_cleanse
                move    $a0, $s3
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x20  # ' '
                lw      $gp, 0x158+var_118($sp)
                lw      $ra, 0x158+var_4($sp)
                lw      $fp, 0x158+var_8($sp)
                lw      $s7, 0x158+var_C($sp)
                lw      $s6, 0x158+var_10($sp)
                lw      $s5, 0x158+var_14($sp)
                lw      $s4, 0x158+var_18($sp)
                lw      $s3, 0x158+var_1C($sp)
                lw      $s2, 0x158+var_20($sp)
                lw      $s1, 0x158+var_24($sp)
                lw      $s0, 0x158+var_28($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x158
 # ---------------------------------------------------------------------------

loc_266C4:                               # CODE XREF: tls1_change_cipher_state+168↑j
                lw      $v0, 0x14($a1)
                xori    $v0, 1
                li      $v1, 7
                b       loc_261DC
                movn    $a0, $v1, $v0
 # ---------------------------------------------------------------------------

loc_266D8:                               # CODE XREF: tls1_change_cipher_state+3E4↑j
                lw      $t9, 0x158+var_4C($sp)
                lw      $a0, 0x158+var_48($sp)
                lw      $a3, 0($t9)
                lw      $a2, 0x158+var_34($sp)
                la      $t9, EVP_PKEY_new_mac_key
                jalr    $t9 ; EVP_PKEY_new_mac_key
                move    $a1, $zero
                lw      $gp, 0x158+var_118($sp)
                lw      $a0, 0x158+var_50($sp)
                la      $t9, EVP_DigestSignInit
                lw      $a2, 0x158+var_44($sp)
                move    $a1, $zero
                move    $a3, $zero
                sw      $v0, 0x158+var_148($sp)
                jalr    $t9 ; EVP_DigestSignInit
                move    $s0, $v0
                lw      $gp, 0x158+var_118($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s0
                b       loc_26454
                lw      $gp, 0x158+var_118($sp)
 # ---------------------------------------------------------------------------

loc_26730:                               # CODE XREF: tls1_change_cipher_state+484↑j
                                         # tls1_change_cipher_state+508↑j
                lw      $ra, 0x158+var_4($sp)
                lw      $fp, 0x158+var_8($sp)
                lw      $s7, 0x158+var_C($sp)
                lw      $s6, 0x158+var_10($sp)
                lw      $s5, 0x158+var_14($sp)
                lw      $s4, 0x158+var_18($sp)
                lw      $s3, 0x158+var_1C($sp)
                lw      $s2, 0x158+var_20($sp)
                lw      $s1, 0x158+var_24($sp)
                lw      $s0, 0x158+var_28($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x158
 # ---------------------------------------------------------------------------

loc_26764:                               # CODE XREF: tls1_change_cipher_state:loc_26138↑j
                b       loc_26164
                lw      $s0, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_2676C:                               # CODE XREF: tls1_change_cipher_state+560↑j
                lw      $t9, 0x158+arg_4($sp)
                lw      $a0, 0x158+var_40($sp)
                andi    $v0, $t9, 2
                la      $t9, EVP_CipherInit_ex
                move    $a3, $s4
                move    $a1, $s5
                move    $a2, $zero
                sw      $v0, 0x158+var_144($sp)
                jalr    $t9 ; EVP_CipherInit_ex
                sw      $zero, 0x158+var_148($sp)
                lw      $gp, 0x158+var_118($sp)
                lw      $a0, 0x158+var_40($sp)
                la      $t9, EVP_CIPHER_CTX_ctrl
                move    $a2, $s6
                move    $a3, $s7
                jalr    $t9 ; EVP_CIPHER_CTX_ctrl
                li      $a1, 0x12
                b       loc_265FC
                lw      $gp, 0x158+var_118($sp)
 # ---------------------------------------------------------------------------

loc_267B8:                               # CODE XREF: tls1_change_cipher_state+90↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aT1EncC - 0x40000)  # "t1_enc.c"
                li      $a0, 0x8C
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x179
                lw      $gp, 0x158+var_118($sp)
                beqz    $v0, loc_26864
                sw      $v0, 0x80($s2)
                la      $t9, EVP_CIPHER_CTX_init
                jalr    $t9 ; EVP_CIPHER_CTX_init
                move    $a0, $v0
                lw      $gp, 0x158+var_118($sp)
                lw      $v0, 0x80($s2)
                b       loc_26100
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_267F8:                               # CODE XREF: tls1_change_cipher_state+28C↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aT1EncC - 0x40000)  # "t1_enc.c"
                li      $a0, 0x8C
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x1A3
                lw      $gp, 0x158+var_118($sp)
                beqz    $v0, loc_26864
                sw      $v0, 0x8C($s2)
                la      $t9, EVP_CIPHER_CTX_init
                jalr    $t9 ; EVP_CIPHER_CTX_init
                move    $a0, $v0
                lw      $gp, 0x158+var_118($sp)
                lw      $v0, 0x8C($s2)
                b       loc_262FC
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_26838:                               # CODE XREF: tls1_change_cipher_state+F4↑j
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aT1EncC - 0x40000)  # "t1_enc.c"
                li      $a0, 0x4540
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x190
                lw      $gp, 0x158+var_118($sp)
                sw      $v0, 0x120($s0)
                lw      $s0, 0x58($s2)
                lw      $v0, 0x120($s0)
                bnez    $v0, loc_26164
                nop

loc_26864:                               # CODE XREF: tls1_change_cipher_state+76C↑j
                                         # tls1_change_cipher_state+7AC↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xD1
                li      $a2, 0x41  # 'A'
                b       loc_26294
                sw      $zero, 0x158+var_148($sp)
 # ---------------------------------------------------------------------------

loc_2687C:                               # CODE XREF: tls1_change_cipher_state+48C↑j
                lw      $s4, 0x158+var_2C($sp)
                addiu   $s0, $sp, 0x158+var_110
                b       loc_265A4
                addiu   $s3, $sp, 0x158+var_F0
 # ---------------------------------------------------------------------------

loc_2688C:                               # CODE XREF: tls1_change_cipher_state+E4↑j
                                         # tls1_change_cipher_state+2E0↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xD1
                li      $a2, 0x8E
                b       loc_26294
                sw      $zero, 0x158+var_148($sp)
 # ---------------------------------------------------------------------------

loc_268A4:                               # CODE XREF: tls1_change_cipher_state+514↑j
                lw      $s4, 0x158+var_2C($sp)
                b       loc_265A4
                addu    $s7, $s0, $s6
 # End of function tls1_change_cipher_state


 # =============== S U B R O U T I N E =======================================


                .globl DTLSv1_method
DTLSv1_method:                           # CODE XREF: sub_268C8+24↓j
                                         # DATA XREF: LOAD:00002C18↑o ...
                la      $gp, (off_5A360+0x7FF0 - DTLSv1_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (off_59194 - 0x60000)
 # End of function DTLSv1_method


 # =============== S U B R O U T I N E =======================================


sub_268C8:                               # DATA XREF: .data.rel.ro:000591F0↓o
                la      $gp, (off_5A360+0x7FF0 - sub_268C8)
                addu    $gp, $t9
                li      $v0, 0xFEFF
                beq     $a0, $v0, loc_268E8
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_268E8:                               # CODE XREF: sub_268C8+10↑j
                la      $t9, DTLSv1_method
                jr      $t9 ; DTLSv1_method
                nop
 # End of function sub_268C8


 # =============== S U B R O U T I N E =======================================


                .globl DTLSv1_server_method
DTLSv1_server_method:                    # CODE XREF: sub_2690C+24↓j
                                         # DATA XREF: LOAD:000037E8↑o ...
                la      $gp, (off_5A360+0x7FF0 - DTLSv1_server_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (off_59208 - 0x60000)
 # End of function DTLSv1_server_method


 # =============== S U B R O U T I N E =======================================


sub_2690C:                               # DATA XREF: .data.rel.ro:00059264↓o
                la      $gp, (off_5A360+0x7FF0 - sub_2690C)
                addu    $gp, $t9
                li      $v0, 0xFEFF
                beq     $a0, $v0, loc_2692C
                move    $v0, $zero
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_2692C:                               # CODE XREF: sub_2690C+10↑j
                la      $t9, DTLSv1_server_method
                jr      $t9 ; DTLSv1_server_method
                nop
 # End of function sub_2690C


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_newsession_ticket
dtls1_send_newsession_ticket:            # CODE XREF: dtls1_accept+608↓p
                                         # DATA XREF: LOAD:00002688↑o ...

var_1C0         = -0x1C0
var_1BC         = -0x1BC
var_1B8         = -0x1B8
var_1B0         = -0x1B0
var_1AC         = -0x1AC
var_1A8         = -0x1A8
var_1A4         = -0x1A4
var_194         = -0x194
var_190         = -0x190
var_18C         = -0x18C
var_188         = -0x188
var_184         = -0x184
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_newsession_ticket)
                addu    $gp, $t9
                addiu   $sp, -0x1D0
                sw      $ra, 0x1D0+var_4($sp)
                sw      $fp, 0x1D0+var_8($sp)
                sw      $s7, 0x1D0+var_C($sp)
                sw      $s6, 0x1D0+var_10($sp)
                sw      $s5, 0x1D0+var_14($sp)
                sw      $s4, 0x1D0+var_18($sp)
                sw      $s3, 0x1D0+var_1C($sp)
                sw      $s2, 0x1D0+var_20($sp)
                sw      $s1, 0x1D0+var_24($sp)
                sw      $s0, 0x1D0+var_28($sp)
                sw      $gp, 0x1D0+var_1B8($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x21F0
                beq     $v1, $v0, loc_269C8
                move    $s3, $a0

loc_26984:                               # CODE XREF: dtls1_send_newsession_ticket+3A0↓j
                la      $t9, dtls1_do_write
                move    $a0, $s3
                jalr    $t9 ; dtls1_do_write
                li      $a1, 0x16
                lw      $gp, 0x1D0+var_1B8($sp)

loc_26998:                               # CODE XREF: dtls1_send_newsession_ticket:loc_269F0↓j
                                         # dtls1_send_newsession_ticket+458↓j
                lw      $ra, 0x1D0+var_4($sp)
                lw      $fp, 0x1D0+var_8($sp)
                lw      $s7, 0x1D0+var_C($sp)
                lw      $s6, 0x1D0+var_10($sp)
                lw      $s5, 0x1D0+var_14($sp)
                lw      $s4, 0x1D0+var_18($sp)
                lw      $s3, 0x1D0+var_1C($sp)
                lw      $s2, 0x1D0+var_20($sp)
                lw      $s1, 0x1D0+var_24($sp)
                lw      $s0, 0x1D0+var_28($sp)
                jr      $ra
                addiu   $sp, 0x1D0
 # ---------------------------------------------------------------------------

loc_269C8:                               # CODE XREF: dtls1_send_newsession_ticket+44↑j
                la      $t9, i2d_SSL_SESSION
                lw      $a0, 0xC0($a0)
                move    $a1, $zero
                jalr    $t9 ; i2d_SSL_SESSION
                lw      $s0, 0x158($s3)
                move    $s4, $v0
                li      $v0, 0xFF00
                slt     $v0, $s4
                beqz    $v0, loc_269F8
                lw      $gp, 0x1D0+var_1B8($sp)

loc_269F0:                               # CODE XREF: dtls1_send_newsession_ticket+D0↓j
                                         # dtls1_send_newsession_ticket+F4↓j
                b       loc_26998
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_269F8:                               # CODE XREF: dtls1_send_newsession_ticket+B0↑j
                la      $t9, BUF_MEM_grow
                lw      $a0, 0x3C($s3)
                jalr    $t9 ; BUF_MEM_grow
                addiu   $a1, $s4, 0x92
                beqz    $v0, loc_269F0
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aD1SrvrC - 0x40000)  # "d1_srvr.c"
                move    $a0, $s4
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x661
                move    $s6, $v0
                beqz    $v0, loc_269F0
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $t9, i2d_SSL_SESSION
                lw      $a0, 0xC0($s3)
                addiu   $a1, $sp, 0x1D0+var_1B0
                jalr    $t9 ; i2d_SSL_SESSION
                sw      $v0, 0x1D0+var_1B0($sp)
                lw      $v1, 0x3C($s3)
                lw      $gp, 0x1D0+var_1B8($sp)
                lw      $v0, 4($v1)
                addiu   $v0, 0xC
                la      $t9, EVP_CIPHER_CTX_init
                addiu   $s5, $sp, 0x1D0+var_184
                sw      $v0, 0x1D0+var_1B0($sp)
                jalr    $t9 ; EVP_CIPHER_CTX_init
                move    $a0, $s5
                lw      $gp, 0x1D0+var_1B8($sp)
                addiu   $fp, $sp, 0xD8
                la      $t9, HMAC_CTX_init
                jalr    $t9 ; HMAC_CTX_init
                move    $a0, $fp
                lw      $t9, 0x138($s0)
                beqz    $t9, loc_26CE0
                lw      $gp, 0x1D0+var_1B8($sp)
                li      $v0, 1
                addiu   $s7, $sp, 0x1D0+var_1A4
                sw      $v0, 0x1D0+var_1BC($sp)
                sw      $fp, 0x1D0+var_1C0($sp)
                move    $a0, $s3
                addiu   $a1, $sp, 0x1D0+var_194
                move    $a2, $s7
                jalr    $t9
                move    $a3, $s5
                bltz    $v0, loc_26D80
                lw      $gp, 0x1D0+var_1B8($sp)

loc_26AB8:                               # CODE XREF: dtls1_send_newsession_ticket+440↓j
                lw      $v0, 0xC0($s3)
                lw      $a2, 0x1D0+var_1B0($sp)
                lb      $v1, 0xD7($v0)
                addiu   $s0, $a2, 6
                sb      $v1, 0($a2)
                lw      $v0, 0xC0($s3)
                la      $t9, EVP_CIPHER_CTX_iv_length
                lh      $v1, 0xD6($v0)
                move    $a0, $s5
                sb      $v1, 1($a2)
                lw      $a1, 0xC0($s3)
                addiu   $s2, $sp, 0x1D0+var_1AC
                lw      $v0, 0xD4($a1)
                sra     $v0, 8
                sb      $v0, 2($a2)
                lw      $v1, 0xC0($s3)
                lw      $v0, 0xD4($v1)
                sb      $v0, 3($a2)
                lw      $v1, 0x1D0+var_194($sp)
                sw      $s0, 0x1D0+var_1B0($sp)
                lw      $a3, 0x1D0+var_188($sp)
                lw      $a1, 0x1D0+var_18C($sp)
                lw      $v0, 0x1D0+var_190($sp)
                usw     $v1, 0($s0)
                usw     $v0, 4($s0)
                usw     $a1, 8($s0)
                usw     $a3, 0xC($s0)
                lw      $s1, 0x1D0+var_1B0($sp)
                addiu   $s1, 0x10
                jalr    $t9 ; EVP_CIPHER_CTX_iv_length
                sw      $s1, 0x1D0+var_1B0($sp)
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $t9, memcpy
                move    $a1, $s7
                move    $a2, $v0
                jalr    $t9 ; memcpy
                move    $a0, $s1
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $t9, EVP_CIPHER_CTX_iv_length
                jalr    $t9 ; EVP_CIPHER_CTX_iv_length
                move    $a0, $s5
                lw      $v1, 0x1D0+var_1B0($sp)
                lw      $gp, 0x1D0+var_1B8($sp)
                addu    $v0, $v1
                la      $t9, EVP_EncryptUpdate
                move    $a3, $s6
                move    $a1, $v0
                move    $a0, $s5
                move    $a2, $s2
                sw      $s4, 0x1D0+var_1C0($sp)
                jalr    $t9 ; EVP_EncryptUpdate
                sw      $v0, 0x1D0+var_1B0($sp)
                lw      $gp, 0x1D0+var_1B8($sp)
                lw      $v1, 0x1D0+var_1B0($sp)
                lw      $v0, 0x1D0+var_1AC($sp)
                addu    $v1, $v0
                la      $t9, EVP_EncryptFinal
                move    $a1, $v1
                move    $a2, $s2
                sw      $v1, 0x1D0+var_1B0($sp)
                jalr    $t9 ; EVP_EncryptFinal
                move    $a0, $s5
                lw      $v1, 0x1D0+var_1AC($sp)
                lw      $gp, 0x1D0+var_1B8($sp)
                lw      $v0, 0x1D0+var_1B0($sp)
                addu    $v0, $v1
                la      $t9, EVP_CIPHER_CTX_cleanup
                move    $a0, $s5
                jalr    $t9 ; EVP_CIPHER_CTX_cleanup
                sw      $v0, 0x1D0+var_1B0($sp)
                lw      $gp, 0x1D0+var_1B8($sp)
                lw      $a2, 0x1D0+var_1B0($sp)
                la      $t9, HMAC_Update
                move    $a1, $s0
                subu    $a2, $s0
                jalr    $t9 ; HMAC_Update
                move    $a0, $fp
                lw      $gp, 0x1D0+var_1B8($sp)
                lw      $a1, 0x1D0+var_1B0($sp)
                la      $t9, HMAC_Final
                addiu   $a2, $sp, 0x1D0+var_1A8
                jalr    $t9 ; HMAC_Final
                move    $a0, $fp
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $t9, HMAC_CTX_cleanup
                jalr    $t9 ; HMAC_CTX_cleanup
                move    $a0, $fp
                lw      $v0, 0x3C($s3)
                lw      $v1, 0x1D0+var_1B0($sp)
                lw      $a1, 4($v0)
                lw      $v0, 0x1D0+var_1A8($sp)
                lw      $gp, 0x1D0+var_1B8($sp)
                addu    $v1, $v0
                subu    $v1, $a1
                addiu   $a0, $v1, -0x12
                addiu   $v0, $a1, 0x10
                sra     $a0, 8
                sw      $v1, 0x1D0+var_1AC($sp)
                sw      $v0, 0x1D0+var_1B0($sp)
                sb      $a0, 0x10($a1)
                lw      $v0, 0x1D0+var_1AC($sp)
                lw      $v1, 0x1D0+var_1B0($sp)
                addiu   $v0, -0x12
                sb      $v0, 1($v1)
                lw      $v0, 0x1D0+var_1B0($sp)
                lw      $v1, 0x1D0+var_1AC($sp)
                addiu   $v0, 2
                sw      $v0, 0x1D0+var_1B0($sp)
                la      $t9, CRYPTO_free
                li      $v0, 0x21F1
                sw      $v1, 0x44($s3)
                sw      $v0, 0x34($s3)
                move    $a0, $s6
                jalr    $t9 ; CRYPTO_free
                sw      $zero, 0x48($s3)
                lw      $v1, 0x3C($s3)
                lw      $v0, 0x44($s3)
                lw      $gp, 0x1D0+var_1B8($sp)
                lw      $a1, 4($v1)
                addiu   $v0, -0xC
                la      $t9, dtls1_set_message_header
                move    $a3, $v0
                move    $a0, $s3
                li      $a2, 4
                sw      $zero, 0x1D0+var_1C0($sp)
                jalr    $t9 ; dtls1_set_message_header
                sw      $v0, 0x1D0+var_1BC($sp)
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $t9, dtls1_buffer_message
                move    $a0, $s3
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                b       loc_26984
                lw      $gp, 0x1D0+var_1B8($sp)
 # ---------------------------------------------------------------------------

loc_26CE0:                               # CODE XREF: dtls1_send_newsession_ticket+14C↑j
                la      $t9, RAND_pseudo_bytes
                addiu   $s7, $sp, 0x1D0+var_1A4
                move    $a0, $s7
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $t9, EVP_aes_128_cbc
                jalr    $t9 ; EVP_aes_128_cbc
                nop
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $t9, EVP_EncryptInit_ex
                move    $a1, $v0
                move    $a0, $s5
                move    $a2, $zero
                addiu   $a3, $s0, 0x128
                jalr    $t9 ; EVP_EncryptInit_ex
                sw      $s7, 0x1D0+var_1C0($sp)
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $t9, EVP_sha256
                jalr    $t9 ; EVP_sha256
                nop
                lw      $gp, 0x1D0+var_1B8($sp)
                la      $t9, HMAC_Init_ex
                move    $a0, $fp
                addiu   $a1, $s0, 0x118
                li      $a2, 0x10
                sw      $zero, 0x1D0+var_1C0($sp)
                jalr    $t9 ; HMAC_Init_ex
                move    $a3, $v0
                addiu   $v1, $s0, 0x108
                lw      $a1, 0x108($s0)
                lw      $a2, 0xC($v1)
                lw      $v0, 4($v1)
                lw      $a0, 8($v1)
                lw      $gp, 0x1D0+var_1B8($sp)
                sw      $a1, 0x1D0+var_194($sp)
                sw      $v0, 0x1D0+var_190($sp)
                sw      $a0, 0x1D0+var_18C($sp)
                b       loc_26AB8
                sw      $a2, 0x1D0+var_188($sp)
 # ---------------------------------------------------------------------------

loc_26D80:                               # CODE XREF: dtls1_send_newsession_ticket+178↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s6
                lw      $gp, 0x1D0+var_1B8($sp)
                b       loc_26998
                li      $v0, 0xFFFFFFFF
 # End of function dtls1_send_newsession_ticket


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_server_done
dtls1_send_server_done:                  # CODE XREF: dtls1_accept+124↓p
                                         # DATA XREF: LOAD:000024C8↑o ...

var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_server_done)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2170
                beq     $v1, $v0, loc_26DE0
                move    $s0, $a0
                la      $t9, dtls1_do_write
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_26DE0:                               # CODE XREF: dtls1_send_server_done+24↑j
                lw      $v0, 0x3C($a0)
                la      $t9, dtls1_set_message_header
                lw      $a1, 4($v0)
                li      $a2, 0xE
                sw      $zero, 0x28+var_18($sp)
                sw      $zero, 0x28+var_14($sp)
                jalr    $t9 ; dtls1_set_message_header
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                li      $v0, 0x2171
                la      $t9, dtls1_buffer_message
                li      $v1, 0xC
                move    $a0, $s0
                sw      $v0, 0x34($s0)
                sw      $v1, 0x44($s0)
                sw      $zero, 0x48($s0)
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                lw      $gp, 0x28+var_10($sp)
                la      $t9, dtls1_do_write
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x28
 # End of function dtls1_send_server_done


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_hello_request
dtls1_send_hello_request:                # CODE XREF: dtls1_accept+324↓p
                                         # DATA XREF: LOAD:000026B8↑o ...

var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_hello_request)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2120
                beq     $v1, $v0, loc_26E90
                move    $s0, $a0
                la      $t9, dtls1_do_write
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_26E90:                               # CODE XREF: dtls1_send_hello_request+24↑j
                lw      $v0, 0x3C($a0)
                la      $t9, dtls1_set_message_header
                lw      $a1, 4($v0)
                move    $a2, $zero
                sw      $zero, 0x28+var_18($sp)
                sw      $zero, 0x28+var_14($sp)
                jalr    $t9 ; dtls1_set_message_header
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                li      $v1, 0x2121
                li      $v0, 0xC
                la      $t9, dtls1_do_write
                sw      $v1, 0x34($s0)
                sw      $v0, 0x44($s0)
                sw      $zero, 0x48($s0)
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x28
 # End of function dtls1_send_hello_request


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_server_certificate
dtls1_send_server_certificate:           # CODE XREF: dtls1_accept+B34↓p
                                         # DATA XREF: LOAD:00002968↑o ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_server_certificate)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2140
                beq     $v1, $v0, loc_26F2C
                move    $s0, $a0
                la      $t9, dtls1_do_write
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_26F2C:                               # CODE XREF: dtls1_send_server_certificate+24↑j
                la      $t9, ssl_get_server_send_cert
                jalr    $t9 ; ssl_get_server_send_cert
                nop
                move    $a1, $v0
                beqz    $v0, loc_26F94
                lw      $gp, 0x28+var_10($sp)

loc_26F44:                               # CODE XREF: dtls1_send_server_certificate+D0↓j
                la      $t9, dtls1_output_cert_chain
                jalr    $t9 ; dtls1_output_cert_chain
                move    $a0, $s0
                lw      $gp, 0x28+var_10($sp)
                li      $v1, 0x2141
                la      $t9, dtls1_buffer_message
                move    $a0, $s0
                sw      $v1, 0x34($s0)
                sw      $v0, 0x44($s0)
                sw      $zero, 0x48($s0)
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                lw      $gp, 0x28+var_10($sp)
                la      $t9, dtls1_do_write
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_26F94:                               # CODE XREF: dtls1_send_server_certificate+58↑j
                lw      $v0, 0x58($s0)
                lw      $a0, 0x344($v0)
                li      $v0, 0x10
                lw      $v1, 0xC($a0)
                bne     $v1, $v0, loc_26FBC
                la      $t9, ERR_put_error
                lw      $v1, 0x10($a0)
                li      $v0, 0x20  # ' '
                beq     $v1, $v0, loc_26F44
                nop

loc_26FBC:                               # CODE XREF: dtls1_send_server_certificate+C0↑j
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0x109
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function dtls1_send_server_certificate


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_certificate_request
dtls1_send_certificate_request:          # CODE XREF: dtls1_accept+C60↓p
                                         # DATA XREF: LOAD:00003E28↑o ...

var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_certificate_request)
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_4($sp)
                sw      $fp, 0x58+var_8($sp)
                sw      $s7, 0x58+var_C($sp)
                sw      $s6, 0x58+var_10($sp)
                sw      $s5, 0x58+var_14($sp)
                sw      $s4, 0x58+var_18($sp)
                sw      $s3, 0x58+var_1C($sp)
                sw      $s2, 0x58+var_20($sp)
                sw      $s1, 0x58+var_24($sp)
                sw      $s0, 0x58+var_28($sp)
                sw      $gp, 0x58+var_40($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2160
                beq     $v1, $v0, loc_2707C
                move    $s7, $a0

loc_27038:                               # CODE XREF: dtls1_send_certificate_request+2C0↓j
                la      $t9, dtls1_do_write
                move    $a0, $s7
                jalr    $t9 ; dtls1_do_write
                li      $a1, 0x16
                lw      $gp, 0x58+var_40($sp)
                lw      $ra, 0x58+var_4($sp)
                lw      $fp, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_2707C:                               # CODE XREF: dtls1_send_certificate_request+44↑j
                lw      $s6, 0x3C($a0)
                la      $t9, ssl3_get_req_cert_type
                lw      $s0, 4($s6)
                addiu   $v0, $s0, 0xD
                move    $a1, $v0
                jalr    $t9 ; ssl3_get_req_cert_type
                sw      $v0, 0x58+var_38($sp)
                lw      $gp, 0x58+var_40($sp)
                sb      $v0, 0xC($s0)
                lw      $v1, 0x58+var_38($sp)
                addu    $v1, $v0, $v1
                la      $t9, SSL_get_client_CA_list
                addiu   $v1, 2
                addiu   $s3, $v0, 3
                addiu   $v0, 1
                sw      $v1, 0x58+var_38($sp)
                move    $a0, $s7
                jalr    $t9 ; SSL_get_client_CA_list
                sw      $v0, 0x58+var_30($sp)
                move    $s4, $v0
                beqz    $v0, loc_27330
                lw      $gp, 0x58+var_40($sp)
                la      $t9, sk_num
                addiu   $v0, $sp, 0x58+var_38
                move    $a0, $s4
                jalr    $t9 ; sk_num
                sw      $v0, 0x58+var_2C($sp)
                move    $s5, $zero
                lw      $gp, 0x58+var_40($sp)
                slt     $v0, $s5, $v0
                move    $fp, $zero
                move    $a1, $s5
                move    $a0, $s4
                beqz    $v0, loc_271D8
                la      $t9, sk_value

loc_27108:                               # CODE XREF: dtls1_send_certificate_request+1E4↓j
                jalr    $t9 ; sk_value
                nop
                lw      $gp, 0x58+var_40($sp)
                la      $t9, i2d_X509_NAME
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; i2d_X509_NAME
                move    $s2, $v0
                lw      $gp, 0x58+var_40($sp)
                addiu   $a1, $s3, 0xE
                la      $t9, BUF_MEM_grow_clean
                addu    $a1, $v0
                move    $a0, $s6
                jalr    $t9 ; BUF_MEM_grow_clean
                move    $s1, $v0
                lw      $gp, 0x58+var_40($sp)
                sra     $a3, $s1, 8
                move    $a0, $s2
                lw      $a1, 0x58+var_2C($sp)
                beqz    $v0, loc_272DC
                la      $t9, i2d_X509_NAME
                lw      $v0, 4($s6)
                lw      $a2, 0xF8($s7)
                addiu   $v0, 0xC
                lui     $v1, 0x2000
                addu    $s0, $v0, $s3
                and     $a2, $v1
                bnez    $a2, loc_272B4
                sw      $s0, 0x58+var_38($sp)
                sb      $a3, 0($s0)
                lw      $v0, 0x58+var_38($sp)
                move    $a0, $s2
                sb      $s1, 1($v0)
                lw      $v0, 0x58+var_38($sp)
                lw      $a1, 0x58+var_2C($sp)
                addiu   $v0, 2
                jalr    $t9 ; i2d_X509_NAME
                sw      $v0, 0x58+var_38($sp)
                addiu   $v1, $s1, 2
                lw      $gp, 0x58+var_40($sp)
                addu    $fp, $v1
                addu    $s3, $v1
                addiu   $s5, 1

loc_271B4:                               # CODE XREF: dtls1_send_certificate_request+2E8↓j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s4
                lw      $gp, 0x58+var_40($sp)
                slt     $v0, $s5, $v0
                move    $a1, $s5
                move    $a0, $s4
                bnez    $v0, loc_27108
                la      $t9, sk_value

loc_271D8:                               # CODE XREF: dtls1_send_certificate_request+114↑j
                sra     $v0, $fp, 8
                andi    $v1, $v0, 0xFF
                andi    $a0, $fp, 0xFF

loc_271E4:                               # CODE XREF: dtls1_send_certificate_request+348↓j
                lw      $v0, 4($s6)
                lw      $a1, 0x58+var_30($sp)
                addiu   $v0, 0xC
                addu    $v0, $a1
                sw      $v0, 0x58+var_38($sp)
                sb      $v1, 0($v0)
                lw      $v0, 0x58+var_38($sp)
                sra     $a3, $s3, 16
                sb      $a0, 1($v0)
                lw      $a1, 4($s6)
                lw      $v0, 0x58+var_38($sp)
                addiu   $a2, $a1, 1
                addiu   $v0, 2
                sra     $a0, $s3, 8
                li      $v1, 0xD
                sw      $v0, 0x58+var_38($sp)
                sb      $a3, 1($a1)
                sb      $v1, 0($a1)
                sb      $a0, 1($a2)
                sb      $s3, 2($a2)
                lw      $v1, 0x5C($s7)
                la      $t9, dtls1_set_message_header
                lhu     $v0, 0x224($v1)
                addiu   $t0, $s3, 0xC
                srl     $v0, 8
                sb      $v0, 4($a1)
                lw      $v1, 0x5C($s7)
                move    $a3, $s3
                lhu     $v0, 0x224($v1)
                move    $a0, $s7
                sb      $v0, 5($a1)
                lw      $a2, 0x5C($s7)
                lw      $v1, 0x3C($s7)
                lhu     $v0, 0x224($a2)
                lw      $a1, 4($v1)
                addiu   $v0, 1
                sh      $v0, 0x224($a2)
                sw      $t0, 0x44($s7)
                sw      $zero, 0x48($s7)
                li      $a2, 0xD
                sw      $zero, 0x58+var_48($sp)
                jalr    $t9 ; dtls1_set_message_header
                sw      $s3, 0x58+var_44($sp)
                lw      $gp, 0x58+var_40($sp)
                la      $t9, dtls1_buffer_message
                move    $a0, $s7
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                lw      $gp, 0x58+var_40($sp)
                li      $v1, 0x2161
                b       loc_27038
                sw      $v1, 0x34($s7)
 # ---------------------------------------------------------------------------

loc_272B4:                               # CODE XREF: dtls1_send_certificate_request+188↑j
                jalr    $t9 ; i2d_X509_NAME
                addu    $fp, $s1
                lw      $gp, 0x58+var_40($sp)
                addiu   $v1, $s1, -2
                sra     $v0, $v1, 8
                addu    $s3, $s1
                addiu   $s5, 1
                sb      $v1, 1($s0)
                b       loc_271B4
                sb      $v0, 0($s0)
 # ---------------------------------------------------------------------------

loc_272DC:                               # CODE XREF: dtls1_send_certificate_request+168↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x58+var_48($sp)
                li      $a0, 0x14
                li      $a1, 0x104
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x58+var_40($sp)
                lw      $ra, 0x58+var_4($sp)
                lw      $fp, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_27330:                               # CODE XREF: dtls1_send_certificate_request+E0↑j
                move    $v1, $zero
                b       loc_271E4
                move    $a0, $zero
 # End of function dtls1_send_certificate_request


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_server_key_exchange
dtls1_send_server_key_exchange:          # CODE XREF: dtls1_accept+8DC↓p
                                         # DATA XREF: LOAD:000039A8↑o ...

var_A8          = -0xA8
var_A4          = -0xA4
var_A0          = -0xA0
var_98          = -0x98
var_94          = -0x94
var_90          = -0x90
var_8C          = -0x8C
var_88          = -0x88
var_84          = -0x84
var_58          = -0x58
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_server_key_exchange)
                addu    $gp, $t9
                addiu   $sp, -0xB8
                sw      $ra, 0xB8+var_4($sp)
                sw      $fp, 0xB8+var_8($sp)
                sw      $s7, 0xB8+var_C($sp)
                sw      $s6, 0xB8+var_10($sp)
                sw      $s5, 0xB8+var_14($sp)
                sw      $s4, 0xB8+var_18($sp)
                sw      $s3, 0xB8+var_1C($sp)
                sw      $s2, 0xB8+var_20($sp)
                sw      $s1, 0xB8+var_24($sp)
                sw      $s0, 0xB8+var_28($sp)
                sw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_MD_CTX_init
                addiu   $fp, $sp, 0x48  # 'H'
                move    $s4, $a0
                jalr    $t9 ; EVP_MD_CTX_init
                move    $a0, $fp
                lw      $v1, 0x34($s4)
                li      $v0, 0x2150
                beq     $v1, $v0, loc_273F8
                lw      $gp, 0xB8+var_A0($sp)

loc_2739C:                               # CODE XREF: dtls1_send_server_key_exchange+4C4↓j
                la      $t9, EVP_MD_CTX_cleanup
                li      $v0, 0x2151
                move    $a0, $fp
                jalr    $t9 ; EVP_MD_CTX_cleanup
                sw      $v0, 0x34($s4)
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, dtls1_do_write
                move    $a0, $s4
                jalr    $t9 ; dtls1_do_write
                li      $a1, 0x16
                lw      $gp, 0xB8+var_A0($sp)
                lw      $ra, 0xB8+var_4($sp)
                lw      $fp, 0xB8+var_8($sp)
                lw      $s7, 0xB8+var_C($sp)
                lw      $s6, 0xB8+var_10($sp)
                lw      $s5, 0xB8+var_14($sp)
                lw      $s4, 0xB8+var_18($sp)
                lw      $s3, 0xB8+var_1C($sp)
                lw      $s2, 0xB8+var_20($sp)
                lw      $s1, 0xB8+var_24($sp)
                lw      $s0, 0xB8+var_28($sp)
                jr      $ra
                addiu   $sp, 0xB8
 # ---------------------------------------------------------------------------

loc_273F8:                               # CODE XREF: dtls1_send_server_key_exchange+58↑j
                lw      $a1, 0x58($s4)
                lw      $s1, 0x98($s4)
                lw      $v1, 0x344($a1)
                lw      $v0, 0xC($v1)
                andi    $v0, 1
                beqz    $v0, loc_27990
                lw      $s3, 0x3C($s4)
                lw      $s0, 0x18($s1)
                beqz    $s0, loc_2782C
                nop

loc_27420:                               # CODE XREF: dtls1_send_server_key_exchange+538↓j
                sw      $zero, 0xB8+var_84($sp)
                sw      $zero, 0xB8+var_88($sp)
                lw      $s2, 0x10($s0)
                li      $v0, 1
                sw      $s2, 0xB8+var_90($sp)
                lw      $v1, 0x14($s0)
                sw      $v0, 0x368($a1)
                sw      $v1, 0xB8+var_8C($sp)
                beqz    $s2, loc_27960
                sw      $zero, 0xB8+var_94($sp)
                move    $a0, $s2
                move    $s5, $zero
                move    $s0, $zero
                addiu   $s1, $sp, 0xB8+var_98

loc_27458:                               # CODE XREF: dtls1_send_server_key_exchange+170↓j
                la      $t9, BN_num_bits
                jalr    $t9 ; BN_num_bits
                nop
                addiu   $a0, $v0, 7
                lw      $a1, 0xB8+var_94($sp)
                addiu   $v0, 0xE
                slti    $v1, $a0, 0
                movn    $a0, $v0, $v1
                addiu   $a2, $a1, 1
                addu    $v0, $s0, $s1
                sra     $a0, 3
                sll     $a1, 2
                lw      $gp, 0xB8+var_A0($sp)
                addu    $a1, $s1
                sw      $a0, 0x18($v0)
                sll     $s0, $a2, 2
                lw      $v0, 0x18($a1)
                addu    $v1, $s0, $s1
                lw      $a0, 8($v1)
                addiu   $v0, 2
                addu    $s5, $v0
                bnez    $a0, loc_27458
                sw      $a2, 0xB8+var_94($sp)
                lw      $a1, 0x58($s4)

loc_274B8:                               # CODE XREF: dtls1_send_server_key_exchange:loc_27960↓j
                lw      $a1, 0x344($a1)
                lw      $v0, 0x10($a1)
                andi    $v0, 4
                bnez    $v0, loc_274DC
                move    $s7, $zero
                lw      $v0, 0xC($a1)
                andi    $v0, 0x100
                beqz    $v0, loc_2762C
                la      $t9, ssl_get_sign_pkey

loc_274DC:                               # CODE XREF: dtls1_send_server_key_exchange+188↑j
                move    $v0, $zero

loc_274E0:                               # CODE XREF: dtls1_send_server_key_exchange+314↓j
                la      $t9, BUF_MEM_grow_clean
                addiu   $s6, $s5, 0xC
                move    $a0, $s3
                jalr    $t9 ; BUF_MEM_grow_clean
                addu    $a1, $v0, $s6
                beqz    $v0, loc_27808
                lw      $gp, 0xB8+var_A0($sp)
                lw      $v0, 0x3C($s4)
                sw      $zero, 0xB8+var_94($sp)
                lw      $v0, 4($v0)
                sw      $v0, 0xB8+var_30($sp)
                addiu   $v0, 0xC
                beqz    $s2, loc_27970
                sw      $v0, 0xB8+var_2C($sp)
                move    $s3, $v0
                addiu   $s1, $sp, 0xB8+var_98
                move    $a3, $zero

loc_27524:                               # CODE XREF: dtls1_send_server_key_exchange+254↓j
                addu    $v1, $a3, $s1
                lw      $v0, 0x18($v1)
                la      $t9, BN_bn2bin
                sra     $v0, 8
                sb      $v0, 0($s3)
                lw      $v0, 0xB8+var_94($sp)
                addiu   $s0, $s3, 2
                sll     $v0, 2
                addu    $v0, $s1
                lw      $v1, 0x18($v0)
                move    $a1, $s0
                sb      $v1, 1($s3)
                lw      $v0, 0xB8+var_94($sp)
                sll     $v0, 2
                addu    $v0, $s1
                jalr    $t9 ; BN_bn2bin
                lw      $a0, 8($v0)
                lw      $v1, 0xB8+var_94($sp)
                lw      $gp, 0xB8+var_A0($sp)
                addiu   $a2, $v1, 1
                sll     $a3, $a2, 2
                sll     $v1, 2
                addu    $v1, $s1
                addu    $v0, $a3, $s1
                lw      $a0, 0x18($v1)
                lw      $a1, 8($v0)
                addu    $s3, $s0, $a0
                bnez    $a1, loc_27524
                sw      $a2, 0xB8+var_94($sp)

loc_27598:                               # CODE XREF: dtls1_send_server_key_exchange:loc_27970↓j
                beqz    $s7, loc_277C4
                li      $v0, 6
                lw      $v1, 0($s7)
                beq     $v1, $v0, loc_27658
                li      $v0, 0x74  # 't'
                beq     $v1, $v0, loc_2787C
                la      $t9, ERR_put_error
                sw      $zero, 0xB8+var_A8($sp)
                li      $a0, 0x14
                li      $a1, 0x10B
                li      $a2, 0xFB

loc_275C4:                               # CODE XREF: dtls1_send_server_key_exchange+64C↓j
                                         # dtls1_send_server_key_exchange+664↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB8+var_A0($sp)
                li      $a2, 0x28  # '('

loc_275D4:                               # CODE XREF: dtls1_send_server_key_exchange:loc_27968↓j
                la      $t9, ssl3_send_alert
                move    $a0, $s4
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0xB8+var_A0($sp)

loc_275E8:                               # CODE XREF: dtls1_send_server_key_exchange+4E8↓j
                                         # dtls1_send_server_key_exchange+61C↓j ...
                la      $t9, EVP_MD_CTX_cleanup
                jalr    $t9 ; EVP_MD_CTX_cleanup
                move    $a0, $fp
                lw      $gp, 0xB8+var_A0($sp)
                lw      $ra, 0xB8+var_4($sp)
                lw      $fp, 0xB8+var_8($sp)
                lw      $s7, 0xB8+var_C($sp)
                lw      $s6, 0xB8+var_10($sp)
                lw      $s5, 0xB8+var_14($sp)
                lw      $s4, 0xB8+var_18($sp)
                lw      $s3, 0xB8+var_1C($sp)
                lw      $s2, 0xB8+var_20($sp)
                lw      $s1, 0xB8+var_24($sp)
                lw      $s0, 0xB8+var_28($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0xB8
 # ---------------------------------------------------------------------------

loc_2762C:                               # CODE XREF: dtls1_send_server_key_exchange+198↑j
                move    $a0, $s4
                jalr    $t9 ; ssl_get_sign_pkey
                move    $a2, $zero
                move    $s7, $v0
                beqz    $v0, loc_27968
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_PKEY_size
                jalr    $t9 ; EVP_PKEY_size
                move    $a0, $v0
                b       loc_274E0
                lw      $gp, 0xB8+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_27658:                               # CODE XREF: dtls1_send_server_key_exchange+268↑j
                lw      $v0, 0xDC($s4)
                la      $t9, EVP_DigestInit_ex
                lw      $a1, 0x8C($v0)
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0xB8+var_2C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s5
                lw      $gp, 0xB8+var_A0($sp)
                addiu   $s0, $sp, 0xB8+var_58
                la      $t9, EVP_DigestFinal_ex
                addiu   $s1, $sp, 0xB8+var_94
                move    $a0, $fp
                move    $a1, $s0
                jalr    $t9 ; EVP_DigestFinal_ex
                move    $a2, $s1
                lw      $v1, 0xDC($s4)
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x90($v1)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $fp
                move    $a2, $zero
                jalr    $t9 ; EVP_DigestInit_ex
                lw      $s2, 0xB8+var_94($sp)
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0xB8+var_2C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s5
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_DigestFinal_ex
                move    $a2, $s1
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestFinal_ex
                addu    $a1, $s0, $s2
                addiu   $v1, $sp, 0xB8+var_98
                lw      $gp, 0xB8+var_A0($sp)
                sw      $v1, 0xB8+var_A8($sp)
                lw      $v0, 0x14($s7)
                lw      $a2, 0xB8+var_94($sp)
                la      $t9, RSA_sign
                sw      $v0, 0xB8+var_A4($sp)
                addu    $a2, $s2, $a2
                move    $a1, $s0
                li      $a0, 0x72  # 'r'
                jalr    $t9 ; RSA_sign
                addiu   $a3, $s3, 2
                blez    $v0, loc_279C0
                lw      $gp, 0xB8+var_A0($sp)
                lw      $v0, 0xB8+var_98($sp)
                srl     $v0, 8
                sb      $v0, 0($s3)
                lw      $v1, 0xB8+var_98($sp)
                sb      $v1, 1($s3)
                lw      $v0, 0xB8+var_98($sp)
                addiu   $v0, 2
                addu    $s5, $v0, $s5
                addiu   $s6, $s5, 0xC

loc_277C4:                               # CODE XREF: dtls1_send_server_key_exchange:loc_27598↑j
                                         # dtls1_send_server_key_exchange+5F8↓j
                la      $t9, dtls1_set_message_header
                lw      $a1, 0xB8+var_30($sp)
                move    $a3, $s5
                move    $a0, $s4
                li      $a2, 0xC
                sw      $zero, 0xB8+var_A8($sp)
                jalr    $t9 ; dtls1_set_message_header
                sw      $s5, 0xB8+var_A4($sp)
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, dtls1_buffer_message
                sw      $s6, 0x44($s4)
                sw      $zero, 0x48($s4)
                move    $a0, $s4
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                b       loc_2739C
                lw      $gp, 0xB8+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_27808:                               # CODE XREF: dtls1_send_server_key_exchange+1B8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xB8+var_A8($sp)
                li      $a0, 0x14
                li      $a1, 0x10B
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_275E8
                lw      $gp, 0xB8+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_2782C:                               # CODE XREF: dtls1_send_server_key_exchange+DC↑j
                lw      $t9, 0x1C($s1)
                beqz    $t9, loc_279A8
                li      $v0, 0x400
                lw      $a1, 0x20($v1)
                andi    $v1, $a1, 8
                li      $a2, 0x200
                movz    $a2, $v0, $v1
                andi    $a1, 2
                jalr    $t9
                move    $a0, $s4
                move    $s0, $v0
                beqz    $v0, loc_27978
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, RSA_up_ref
                jalr    $t9 ; RSA_up_ref
                move    $a0, $v0
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x58($s4)
                b       loc_27420
                sw      $s0, 0x18($s1)
 # ---------------------------------------------------------------------------

loc_2787C:                               # CODE XREF: dtls1_send_server_key_exchange+270↑j
                la      $t9, EVP_dss1
                jalr    $t9 ; EVP_dss1
                nop
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_DigestInit_ex
                move    $a1, $v0
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xC0
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x58($s4)
                la      $t9, EVP_DigestUpdate
                addiu   $a1, 0xA0
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestUpdate
                li      $a2, 0x20  # ' '
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0xB8+var_2C($sp)
                la      $t9, EVP_DigestUpdate
                move    $a0, $fp
                jalr    $t9 ; EVP_DigestUpdate
                move    $a2, $s5
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, EVP_SignFinal
                move    $a3, $s7
                move    $a0, $fp
                addiu   $a1, $s3, 2
                jalr    $t9 ; EVP_SignFinal
                addiu   $a2, $sp, 0xB8+var_94
                beqz    $v0, loc_2793C
                lw      $gp, 0xB8+var_A0($sp)
                lw      $v0, 0xB8+var_94($sp)
                sra     $v0, 8
                sb      $v0, 0($s3)
                lw      $v1, 0xB8+var_94($sp)
                sb      $v1, 1($s3)
                lw      $v0, 0xB8+var_94($sp)
                addiu   $v0, 2
                addu    $s5, $v0
                b       loc_277C4
                addiu   $s6, $s5, 0xC
 # ---------------------------------------------------------------------------

loc_2793C:                               # CODE XREF: dtls1_send_server_key_exchange+5D0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xB8+var_A8($sp)
                li      $a0, 0x14
                li      $a1, 0x10B
                li      $a2, 0xA
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_275E8
                lw      $gp, 0xB8+var_A0($sp)
 # ---------------------------------------------------------------------------

loc_27960:                               # CODE XREF: dtls1_send_server_key_exchange+104↑j
                b       loc_274B8
                move    $s5, $zero
 # ---------------------------------------------------------------------------

loc_27968:                               # CODE XREF: dtls1_send_server_key_exchange+300↑j
                b       loc_275D4
                li      $a2, 0x32  # '2'
 # ---------------------------------------------------------------------------

loc_27970:                               # CODE XREF: dtls1_send_server_key_exchange+1D4↑j
                b       loc_27598
                move    $s3, $v0
 # ---------------------------------------------------------------------------

loc_27978:                               # CODE XREF: dtls1_send_server_key_exchange+51C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x10B
                li      $a2, 0x11A
                b       loc_275C4
                sw      $zero, 0xB8+var_A8($sp)
 # ---------------------------------------------------------------------------

loc_27990:                               # CODE XREF: dtls1_send_server_key_exchange+D0↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x10B
                li      $a2, 0xFA
                b       loc_275C4
                sw      $zero, 0xB8+var_A8($sp)
 # ---------------------------------------------------------------------------

loc_279A8:                               # CODE XREF: dtls1_send_server_key_exchange+4F4↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x10B
                li      $a2, 0xAC
                b       loc_275C4
                sw      $zero, 0xB8+var_A8($sp)
 # ---------------------------------------------------------------------------

loc_279C0:                               # CODE XREF: dtls1_send_server_key_exchange+45C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xB8+var_A8($sp)
                li      $a0, 0x14
                li      $a1, 0x10B
                li      $a2, 4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_275E8
                lw      $gp, 0xB8+var_A0($sp)
 # End of function dtls1_send_server_key_exchange


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_server_hello
dtls1_send_server_hello:                 # CODE XREF: dtls1_accept+7C4↓p
                                         # DATA XREF: LOAD:000024B8↑o ...

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_server_hello)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s4, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x2130
                beq     $v1, $v0, loc_27A4C
                move    $s1, $a0
                la      $t9, dtls1_do_write
                move    $a0, $s1
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_27A4C:                               # CODE XREF: dtls1_send_server_hello+34↑j
                la      $t9, time
                lw      $v0, 0x3C($a0)
                move    $a0, $zero
                lw      $s2, 4($v0)
                jalr    $t9 ; time
                lw      $s0, 0x58($s1)
                lw      $gp, 0x38+var_20($sp)
                srl     $v1, $v0, 24
                srl     $a0, $v0, 16
                srl     $a1, $v0, 8
                la      $t9, RAND_pseudo_bytes
                sb      $v1, 0xA0($s0)
                sb      $a0, 0xA1($s0)
                sb      $a1, 0xA2($s0)
                addiu   $a0, $s0, 0xA4
                li      $a1, 0x1C
                jalr    $t9 ; RAND_pseudo_bytes
                sb      $v0, 0xA3($s0)
                lw      $v1, 0($s1)
                lw      $gp, 0x38+var_20($sp)
                sra     $v1, 8
                sb      $v1, 0xC($s2)
                lw      $a0, 0($s1)
                addiu   $v0, $s2, 0xE
                sb      $a0, 0xD($s2)
                lw      $v1, 0x58($s1)
                lw      $a3, 0xA0($v1)
                addiu   $v1, 0xA0
                lw      $t3, 0x1C($v1)
                lw      $t1, 0x14($v1)
                lw      $t2, 0x18($v1)
                lw      $t0, 0x10($v1)
                lw      $a0, 4($v1)
                lw      $a1, 8($v1)
                lw      $a2, 0xC($v1)
                usw     $a3, 0($v0)
                usw     $a0, 4($v0)
                usw     $a1, 8($v0)
                usw     $a2, 0xC($v0)
                usw     $t0, 0x10($v0)
                usw     $t1, 0x14($v0)
                usw     $t2, 0x18($v0)
                usw     $t3, 0x1C($v0)
                lw      $v1, 0xDC($s1)
                lw      $v0, 0x20($v1)
                andi    $v0, 2
                beqz    $v0, loc_27C38
                addiu   $s4, $s2, 0xC
                lw      $v0, 0xC0($s1)
                lw      $s0, 0x44($v0)
                sltiu   $v0, $s0, 0x21  # '!'
                beqz    $v0, loc_27C54
                la      $t9, ERR_put_error

loc_27B40:                               # CODE XREF: dtls1_send_server_hello+264↓j
                sb      $s0, 0x2E($s2)
                lw      $a1, 0xC0($s1)
                la      $t9, memcpy
                addiu   $s3, $s2, 0x2F  # '/'
                move    $a0, $s3
                addiu   $a1, 0x48  # 'H'
                jalr    $t9 ; memcpy
                move    $a2, $s0
                lw      $v1, 0x58($s1)
                lw      $a0, 0x344($v1)
                beqz    $a0, loc_27C70
                lw      $gp, 0x38+var_20($sp)
                la      $t9, ssl3_put_cipher_by_char
                addu    $s0, $s3, $s0
                jalr    $t9 ; ssl3_put_cipher_by_char
                move    $a1, $s0
                lw      $v1, 0x58($s1)
                addu    $a0, $s0, $v0
                lw      $v0, 0x384($v1)
                beqz    $v0, loc_27C94
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0($v0)
                addiu   $a1, $a0, 1
                sb      $v0, 0($a0)

loc_27BA0:                               # CODE XREF: dtls1_send_server_hello+2B4↓j
                la      $t9, ssl_add_serverhello_tlsext
                move    $a0, $s1
                jalr    $t9 ; ssl_add_serverhello_tlsext
                addiu   $a2, $s2, 0x4000
                move    $s0, $v0
                beqz    $v0, loc_27C50
                lw      $gp, 0x38+var_20($sp)
                subu    $v0, $s4
                la      $t9, dtls1_set_message_header
                move    $a0, $s1
                move    $a1, $s2
                move    $a3, $v0
                sw      $zero, 0x38+var_28($sp)
                sw      $v0, 0x38+var_24($sp)
                jalr    $t9 ; dtls1_set_message_header
                li      $a2, 2
                lw      $gp, 0x38+var_20($sp)
                subu    $v1, $s0, $s2
                li      $v0, 0x2131
                la      $t9, dtls1_buffer_message
                move    $a0, $s1
                sw      $v0, 0x34($s1)
                sw      $v1, 0x44($s1)
                sw      $zero, 0x48($s1)
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                la      $t9, dtls1_do_write
                move    $a0, $s1
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_27C38:                               # CODE XREF: dtls1_send_server_hello+140↑j
                lw      $v0, 0xC0($s1)
                sw      $zero, 0x44($v0)
                lw      $s0, 0x44($v0)
                sltiu   $v0, $s0, 0x21  # '!'
                bnez    $v0, loc_27B40
                nop

loc_27C50:                               # CODE XREF: dtls1_send_server_hello+1D0↑j
                la      $t9, ERR_put_error

loc_27C54:                               # CODE XREF: dtls1_send_server_hello+154↑j
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x10A
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)

loc_27C70:                               # CODE XREF: dtls1_send_server_hello+184↑j
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_27C94:                               # CODE XREF: dtls1_send_server_hello+1A8↑j
                addiu   $a1, $a0, 1
                b       loc_27BA0
                sb      $zero, 0($a0)
 # End of function dtls1_send_server_hello


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_accept
dtls1_accept:                            # DATA XREF: LOAD:000022F8↑o
                                         # dtls1_accept+D78↓o ...

var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_accept)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_4($sp)
                sw      $s6, 0x48+var_8($sp)
                sw      $s5, 0x48+var_C($sp)
                sw      $s4, 0x48+var_10($sp)
                sw      $s3, 0x48+var_14($sp)
                sw      $s2, 0x48+var_18($sp)
                sw      $s1, 0x48+var_1C($sp)
                sw      $s0, 0x48+var_20($sp)
                sw      $gp, 0x48+var_30($sp)
                la      $t9, time
                move    $s2, $a0
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x48+var_30($sp)
                la      $t9, RAND_add
                sw      $v0, 0x48+var_28($sp)
                addiu   $a0, $sp, 0x48+var_28
                li      $a1, 4
                move    $a2, $zero
                jalr    $t9 ; RAND_add
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x48+var_30($sp)
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $s4, 0xD0($s2)
                lw      $gp, 0x48+var_30($sp)
                beqz    $s4, loc_2898C
                sw      $zero, 0($v0)

loc_27D34:                               # CODE XREF: dtls1_accept+CF0↓j
                lw      $v0, 0x1C($s2)
                lw      $v1, 0x5C($s2)
                la      $t9, SSL_state
                addiu   $v0, 1
                lw      $s6, 0x254($v1)
                move    $a0, $s2
                jalr    $t9 ; SSL_state
                sw      $v0, 0x1C($s2)
                andi    $v0, 0x3000
                beqz    $v0, loc_27EC0
                lw      $gp, 0x48+var_30($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x4000
                bnez    $v0, loc_27EC0
                lw      $gp, 0x48+var_30($sp)

loc_27D78:                               # CODE XREF: dtls1_accept+22C↓j
                lw      $v0, 0x5C($s2)
                lw      $v1, 0x98($s2)
                beqz    $v1, loc_28B1C
                sw      $s6, 0x254($v0)
                lw      $v0, 0x170($s2)
                bnez    $v0, loc_28414
                la      $t9, dtls1_stop_timer

loc_27D94:                               # CODE XREF: dtls1_accept+78C↓j
                lw      $s1, 0x34($s2)
                slti    $v0, $s1, 0x2172
                beqz    $v0, loc_27E14
                slti    $v0, $s1, 0x21D2
                slti    $v0, $s1, 0x2170

loc_27DA8:                               # CODE XREF: dtls1_accept+168↓j
                bnez    $v0, loc_27F98
                slti    $v0, $s1, 0x2122
                la      $t9, dtls1_start_timer
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_server_done
                jalr    $t9 ; dtls1_send_server_done
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x2180
                li      $v1, 0x2100
                sw      $v0, 0x348($a2)
                sw      $v1, 0x34($s2)
                sw      $zero, 0x44($s2)
                lw      $v0, 0x34C($a2)
                beqz    $v0, loc_28058
                move    $a1, $zero

loc_27DFC:                               # CODE XREF: dtls1_accept+3B0↓j
                                         # dtls1_accept:loc_28058↓j ...
                lw      $s0, 0x34($s2)

loc_27E00:                               # CODE XREF: dtls1_accept+3D8↓j
                move    $s1, $s0

loc_27E04:                               # CODE XREF: dtls1_accept+3FC↓j
                slti    $v0, $s1, 0x2172
                bnez    $v0, loc_27DA8
                slti    $v0, $s1, 0x2170
                slti    $v0, $s1, 0x21D2

loc_27E14:                               # CODE XREF: dtls1_accept+FC↑j
                beqz    $v0, loc_2800C
                slti    $v0, $s1, 0x2202
                slti    $v0, $s1, 0x21D0
                bnez    $v0, loc_280A4
                slti    $v0, $s1, 0x2192
                lw      $v0, 8($s2)
                lw      $v1, 0x58($s2)
                lw      $a0, 0x64($v0)
                lw      $a1, 0x344($v1)
                lw      $v0, 0xC0($s2)
                lw      $t9, 8($a0)
                sw      $a1, 0xAC($v0)
                jalr    $t9
                move    $a0, $s2
                beqz    $v0, loc_2892C
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_change_cipher_spec
                move    $a0, $s2
                li      $a1, 0x21D0
                jalr    $t9 ; dtls1_send_change_cipher_spec
                li      $a2, 0x21D1
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 8($s2)
                li      $v1, 0x21E0
                lw      $a0, 0x64($v0)
                sw      $v1, 0x34($s2)
                lw      $t9, 0x10($a0)
                sw      $zero, 0x44($s2)
                move    $a0, $s2
                jalr    $t9
                li      $a1, 0x22  # '"'
                beqz    $v0, loc_2892C
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_reset_seq_numbers
                li      $a1, 2
                jalr    $t9 ; dtls1_reset_seq_numbers
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                b       loc_2804C
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_27EC0:                               # CODE XREF: dtls1_accept+B8↑j
                                         # dtls1_accept+D0↑j
                la      $t9, SSL_clear
                jalr    $t9 ; SSL_clear
                move    $a0, $s2
                b       loc_27D78
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_27ED4:                               # CODE XREF: dtls1_accept+304↓j
                beq     $s1, $v0, loc_284F4
                slti    $v0, $s1, 0x2101
                beqz    $v0, loc_28660
                slti    $v0, $s1, 0x2110
                li      $v0, 0x2000
                beq     $s1, $v0, loc_281CC
                li      $v0, 0x2003
                beq     $s1, $v0, loc_281CC
                li      $v0, 3
                bne     $s1, $v0, loc_28158
                la      $t9, ERR_put_error
                la      $t9, ssl3_cleanup_key_block
                jalr    $t9 ; ssl3_cleanup_key_block
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                la      $t9, ssl_free_wbio_buffer
                jalr    $t9 ; ssl_free_wbio_buffer
                move    $a0, $s2
                lw      $v1, 0x178($s2)
                li      $v0, 2
                lw      $gp, 0x48+var_30($sp)
                beq     $v1, $v0, loc_289F4
                sw      $zero, 0x44($s2)

loc_27F30:                               # CODE XREF: dtls1_accept+D84↓j
                                         # dtls1_accept+DA0↓j
                lw      $v0, 0x5C($s2)
                li      $s0, 1
                sh      $zero, 0x226($v0)
                sh      $zero, 0x228($v0)
                sh      $zero, 0x224($v0)

loc_27F44:                               # CODE XREF: dtls1_accept+130↑j
                                         # dtls1_accept+1CC↑j ...
                lw      $v0, 0x1C($s2)
                addiu   $v0, -1
                beqz    $s4, loc_27F6C
                sw      $v0, 0x1C($s2)
                move    $a0, $s2
                li      $a1, 0x2002
                move    $t9, $s4
                jalr    $t9
                move    $a2, $s0
                lw      $gp, 0x48+var_30($sp)

loc_27F6C:                               # CODE XREF: dtls1_accept+2AC↑j
                                         # dtls1_accept+E18↓j
                move    $v0, $s0
                lw      $ra, 0x48+var_4($sp)
                lw      $s6, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_27F98:                               # CODE XREF: dtls1_accept:loc_27DA8↑j
                beqz    $v0, loc_2817C
                slti    $v0, $s1, 0x2142
                slti    $v0, $s1, 0x2120
                bnez    $v0, loc_27ED4
                li      $v0, 0x2100
                la      $t9, dtls1_start_timer
                move    $a0, $s2
                jalr    $t9 ; dtls1_start_timer
                sw      $zero, 0x30($s2)
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_hello_request
                jalr    $t9 ; dtls1_send_hello_request
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $a0, 0x58($s2)
                li      $v0, 0x2122
                li      $v1, 0x2100
                la      $t9, ssl3_init_finished_mac
                sw      $v0, 0x348($a0)
                sw      $v1, 0x34($s2)
                sw      $zero, 0x44($s2)

loc_27FF4:                               # CODE XREF: dtls1_accept+AE4↓j
                jalr    $t9 ; ssl3_init_finished_mac
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                b       loc_2804C
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_2800C:                               # CODE XREF: dtls1_accept:loc_27E14↑j
                beqz    $v0, loc_2813C
                li      $v0, 0x4000
                slti    $v0, $s1, 0x2200
                bnez    $v0, loc_28280
                slti    $v0, $s1, 0x21E0
                la      $t9, ssl3_send_cert_status
                jalr    $t9 ; ssl3_send_cert_status
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 0x2150
                lw      $a2, 0x58($s2)
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                sw      $zero, 0x44($s2)

loc_2804C:                               # CODE XREF: dtls1_accept+218↑j
                                         # dtls1_accept+364↑j ...
                lw      $v0, 0x34C($a2)
                bnez    $v0, loc_27DFC
                nop

loc_28058:                               # CODE XREF: dtls1_accept+154↑j
                bnez    $a1, loc_27DFC
                nop
                lw      $v0, 0xE0($s2)
                bnez    $v0, loc_283CC
                la      $t9, BIO_ctrl

loc_2806C:                               # CODE XREF: dtls1_accept+740↓j
                beqz    $s4, loc_27DFC
                nop
                lw      $s0, 0x34($s2)
                beq     $s0, $s1, loc_27E00
                move    $t9, $s4
                sw      $s1, 0x34($s2)
                move    $a0, $s2
                li      $a1, 0x2001
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x48+var_30($sp)
                move    $s1, $s0
                b       loc_27E04
                sw      $s0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_280A4:                               # CODE XREF: dtls1_accept+180↑j
                beqz    $v0, loc_282D4
                slti    $v0, $s1, 0x21A0
                slti    $v0, $s1, 0x2190
                bnez    $v0, loc_28498
                addiu   $v0, $s1, -0x2180
                la      $t9, ssl3_get_client_key_exchange
                jalr    $t9 ; ssl3_get_client_key_exchange
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                li      $a0, 0x21A0
                li      $v0, 2
                sw      $a0, 0x34($s2)
                beq     $s0, $v0, loc_28978
                sw      $zero, 0x44($s2)
                lw      $v0, 8($s2)
                lw      $a2, 0x58($s2)
                lw      $v1, 0x64($v0)
                sw      $a0, 0x34($s2)
                lw      $t9, 0x1C($v1)
                addiu   $a2, 0x1B4
                move    $a0, $s2
                li      $a1, 4
                jalr    $t9
                sw      $zero, 0x44($s2)
                lw      $v1, 8($s2)
                lw      $a2, 0x58($s2)
                lw      $v0, 0x64($v1)
                addiu   $a2, 0x1C4
                lw      $t9, 0x1C($v0)
                li      $a1, 0x40  # '@'
                jalr    $t9
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                b       loc_2804C
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_2813C:                               # CODE XREF: dtls1_accept:loc_2800C↑j
                beq     $s1, $v0, loc_281CC
                li      $v0, 0x6000
                beq     $s1, $v0, loc_281CC
                li      $v0, 0x3004
                beq     $s1, $v0, loc_281C8
                li      $v0, 1
                la      $t9, ERR_put_error

loc_28158:                               # CODE XREF: dtls1_accept+258↑j
                                         # dtls1_accept:loc_28280↓j ...
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0xF6
                li      $a2, 0xFF
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_27F44
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_2817C:                               # CODE XREF: dtls1_accept:loc_27F98↑j
                beqz    $v0, loc_28348
                slti    $v0, $s1, 0x2150
                slti    $v0, $s1, 0x2140
                bnez    $v0, loc_28434
                li      $v0, 0x2122
                lw      $a2, 0x58($s2)
                lw      $v1, 0x344($a2)
                lw      $v0, 0x10($v1)
                andi    $v0, 4
                bnez    $v0, loc_281B8
                li      $v0, 0x2150
                lw      $v0, 0xC($v1)
                andi    $v0, 0x100
                beqz    $v0, loc_287C0
                li      $v0, 0x2150

loc_281B8:                               # CODE XREF: dtls1_accept+500↑j
                li      $a1, 1
                sw      $v0, 0x34($s2)
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_281C8:                               # CODE XREF: dtls1_accept+4AC↑j
                sw      $v0, 0x178($s2)

loc_281CC:                               # CODE XREF: dtls1_accept+248↑j
                                         # dtls1_accept+250↑j ...
                li      $v0, 1
                beqz    $s4, loc_281F0
                sw      $v0, 0x24($s2)
                move    $a0, $s2
                li      $a1, 0x10
                move    $t9, $s4
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x48+var_30($sp)

loc_281F0:                               # CODE XREF: dtls1_accept+530↑j
                lw      $v0, 0($s2)
                li      $v1, 0xFE00
                andi    $v0, 0xFF00
                bne     $v0, $v1, loc_28A98
                li      $v0, 0x2000
                lw      $v1, 0x3C($s2)
                beqz    $v1, loc_28998
                sw      $v0, 4($s2)

loc_28210:                               # CODE XREF: dtls1_accept+D28↓j
                la      $t9, ssl3_setup_buffers
                jalr    $t9 ; ssl3_setup_buffers
                move    $a0, $s2
                beqz    $v0, loc_2892C
                lw      $gp, 0x48+var_30($sp)
                lw      $v1, 0x34($s2)
                li      $v0, 0x3004
                beq     $v1, $v0, loc_283F0
                sw      $zero, 0x44($s2)
                la      $t9, ssl_init_wbio_buffer
                move    $a0, $s2
                jalr    $t9 ; ssl_init_wbio_buffer
                li      $a1, 1
                beqz    $v0, loc_2892C
                lw      $gp, 0x48+var_30($sp)
                la      $t9, ssl3_init_finished_mac
                jalr    $t9 ; ssl3_init_finished_mac
                move    $a0, $s2
                lw      $a0, 0xDC($s2)
                li      $v0, 0x2110
                lw      $gp, 0x48+var_30($sp)
                sw      $v0, 0x34($s2)
                lw      $v1, 0x40($a0)
                lw      $a2, 0x58($s2)
                addiu   $v1, 1
                move    $a1, $zero
                b       loc_2804C
                sw      $v1, 0x40($a0)
 # ---------------------------------------------------------------------------

loc_28280:                               # CODE XREF: dtls1_accept+378↑j
                bnez    $v0, loc_28158
                la      $t9, ERR_put_error
                slti    $v0, $s1, 0x21E2
                bnez    $v0, loc_285A8
                la      $t9, dtls1_send_finished
                addiu   $v0, $s1, -0x21F0
                sltiu   $v0, 2
                beqz    $v0, loc_28158
                la      $t9, ERR_put_error
                la      $t9, dtls1_send_newsession_ticket
                jalr    $t9 ; dtls1_send_newsession_ticket
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x21D0
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_282D4:                               # CODE XREF: dtls1_accept:loc_280A4↑j
                bnez    $v0, loc_28158
                la      $t9, ERR_put_error
                slti    $v0, $s1, 0x21A2
                bnez    $v0, loc_28600
                la      $t9, ssl3_get_cert_verify
                addiu   $v0, $s1, -0x21C0
                sltiu   $v0, 2
                beqz    $v0, loc_28158
                la      $t9, ERR_put_error
                lw      $v0, 0x5C($s2)
                la      $t9, ssl3_get_finished
                li      $v1, 1
                sw      $v1, 0x2E4($v0)
                move    $a0, $s2
                li      $a1, 0x21C0
                jalr    $t9 ; ssl3_get_finished
                li      $a2, 0x21C1
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_stop_timer
                jalr    $t9 ; dtls1_stop_timer
                move    $a0, $s2
                lw      $v0, 0x6C($s2)
                beqz    $v0, loc_28934
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 3
                b       loc_28488
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_28348:                               # CODE XREF: dtls1_accept:loc_2817C↑j
                bnez    $v0, loc_28158
                la      $t9, ERR_put_error
                slti    $v0, $s1, 0x2152
                bnez    $v0, loc_28538
                lui     $v1, 0x20  # ' '
                addiu   $v0, $s1, -0x2160
                sltiu   $v0, 2
                beqz    $v0, loc_28158
                nop
                lw      $a0, 0xC8($s2)
                andi    $v0, $a0, 1
                beqz    $v0, loc_2894C
                nop
                lw      $v0, 0xC0($s2)
                lw      $v1, 0x94($v0)
                beqz    $v1, loc_28394
                andi    $v0, $a0, 4
                bnez    $v0, loc_2894C
                nop

loc_28394:                               # CODE XREF: dtls1_accept+6E4↑j
                lw      $a2, 0x58($s2)
                lw      $a1, 0x344($a2)
                lw      $v1, 0x10($a1)
                andi    $v0, $v1, 4
                beqz    $v0, loc_288CC
                andi    $v0, $v1, 0x20
                andi    $v0, $a0, 2
                bnez    $v0, loc_288CC
                andi    $v0, $v1, 0x20
                li      $v0, 0x2170

loc_283BC:                               # CODE XREF: dtls1_accept:loc_288CC↓j
                                         # dtls1_accept+C3C↓j
                li      $a1, 1
                sw      $zero, 0x388($a2)
                b       loc_2804C
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_283CC:                               # CODE XREF: dtls1_accept+3C4↑j
                lw      $a0, 0x10($s2)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                bgtz    $v0, loc_2806C
                lw      $gp, 0x48+var_30($sp)
                b       loc_27F44
                move    $s0, $v0
 # ---------------------------------------------------------------------------

loc_283F0:                               # CODE XREF: dtls1_accept+58C↑j
                lw      $v0, 0xDC($s2)
                lw      $a2, 0x58($s2)
                lw      $v1, 0x44($v0)
                li      $a0, 0x2120
                addiu   $v1, 1
                move    $a1, $zero
                sw      $v1, 0x44($v0)
                b       loc_2804C
                sw      $a0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_28414:                               # CODE XREF: dtls1_accept+EC↑j
                jalr    $t9 ; dtls1_stop_timer
                move    $a0, $s2
                lw      $v0, 0x174($s2)
                lw      $gp, 0x48+var_30($sp)
                addiu   $v0, 1
                sw      $zero, 0x170($s2)
                b       loc_27D94
                sw      $v0, 0x174($s2)
 # ---------------------------------------------------------------------------

loc_28434:                               # CODE XREF: dtls1_accept+4E8↑j
                beq     $s1, $v0, loc_28638
                addiu   $v0, $s1, -0x2130
                sltiu   $v0, 2
                beqz    $v0, loc_28158
                la      $t9, ERR_put_error
                la      $t9, dtls1_start_timer
                li      $v0, 2
                sw      $v0, 0x178($s2)
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_server_hello
                jalr    $t9 ; dtls1_send_server_hello
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x6C($s2)
                bnez    $v0, loc_28934
                li      $v0, 0x2140
                sw      $v0, 0x34($s2)

loc_28488:                               # CODE XREF: dtls1_accept+6A0↑j
                                         # dtls1_accept+CA4↓j ...
                lw      $a2, 0x58($s2)
                move    $a1, $zero
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_28498:                               # CODE XREF: dtls1_accept+410↑j
                sltiu   $v0, 2
                beqz    $v0, loc_28158
                la      $t9, ERR_put_error
                la      $t9, ssl3_check_client_hello
                jalr    $t9 ; ssl3_check_client_hello
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 2
                beq     $s0, $v0, loc_289D0
                la      $t9, ssl3_get_client_certificate
                jalr    $t9 ; ssl3_get_client_certificate
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x2190
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_284F4:                               # CODE XREF: dtls1_accept:loc_27ED4↑j
                la      $t9, BIO_ctrl
                li      $v0, 2
                lw      $a0, 0x10($s2)
                sw      $v0, 0x18($s2)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                blez    $v0, loc_28AC0
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 1
                sw      $v0, 0x18($s2)
                lw      $v1, 0x348($a2)
                move    $a1, $zero
                b       loc_2804C
                sw      $v1, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_28538:                               # CODE XREF: dtls1_accept+6B4↑j
                lw      $a2, 0x58($s2)
                lw      $v0, 0xF8($s2)
                lw      $a0, 0x344($a2)
                and     $v0, $v1
                beqz    $v0, loc_28964
                lw      $v1, 0xC($a0)
                li      $v0, 1
                sw      $v0, 0x368($a2)

loc_28558:                               # CODE XREF: dtls1_accept+CC8↓j
                bnez    $v0, loc_28568
                andi    $v0, $v1, 0x8E
                beqz    $v0, loc_2878C
                andi    $v0, $v1, 1

loc_28568:                               # CODE XREF: dtls1_accept:loc_28558↑j
                                         # dtls1_accept+DE8↓j
                la      $t9, dtls1_start_timer

loc_2856C:                               # CODE XREF: dtls1_accept+AFC↓j
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_server_key_exchange
                jalr    $t9 ; dtls1_send_server_key_exchange
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                move    $a1, $zero

loc_28598:                               # CODE XREF: dtls1_accept:loc_2878C↓j
                                         # dtls1_accept+DF0↓j
                li      $v0, 0x2160

loc_2859C:                               # CODE XREF: dtls1_accept+B18↓j
                sw      $v0, 0x34($s2)
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_285A8:                               # CODE XREF: dtls1_accept+5EC↑j
                lw      $v0, 8($s2)
                lw      $v1, 0x64($v0)
                move    $a0, $s2
                lw      $v0, 0x2C($v1)
                lw      $a3, 0x28($v1)
                li      $a1, 0x21E0
                sw      $v0, 0x48+var_38($sp)
                jalr    $t9 ; dtls1_send_finished
                li      $a2, 0x21E1
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $v1, 0x6C($s2)
                li      $v0, 0x2100
                beqz    $v1, loc_2864C
                sw      $v0, 0x34($s2)
                lw      $a2, 0x58($s2)
                li      $v0, 0x21C0
                sw      $v0, 0x348($a2)
                move    $a1, $zero

loc_285F8:                               # CODE XREF: dtls1_accept+9B8↓j
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_28600:                               # CODE XREF: dtls1_accept+640↑j
                lw      $v0, 0x5C($s2)
                li      $v1, 1
                sw      $v1, 0x2E4($v0)
                jalr    $t9 ; ssl3_get_cert_verify
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x21C0
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_28638:                               # CODE XREF: dtls1_accept:loc_28434↑j
                lw      $a2, 0x58($s2)
                li      $v0, 3
                move    $a1, $zero
                b       loc_2804C
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_2864C:                               # CODE XREF: dtls1_accept+940↑j
                lw      $a2, 0x58($s2)
                li      $v0, 3
                move    $a1, $zero
                b       loc_285F8
                sw      $v0, 0x348($a2)
 # ---------------------------------------------------------------------------

loc_28660:                               # CODE XREF: dtls1_accept+23C↑j
                bnez    $v0, loc_28158
                la      $t9, ERR_put_error
                slti    $v0, $s1, 0x2113
                bnez    $v0, loc_2880C
                la      $t9, ssl3_get_client_hello
                slti    $v0, $s1, 0x2115
                beqz    $v0, loc_28158
                la      $t9, ERR_put_error
                li      $v0, 0x2113
                bne     $s1, $v0, loc_28748
                la      $t9, dtls1_do_write
                lw      $v1, 0x3C($s2)
                lw      $v0, 0($s2)
                lw      $s3, 4($v1)
                sra     $v0, 8
                sb      $v0, 0xC($s3)
                lw      $v1, 0($s2)
                sb      $v1, 0xD($s3)
                lw      $v0, 0xDC($s2)
                lw      $t9, 0x78($v0)
                beqz    $t9, loc_28AF4
                addiu   $s5, $s3, 0xC
                lw      $a1, 0x5C($s2)
                move    $a0, $s2
                addiu   $a2, $a1, 0x204
                jalr    $t9
                addiu   $a1, 4
                beqz    $v0, loc_28AF4
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x5C($s2)
                la      $t9, memcpy
                lw      $v1, 0x204($v0)
                addiu   $s0, $s3, 0xF
                sb      $v1, 0xE($s3)
                lw      $a1, 0x5C($s2)
                move    $a0, $s0
                lw      $a2, 0x204($a1)
                jalr    $t9 ; memcpy
                addiu   $a1, 4
                lw      $v1, 0x5C($s2)
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x204($v1)
                addu    $s0, $v0
                la      $t9, dtls1_set_message_header
                subu    $a3, $s0, $s5
                sw      $zero, 0x48+var_38($sp)
                sw      $a3, 0x48+var_34($sp)
                move    $a0, $s2
                move    $a1, $s3
                jalr    $t9 ; dtls1_set_message_header
                li      $a2, 3
                subu    $s0, $s3
                li      $v0, 0x2114
                lw      $gp, 0x48+var_30($sp)
                sw      $v0, 0x34($s2)
                sw      $s0, 0x44($s2)
                sw      $zero, 0x48($s2)
                la      $t9, dtls1_do_write

loc_28748:                               # CODE XREF: dtls1_accept+9E4↑j
                move    $a0, $s2
                jalr    $t9 ; dtls1_do_write
                li      $a1, 0x16
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x2100
                li      $v1, 0x2110
                sw      $v0, 0x34($s2)
                sw      $v1, 0x348($a2)
                lw      $a0, 0($s2)
                li      $v0, 0x100
                beq     $a0, $v0, loc_28850
                la      $t9, ssl3_init_finished_mac
                b       loc_27FF4
                nop
 # ---------------------------------------------------------------------------

loc_2878C:                               # CODE XREF: dtls1_accept+8C0↑j
                beqz    $v0, loc_28598
                li      $a1, 1
                lw      $v0, 0x98($s2)
                lw      $a0, 0x24($v0)
                beqz    $a0, loc_2856C
                la      $t9, dtls1_start_timer
                lw      $v1, 0x344($a2)
                lw      $v0, 0x20($v1)
                andi    $v0, 2
                bnez    $v0, loc_28A5C
                la      $t9, EVP_PKEY_size
                b       loc_2859C
                li      $v0, 0x2160
 # ---------------------------------------------------------------------------

loc_287C0:                               # CODE XREF: dtls1_accept+510↑j
                la      $t9, dtls1_start_timer
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_server_certificate
                jalr    $t9 ; dtls1_send_server_certificate
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x124($s2)
                beqz    $v0, loc_28A48
                li      $v0, 0x2150
                lw      $a2, 0x58($s2)
                li      $v0, 0x2200
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_2880C:                               # CODE XREF: dtls1_accept+9CC↑j
                sw      $zero, 0x30($s2)
                jalr    $t9 ; ssl3_get_client_hello
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_stop_timer
                jalr    $t9 ; dtls1_stop_timer
                move    $a0, $s2
                li      $v0, 1
                beq     $s0, $v0, loc_2889C
                lw      $gp, 0x48+var_30($sp)

loc_2883C:                               # CODE XREF: dtls1_accept+C18↓j
                li      $v0, 0x2130
                sw      $v0, 0x34($s2)

loc_28844:                               # CODE XREF: dtls1_accept+C24↓j
                bnez    $s6, loc_28858
                sw      $zero, 0x44($s2)

loc_2884C:                               # CODE XREF: dtls1_accept+BD4↓j
                lw      $a2, 0x58($s2)

loc_28850:                               # CODE XREF: dtls1_accept+ADC↑j
                b       loc_2804C
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_28858:                               # CODE XREF: dtls1_accept:loc_28844↑j
                lw      $v0, 0x58($s2)
                lw      $v1, 8($v0)
                lw      $a0, 0xC($v0)
                sw      $v1, 0x54($v0)
                sw      $a0, 0x58($v0)
                lw      $v1, 0x34($s2)
                li      $v0, 0x2130
                bne     $v1, $v0, loc_2884C
                li      $v1, 2
                lw      $v0, 0x5C($s2)
                li      $a0, 1
                li      $s0, 2
                sh      $a0, 0x226($v0)
                sh      $v1, 0x228($v0)
                sw      $zero, 0x254($v0)
                b       loc_27F44
                sh      $a0, 0x224($v0)
 # ---------------------------------------------------------------------------

loc_2889C:                               # CODE XREF: dtls1_accept+B94↑j
                la      $t9, SSL_ctrl
                move    $a0, $s2
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                jalr    $t9 ; SSL_ctrl
                move    $a3, $zero
                andi    $v0, 0x2000
                beqz    $v0, loc_2883C
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 0x2113
                b       loc_28844
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_288CC:                               # CODE XREF: dtls1_accept+704↑j
                                         # dtls1_accept+710↑j
                bnez    $v0, loc_283BC
                li      $v0, 0x2170
                lw      $v0, 0xC($a1)
                andi    $v0, 0x100
                bnez    $v0, loc_283BC
                li      $v0, 0x2170
                la      $t9, dtls1_start_timer
                li      $v0, 1
                sw      $v0, 0x388($a2)
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_certificate_request
                jalr    $t9 ; dtls1_send_certificate_request
                move    $a0, $s2
                move    $s0, $v0
                blez    $v0, loc_27F44
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x2170
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_2892C:                               # CODE XREF: dtls1_accept+1AC↑j
                                         # dtls1_accept+1F8↑j ...
                b       loc_27F44
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_28934:                               # CODE XREF: dtls1_accept+694↑j
                                         # dtls1_accept+7DC↑j
                lw      $v0, 0x138($s2)
                beqz    $v0, loc_28970
                li      $v0, 0x21D0
                li      $v0, 0x21F0
                b       loc_28488
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_2894C:                               # CODE XREF: dtls1_accept+6D4↑j
                                         # dtls1_accept+6EC↑j
                lw      $a2, 0x58($s2)
                li      $v0, 0x2170
                li      $a1, 1
                sw      $zero, 0x388($a2)
                b       loc_2804C
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_28964:                               # CODE XREF: dtls1_accept+8A8↑j
                sw      $zero, 0x368($a2)
                b       loc_28558
                lw      $v0, 0x368($a2)
 # ---------------------------------------------------------------------------

loc_28970:                               # CODE XREF: dtls1_accept+C98↑j
                b       loc_28488
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_28978:                               # CODE XREF: dtls1_accept+43C↑j
                lw      $a2, 0x58($s2)
                li      $v0, 0x21C0
                move    $a1, $zero
                b       loc_2804C
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_2898C:                               # CODE XREF: dtls1_accept+8C↑j
                lw      $v0, 0xDC($s2)
                b       loc_27D34
                lw      $s4, 0x9C($v0)
 # ---------------------------------------------------------------------------

loc_28998:                               # CODE XREF: dtls1_accept+568↑j
                la      $t9, BUF_MEM_new
                jalr    $t9 ; BUF_MEM_new
                nop
                move    $s0, $v0
                beqz    $v0, loc_2892C
                lw      $gp, 0x48+var_30($sp)
                la      $t9, BUF_MEM_grow
                move    $a0, $v0
                jalr    $t9 ; BUF_MEM_grow
                li      $a1, 0x4000
                beqz    $v0, loc_2892C
                lw      $gp, 0x48+var_30($sp)
                b       loc_28210
                sw      $s0, 0x3C($s2)
 # ---------------------------------------------------------------------------

loc_289D0:                               # CODE XREF: dtls1_accept+820↑j
                la      $t9, dtls1_stop_timer
                jalr    $t9 ; dtls1_stop_timer
                move    $a0, $s2
                lw      $gp, 0x48+var_30($sp)
                lw      $a2, 0x58($s2)
                li      $v0, 0x2112
                move    $a1, $zero
                b       loc_2804C
                sw      $v0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_289F4:                               # CODE XREF: dtls1_accept+288↑j
                la      $t9, ssl_update_cache
                move    $a0, $s2
                sw      $zero, 0x178($s2)
                sw      $zero, 0x28($s2)
                jalr    $t9 ; ssl_update_cache
                li      $a1, 2
                lw      $a0, 0xDC($s2)
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x48($a0)
                la      $v1, dtls1_accept
                addiu   $v0, 1
                sw      $v1, 0x20($s2)
                beqz    $s4, loc_27F30
                sw      $v0, 0x48($a0)
                move    $a0, $s2
                li      $a1, 0x20  # ' '
                move    $t9, $s4
                jalr    $t9
                li      $a2, 1
                b       loc_27F30
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_28A48:                               # CODE XREF: dtls1_accept+B4C↑j
                lw      $a2, 0x58($s2)
                move    $a1, $zero
                sw      $v0, 0x34($s2)
                b       loc_2804C
                sw      $zero, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_28A5C:                               # CODE XREF: dtls1_accept+B10↑j
                jalr    $t9 ; EVP_PKEY_size
                nop
                lw      $a2, 0x58($s2)
                li      $a1, 0x200
                lw      $a0, 0x344($a2)
                sll     $v0, 3
                lw      $v1, 0x20($a0)
                li      $a0, 0x400
                andi    $v1, 8
                movz    $a1, $a0, $v1
                slt     $a1, $v0
                bnez    $a1, loc_28568
                lw      $gp, 0x48+var_30($sp)
                b       loc_28598
                li      $a1, 1
 # ---------------------------------------------------------------------------

loc_28A98:                               # CODE XREF: dtls1_accept+55C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0xF6
                li      $a2, 0x44  # 'D'

loc_28AAC:                               # CODE XREF: dtls1_accept+E8C↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_27F6C
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_28AC0:                               # CODE XREF: dtls1_accept+874↑j
                la      $t9, BIO_test_flags
                lw      $a0, 0x10($s2)
                jalr    $t9 ; BIO_test_flags
                li      $a1, 8
                bnez    $v0, loc_2892C
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x58($s2)
                li      $v1, 1
                sw      $v1, 0x18($s2)
                lw      $a0, 0x348($v0)
                li      $s0, 0xFFFFFFFF
                b       loc_27F44
                sw      $a0, 0x34($s2)
 # ---------------------------------------------------------------------------

loc_28AF4:                               # CODE XREF: dtls1_accept+A10↑j
                                         # dtls1_accept+A2C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x108
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_27F44
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_28B1C:                               # CODE XREF: dtls1_accept+E0↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xF6
                li      $a2, 0xB3
                b       loc_28AAC
                sw      $zero, 0x48+var_38($sp)
 # End of function dtls1_accept


 # =============== S U B R O U T I N E =======================================


                .globl DTLSv1_client_method
DTLSv1_client_method:                    # CODE XREF: sub_28B4C+1C↓j
                                         # DATA XREF: LOAD:00003138↑o ...
                la      $gp, (off_5A360+0x7FF0 - DTLSv1_client_method)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (off_5927C - 0x60000)
 # End of function DTLSv1_client_method


 # =============== S U B R O U T I N E =======================================


sub_28B4C:                               # DATA XREF: .data.rel.ro:000592D8↓o
                la      $gp, (off_5A360+0x7FF0 - sub_28B4C)
                addu    $gp, $t9
                li      $v0, 0xFEFF
                bne     $a0, $v0, loc_28B70
                li      $v0, 0x100

loc_28B64:                               # CODE XREF: sub_28B4C:loc_28B70↓j
                la      $t9, DTLSv1_client_method
                jr      $t9 ; DTLSv1_client_method
                nop
 # ---------------------------------------------------------------------------

loc_28B70:                               # CODE XREF: sub_28B4C+10↑j
                beq     $a0, $v0, loc_28B64
                move    $v0, $zero
                jr      $ra
                nop
 # End of function sub_28B4C


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_client_certificate
dtls1_send_client_certificate:           # CODE XREF: dtls1_connect+110↓p
                                         # DATA XREF: LOAD:000023A8↑o ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_client_certificate)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x1170
                move    $s0, $a0
                sw      $zero, 0x38+var_18($sp)
                beq     $v1, $v0, loc_28BFC
                sw      $zero, 0x38+var_14($sp)
                li      $v0, 0x1171
                beq     $v1, $v0, loc_28C20
                li      $v0, 0x1172
                beq     $v1, $v0, loc_28D6C
                nop

loc_28BCC:                               # CODE XREF: dtls1_send_client_certificate+1A4↓j
                la      $t9, dtls1_do_write
                move    $a0, $s0
                jalr    $t9 ; dtls1_do_write
                li      $a1, 0x16
                lw      $gp, 0x38+var_20($sp)
                move    $v1, $v0

loc_28BE4:                               # CODE XREF: dtls1_send_client_certificate+25C↓j
                                         # dtls1_send_client_certificate+26C↓j
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_28BFC:                               # CODE XREF: dtls1_send_client_certificate+30↑j
                lw      $v0, 0x98($a0)
                beqz    $v0, loc_28C18
                nop
                lw      $v1, 0($v0)
                lw      $v0, 0($v1)
                bnez    $v0, loc_28CC4
                nop

loc_28C18:                               # CODE XREF: dtls1_send_client_certificate+80↑j
                                         # dtls1_send_client_certificate+148↓j
                li      $v0, 0x1171
                sw      $v0, 0x34($s0)

loc_28C20:                               # CODE XREF: dtls1_send_client_certificate+3C↑j
                la      $t9, ssl_do_client_cert_cb
                move    $a0, $s0
                addiu   $a1, $sp, 0x38+var_18
                jalr    $t9 ; ssl_do_client_cert_cb
                addiu   $a2, $sp, 0x38+var_14
                move    $s1, $v0
                bltz    $v0, loc_28DE4
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 1
                beq     $s1, $v0, loc_28D38
                sw      $v0, 0x18($s0)

loc_28C4C:                               # CODE XREF: dtls1_send_client_certificate+1E4↓j
                                         # dtls1_send_client_certificate+204↓j ...
                lw      $a0, 0x38+var_18($sp)
                beqz    $a0, loc_28C64
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_28C64:                               # CODE XREF: dtls1_send_client_certificate+D0↑j
                lw      $a0, 0x38+var_14($sp)
                beqz    $a0, loc_28C7C
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_28C7C:                               # CODE XREF: dtls1_send_client_certificate+E8↑j
                bnez    $s1, loc_28D2C
                li      $v0, 0x1172
                lw      $v1, 0($s0)
                li      $v0, 0x300
                beq     $v1, $v0, loc_28DBC
                li      $v0, 2
                lw      $v1, 0x58($s0)
                sw      $v0, 0x350($v1)
                li      $v0, 0x1172
                sw      $v0, 0x34($s0)

loc_28CA4:                               # CODE XREF: dtls1_send_client_certificate+1B0↓j
                li      $v0, 0x1173
                sw      $v0, 0x34($s0)
                lw      $v1, 0x350($v1)
                li      $v0, 2
                bne     $v1, $v0, loc_28CF0
                nop

loc_28CBC:                               # CODE XREF: dtls1_send_client_certificate+168↓j
                b       loc_28CFC
                move    $a1, $zero
 # ---------------------------------------------------------------------------

loc_28CC4:                               # CODE XREF: dtls1_send_client_certificate+90↑j
                lw      $v0, 4($v1)
                beqz    $v0, loc_28C18
                li      $v0, 0x1172
                lw      $v1, 0x58($a0)
                sw      $v0, 0x34($a0)

loc_28CD8:                               # CODE XREF: dtls1_send_client_certificate:loc_28D6C↓j
                li      $v0, 0x1173
                sw      $v0, 0x34($s0)
                lw      $v1, 0x350($v1)
                li      $v0, 2
                beq     $v1, $v0, loc_28CBC
                nop

loc_28CF0:                               # CODE XREF: dtls1_send_client_certificate+134↑j
                lw      $v0, 0x98($s0)
                lw      $v1, 0($v0)
                lw      $a1, 0($v1)

loc_28CFC:                               # CODE XREF: dtls1_send_client_certificate:loc_28CBC↑j
                la      $t9, dtls1_output_cert_chain
                jalr    $t9 ; dtls1_output_cert_chain
                move    $a0, $s0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, dtls1_buffer_message
                sw      $v0, 0x44($s0)
                sw      $zero, 0x48($s0)
                move    $a0, $s0
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                b       loc_28BCC
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_28D2C:                               # CODE XREF: dtls1_send_client_certificate:loc_28C7C↑j
                lw      $v1, 0x58($s0)
                b       loc_28CA4
                sw      $v0, 0x34($s0)
 # ---------------------------------------------------------------------------

loc_28D38:                               # CODE XREF: dtls1_send_client_certificate+C4↑j
                lw      $v0, 0x38+var_14($sp)
                beqz    $v0, loc_28D94
                lw      $a1, 0x38+var_18($sp)
                beqz    $a1, loc_28D94
                la      $t9, SSL_use_certificate
                li      $v0, 0x1171
                sw      $v0, 0x34($s0)
                jalr    $t9 ; SSL_use_certificate
                move    $a0, $s0
                bnez    $v0, loc_28D74
                lw      $gp, 0x38+var_20($sp)
                b       loc_28C4C
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_28D6C:                               # CODE XREF: dtls1_send_client_certificate+44↑j
                b       loc_28CD8
                lw      $v1, 0x58($a0)
 # ---------------------------------------------------------------------------

loc_28D74:                               # CODE XREF: dtls1_send_client_certificate+1DC↑j
                la      $t9, SSL_use_PrivateKey
                lw      $a1, 0x38+var_14($sp)
                jalr    $t9 ; SSL_use_PrivateKey
                move    $a0, $s0
                bnez    $v0, loc_28C4C
                lw      $gp, 0x38+var_20($sp)
                b       loc_28C4C
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_28D94:                               # CODE XREF: dtls1_send_client_certificate+1BC↑j
                                         # dtls1_send_client_certificate+1C4↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x105
                li      $a2, 0x6A  # 'j'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_28C4C
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_28DBC:                               # CODE XREF: dtls1_send_client_certificate+10C↑j
                lw      $v0, 0x58($s0)
                la      $t9, ssl3_send_alert
                sw      $zero, 0x350($v0)
                move    $a0, $s0
                li      $a1, 1
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x29  # ')'
                lw      $gp, 0x38+var_20($sp)
                b       loc_28BE4
                li      $v1, 1
 # ---------------------------------------------------------------------------

loc_28DE4:                               # CODE XREF: dtls1_send_client_certificate+B8↑j
                li      $v0, 4
                li      $v1, 0xFFFFFFFF
                b       loc_28BE4
                sw      $v0, 0x18($s0)
 # End of function dtls1_send_client_certificate


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_client_verify
dtls1_send_client_verify:                # CODE XREF: dtls1_connect+88C↓p
                                         # DATA XREF: LOAD:00002B38↑o ...

var_60          = -0x60
var_5C          = -0x5C
var_58          = -0x58
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_38          = -0x38
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_client_verify)
                addu    $gp, $t9
                addiu   $sp, -0x70
                sw      $ra, 0x70+var_8($sp)
                sw      $s5, 0x70+var_C($sp)
                sw      $s4, 0x70+var_10($sp)
                sw      $s3, 0x70+var_14($sp)
                sw      $s2, 0x70+var_18($sp)
                sw      $s1, 0x70+var_1C($sp)
                sw      $s0, 0x70+var_20($sp)
                sw      $gp, 0x70+var_58($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x1190
                move    $s1, $a0
                beq     $v1, $v0, loc_28E70
                sw      $zero, 0x70+var_50($sp)

loc_28E38:                               # CODE XREF: dtls1_send_client_verify+158↓j
                la      $t9, dtls1_do_write
                move    $a0, $s1
                jalr    $t9 ; dtls1_do_write
                li      $a1, 0x16
                lw      $gp, 0x70+var_58($sp)

loc_28E4C:                               # CODE XREF: dtls1_send_client_verify+1E8↓j
                lw      $ra, 0x70+var_8($sp)
                lw      $s5, 0x70+var_C($sp)
                lw      $s4, 0x70+var_10($sp)
                lw      $s3, 0x70+var_14($sp)
                lw      $s2, 0x70+var_18($sp)
                lw      $s1, 0x70+var_1C($sp)
                lw      $s0, 0x70+var_20($sp)
                jr      $ra
                addiu   $sp, 0x70
 # ---------------------------------------------------------------------------

loc_28E70:                               # CODE XREF: dtls1_send_client_verify+3C↑j
                lw      $v0, 0x98($a0)
                lw      $v1, 8($a0)
                lw      $a1, 0($v0)
                lw      $a2, 0x64($v1)
                lw      $s0, 4($a1)
                lw      $t9, 0x1C($a2)
                lw      $v0, 0x3C($a0)
                addiu   $s3, $sp, 0x70+var_38
                li      $a1, 0x40  # '@'
                move    $a2, $s3
                jalr    $t9
                lw      $s2, 4($v0)
                lw      $v1, 0($s0)
                li      $v0, 6
                lw      $gp, 0x70+var_58($sp)
                addiu   $s5, $s2, 0xC
                beq     $v1, $v0, loc_28F54
                addiu   $s4, $sp, 0x70+var_48
                li      $v0, 0x74  # 't'
                bne     $v1, $v0, loc_28FBC
                la      $t9, DSA_sign
                addiu   $v0, $sp, 0x70+var_4C
                lw      $a0, 4($s0)
                sw      $v0, 0x70+var_60($sp)
                lw      $v1, 0x14($s0)
                sw      $v1, 0x70+var_5C($sp)
                move    $a1, $s3
                li      $a2, 0x14
                jalr    $t9 ; DSA_sign
                addiu   $a3, $s2, 0xE
                beqz    $v0, loc_28FE4
                lw      $gp, 0x70+var_58($sp)
                lw      $v0, 0x70+var_4C($sp)
                sra     $v1, $v0, 8
                sb      $v1, 0xC($s2)
                addiu   $s0, $v0, 2
                sb      $v0, 1($s5)

loc_28F04:                               # CODE XREF: dtls1_send_client_verify+1C0↓j
                la      $t9, dtls1_set_message_header
                move    $a1, $s2
                move    $a0, $s1
                li      $a2, 0xF
                move    $a3, $s0
                sw      $zero, 0x70+var_60($sp)
                jalr    $t9 ; dtls1_set_message_header
                sw      $s0, 0x70+var_5C($sp)
                lw      $gp, 0x70+var_58($sp)
                addiu   $v0, $s0, 0xC
                la      $t9, dtls1_buffer_message
                sw      $v0, 0x44($s1)
                sw      $zero, 0x48($s1)
                move    $a0, $s1
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                lw      $gp, 0x70+var_58($sp)
                li      $v1, 0x1191
                b       loc_28E38
                sw      $v1, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_28F54:                               # CODE XREF: dtls1_send_client_verify+BC↑j
                lw      $v0, 8($s1)
                move    $a0, $s1
                lw      $v1, 0x64($v0)
                li      $a1, 4
                lw      $t9, 0x1C($v1)
                jalr    $t9
                move    $a2, $s4
                addiu   $v1, $sp, 0x70+var_50
                lw      $gp, 0x70+var_58($sp)
                sw      $v1, 0x70+var_60($sp)
                lw      $v0, 0x14($s0)
                la      $t9, RSA_sign
                sw      $v0, 0x70+var_5C($sp)
                move    $a1, $s4
                li      $a0, 0x72  # 'r'
                li      $a2, 0x24  # '$'
                jalr    $t9 ; RSA_sign
                addiu   $a3, $s2, 0xE
                blez    $v0, loc_28FFC
                lw      $gp, 0x70+var_58($sp)
                lw      $v0, 0x70+var_50($sp)
                srl     $v1, $v0, 8
                addiu   $s0, $v0, 2
                sb      $v1, 0xC($s2)
                b       loc_28F04
                sb      $v0, 1($s5)
 # ---------------------------------------------------------------------------

loc_28FBC:                               # CODE XREF: dtls1_send_client_verify+C8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x107
                li      $a2, 0x44  # 'D'

loc_28FD0:                               # CODE XREF: dtls1_send_client_verify+200↓j
                                         # dtls1_send_client_verify+218↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_58($sp)
                b       loc_28E4C
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_28FE4:                               # CODE XREF: dtls1_send_client_verify+F4↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x107
                li      $a2, 0xA
                b       loc_28FD0
                sw      $zero, 0x70+var_60($sp)
 # ---------------------------------------------------------------------------

loc_28FFC:                               # CODE XREF: dtls1_send_client_verify+1A8↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x107
                li      $a2, 4
                b       loc_28FD0
                sw      $zero, 0x70+var_60($sp)
 # End of function dtls1_send_client_verify


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_client_key_exchange
dtls1_send_client_key_exchange:          # CODE XREF: dtls1_connect+720↓p
                                         # DATA XREF: LOAD:00003538↑o ...

var_60          = -0x60
var_5C          = -0x5C
var_58          = -0x58
var_50          = -0x50
var_4F          = -0x4F
var_4E          = -0x4E
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_client_key_exchange)
                addu    $gp, $t9
                addiu   $sp, -0x70
                sw      $ra, 0x70+var_8($sp)
                sw      $s5, 0x70+var_C($sp)
                sw      $s4, 0x70+var_10($sp)
                sw      $s3, 0x70+var_14($sp)
                sw      $s2, 0x70+var_18($sp)
                sw      $s1, 0x70+var_1C($sp)
                sw      $s0, 0x70+var_20($sp)
                sw      $gp, 0x70+var_58($sp)
                lw      $v1, 0x34($a0)
                li      $v0, 0x1180
                beq     $v1, $v0, loc_2908C
                move    $s1, $a0

loc_29054:                               # CODE XREF: dtls1_send_client_key_exchange+244↓j
                la      $t9, dtls1_do_write
                move    $a0, $s1
                jalr    $t9 ; dtls1_do_write
                li      $a1, 0x16
                lw      $gp, 0x70+var_58($sp)

loc_29068:                               # CODE XREF: dtls1_send_client_key_exchange:loc_29268↓j
                lw      $ra, 0x70+var_8($sp)
                lw      $s5, 0x70+var_C($sp)
                lw      $s4, 0x70+var_10($sp)
                lw      $s3, 0x70+var_14($sp)
                lw      $s2, 0x70+var_18($sp)
                lw      $s1, 0x70+var_1C($sp)
                lw      $s0, 0x70+var_20($sp)
                jr      $ra
                addiu   $sp, 0x70
 # ---------------------------------------------------------------------------

loc_2908C:                               # CODE XREF: dtls1_send_client_key_exchange+38↑j
                lw      $v0, 0x58($a0)
                lw      $v1, 0x3C($a0)
                lw      $a1, 0x344($v0)
                lw      $v0, 0xC($a1)
                andi    $v0, 1
                beqz    $v0, loc_29270
                lw      $s4, 4($v1)
                lw      $v0, 0xC0($a0)
                lw      $v0, 0x90($v0)
                lw      $s0, 0x6C($v0)
                bnez    $s0, loc_29140
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                lw      $a0, 0xC($v0)
                move    $a0, $v0
                beqz    $v0, loc_290E0
                lw      $gp, 0x70+var_58($sp)
                lw      $v1, 0($v0)
                li      $v0, 6
                beq     $v1, $v0, loc_29128
                nop

loc_290E0:                               # CODE XREF: dtls1_send_client_key_exchange+B4↑j
                                         # dtls1_send_client_key_exchange+118↓j ...
                la      $t9, ERR_put_error
                sw      $zero, 0x70+var_60($sp)
                li      $a0, 0x14
                li      $a1, 0x106
                li      $a2, 0x44  # 'D'

loc_290F4:                               # CODE XREF: dtls1_send_client_key_exchange+284↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x70+var_58($sp)
                lw      $ra, 0x70+var_8($sp)
                lw      $s5, 0x70+var_C($sp)
                lw      $s4, 0x70+var_10($sp)
                lw      $s3, 0x70+var_14($sp)
                lw      $s2, 0x70+var_18($sp)
                lw      $s1, 0x70+var_1C($sp)
                lw      $s0, 0x70+var_20($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x70
 # ---------------------------------------------------------------------------

loc_29128:                               # CODE XREF: dtls1_send_client_key_exchange+C4↑j
                lw      $s0, 0x14($a0)
                beqz    $s0, loc_290E0
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x70+var_58($sp)

loc_29140:                               # CODE XREF: dtls1_send_client_key_exchange+A0↑j
                lw      $v0, 0x108($s1)
                la      $t9, RAND_bytes
                sra     $v1, $v0, 8
                sb      $v1, 0x70+var_50($sp)
                sb      $v0, 0x70+var_4F($sp)
                addiu   $a0, $sp, 0x70+var_4E
                jalr    $t9 ; RAND_bytes
                li      $a1, 0x2E  # '.'
                blez    $v0, loc_29268
                lw      $gp, 0x70+var_58($sp)
                lw      $a0, 0xC0($s1)
                li      $v1, 0x30  # '0'
                sw      $v1, 0x10($a0)
                lw      $v0, 0($s1)
                slti    $v0, 0x301
                beqz    $v0, loc_29260
                addiu   $s3, $s4, 0xC
                move    $a2, $s3

loc_29188:                               # CODE XREF: dtls1_send_client_key_exchange:loc_29260↓j
                la      $t9, RSA_public_encrypt
                li      $v0, 1
                addiu   $s5, $sp, 0x70+var_50
                sw      $v0, 0x70+var_60($sp)
                move    $a3, $s0
                li      $a0, 0x30  # '0'
                jalr    $t9 ; RSA_public_encrypt
                move    $a1, $s5
                move    $s2, $v0
                blez    $v0, loc_29288
                lw      $gp, 0x70+var_58($sp)
                lw      $v0, 0($s1)
                slti    $v0, 0x301
                bnez    $v0, loc_291D0
                sra     $v0, $s2, 8
                sb      $s2, 1($s3)
                sb      $v0, 0($s3)
                addiu   $s2, 2

loc_291D0:                               # CODE XREF: dtls1_send_client_key_exchange+1A8↑j
                lw      $v0, 8($s1)
                lw      $s0, 0xC0($s1)
                lw      $v1, 0x64($v0)
                move    $a2, $s5
                lw      $t9, 0xC($v1)
                li      $a3, 0x30  # '0'
                move    $a0, $s1
                jalr    $t9
                addiu   $a1, $s0, 0x14
                lw      $gp, 0x70+var_58($sp)
                la      $t9, OPENSSL_cleanse
                sw      $v0, 0x10($s0)
                move    $a0, $s5
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x30  # '0'
                lw      $gp, 0x70+var_58($sp)
                la      $t9, dtls1_set_message_header
                move    $a1, $s4
                move    $a0, $s1
                li      $a2, 0x10
                move    $a3, $s2
                sw      $zero, 0x70+var_60($sp)
                jalr    $t9 ; dtls1_set_message_header
                sw      $s2, 0x70+var_5C($sp)
                lw      $gp, 0x70+var_58($sp)
                addiu   $v1, $s2, 0xC
                la      $t9, dtls1_buffer_message
                li      $v0, 0x1181
                sw      $v0, 0x34($s1)
                sw      $v1, 0x44($s1)
                sw      $zero, 0x48($s1)
                move    $a0, $s1
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                b       loc_29054
                lw      $gp, 0x70+var_58($sp)
 # ---------------------------------------------------------------------------

loc_29260:                               # CODE XREF: dtls1_send_client_key_exchange+168↑j
                b       loc_29188
                addiu   $a2, $s4, 0xE
 # ---------------------------------------------------------------------------

loc_29268:                               # CODE XREF: dtls1_send_client_key_exchange+14C↑j
                b       loc_29068
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_29270:                               # CODE XREF: dtls1_send_client_key_exchange+8C↑j
                la      $t9, ssl3_send_alert
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x28  # '('
                b       loc_290E0
                lw      $gp, 0x70+var_58($sp)
 # ---------------------------------------------------------------------------

loc_29288:                               # CODE XREF: dtls1_send_client_key_exchange+198↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x106
                li      $a2, 0x77  # 'w'
                b       loc_290F4
                sw      $zero, 0x70+var_60($sp)
 # End of function dtls1_send_client_key_exchange


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_client_hello
dtls1_client_hello:                      # CODE XREF: dtls1_connect+95C↓p
                                         # DATA XREF: LOAD:00002978↑o ...

var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_client_hello)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_4($sp)
                sw      $s6, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x3C($a0)
                move    $s2, $a0
                lw      $a0, 0x34($a0)
                li      $v1, 0x1110
                beq     $a0, $v1, loc_29320
                lw      $s5, 4($v0)
                la      $t9, dtls1_do_write
                move    $a0, $s2
                lw      $ra, 0x40+var_4($sp)
                lw      $s6, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_29320:                               # CODE XREF: dtls1_client_hello+44↑j
                lw      $a0, 0xC0($s2)
                beqz    $a0, loc_2933C
                la      $t9, ssl_get_new_session
                lw      $v1, 0($a0)
                lw      $v0, 0($s2)
                beq     $v1, $v0, loc_29640
                nop

loc_2933C:                               # CODE XREF: dtls1_client_hello+84↑j
                                         # dtls1_client_hello+3B0↓j
                move    $a0, $s2

loc_29340:                               # CODE XREF: dtls1_client_hello+3C4↓j
                jalr    $t9 ; ssl_get_new_session
                move    $a1, $zero
                beqz    $v0, loc_29614
                lw      $gp, 0x40+var_28($sp)

loc_29350:                               # CODE XREF: dtls1_client_hello+3BC↓j
                lw      $s0, 0x58($s2)
                lbu     $v0, 0xC0($s0)
                bnez    $v0, loc_2938C
                addiu   $a1, $s0, 0xC0
                b       loc_29370
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_29368:                               # CODE XREF: dtls1_client_hello+DC↓j
                beq     $a0, $v0, loc_2967C
                la      $t9, time

loc_29370:                               # CODE XREF: dtls1_client_hello+C0↑j
                addiu   $a0, 1
                addu    $v0, $a1, $a0
                lbu     $v1, 0($v0)
                beqz    $v1, loc_29368
                li      $v0, 0x20  # ' '
                beq     $a0, $v0, loc_2967C
                la      $t9, time

loc_2938C:                               # CODE XREF: dtls1_client_hello+B8↑j
                                         # dtls1_client_hello+414↓j
                lw      $v1, 0($s2)
                addiu   $v0, $s5, 0xE
                sra     $v1, 8
                sb      $v1, 0xC($s5)
                lw      $a0, 0($s2)
                sb      $a0, 0xD($s5)
                lw      $a1, 0($s2)
                lw      $v1, 0x58($s2)
                sw      $a1, 0x108($s2)
                lw      $a3, 0xC0($v1)
                addiu   $v1, 0xC0
                lw      $t3, 0x1C($v1)
                lw      $t1, 0x14($v1)
                lw      $t2, 0x18($v1)
                lw      $t0, 0x10($v1)
                lw      $a0, 4($v1)
                lw      $a1, 8($v1)
                lw      $a2, 0xC($v1)
                usw     $a3, 0($v0)
                usw     $a0, 4($v0)
                usw     $a1, 8($v0)
                usw     $a2, 0xC($v0)
                usw     $t0, 0x10($v0)
                usw     $t1, 0x14($v0)
                usw     $t2, 0x18($v0)
                usw     $t3, 0x1C($v0)
                lw      $v1, 0x28($s2)
                bnez    $v1, loc_295E8
                addiu   $s6, $s5, 0xC
                lw      $v0, 0xC0($s2)
                addiu   $s0, $s5, 0x2F  # '/'
                lw      $a2, 0x44($v0)
                beqz    $a2, loc_29458
                sb      $a2, 0x2E($s5)
                sltiu   $v0, $a2, 0x21  # '!'
                beqz    $v0, loc_295F4
                la      $t9, memcpy
                lw      $a1, 0xC0($s2)
                move    $a0, $s0
                addiu   $a1, 0x48  # 'H'
                jalr    $t9 ; memcpy
                addu    $s0, $a2
                lw      $gp, 0x40+var_28($sp)

loc_29458:                               # CODE XREF: dtls1_client_hello+18C↑j
                                         # dtls1_client_hello+34C↓j
                lw      $v0, 0x5C($s2)
                lw      $v0, 0x204($v0)
                sltiu   $v1, $v0, 0x101
                beqz    $v1, loc_295F4
                la      $t9, memcpy
                sb      $v0, 0($s0)
                lw      $a1, 0x5C($s2)
                lw      $a2, 0x204($a1)
                addiu   $s0, 1
                addiu   $a1, 4
                jalr    $t9 ; memcpy
                move    $a0, $s0
                lw      $gp, 0x40+var_28($sp)
                lw      $v1, 0x5C($s2)
                lw      $v0, 0x204($v1)
                la      $t9, SSL_get_ciphers
                move    $a0, $s2
                jalr    $t9 ; SSL_get_ciphers
                addu    $s0, $v0
                lw      $gp, 0x40+var_28($sp)
                addiu   $s1, $s0, 2
                la      $t9, ssl_cipher_list_to_bytes
                move    $a2, $s1
                move    $a1, $v0
                move    $a0, $s2
                jalr    $t9 ; ssl_cipher_list_to_bytes
                move    $a3, $zero
                move    $a2, $v0
                beqz    $v0, loc_296BC
                lw      $gp, 0x40+var_28($sp)
                srl     $v0, 8
                sb      $v0, 0($s0)
                sb      $a2, 1($s0)
                lw      $v0, 0xDC($s2)
                lw      $a0, 0x98($v0)
                beqz    $a0, loc_2966C
                addu    $s3, $s1, $a2
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                addiu   $s4, $s3, 1
                move    $s1, $v0
                addiu   $v0, 1
                lw      $gp, 0x40+var_28($sp)
                beqz    $s1, loc_29540
                sb      $v0, 0($s3)
                move    $s0, $zero

loc_29510:                               # CODE XREF: dtls1_client_hello+294↓j
                lw      $v0, 0xDC($s2)
                la      $t9, sk_value
                lw      $a0, 0x98($v0)
                jalr    $t9 ; sk_value
                move    $a1, $s0
                lw      $v1, 0($v0)
                addu    $v0, $s3, $s0
                addiu   $s0, 1
                lw      $gp, 0x40+var_28($sp)
                bne     $s1, $s0, loc_29510
                sb      $v1, 1($v0)
                addu    $s4, $s1

loc_29540:                               # CODE XREF: dtls1_client_hello+264↑j
                                         # dtls1_client_hello+3D4↓j
                la      $t9, ssl_add_clienthello_tlsext
                sb      $zero, 0($s4)
                addiu   $a1, $s4, 1
                move    $a0, $s2
                jalr    $t9 ; ssl_add_clienthello_tlsext
                addiu   $a2, $s5, 0x4000
                move    $s0, $v0
                beqz    $v0, loc_295F4
                lw      $gp, 0x40+var_28($sp)
                subu    $v0, $s6
                la      $t9, dtls1_set_message_header
                move    $a0, $s2
                move    $a1, $s5
                move    $a3, $v0
                sw      $zero, 0x40+var_30($sp)
                sw      $v0, 0x40+var_2C($sp)
                jalr    $t9 ; dtls1_set_message_header
                li      $a2, 1
                lw      $gp, 0x40+var_28($sp)
                subu    $v1, $s0, $s5
                li      $v0, 0x1111
                la      $t9, dtls1_buffer_message
                move    $a0, $s2
                sw      $v0, 0x34($s2)
                sw      $v1, 0x44($s2)
                sw      $zero, 0x48($s2)
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                lw      $gp, 0x40+var_28($sp)
                la      $t9, dtls1_do_write
                move    $a0, $s2
                lw      $ra, 0x40+var_4($sp)
                lw      $s6, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_295E8:                               # CODE XREF: dtls1_client_hello+178↑j
                addiu   $s0, $s5, 0x2F  # '/'
                b       loc_29458
                sb      $zero, 0x2E($s5)
 # ---------------------------------------------------------------------------

loc_295F4:                               # CODE XREF: dtls1_client_hello+198↑j
                                         # dtls1_client_hello+1C4↑j ...
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0xF8
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)

loc_29614:                               # CODE XREF: dtls1_client_hello+A8↑j
                                         # dtls1_client_hello+438↓j
                lw      $ra, 0x40+var_4($sp)
                lw      $s6, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_29640:                               # CODE XREF: dtls1_client_hello+94↑j
                lw      $v0, 0x44($a0)
                bnez    $v0, loc_29658
                nop
                lw      $v0, 0xCC($a0)
                beqz    $v0, loc_2933C
                la      $t9, ssl_get_new_session

loc_29658:                               # CODE XREF: dtls1_client_hello+3A4↑j
                lw      $v0, 0x8C($a0)
                beqz    $v0, loc_29350
                la      $t9, ssl_get_new_session
                b       loc_29340
                move    $a0, $s2
 # ---------------------------------------------------------------------------

loc_2966C:                               # CODE XREF: dtls1_client_hello+244↑j
                li      $v0, 1
                addiu   $s4, $s3, 1
                b       loc_29540
                sb      $v0, 0($s3)
 # ---------------------------------------------------------------------------

loc_2967C:                               # CODE XREF: dtls1_client_hello:loc_29368↑j
                                         # dtls1_client_hello+E4↑j
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x40+var_28($sp)
                srl     $a0, $v0, 16
                srl     $a1, $v0, 8
                la      $t9, RAND_pseudo_bytes
                srl     $v1, $v0, 24
                sb      $a0, 0xC1($s0)
                sb      $a1, 0xC2($s0)
                sb      $v1, 0xC0($s0)
                sb      $v0, 0xC3($s0)
                addiu   $a0, $s0, 0xC4
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x1C
                b       loc_2938C
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_296BC:                               # CODE XREF: dtls1_client_hello+228↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0xF8
                li      $a2, 0xB5
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_29614
                lw      $gp, 0x40+var_28($sp)
 # End of function dtls1_client_hello


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_connect
dtls1_connect:                           # DATA XREF: LOAD:00002AB8↑o
                                         # dtls1_connect+2A8↓o ...

var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_connect)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_4($sp)
                sw      $s6, 0x48+var_8($sp)
                sw      $s5, 0x48+var_C($sp)
                sw      $s4, 0x48+var_10($sp)
                sw      $s3, 0x48+var_14($sp)
                sw      $s2, 0x48+var_18($sp)
                sw      $s1, 0x48+var_1C($sp)
                sw      $s0, 0x48+var_20($sp)
                sw      $gp, 0x48+var_30($sp)
                la      $t9, time
                move    $s1, $a0
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x48+var_30($sp)
                la      $t9, RAND_add
                sw      $v0, 0x48+var_28($sp)
                addiu   $a0, $sp, 0x48+var_28
                li      $a1, 4
                move    $a2, $zero
                jalr    $t9 ; RAND_add
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x48+var_30($sp)
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $s4, 0xD0($s1)
                lw      $gp, 0x48+var_30($sp)
                beqz    $s4, loc_2A1CC
                sw      $zero, 0($v0)

loc_29774:                               # CODE XREF: dtls1_connect+AF0↓j
                lw      $v0, 0x1C($s1)
                la      $t9, SSL_state
                addiu   $v0, 1
                sw      $v0, 0x1C($s1)
                jalr    $t9 ; SSL_state
                move    $a0, $s1
                andi    $v0, 0x3000
                beqz    $v0, loc_298A4
                lw      $gp, 0x48+var_30($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s1
                andi    $v0, 0x4000
                bnez    $v0, loc_298A4
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x170($s1)
                bnez    $v0, loc_298C0
                la      $t9, dtls1_stop_timer

loc_297BC:                               # CODE XREF: dtls1_connect+1D4↓j
                                         # dtls1_connect+1F8↓j
                lw      $s2, 0x34($s1)
                addiu   $s6, $sp, 0x48+var_24
                slti    $s3, $s2, 0x1174

loc_297C8:                               # CODE XREF: dtls1_connect+63C↓j
                                         # dtls1_connect+664↓j
                beqz    $s3, loc_29834
                slti    $v0, $s2, 0x11D2
                slti    $v0, $s2, 0x1170

loc_297D4:                               # CODE XREF: dtls1_connect+148↓j
                bnez    $v0, loc_298E0
                slti    $v0, $s2, 0x1128
                la      $t9, dtls1_start_timer
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s1
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_client_certificate
                jalr    $t9 ; dtls1_send_client_certificate
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 0x1180
                lw      $a1, 0x58($s1)
                sw      $v0, 0x34($s1)
                sw      $zero, 0x44($s1)
                lw      $v0, 0x34C($a1)
                beqz    $v0, loc_29CFC
                move    $a0, $zero

loc_29820:                               # CODE XREF: dtls1_connect+614↓j
                                         # dtls1_connect:loc_29CFC↓j ...
                lw      $s2, 0x34($s1)
                slti    $s3, $s2, 0x1174
                bnez    $s3, loc_297D4
                slti    $v0, $s2, 0x1170
                slti    $v0, $s2, 0x11D2

loc_29834:                               # CODE XREF: dtls1_connect:loc_297C8↑j
                beqz    $v0, loc_29A10
                slti    $v0, $s2, 0x11F2
                slti    $v0, $s2, 0x11D0
                bnez    $v0, loc_29A64
                slti    $v0, $s2, 0x1192
                lw      $v0, 0x5C($s1)
                la      $t9, ssl3_get_finished
                li      $v1, 1
                sw      $v1, 0x2E4($v0)
                move    $a0, $s1
                li      $a1, 0x11D0
                jalr    $t9 ; ssl3_get_finished
                li      $a2, 0x11D1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_stop_timer
                jalr    $t9 ; dtls1_stop_timer
                move    $a0, $s1
                lw      $v0, 0x6C($s1)
                beqz    $v0, loc_29FF0
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 0x11A0
                lw      $a1, 0x58($s1)
                sw      $v0, 0x34($s1)

loc_29898:                               # CODE XREF: dtls1_connect+918↓j
                                         # dtls1_connect+A80↓j ...
                move    $a0, $zero

loc_2989C:                               # CODE XREF: dtls1_connect+750↓j
                                         # dtls1_connect+A98↓j ...
                b       loc_29CF0
                sw      $zero, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_298A4:                               # CODE XREF: dtls1_connect+B0↑j
                                         # dtls1_connect+C8↑j
                la      $t9, SSL_clear
                jalr    $t9 ; SSL_clear
                move    $a0, $s1
                lw      $v0, 0x170($s1)
                beqz    $v0, loc_297BC
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_stop_timer

loc_298C0:                               # CODE XREF: dtls1_connect+D4↑j
                jalr    $t9 ; dtls1_stop_timer
                move    $a0, $s1
                lw      $v0, 0x174($s1)
                lw      $gp, 0x48+var_30($sp)
                addiu   $v0, 1
                sw      $zero, 0x170($s1)
                b       loc_297BC
                sw      $v0, 0x174($s1)
 # ---------------------------------------------------------------------------

loc_298E0:                               # CODE XREF: dtls1_connect:loc_297D4↑j
                beqz    $v0, loc_29B38
                slti    $v0, $s2, 0x1142
                slti    $v0, $s2, 0x1126
                beqz    $v0, loc_29E64
                li      $a2, 0x1127
                li      $s5, 0x1100
                beq     $s2, $s5, loc_29F9C
                slti    $v0, $s2, 0x1101
                beqz    $v0, loc_2A000
                slti    $v0, $s2, 0x1110
                li      $v0, 0x1000
                beq     $s2, $v0, loc_29C20
                li      $v0, 0x1003
                beq     $s2, $v0, loc_29C20
                li      $v0, 3
                bne     $s2, $v0, loc_29BD4
                la      $t9, ERR_put_error
                la      $t9, ssl3_cleanup_key_block
                jalr    $t9 ; ssl3_cleanup_key_block
                move    $a0, $s1
                lw      $v1, 0x58($s1)
                lw      $v0, 0($v1)
                andi    $v0, 4
                beqz    $v0, loc_2A210
                lw      $gp, 0x48+var_30($sp)

loc_29944:                               # CODE XREF: dtls1_connect+B3C↓j
                la      $t9, ssl_update_cache
                sw      $zero, 0x44($s1)
                sw      $zero, 0x178($s1)
                sw      $zero, 0x28($s1)
                move    $a0, $s1
                jalr    $t9 ; ssl_update_cache
                li      $a1, 1
                lw      $v0, 0x6C($s1)
                beqz    $v0, loc_2A188
                lw      $gp, 0x48+var_30($sp)
                lw      $v1, 0xDC($s1)
                lw      $v0, 0x58($v1)
                addiu   $v0, 1
                sw      $v0, 0x58($v1)

loc_2997C:                               # CODE XREF: dtls1_connect:loc_2A188↓j
                lw      $v0, 0x3C($v1)
                addiu   $v0, 1
                sw      $v0, 0x3C($v1)
                la      $v1, dtls1_connect
                beqz    $s4, loc_299AC
                sw      $v1, 0x20($s1)
                move    $a0, $s1
                li      $a1, 0x20  # ' '
                move    $t9, $s4
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x48+var_30($sp)

loc_299AC:                               # CODE XREF: dtls1_connect+2AC↑j
                lw      $v0, 0x5C($s1)
                li      $s0, 1
                sh      $zero, 0x226($v0)
                sh      $zero, 0x228($v0)

loc_299BC:                               # CODE XREF: dtls1_connect+11C↑j
                                         # dtls1_connect+18C↑j ...
                lw      $v0, 0x1C($s1)
                addiu   $v0, -1
                sw      $v0, 0x1C($s1)

loc_299C8:                               # CODE XREF: dtls1_connect+51C↓j
                                         # dtls1_connect+CC8↓j
                beqz    $s4, loc_299E4
                move    $a0, $s1
                li      $a1, 0x1002
                move    $t9, $s4
                jalr    $t9
                move    $a2, $s0
                lw      $gp, 0x48+var_30($sp)

loc_299E4:                               # CODE XREF: dtls1_connect:loc_299C8↑j
                move    $v0, $s0
                lw      $ra, 0x48+var_4($sp)
                lw      $s6, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_29A10:                               # CODE XREF: dtls1_connect:loc_29834↑j
                beqz    $v0, loc_29BB8
                li      $v0, 0x4000
                slti    $v0, $s2, 0x11F0
                beqz    $v0, loc_29E38
                la      $t9, ssl3_get_cert_status
                addiu   $v0, $s2, -0x11E0
                sltiu   $v0, 2
                beqz    $v0, loc_29BD4
                la      $t9, ERR_put_error
                la      $t9, ssl3_get_new_session_ticket
                jalr    $t9 ; ssl3_get_new_session_ticket
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x58($s1)
                li      $v0, 0x11D0
                move    $a0, $zero
                sw      $v0, 0x34($s1)
                b       loc_29CF0
                sw      $zero, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_29A64:                               # CODE XREF: dtls1_connect+160↑j
                bnez    $v0, loc_29DD4
                slti    $v0, $s2, 0x1190
                slti    $v0, $s2, 0x11A0
                bnez    $v0, loc_29BD4
                la      $t9, ERR_put_error
                slti    $v0, $s2, 0x11A2
                beqz    $v0, loc_2A0E8
                addiu   $v0, $s2, -0x11B0
                lw      $v0, 0x6C($s1)
                beqz    $v0, loc_2A224
                la      $t9, dtls1_start_timer

loc_29A90:                               # CODE XREF: dtls1_connect+B4C↓j
                la      $t9, dtls1_send_change_cipher_spec
                move    $a0, $s1
                li      $a1, 0x11A0
                jalr    $t9 ; dtls1_send_change_cipher_spec
                li      $a2, 0x11A1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x58($s1)
                lw      $a1, 0xC0($s1)
                lw      $a0, 0x344($v0)
                lw      $a2, 0x384($v0)
                li      $v1, 0x11B0
                sw      $v1, 0x34($s1)
                sw      $a0, 0xAC($a1)
                beqz    $a2, loc_2A278
                sw      $zero, 0x44($s1)
                lw      $v0, 0($a2)
                sw      $v0, 0xA8($a1)

loc_29ADC:                               # CODE XREF: dtls1_connect:loc_2A278↓j
                lw      $v0, 8($s1)
                lw      $v1, 0x64($v0)
                lw      $t9, 8($v1)
                jalr    $t9
                move    $a0, $s1
                beqz    $v0, loc_2A180
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 8($s1)
                move    $a0, $s1
                lw      $v1, 0x64($v0)
                lw      $t9, 0x10($v1)
                jalr    $t9
                li      $a1, 0x12
                beqz    $v0, loc_2A180
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_reset_seq_numbers
                move    $a0, $s1
                jalr    $t9 ; dtls1_reset_seq_numbers
                li      $a1, 2
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x58($s1)
                b       loc_29CF0
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_29B38:                               # CODE XREF: dtls1_connect:loc_298E0↑j
                bnez    $v0, loc_29D70
                slti    $v0, $s2, 0x1140
                slti    $v0, $s2, 0x1150
                bnez    $v0, loc_29BD4
                la      $t9, ERR_put_error
                slti    $v0, $s2, 0x1152
                bnez    $v0, loc_29EF0
                la      $t9, ssl3_get_certificate_request
                addiu   $v0, $s2, -0x1160
                sltiu   $v0, 2
                beqz    $v0, loc_29BD4
                la      $t9, ERR_put_error
                la      $t9, ssl3_get_server_done
                jalr    $t9 ; ssl3_get_server_done
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_stop_timer
                jalr    $t9 ; dtls1_stop_timer
                move    $a0, $s1
                lw      $a1, 0x58($s1)
                lw      $v0, 0x350($a1)
                beqz    $v0, loc_2A19C
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 0x1170
                sw      $v0, 0x348($a1)

loc_29BA4:                               # CODE XREF: dtls1_connect+AC0↓j
                sw      $zero, 0x44($s1)
                lw      $v0, 0x348($a1)
                move    $a0, $zero
                b       loc_29CF0
                sw      $v0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_29BB8:                               # CODE XREF: dtls1_connect:loc_29A10↑j
                beq     $s2, $v0, loc_29C20
                li      $v0, 0x5000
                beq     $s2, $v0, loc_29C20
                li      $v0, 0x3004
                beq     $s2, $v0, loc_29C04
                li      $v0, 1
                la      $t9, ERR_put_error

loc_29BD4:                               # CODE XREF: dtls1_connect+23C↑j
                                         # dtls1_connect+34C↑j ...
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0xF9
                li      $a2, 0xFF

loc_29BE4:                               # CODE XREF: dtls1_connect+C70↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $v0, 0x1C($s1)
                lw      $gp, 0x48+var_30($sp)
                addiu   $v0, -1
                li      $s0, 0xFFFFFFFF
                b       loc_299C8
                sw      $v0, 0x1C($s1)
 # ---------------------------------------------------------------------------

loc_29C04:                               # CODE XREF: dtls1_connect+4E8↑j
                lw      $a0, 0xDC($s1)
                li      $v1, 0x1000
                sw      $v0, 0x178($s1)
                sw      $v1, 0x34($s1)
                lw      $v0, 0x38($a0)
                addiu   $v0, 1
                sw      $v0, 0x38($a0)

loc_29C20:                               # CODE XREF: dtls1_connect+22C↑j
                                         # dtls1_connect+234↑j ...
                beqz    $s4, loc_29C40
                sw      $zero, 0x24($s1)
                move    $a0, $s1
                li      $a1, 0x10
                move    $t9, $s4
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x48+var_30($sp)

loc_29C40:                               # CODE XREF: dtls1_connect:loc_29C20↑j
                lw      $v0, 0($s1)
                li      $v1, 0xFE00
                andi    $a0, $v0, 0xFF00
                beq     $a0, $v1, loc_29C5C
                li      $v0, 0x100
                bne     $a0, $v0, loc_2A344
                la      $t9, ERR_put_error

loc_29C5C:                               # CODE XREF: dtls1_connect+56C↑j
                lw      $v1, 0x3C($s1)
                li      $v0, 0x1000
                beqz    $v1, loc_2A1D8
                sw      $v0, 4($s1)

loc_29C6C:                               # CODE XREF: dtls1_connect+B28↓j
                la      $t9, ssl3_setup_buffers
                jalr    $t9 ; ssl3_setup_buffers
                move    $a0, $s1
                beqz    $v0, loc_2A180
                lw      $gp, 0x48+var_30($sp)
                la      $t9, ssl_init_wbio_buffer
                move    $a0, $s1
                jalr    $t9 ; ssl_init_wbio_buffer
                move    $a1, $zero
                beqz    $v0, loc_2A180
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0xDC($s1)
                li      $v0, 0x1110
                sw      $v0, 0x34($s1)
                lw      $v1, 0x34($a1)
                lw      $a0, 0x58($s1)
                addiu   $v1, 1
                addiu   $v0, $a0, 0xC0
                sw      $v1, 0x34($a1)
                sw      $zero, 0x44($s1)
                sw      $zero, 0xC0($a0)
                sw      $zero, 0x1C($v0)
                sw      $zero, 4($v0)
                sw      $zero, 8($v0)
                sw      $zero, 0xC($v0)
                sw      $zero, 0x10($v0)
                sw      $zero, 0x14($v0)
                sw      $zero, 0x18($v0)
                lw      $v1, 0x5C($s1)
                lw      $a1, 0x58($s1)
                sw      $zero, 0($v1)
                move    $a0, $zero
                sw      $zero, 0x6C($s1)

loc_29CF0:                               # CODE XREF: dtls1_connect:loc_2989C↑j
                                         # dtls1_connect+37C↑j ...
                lw      $v0, 0x34C($a1)
                bnez    $v0, loc_29820
                nop

loc_29CFC:                               # CODE XREF: dtls1_connect+138↑j
                bnez    $a0, loc_29820
                nop
                lw      $v0, 0xE0($s1)
                bnez    $v0, loc_29D4C
                la      $t9, BIO_ctrl

loc_29D10:                               # CODE XREF: dtls1_connect+680↓j
                beqz    $s4, loc_29820
                nop
                lw      $s0, 0x34($s1)
                beq     $s2, $s0, loc_297C8
                li      $a1, 0x1001
                sw      $s2, 0x34($s1)
                move    $a0, $s1
                move    $t9, $s4
                jalr    $t9
                li      $a2, 1
                lw      $gp, 0x48+var_30($sp)
                move    $s2, $s0
                slti    $s3, $s0, 0x1174
                b       loc_297C8
                sw      $s0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_29D4C:                               # CODE XREF: dtls1_connect+628↑j
                lw      $a0, 0x10($s1)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                bgtz    $v0, loc_29D10
                lw      $gp, 0x48+var_30($sp)
                b       loc_299BC
                move    $s0, $v0
 # ---------------------------------------------------------------------------

loc_29D70:                               # CODE XREF: dtls1_connect:loc_29B38↑j
                beqz    $v0, loc_29F1C
                la      $t9, ssl3_get_key_exchange
                addiu   $v0, $s2, -0x1130
                sltiu   $v0, 2
                beqz    $v0, loc_29BD4
                la      $t9, ERR_put_error
                la      $t9, ssl3_check_finished
                jalr    $t9 ; ssl3_check_finished
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 2
                beq     $s0, $v0, loc_2A244
                li      $v0, 1
                lw      $a1, 0x58($s1)
                lw      $v1, 0x344($a1)
                lw      $v0, 0x10($v1)
                andi    $v0, 4
                beqz    $v0, loc_2A09C
                li      $v0, 0x1140

loc_29DC4:                               # CODE XREF: dtls1_connect+9C4↓j
                li      $a0, 1
                sw      $v0, 0x34($s1)
                b       loc_29CF0
                sw      $zero, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_29DD4:                               # CODE XREF: dtls1_connect:loc_29A64↑j
                beqz    $v0, loc_29F5C
                la      $t9, dtls1_start_timer
                addiu   $v0, $s2, -0x1180
                sltiu   $v0, 2
                beqz    $v0, loc_29BD4
                la      $t9, ERR_put_error
                la      $t9, dtls1_start_timer
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s1
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_client_key_exchange
                jalr    $t9 ; dtls1_send_client_key_exchange
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x58($s1)
                li      $v0, 1
                lw      $v1, 0x350($a1)
                beq     $v1, $v0, loc_2A25C
                li      $v0, 0x11A0
                move    $a0, $zero
                sw      $v0, 0x34($s1)
                b       loc_2989C
                sw      $zero, 0x180($a1)
 # ---------------------------------------------------------------------------

loc_29E38:                               # CODE XREF: dtls1_connect+33C↑j
                jalr    $t9 ; ssl3_get_cert_status
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x58($s1)
                li      $v0, 0x1140
                move    $a0, $zero
                sw      $v0, 0x34($s1)
                b       loc_29CF0
                sw      $zero, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_29E64:                               # CODE XREF: dtls1_connect+20C↑j
                lw      $v0, 0x100($s1)
                lw      $v1, 8($s1)
                sw      $v0, 0x48+var_38($sp)
                sw      $s6, 0x48+var_34($sp)
                lw      $t9, 0x30($v1)
                sw      $zero, 0x48+var_24($sp)
                move    $a0, $s1
                li      $a1, 0x1126
                jalr    $t9
                li      $a3, 0xFFFFFFFF
                move    $a2, $v0
                lw      $v0, 0x48+var_24($sp)
                beqz    $v0, loc_29FE0
                lw      $gp, 0x48+var_30($sp)
                lw      $a0, 0x58($s1)
                li      $v0, 3
                lw      $v1, 0x340($a0)
                beq     $v1, $v0, loc_2A280
                li      $v1, 1
                lw      $v0, 0x5C($s1)
                sw      $zero, 0($v0)
                sw      $v1, 0x34C($a0)

loc_29EBC:                               # CODE XREF: dtls1_connect+BF0↓j
                la      $t9, dtls1_stop_timer

loc_29EC0:                               # CODE XREF: dtls1_connect:loc_29FE0↓j
                jalr    $t9 ; dtls1_stop_timer
                move    $a0, $s1
                lw      $v1, 0x5C($s1)
                lw      $v0, 0($v1)
                beqz    $v0, loc_2A190
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 0x1110
                sw      $v0, 0x34($s1)

loc_29EE0:                               # CODE XREF: dtls1_connect+AB4↓j
                                         # dtls1_connect+B74↓j ...
                lw      $a1, 0x58($s1)
                move    $a0, $zero
                b       loc_29CF0
                sw      $zero, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_29EF0:                               # CODE XREF: dtls1_connect+470↑j
                jalr    $t9 ; ssl3_get_certificate_request
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x58($s1)
                li      $v0, 0x1160
                move    $a0, $zero
                sw      $v0, 0x34($s1)
                b       loc_29CF0
                sw      $zero, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_29F1C:                               # CODE XREF: dtls1_connect:loc_29D70↑j
                jalr    $t9 ; ssl3_get_key_exchange
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                la      $t9, ssl3_check_cert_and_algorithm
                li      $v0, 0x1150
                sw      $v0, 0x34($s1)
                sw      $zero, 0x44($s1)
                jalr    $t9 ; ssl3_check_cert_and_algorithm
                move    $a0, $s1
                beqz    $v0, loc_2A180
                lw      $gp, 0x48+var_30($sp)

loc_29F50:                               # CODE XREF: dtls1_connect+994↓j
                lw      $a1, 0x58($s1)
                b       loc_29CF0
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_29F5C:                               # CODE XREF: dtls1_connect:loc_29DD4↑j
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s1
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_send_client_verify
                jalr    $t9 ; dtls1_send_client_verify
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x58($s1)
                li      $v0, 0x11A0
                move    $a0, $zero
                sw      $v0, 0x34($s1)
                sw      $zero, 0x44($s1)
                b       loc_29CF0
                sw      $zero, 0x180($a1)
 # ---------------------------------------------------------------------------

loc_29F9C:                               # CODE XREF: dtls1_connect+218↑j
                la      $t9, BIO_ctrl
                li      $v0, 2
                lw      $a0, 0x10($s1)
                sw      $v0, 0x18($s1)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                blez    $v0, loc_2A358
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x58($s1)
                li      $v0, 1
                sw      $v0, 0x18($s1)
                lw      $v1, 0x348($a1)
                move    $a0, $zero
                b       loc_29CF0
                sw      $v1, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_29FE0:                               # CODE XREF: dtls1_connect+7B4↑j
                bgtz    $a2, loc_29EC0
                la      $t9, dtls1_stop_timer
                b       loc_299BC
                move    $s0, $a2
 # ---------------------------------------------------------------------------

loc_29FF0:                               # CODE XREF: dtls1_connect+1A4↑j
                lw      $a1, 0x58($s1)
                li      $v0, 3
                b       loc_29898
                sw      $v0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_2A000:                               # CODE XREF: dtls1_connect+220↑j
                bnez    $v0, loc_29BD4
                la      $t9, ERR_put_error
                slti    $v0, $s2, 0x1112
                beqz    $v0, loc_2A2E4
                addiu   $v0, $s2, -0x1120
                la      $t9, ssl3_init_finished_mac
                move    $a0, $s1
                jalr    $t9 ; ssl3_init_finished_mac
                sw      $zero, 0x30($s1)
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_start_timer
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s1
                lw      $gp, 0x48+var_30($sp)
                la      $t9, dtls1_client_hello
                jalr    $t9 ; dtls1_client_hello
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x5C($s1)
                lw      $v1, 0($v0)
                beqz    $v1, loc_2A1C4
                li      $v0, 0x1120
                lw      $a1, 0x58($s1)
                sw      $s5, 0x34($s1)
                sw      $v0, 0x348($a1)

loc_2A06C:                               # CODE XREF: dtls1_connect:loc_2A1C4↓j
                lw      $a0, 0x14($s1)
                lw      $a1, 0x10($s1)
                beq     $a0, $a1, loc_29F50
                sw      $zero, 0x44($s1)
                la      $t9, BIO_push
                jalr    $t9 ; BIO_push
                nop
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x58($s1)
                move    $a0, $zero
                b       loc_29CF0
                sw      $v0, 0x10($s1)
 # ---------------------------------------------------------------------------

loc_2A09C:                               # CODE XREF: dtls1_connect+6DC↑j
                lw      $v0, 0xC($v1)
                andi    $v0, 0x100
                bnez    $v0, loc_29DC4
                li      $v0, 0x1140
                la      $t9, ssl3_get_server_certificate
                jalr    $t9 ; ssl3_get_server_certificate
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x124($s1)
                beqz    $v0, loc_2A330
                li      $v0, 0x1140
                lw      $a1, 0x58($s1)
                li      $v0, 0x11F0
                move    $a0, $zero
                sw      $v0, 0x34($s1)
                b       loc_29CF0
                sw      $zero, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_2A0E8:                               # CODE XREF: dtls1_connect+39C↑j
                sltiu   $v0, 2
                beqz    $v0, loc_29BD4
                la      $t9, ERR_put_error
                lw      $v0, 0x6C($s1)
                beqz    $v0, loc_2A234
                la      $t9, dtls1_start_timer

loc_2A100:                               # CODE XREF: dtls1_connect+B5C↓j
                lw      $v0, 8($s1)
                la      $t9, dtls1_send_finished
                lw      $v1, 0x64($v0)
                move    $a0, $s1
                lw      $v0, 0x24($v1)
                lw      $a3, 0x20($v1)
                li      $a1, 0x11B0
                sw      $v0, 0x48+var_38($sp)
                jalr    $t9 ; dtls1_send_finished
                li      $a2, 0x11B1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $a1, 0x58($s1)
                li      $v1, 0xFFFFFFFB
                lw      $a2, 0($a1)
                lw      $v0, 0x6C($s1)
                and     $v1, $a2, $v1
                li      $a0, 0x1100
                sw      $a0, 0x34($s1)
                beqz    $v0, loc_2A1A8
                sw      $v1, 0($a1)
                li      $a0, 3
                andi    $v0, $a2, 2
                beqz    $v0, loc_29898
                sw      $a0, 0x348($a1)
                sw      $a0, 0x34($s1)
                ori     $v0, $v1, 4
                move    $a0, $zero
                sw      $v0, 0($a1)
                b       loc_2989C
                sw      $zero, 4($a1)
 # ---------------------------------------------------------------------------

loc_2A180:                               # CODE XREF: dtls1_connect+410↑j
                                         # dtls1_connect+430↑j ...
                b       loc_299BC
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_2A188:                               # CODE XREF: dtls1_connect+284↑j
                b       loc_2997C
                lw      $v1, 0xDC($s1)
 # ---------------------------------------------------------------------------

loc_2A190:                               # CODE XREF: dtls1_connect+7F0↑j
                li      $v0, 0x1130
                b       loc_29EE0
                sw      $v0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_2A19C:                               # CODE XREF: dtls1_connect+4B4↑j
                li      $v0, 0x1180
                b       loc_29BA4
                sw      $v0, 0x348($a1)
 # ---------------------------------------------------------------------------

loc_2A1A8:                               # CODE XREF: dtls1_connect+A70↑j
                lw      $v0, 0x138($s1)
                beqz    $v0, loc_2A26C
                li      $v0, 0x11D0
                li      $v0, 0x11E0
                move    $a0, $zero
                b       loc_2989C
                sw      $v0, 0x348($a1)
 # ---------------------------------------------------------------------------

loc_2A1C4:                               # CODE XREF: dtls1_connect+978↑j
                b       loc_2A06C
                sw      $v0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_2A1CC:                               # CODE XREF: dtls1_connect+8C↑j
                lw      $v0, 0xDC($s1)
                b       loc_29774
                lw      $s4, 0x9C($v0)
 # ---------------------------------------------------------------------------

loc_2A1D8:                               # CODE XREF: dtls1_connect+584↑j
                la      $t9, BUF_MEM_new
                jalr    $t9 ; BUF_MEM_new
                nop
                move    $s0, $v0
                beqz    $v0, loc_2A180
                lw      $gp, 0x48+var_30($sp)
                la      $t9, BUF_MEM_grow
                move    $a0, $v0
                jalr    $t9 ; BUF_MEM_grow
                li      $a1, 0x4000
                beqz    $v0, loc_2A38C
                lw      $gp, 0x48+var_30($sp)
                b       loc_29C6C
                sw      $s0, 0x3C($s1)
 # ---------------------------------------------------------------------------

loc_2A210:                               # CODE XREF: dtls1_connect+25C↑j
                la      $t9, ssl_free_wbio_buffer
                jalr    $t9 ; ssl_free_wbio_buffer
                move    $a0, $s1
                b       loc_29944
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_2A224:                               # CODE XREF: dtls1_connect+3A8↑j
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s1
                b       loc_29A90
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_2A234:                               # CODE XREF: dtls1_connect+A18↑j
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s1
                b       loc_2A100
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_2A244:                               # CODE XREF: dtls1_connect+6C4↑j
                lw      $v1, 0x138($s1)
                beqz    $v1, loc_2A2D8
                sw      $v0, 0x6C($s1)
                li      $v0, 0x11E0
                b       loc_29EE0
                sw      $v0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_2A25C:                               # CODE XREF: dtls1_connect+740↑j
                li      $v0, 0x1190
                move    $a0, $zero
                b       loc_2989C
                sw      $v0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_2A26C:                               # CODE XREF: dtls1_connect+ACC↑j
                move    $a0, $zero
                b       loc_2989C
                sw      $v0, 0x348($a1)
 # ---------------------------------------------------------------------------

loc_2A278:                               # CODE XREF: dtls1_connect+3EC↑j
                b       loc_29ADC
                sw      $zero, 0xA8($a1)
 # ---------------------------------------------------------------------------

loc_2A280:                               # CODE XREF: dtls1_connect+7C8↑j
                lw      $a1, 0x40($s1)
                lw      $a0, 0($s1)
                lbu     $v1, 0($a1)
                sra     $v0, $a0, 8
                bne     $v1, $v0, loc_2A3B0
                andi    $v0, $a0, 0xFF
                lbu     $v1, 1($a1)
                bne     $v1, $v0, loc_2A3B4
                addiu   $s0, $a1, 1
                lbu     $s0, 2($a1)
                lw      $a0, 0x5C($s1)
                la      $t9, memcpy
                addiu   $a0, 4
                addiu   $a1, 3
                jalr    $t9 ; memcpy
                move    $a2, $s0
                lw      $gp, 0x48+var_30($sp)
                lw      $v1, 0x5C($s1)
                li      $v0, 1
                sw      $v0, 0($v1)
                b       loc_29EBC
                sw      $s0, 0x204($v1)
 # ---------------------------------------------------------------------------

loc_2A2D8:                               # CODE XREF: dtls1_connect+B68↑j
                li      $v0, 0x11D0
                b       loc_29EE0
                sw      $v0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_2A2E4:                               # CODE XREF: dtls1_connect+92C↑j
                sltiu   $v0, 2
                beqz    $v0, loc_29BD4
                la      $t9, ERR_put_error
                la      $t9, ssl3_get_server_hello
                jalr    $t9 ; ssl3_get_server_hello
                move    $a0, $s1
                move    $s0, $v0
                blez    $v0, loc_299BC
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x6C($s1)
                beqz    $v0, loc_2A324
                li      $v0, 0x1126
                lw      $a1, 0x58($s1)
                li      $v0, 0x11D0
                b       loc_29898
                sw      $v0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_2A324:                               # CODE XREF: dtls1_connect+C2C↑j
                lw      $a1, 0x58($s1)
                b       loc_29898
                sw      $v0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_2A330:                               # CODE XREF: dtls1_connect+9E8↑j
                lw      $a1, 0x58($s1)
                move    $a0, $zero
                sw      $v0, 0x34($s1)
                b       loc_29CF0
                sw      $zero, 0x44($s1)
 # ---------------------------------------------------------------------------

loc_2A344:                               # CODE XREF: dtls1_connect+574↑j
                li      $a0, 0x14
                li      $a1, 0xF9
                li      $a2, 0x44  # 'D'
                b       loc_29BE4
                sw      $zero, 0x48+var_38($sp)
 # ---------------------------------------------------------------------------

loc_2A358:                               # CODE XREF: dtls1_connect+8DC↑j
                la      $t9, BIO_test_flags
                lw      $a0, 0x10($s1)
                jalr    $t9 ; BIO_test_flags
                li      $a1, 8
                bnez    $v0, loc_2A180
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x58($s1)
                li      $v1, 1
                sw      $v1, 0x18($s1)
                lw      $a0, 0x348($v0)
                li      $s0, 0xFFFFFFFF
                b       loc_299BC
                sw      $a0, 0x34($s1)
 # ---------------------------------------------------------------------------

loc_2A38C:                               # CODE XREF: dtls1_connect+B20↑j
                lw      $v0, 0x1C($s1)
                la      $t9, BUF_MEM_free
                addiu   $v0, -1
                move    $a0, $s0
                jalr    $t9 ; BUF_MEM_free
                sw      $v0, 0x1C($s1)
                lw      $gp, 0x48+var_30($sp)
                b       loc_299C8
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_2A3B0:                               # CODE XREF: dtls1_connect+BB0↑j
                addiu   $s0, $a1, 1

loc_2A3B4:                               # CODE XREF: dtls1_connect+BBC↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xFB
                li      $a2, 0x10A
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                lw      $v0, 0($s1)
                lw      $gp, 0x48+var_30($sp)
                lbu     $v1, 0($s0)
                andi    $v0, 0xFF00
                or      $v1, $v0
                la      $t9, ssl3_send_alert
                sw      $v1, 0($s1)
                move    $a0, $s1
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x46  # 'F'
                lw      $gp, 0x48+var_30($sp)
                b       loc_299BC
                li      $s0, 0xFFFFFFFF
 # End of function dtls1_connect


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_default_timeout
dtls1_default_timeout:                   # DATA XREF: LOAD:00004AF8↑o
                                         # .got:dtls1_default_timeout_ptr↓o
                jr      $ra
                li      $v0, 0x1C20
 # End of function dtls1_default_timeout


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_listen
dtls1_listen:                            # CODE XREF: dtls1_ctrl+6C↓j
                                         # DATA XREF: LOAD:00003398↑o ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_listen)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_ctrl
                li      $a2, 0x2000
                move    $a3, $zero
                move    $s1, $a1
                li      $a1, 0x20  # ' '
                jalr    $t9 ; SSL_ctrl
                move    $s0, $a0
                lw      $gp, 0x28+var_18($sp)
                lw      $v1, 0x5C($s0)
                li      $v0, 1
                la      $t9, SSL_accept
                sw      $v0, 0x254($v1)
                jalr    $t9 ; SSL_accept
                move    $a0, $s0
                blez    $v0, loc_2A4A0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_get_rbio
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                move    $a3, $s1
                li      $a1, 0x2E  # '.'
                jalr    $t9 ; BIO_ctrl
                move    $a2, $zero
                lw      $gp, 0x28+var_18($sp)
                li      $v0, 1

loc_2A4A0:                               # CODE XREF: dtls1_listen+58↑j
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function dtls1_listen


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_check_timeout_num
dtls1_check_timeout_num:                 # CODE XREF: dtls1_handle_timeout+54↓p
                                         # dtls1_read_bytes+C70↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_check_timeout_num)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $s0, 0x5C($a0)
                move    $s1, $a0
                lw      $v0, 0x2BC($s0)
                addiu   $v0, 1
                sltiu   $v1, $v0, 3
                beqz    $v1, loc_2A508
                sw      $v0, 0x2BC($s0)

loc_2A4F0:                               # CODE XREF: dtls1_check_timeout_num+90↓j
                move    $v0, $zero

loc_2A4F4:                               # CODE XREF: dtls1_check_timeout_num+B4↓j
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_2A508:                               # CODE XREF: dtls1_check_timeout_num+34↑j
                la      $t9, SSL_get_wbio
                jalr    $t9 ; SSL_get_wbio
                nop
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0x2F  # '/'
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                lw      $v1, 0x5C($s1)
                lw      $gp, 0x30+var_18($sp)
                sw      $v0, 0x258($s0)
                lw      $v0, 0x2BC($v1)
                sltiu   $v0, 0xD
                bnez    $v0, loc_2A4F0
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x13C
                li      $a2, 0x138
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_2A4F4
                li      $v0, 0xFFFFFFFF
 # End of function dtls1_check_timeout_num


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_stop_timer
dtls1_stop_timer:                        # CODE XREF: dtls1_accept+688↑p
                                         # dtls1_accept:loc_28414↑p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_stop_timer)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x5C($a0)
                la      $t9, SSL_get_rbio
                addiu   $v1, $v0, 0x2B4
                sw      $zero, 0x2B4($v0)
                sw      $zero, 8($v1)
                sw      $zero, 4($v1)
                lw      $v0, 0x5C($a0)
                move    $s0, $a0
                sw      $zero, 0x2C4($v0)
                sw      $zero, 0x2C0($v0)
                lw      $v1, 0x5C($a0)
                li      $v0, 1
                jalr    $t9 ; SSL_get_rbio
                sh      $v0, 0x2C8($v1)
                lw      $gp, 0x20+var_10($sp)
                lw      $a3, 0x5C($s0)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                addiu   $a3, 0x2C0
                li      $a1, 0x2D  # '-'
                jalr    $t9 ; BIO_ctrl
                move    $a2, $zero
                lw      $gp, 0x20+var_10($sp)
                la      $t9, dtls1_clear_record_buffer
                move    $a0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9 ; dtls1_clear_record_buffer
                addiu   $sp, 0x20
 # End of function dtls1_stop_timer


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_get_timeout
dtls1_get_timeout:                       # CODE XREF: dtls1_is_timer_expired+1C↓p
                                         # dtls1_ctrl+44↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_get_timeout)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $v1, 0x5C($a0)
                move    $s1, $a0
                lw      $v0, 0x2C0($v1)
                beqz    $v0, loc_2A724
                move    $s0, $a1
                la      $t9, gettimeofday

loc_2A638:                               # CODE XREF: dtls1_get_timeout+128↓j
                addiu   $a0, $sp, 0x30+var_18
                jalr    $t9 ; gettimeofday
                move    $a1, $zero
                lw      $a0, 0x5C($s1)
                lw      $a1, 0x30+var_18($sp)
                lw      $v1, 0x2C0($a0)
                slt     $v0, $v1, $a1
                bnez    $v0, loc_2A6AC
                lw      $gp, 0x30+var_20($sp)
                beq     $v1, $a1, loc_2A6CC
                lw      $v1, 0x30+var_14($sp)
                lw      $a1, 0x2C4($a0)
                lw      $a0, 0x2C0($a0)
                sw      $a1, 4($s0)
                sw      $a0, 0($s0)
                lw      $v0, 0x30+var_18($sp)
                lw      $v1, 0x30+var_14($sp)
                subu    $a0, $v0
                subu    $a1, $v1
                sw      $a0, 0($s0)
                bltz    $a1, loc_2A708
                sw      $a1, 4($s0)

loc_2A690:                               # CODE XREF: dtls1_get_timeout+100↓j
                                         # dtls1_get_timeout+11C↓j
                lw      $v0, 0($s0)
                bnez    $v0, loc_2A6B8
                move    $v0, $s0
                lw      $v0, 4($s0)
                slti    $v0, 0x3A98
                beqz    $v0, loc_2A6B8
                move    $v0, $s0

loc_2A6AC:                               # CODE XREF: dtls1_get_timeout+54↑j
                                         # dtls1_get_timeout+D4↓j
                sw      $zero, 0($s0)
                sw      $zero, 4($s0)

loc_2A6B4:                               # CODE XREF: dtls1_get_timeout+130↓j
                move    $v0, $s0

loc_2A6B8:                               # CODE XREF: dtls1_get_timeout+94↑j
                                         # dtls1_get_timeout+A4↑j
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_2A6CC:                               # CODE XREF: dtls1_get_timeout+5C↑j
                lw      $v0, 0x2C4($a0)
                slt     $v0, $v1, $v0
                beqz    $v0, loc_2A6AC
                nop
                lw      $a1, 0x2C4($a0)
                lw      $a0, 0x2C0($a0)
                sw      $a1, 4($s0)
                sw      $a0, 0($s0)
                lw      $v0, 0x30+var_18($sp)
                lw      $v1, 0x30+var_14($sp)
                subu    $a0, $v0
                subu    $a1, $v1
                sw      $a0, 0($s0)
                bgez    $a1, loc_2A690
                sw      $a1, 4($s0)

loc_2A708:                               # CODE XREF: dtls1_get_timeout+88↑j
                li      $v0, 0xF4240
                addu    $v0, $a1, $v0
                addiu   $v1, $a0, -1
                sw      $v1, 0($s0)
                b       loc_2A690
                sw      $v0, 4($s0)
 # ---------------------------------------------------------------------------

loc_2A724:                               # CODE XREF: dtls1_get_timeout+2C↑j
                lw      $v0, 0x2C4($v1)
                bnez    $v0, loc_2A638
                la      $t9, gettimeofday
                b       loc_2A6B4
                move    $s0, $zero
 # End of function dtls1_get_timeout


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_is_timer_expired
dtls1_is_timer_expired:                  # CODE XREF: dtls1_handle_timeout+20↓p
                                         # dtls1_read_failed+74↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_is_timer_expired)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, dtls1_get_timeout
                jalr    $t9 ; dtls1_get_timeout
                addiu   $a1, $sp, 0x28+var_10
                beqz    $v0, loc_2A770
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x28+var_10($sp)
                blez    $v0, loc_2A780
                lw      $v0, 0x28+var_C($sp)

loc_2A770:                               # CODE XREF: dtls1_is_timer_expired+24↑j
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_2A780:                               # CODE XREF: dtls1_is_timer_expired+30↑j
                lw      $ra, 0x28+var_8($sp)
                slti    $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # End of function dtls1_is_timer_expired


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_get_cipher
dtls1_get_cipher:                        # DATA XREF: LOAD:00004AE8↑o
                                         # .got:dtls1_get_cipher_ptr↓o

var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_get_cipher)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_get_cipher
                jalr    $t9 ; ssl3_get_cipher
                nop
                move    $v1, $v0
                bnez    $v0, loc_2A7D0
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_8($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_2A7D0:                               # CODE XREF: dtls1_get_cipher+28↑j
                lw      $v0, 0x14($v0)
                lw      $ra, 0x20+var_8($sp)
                xori    $v0, 4
                movz    $v1, $zero, $v0
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x20
 # End of function dtls1_get_cipher


 # =============== S U B R O U T I N E =======================================


sub_2A7EC:                               # CODE XREF: dtls1_clear+5C↓p
                                         # dtls1_free+34↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - sub_2A7EC)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                b       loc_2A858
                move    $s2, $a0
 # ---------------------------------------------------------------------------

loc_2A818:                               # CODE XREF: sub_2A7EC+84↓j
                lw      $v1, 8($s0)
                lw      $v0, 8($v1)
                beqz    $v0, loc_2A838
                move    $a0, $v0
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_18($sp)
                lw      $v1, 8($s0)

loc_2A838:                               # CODE XREF: sub_2A7EC+34↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $v1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)

loc_2A858:                               # CODE XREF: sub_2A7EC+24↑j
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x238($v0)
                lw      $gp, 0x28+var_18($sp)
                move    $s0, $v0
                bnez    $v0, loc_2A818
                la      $t9, CRYPTO_free
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x240($v0)
                lw      $gp, 0x28+var_18($sp)
                move    $s0, $v0
                beqz    $v0, loc_2A948
                la      $t9, CRYPTO_free

loc_2A898:                               # CODE XREF: sub_2A7EC+104↓j
                lw      $v1, 8($s0)
                lw      $v0, 8($v1)
                beqz    $v0, loc_2A8B8
                move    $a0, $v0
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_18($sp)
                lw      $v1, 8($s0)

loc_2A8B8:                               # CODE XREF: sub_2A7EC+B4↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $v1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x240($v0)
                lw      $gp, 0x28+var_18($sp)
                move    $s0, $v0
                bnez    $v0, loc_2A898
                la      $t9, CRYPTO_free
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x244($v0)
                lw      $gp, 0x28+var_18($sp)
                move    $s1, $v0
                beqz    $v0, loc_2A9B8
                la      $t9, CRYPTO_free

loc_2A918:                               # CODE XREF: sub_2A7EC+174↓j
                lw      $s0, 8($s1)
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x2C($s0)
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)

loc_2A948:                               # CODE XREF: sub_2A7EC+A4↑j
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x244($v0)
                lw      $gp, 0x28+var_18($sp)
                move    $s1, $v0
                bnez    $v0, loc_2A918
                la      $t9, CRYPTO_free
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x248($v0)
                lw      $gp, 0x28+var_18($sp)
                move    $s1, $v0
                beqz    $v0, loc_2AA28
                la      $t9, CRYPTO_free

loc_2A988:                               # CODE XREF: sub_2A7EC+1E4↓j
                lw      $s0, 8($s1)
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x2C($s0)
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)

loc_2A9B8:                               # CODE XREF: sub_2A7EC+124↑j
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x248($v0)
                lw      $gp, 0x28+var_18($sp)
                move    $s1, $v0
                bnez    $v0, loc_2A988
                la      $t9, CRYPTO_free
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x250($v0)
                lw      $gp, 0x28+var_18($sp)
                move    $s1, $v0
                beqz    $v0, loc_2AA48
                la      $t9, CRYPTO_free

loc_2A9F8:                               # CODE XREF: sub_2A7EC+254↓j
                lw      $s0, 8($s1)
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x2C($s0)
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)

loc_2AA28:                               # CODE XREF: sub_2A7EC+194↑j
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x250($v0)
                lw      $gp, 0x28+var_18($sp)
                move    $s1, $v0
                bnez    $v0, loc_2A9F8
                la      $t9, CRYPTO_free

loc_2AA48:                               # CODE XREF: sub_2A7EC+204↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function sub_2A7EC


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_clear
dtls1_clear:                             # DATA XREF: LOAD:00004A98↑o
                                         # .got:dtls1_clear_ptr↓o

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_clear)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s6, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                lw      $v0, 0x5C($a0)
                beqz    $v0, loc_2AB30
                move    $s0, $a0
                la      $t9, loc_30000
                lw      $s6, 0x258($v0)
                addiu   $t9, (sub_2A7EC - 0x30000)
                lw      $s5, 0x238($v0)
                lw      $s4, 0x240($v0)
                lw      $s3, 0x244($v0)
                lw      $s2, 0x248($v0)
                jalr    $t9 ; sub_2A7EC
                lw      $s1, 0x250($v0)
                lw      $gp, 0x38+var_28($sp)
                lw      $a0, 0x5C($s0)
                la      $t9, memset
                move    $a1, $zero
                jalr    $t9 ; memset
                li      $a2, 0x2E8
                lw      $v1, 0x24($s0)
                beqz    $v1, loc_2AAF4
                lw      $gp, 0x38+var_28($sp)
                lw      $v1, 0x5C($s0)
                li      $v0, 0x100
                sw      $v0, 0x204($v1)

loc_2AAF4:                               # CODE XREF: dtls1_clear+80↑j
                la      $t9, SSL_ctrl
                move    $a0, $s0
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                jalr    $t9 ; SSL_ctrl
                move    $a3, $zero
                andi    $v0, 0x1000
                bnez    $v0, loc_2ABAC
                lw      $gp, 0x38+var_28($sp)
                lw      $v0, 0x5C($s0)

loc_2AB1C:                               # CODE XREF: dtls1_clear+150↓j
                sw      $s1, 0x250($v0)
                sw      $s5, 0x238($v0)
                sw      $s4, 0x240($v0)
                sw      $s3, 0x244($v0)
                sw      $s2, 0x248($v0)

loc_2AB30:                               # CODE XREF: dtls1_clear+38↑j
                la      $t9, ssl3_clear
                jalr    $t9 ; ssl3_clear
                move    $a0, $s0
                lw      $v0, 0xF8($s0)
                andi    $v0, 0x8000
                beqz    $v0, loc_2AB7C
                lw      $gp, 0x38+var_28($sp)
                li      $v0, 0x100
                sw      $v0, 0($s0)
                lw      $ra, 0x38+var_4($sp)
                lw      $s6, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2AB7C:                               # CODE XREF: dtls1_clear+E4↑j
                li      $v0, 0xFEFF
                sw      $v0, 0($s0)
                lw      $ra, 0x38+var_4($sp)
                lw      $s6, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2ABAC:                               # CODE XREF: dtls1_clear+B0↑j
                lw      $v0, 0x5C($s0)
                b       loc_2AB1C
                sw      $s6, 0x258($v0)
 # End of function dtls1_clear


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_free
dtls1_free:                              # DATA XREF: LOAD:00004A38↑o
                                         # .got:dtls1_free_ptr↓o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_free)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, ssl3_free
                jalr    $t9 ; ssl3_free
                move    $s0, $a0
                lw      $gp, 0x20+var_10($sp)
                la      $t9, loc_30000
                addiu   $t9, (sub_2A7EC - 0x30000)
                jalr    $t9 ; sub_2A7EC
                move    $a0, $s0
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x5C($s0)
                la      $t9, pqueue_free
                jalr    $t9 ; pqueue_free
                lw      $a0, 0x238($v0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x5C($s0)
                la      $t9, pqueue_free
                jalr    $t9 ; pqueue_free
                lw      $a0, 0x240($v0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x5C($s0)
                la      $t9, pqueue_free
                jalr    $t9 ; pqueue_free
                lw      $a0, 0x244($v0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x5C($s0)
                la      $t9, pqueue_free
                jalr    $t9 ; pqueue_free
                lw      $a0, 0x248($v0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x5C($s0)
                la      $t9, pqueue_free
                jalr    $t9 ; pqueue_free
                lw      $a0, 0x250($v0)
                lw      $gp, 0x20+var_10($sp)
                lw      $a0, 0x5C($s0)
                la      $t9, CRYPTO_free
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9 ; CRYPTO_free
                addiu   $sp, 0x20
 # End of function dtls1_free


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_new
dtls1_new:                               # DATA XREF: LOAD:000048D8↑o
                                         # .got:dtls1_new_ptr↓o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_new)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, ssl3_new
                jalr    $t9 ; ssl3_new
                move    $s1, $a0
                bnez    $v0, loc_2ACC0
                lw      $gp, 0x28+var_18($sp)

loc_2ACA8:                               # CODE XREF: dtls1_new+68↓j
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_2ACC0:                               # CODE XREF: dtls1_new+2C↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aD1LibC - 0x40000)  # "d1_lib.c"
                li      $a0, 0x2E8
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x64  # 'd'
                move    $s0, $v0
                beqz    $v0, loc_2ACA8
                lw      $gp, 0x28+var_18($sp)
                la      $t9, memset
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; memset
                li      $a2, 0x2E8
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pqueue_new
                jalr    $t9 ; pqueue_new
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pqueue_new
                jalr    $t9 ; pqueue_new
                sw      $v0, 0x238($s0)
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pqueue_new
                jalr    $t9 ; pqueue_new
                sw      $v0, 0x240($s0)
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pqueue_new
                jalr    $t9 ; pqueue_new
                sw      $v0, 0x244($s0)
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pqueue_new
                jalr    $t9 ; pqueue_new
                sw      $v0, 0x248($s0)
                lw      $v1, 0x24($s1)
                lw      $gp, 0x28+var_18($sp)
                bnez    $v1, loc_2AE58
                sw      $v0, 0x250($s0)

loc_2AD58:                               # CODE XREF: dtls1_new+1E8↓j
                lw      $a0, 0x238($s0)
                beqz    $a0, loc_2ADD0
                nop
                lw      $v0, 0x240($s0)
                beqz    $v0, loc_2ADC4
                la      $t9, pqueue_free
                lw      $v0, 0x244($s0)
                beqz    $v0, loc_2ADC4
                nop
                lw      $v0, 0x248($s0)
                beqz    $v0, loc_2ADC4
                nop
                lw      $v0, 0x250($s0)
                beqz    $v0, loc_2ADC4
                nop
                lw      $v0, 8($s1)
                sw      $s0, 0x5C($s1)
                lw      $t9, 8($v0)
                jalr    $t9
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_2ADC4:                               # CODE XREF: dtls1_new+F4↑j
                                         # dtls1_new+100↑j ...
                jalr    $t9 ; pqueue_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_2ADD0:                               # CODE XREF: dtls1_new+E8↑j
                lw      $a0, 0x240($s0)
                beqz    $a0, loc_2ADE8
                la      $t9, pqueue_free
                jalr    $t9 ; pqueue_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_2ADE8:                               # CODE XREF: dtls1_new+160↑j
                lw      $a0, 0x244($s0)
                beqz    $a0, loc_2AE00
                la      $t9, pqueue_free
                jalr    $t9 ; pqueue_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_2AE00:                               # CODE XREF: dtls1_new+178↑j
                lw      $a0, 0x248($s0)
                beqz    $a0, loc_2AE18
                la      $t9, pqueue_free
                jalr    $t9 ; pqueue_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_2AE18:                               # CODE XREF: dtls1_new+190↑j
                lw      $a0, 0x250($s0)
                beqz    $a0, loc_2AE30
                la      $t9, pqueue_free
                jalr    $t9 ; pqueue_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_2AE30:                               # CODE XREF: dtls1_new+1A8↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_2AE58:                               # CODE XREF: dtls1_new+DC↑j
                li      $v0, 0x100
                b       loc_2AD58
                sw      $v0, 0x204($s0)
 # End of function dtls1_new


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_start_timer
dtls1_start_timer:                       # CODE XREF: dtls1_accept+114↑p
                                         # dtls1_accept+314↑p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_start_timer)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                move    $s0, $a0
                lw      $a0, 0x5C($a0)
                lw      $v0, 0x2C0($a0)
                bnez    $v0, loc_2AEA8
                la      $t9, gettimeofday
                lw      $v0, 0x2C4($a0)
                bnez    $v0, loc_2AEA8
                li      $v0, 1
                sh      $v0, 0x2C8($a0)
                la      $t9, gettimeofday

loc_2AEA8:                               # CODE XREF: dtls1_start_timer+28↑j
                                         # dtls1_start_timer+34↑j
                move    $a1, $zero
                jalr    $t9 ; gettimeofday
                addiu   $a0, 0x2C0
                lw      $v1, 0x5C($s0)
                lw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x2C0($v1)
                lhu     $a0, 0x2C8($v1)
                addu    $v0, $a0
                la      $t9, SSL_get_rbio
                move    $a0, $s0
                jalr    $t9 ; SSL_get_rbio
                sw      $v0, 0x2C0($v1)
                lw      $gp, 0x20+var_10($sp)
                lw      $a3, 0x5C($s0)
                la      $t9, BIO_ctrl
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                move    $a0, $v0
                addiu   $a3, 0x2C0
                li      $a1, 0x2D  # '-'
                move    $a2, $zero
                jr      $t9 ; BIO_ctrl
                addiu   $sp, 0x20
 # End of function dtls1_start_timer


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_double_timeout
dtls1_double_timeout:                    # CODE XREF: dtls1_handle_timeout+44↓p
                                         # DATA XREF: LOAD:000027D8↑o ...
                la      $gp, (off_5A360+0x7FF0 - dtls1_double_timeout)
                addu    $gp, $t9
                lw      $a1, 0x5C($a0)
                lhu     $v0, 0x2C8($a1)
                sll     $v0, 1
                andi    $v1, $v0, 0xFFFF
                sltiu   $v1, 0x3D  # '='
                bnez    $v1, loc_2AF34
                sh      $v0, 0x2C8($a1)
                li      $v0, 0x3C  # '<'
                sh      $v0, 0x2C8($a1)

loc_2AF34:                               # CODE XREF: dtls1_double_timeout+20↑j
                la      $t9, dtls1_start_timer
                jr      $t9 ; dtls1_start_timer
                nop
 # End of function dtls1_double_timeout


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_handle_timeout
dtls1_handle_timeout:                    # CODE XREF: dtls1_ctrl+7C↓j
                                         # dtls1_read_bytes:loc_2C818↓p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_handle_timeout)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, dtls1_is_timer_expired
                jalr    $t9 ; dtls1_is_timer_expired
                move    $s0, $a0
                bnez    $v0, loc_2AF80
                lw      $gp, 0x20+var_10($sp)

loc_2AF70:                               # CODE XREF: dtls1_handle_timeout:loc_2B004↓j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_2AF80:                               # CODE XREF: dtls1_handle_timeout+28↑j
                la      $t9, dtls1_double_timeout
                jalr    $t9 ; dtls1_double_timeout
                move    $a0, $s0
                lw      $gp, 0x20+var_10($sp)
                la      $t9, dtls1_check_timeout_num
                jalr    $t9 ; dtls1_check_timeout_num
                move    $a0, $s0
                bltz    $v0, loc_2B004
                lw      $gp, 0x20+var_10($sp)
                lw      $a0, 0x5C($s0)
                lw      $v0, 0x2B4($a0)
                addiu   $v0, 1
                sltiu   $v1, $v0, 3
                bnez    $v1, loc_2AFC4
                sw      $v0, 0x2B4($a0)
                li      $v0, 1
                sw      $v0, 0x2B4($a0)

loc_2AFC4:                               # CODE XREF: dtls1_handle_timeout+74↑j
                lw      $v0, 0x170($s0)
                beqz    $v0, loc_2AFEC
                nop
                la      $t9, dtls1_heartbeat
                sw      $zero, 0x170($s0)

loc_2AFD8:                               # CODE XREF: dtls1_handle_timeout+BC↓j
                move    $a0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_2AFEC:                               # CODE XREF: dtls1_handle_timeout+88↑j
                la      $t9, dtls1_start_timer
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s0
                lw      $gp, 0x20+var_10($sp)
                b       loc_2AFD8
                la      $t9, dtls1_retransmit_buffered_messages
 # ---------------------------------------------------------------------------

loc_2B004:                               # CODE XREF: dtls1_handle_timeout+5C↑j
                b       loc_2AF70
                li      $v0, 0xFFFFFFFF
 # End of function dtls1_handle_timeout


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_ctrl
dtls1_ctrl:                              # DATA XREF: LOAD:00004858↑o
                                         # .got:dtls1_ctrl_ptr↓o

var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_ctrl)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                li      $v0, 0x4A  # 'J'
                beq     $a1, $v0, loc_2B080
                li      $v0, 0x4B  # 'K'
                beq     $a1, $v0, loc_2B06C
                li      $v0, 0x49  # 'I'
                beq     $a1, $v0, loc_2B04C
                la      $t9, ssl3_ctrl
                lw      $ra, 0x20+var_8($sp)
                jr      $t9 ; ssl3_ctrl
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_2B04C:                               # CODE XREF: dtls1_ctrl+2C↑j
                la      $t9, dtls1_get_timeout
                jalr    $t9 ; dtls1_get_timeout
                move    $a1, $a3
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_8($sp)
                sltu    $v0, $zero, $v0
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_2B06C:                               # CODE XREF: dtls1_ctrl+24↑j
                la      $t9, dtls1_listen
                lw      $ra, 0x20+var_8($sp)
                move    $a1, $a3
                jr      $t9 ; dtls1_listen
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_2B080:                               # CODE XREF: dtls1_ctrl+1C↑j
                la      $t9, dtls1_handle_timeout
                lw      $ra, 0x20+var_8($sp)
                jr      $t9 ; dtls1_handle_timeout
                addiu   $sp, 0x20
 # End of function dtls1_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_reset_seq_numbers
dtls1_reset_seq_numbers:                 # CODE XREF: dtls1_accept+208↑p
                                         # dtls1_connect+440↑p ...
                andi    $a1, 1
                beqz    $a1, loc_2B10C
                move    $t1, $a0
                lw      $a0, 0x5C($a0)
                lw      $t0, 0x58($t1)
                addiu   $v0, $a0, 0x218
                lw      $a3, 8($v0)
                lw      $a1, 0x218($a0)
                lw      $a2, 4($v0)
                addiu   $v1, $a0, 0x20C
                sw      $a1, 0x20C($a0)
                sw      $a3, 8($v1)
                sw      $a2, 4($v1)
                lhu     $v0, 0x208($a0)
                lw      $a1, 0x5C($t1)
                addiu   $t0, 8
                addiu   $v1, $a1, 0x218
                addiu   $v0, 1
                sh      $v0, 0x208($a0)
                sw      $zero, 0x218($a1)
                sw      $zero, 8($v1)
                sw      $zero, 4($v1)
                sb      $zero, 7($t0)
                sb      $zero, 0($t0)
                sb      $zero, 1($t0)
                sb      $zero, 2($t0)
                sb      $zero, 3($t0)
                sb      $zero, 4($t0)
                sb      $zero, 5($t0)
                jr      $ra
                sb      $zero, 6($t0)
 # ---------------------------------------------------------------------------

loc_2B10C:                               # CODE XREF: dtls1_reset_seq_numbers+4↑j
                lw      $v0, 0x58($a0)
                lw      $a1, 0x5C($a0)
                addiu   $t0, $v0, 0x54  # 'T'
                lwl     $v1, 3($t0)
                lwl     $a0, 7($t0)
                lwr     $v1, 0($t0)
                addiu   $v0, $a1, 0x22A
                lwr     $a0, 4($t0)
                usw     $v1, 0($v0)
                usw     $a0, 4($v0)
                lw      $v1, 0x5C($t1)
                lhu     $v0, 0x20A($v1)
                addiu   $v0, 1
                sh      $v0, 0x20A($v1)
                sb      $zero, 7($t0)
                sb      $zero, 0($t0)
                sb      $zero, 1($t0)
                sb      $zero, 2($t0)
                sb      $zero, 3($t0)
                sb      $zero, 4($t0)
                sb      $zero, 5($t0)
                jr      $ra
                sb      $zero, 6($t0)
 # End of function dtls1_reset_seq_numbers


 # =============== S U B R O U T I N E =======================================


                .globl do_dtls1_write
do_dtls1_write:                          # CODE XREF: dtls1_dispatch_alert+54↓p
                                         # dtls1_write_bytes+7C↓p
                                         # DATA XREF: ...

var_40          = -0x40
var_38          = -0x38
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - do_dtls1_write)
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_4($sp)
                sw      $fp, 0x50+var_8($sp)
                sw      $s7, 0x50+var_C($sp)
                sw      $s6, 0x50+var_10($sp)
                sw      $s5, 0x50+var_14($sp)
                sw      $s4, 0x50+var_18($sp)
                sw      $s3, 0x50+var_1C($sp)
                sw      $s2, 0x50+var_20($sp)
                sw      $s1, 0x50+var_24($sp)
                sw      $s0, 0x50+var_28($sp)
                sw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x58($a0)
                move    $s6, $a1
                lw      $v0, 0x108($v1)
                lw      $a1, 0x50+arg_10($sp)
                move    $s0, $a0
                sw      $a2, 0x50+var_30($sp)
                move    $s5, $a3
                bnez    $v0, loc_2B3B0
                sw      $a1, 0x50+var_2C($sp)
                lw      $v0, 0x18C($v1)
                bnez    $v0, loc_2B388
                nop
                bnez    $s5, loc_2B1EC
                lw      $v0, 0x50+var_2C($sp)

loc_2B1E4:                               # CODE XREF: do_dtls1_write+238↓j
                beqz    $v0, loc_2B35C
                lw      $ra, 0x50+var_4($sp)

loc_2B1EC:                               # CODE XREF: do_dtls1_write+6C↑j
                                         # do_dtls1_write+230↓j
                lw      $v0, 0xC0($s0)
                beqz    $v0, loc_2B214
                lw      $s1, 0x58($s0)
                lw      $v0, 0x8C($s0)
                beqz    $v0, loc_2B214
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x90($s0)
                bnez    $v0, loc_2B4F8
                lw      $gp, 0x50+var_38($sp)

loc_2B214:                               # CODE XREF: do_dtls1_write+80↑j
                                         # do_dtls1_write+8C↑j
                move    $fp, $zero

loc_2B218:                               # CODE XREF: do_dtls1_write+3A8↓j
                lw      $v0, 0xFC($s1)
                sb      $s6, 0($v0)
                sw      $s6, 0x130($s1)
                lw      $v1, 0($s0)
                addiu   $s3, $v0, 0xD
                sra     $v1, 8
                sb      $v1, 1($v0)
                lw      $a0, 0($s0)
                sb      $a0, 2($v0)
                lw      $a0, 0x8C($s0)
                beqz    $a0, loc_2B260
                addiu   $s2, $v0, 3
                la      $t9, EVP_CIPHER_flags
                jalr    $t9 ; EVP_CIPHER_flags
                lw      $a0, 0($a0)
                andi    $v0, 2
                bnez    $v0, loc_2B49C
                lw      $gp, 0x50+var_38($sp)

loc_2B260:                               # CODE XREF: do_dtls1_write+D0↑j
                move    $a0, $zero
                lw      $v1, 0x50+var_30($sp)
                lw      $v0, 0x94($s0)
                addu    $a0, $s3, $a0
                move    $s4, $zero
                move    $s7, $zero
                sw      $a0, 0x13C($s1)
                sw      $s5, 0x134($s1)
                beqz    $v0, loc_2B4D8
                sw      $v1, 0x140($s1)

loc_2B288:                               # CODE XREF: do_dtls1_write+360↓j
                la      $t9, ssl3_do_compress
                jalr    $t9 ; ssl3_do_compress
                move    $a0, $s0
                beqz    $v0, loc_2B528
                lw      $gp, 0x50+var_38($sp)

loc_2B29C:                               # CODE XREF: do_dtls1_write+380↓j
                bnez    $fp, loc_2B550
                nop

loc_2B2A4:                               # CODE XREF: do_dtls1_write+414↓j
                sw      $s3, 0x140($s1)
                bnez    $s4, loc_2B47C
                sw      $s3, 0x13C($s1)

loc_2B2B0:                               # CODE XREF: do_dtls1_write+324↓j
                lw      $v0, 8($s0)
                move    $a0, $s0
                lw      $v1, 0x64($v0)
                lw      $t9, 0($v1)
                jalr    $t9
                li      $a1, 1
                lw      $v1, 0x5C($s0)
                lw      $gp, 0x50+var_38($sp)
                lhu     $v0, 0x20A($v1)
                addiu   $a1, $s2, 2
                srl     $v0, 8
                sb      $v0, 0($s2)
                lw      $a0, 0x5C($s0)
                lhu     $v1, 0x20A($a0)
                la      $t9, ssl3_record_sequence_update
                sb      $v1, 1($s2)
                lw      $v0, 0x58($s0)
                addiu   $v0, 0x56  # 'V'
                ulw     $v1, 0($v0)
                usw     $v1, 0($a1)
                lbu     $a0, 4($v0)
                sb      $a0, 4($a1)
                lbu     $v1, 5($v0)
                sb      $v1, 5($a1)
                lw      $v0, 0x134($s1)
                srl     $v0, 8
                sb      $v0, 8($s2)
                lw      $v1, 0x134($s1)
                sb      $v1, 9($s2)
                lw      $v0, 0x134($s1)
                lw      $a0, 0x58($s0)
                addiu   $v0, 0xD
                sw      $v0, 0x134($s1)
                sw      $s6, 0x130($s1)
                jalr    $t9 ; ssl3_record_sequence_update
                addiu   $a0, 0x54  # 'T'
                lw      $a1, 0x50+var_2C($sp)
                beqz    $a1, loc_2B414
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x134($s1)

loc_2B358:                               # CODE XREF: do_dtls1_write+228↓j
                                         # do_dtls1_write:loc_2B520↓j ...
                lw      $ra, 0x50+var_4($sp)

loc_2B35C:                               # CODE XREF: do_dtls1_write:loc_2B1E4↑j
                lw      $fp, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_2B388:                               # CODE XREF: do_dtls1_write+64↑j
                lw      $v0, 8($a0)
                lw      $t9, 0x3C($v0)
                jalr    $t9
                nop
                blez    $v0, loc_2B358
                lw      $gp, 0x50+var_38($sp)
                bnez    $s5, loc_2B1EC
                lw      $v0, 0x50+var_2C($sp)
                b       loc_2B1E4
                nop
 # ---------------------------------------------------------------------------

loc_2B3B0:                               # CODE XREF: do_dtls1_write+58↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aD1PktC - 0x40000)  # "d1_pkt.c"
                addiu   $a2, (aSslMacSecretSi_0+0x28 - 0x40000)  # "0"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x5B4
                lw      $gp, 0x50+var_38($sp)
                lw      $a2, 0x50+var_30($sp)
                la      $t9, ssl3_write_pending
                move    $a0, $s0
                move    $a1, $s6
                move    $a3, $s5
                lw      $ra, 0x50+var_4($sp)
                lw      $fp, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $t9 ; ssl3_write_pending
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_2B414:                               # CODE XREF: do_dtls1_write+1DC↑j
                lw      $v1, 0x134($s1)
                lw      $v0, 0x58($s0)
                sw      $v1, 0x108($s1)
                lw      $v1, 0x50+var_30($sp)
                la      $t9, ssl3_write_pending
                sw      $zero, 0x104($s1)
                sw      $s5, 0x170($v0)
                sw      $s5, 0x168($v0)
                sw      $s6, 0x16C($v0)
                move    $a0, $s0
                move    $a1, $s6
                move    $a3, $s5
                lw      $ra, 0x50+var_4($sp)
                lw      $fp, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                sw      $v1, 0x174($v0)
                move    $a2, $v1
                jr      $t9 ; ssl3_write_pending
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_2B47C:                               # CODE XREF: do_dtls1_write+138↑j
                la      $t9, RAND_pseudo_bytes
                move    $a0, $s3
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a1, $s4
                lw      $v1, 0x134($s1)
                addu    $v1, $s7
                b       loc_2B2B0
                sw      $v1, 0x134($s1)
 # ---------------------------------------------------------------------------

loc_2B49C:                               # CODE XREF: do_dtls1_write+E8↑j
                lw      $v0, 0x8C($s0)
                la      $t9, EVP_CIPHER_block_size
                jalr    $t9 ; EVP_CIPHER_block_size
                lw      $a0, 0($v0)
                move    $a0, $v0
                move    $s7, $v0
                move    $s4, $v0
                lw      $v1, 0x50+var_30($sp)
                lw      $v0, 0x94($s0)
                addu    $a0, $s3, $a0
                lw      $gp, 0x50+var_38($sp)
                sw      $a0, 0x13C($s1)
                sw      $s5, 0x134($s1)
                bnez    $v0, loc_2B288
                sw      $v1, 0x140($s1)

loc_2B4D8:                               # CODE XREF: do_dtls1_write+110↑j
                la      $t9, memcpy
                move    $a1, $v1
                jalr    $t9 ; memcpy
                move    $a2, $s5
                lw      $gp, 0x50+var_38($sp)
                lw      $v1, 0x13C($s1)
                b       loc_2B29C
                sw      $v1, 0x140($s1)
 # ---------------------------------------------------------------------------

loc_2B4F8:                               # CODE XREF: do_dtls1_write+9C↑j
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x90($s0)
                lw      $gp, 0x50+var_38($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                move    $fp, $v0
                bgez    $v0, loc_2B218
                lw      $gp, 0x50+var_38($sp)

loc_2B520:                               # CODE XREF: do_dtls1_write+404↓j
                b       loc_2B358
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_2B528:                               # CODE XREF: do_dtls1_write+124↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                li      $a0, 0x14
                li      $a1, 0xF5
                li      $a2, 0x8D
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x50+var_38($sp)
                b       loc_2B358
                li      $v0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_2B550:                               # CODE XREF: do_dtls1_write:loc_2B29C↑j
                lw      $v0, 8($s0)
                lw      $a1, 0x134($s1)
                lw      $v1, 0x64($v0)
                addu    $a1, $s7, $a1
                lw      $t9, 4($v1)
                addu    $a1, $s3
                move    $a0, $s0
                jalr    $t9
                li      $a2, 1
                bltz    $v0, loc_2B520
                lw      $gp, 0x50+var_38($sp)
                lw      $v0, 0x134($s1)
                addu    $v0, $fp
                b       loc_2B2A4
                sw      $v0, 0x134($s1)
 # End of function do_dtls1_write


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_dispatch_alert
dtls1_dispatch_alert:                    # DATA XREF: LOAD:00004848↑o
                                         # .got:dtls1_dispatch_alert_ptr↓o

var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_dispatch_alert)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_4($sp)
                sw      $s2, 0x40+var_8($sp)
                sw      $s1, 0x40+var_C($sp)
                sw      $s0, 0x40+var_10($sp)
                sw      $gp, 0x40+var_20($sp)
                lw      $v0, 0x58($a0)
                la      $t9, do_dtls1_write
                sw      $zero, 0x18C($v0)
                sh      $zero, 0x40+var_18($sp)
                lbu     $v1, 0x190($v0)
                li      $a1, 0x15
                sb      $v1, 0x40+var_18($sp)
                lbu     $a2, 0x191($v0)
                li      $a3, 2
                sb      $a2, 0x40+var_18+1($sp)
                sw      $zero, 0x40+var_30($sp)
                addiu   $a2, $sp, 0x40+var_18
                jalr    $t9 ; do_dtls1_write
                move    $s0, $a0
                move    $s2, $v0
                blez    $v0, loc_2B6A0
                lw      $gp, 0x40+var_20($sp)
                lw      $v1, 0x58($s0)
                li      $s1, 2
                lbu     $v0, 0x190($v1)
                beq     $v0, $s1, loc_2B6C8
                la      $t9, BIO_ctrl

loc_2B608:                               # CODE XREF: dtls1_dispatch_alert+150↓j
                lw      $t9, 0x64($s0)
                beqz    $t9, loc_2B63C
                li      $a0, 1
                lw      $a3, 0x58($s0)
                lw      $v0, 0x68($s0)
                lw      $a1, 0($s0)
                addiu   $a3, 0x190
                sw      $s1, 0x40+var_30($sp)
                sw      $v0, 0x40+var_28($sp)
                sw      $s0, 0x40+var_2C($sp)
                jalr    $t9
                li      $a2, 0x15
                lw      $gp, 0x40+var_20($sp)

loc_2B63C:                               # CODE XREF: dtls1_dispatch_alert+80↑j
                lw      $t9, 0xD0($s0)
                beqz    $t9, loc_2B688
                nop

loc_2B648:                               # CODE XREF: dtls1_dispatch_alert+104↓j
                lw      $v0, 0x58($s0)
                move    $a0, $s0
                lbu     $a2, 0x190($v0)
                lbu     $v1, 0x191($v0)
                sll     $a2, 8
                or      $a2, $v1
                jalr    $t9
                li      $a1, 0x4008
                lw      $gp, 0x40+var_20($sp)
                move    $v0, $s2
                lw      $ra, 0x40+var_4($sp)

loc_2B674:                               # CODE XREF: dtls1_dispatch_alert+10C↓j
                lw      $s2, 0x40+var_8($sp)
                lw      $s1, 0x40+var_C($sp)
                lw      $s0, 0x40+var_10($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_2B688:                               # CODE XREF: dtls1_dispatch_alert+B4↑j
                lw      $v0, 0xDC($s0)
                lw      $t9, 0x9C($v0)
                bnez    $t9, loc_2B648
                move    $v0, $s2
                b       loc_2B674
                lw      $ra, 0x40+var_4($sp)
 # ---------------------------------------------------------------------------

loc_2B6A0:                               # CODE XREF: dtls1_dispatch_alert+60↑j
                lw      $v1, 0x58($s0)
                li      $v0, 1
                sw      $v0, 0x18C($v1)
                lw      $ra, 0x40+var_4($sp)
                move    $v0, $s2
                lw      $s1, 0x40+var_C($sp)
                lw      $s2, 0x40+var_8($sp)
                lw      $s0, 0x40+var_10($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_2B6C8:                               # CODE XREF: dtls1_dispatch_alert+74↑j
                lw      $a0, 0x10($s0)
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                b       loc_2B608
                lw      $gp, 0x40+var_20($sp)
 # End of function dtls1_dispatch_alert


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_write_bytes
dtls1_write_bytes:                       # CODE XREF: dtls1_write_app_data_bytes+88↓j
                                         # dtls1_heartbeat+128↓p ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_write_bytes)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                slti    $v0, $a3, 0x4001
                move    $s1, $a3
                move    $s0, $a0
                move    $s2, $a1
                bnez    $v0, loc_2B744
                move    $s3, $a2
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aD1PktC - 0x40000)  # "d1_pkt.c"
                addiu   $a2, (aLenSsl3RtMaxPl - 0x40000)  # "len <= SSL3_RT_MAX_PLAIN_LENGTH"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x5A0
                lw      $gp, 0x38+var_20($sp)

loc_2B744:                               # CODE XREF: dtls1_write_bytes+38↑j
                la      $t9, do_dtls1_write
                li      $v0, 1
                sw      $v0, 0x18($s0)
                move    $a0, $s0
                sw      $zero, 0x38+var_28($sp)
                move    $a1, $s2
                move    $a2, $s3
                jalr    $t9 ; do_dtls1_write
                move    $a3, $s1
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # End of function dtls1_write_bytes


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_write_app_data_bytes
dtls1_write_app_data_bytes:              # DATA XREF: LOAD:000047D8↑o
                                         # .got:dtls1_write_app_data_bytes_ptr↓o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_write_app_data_bytes)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_state
                move    $s2, $a1
                move    $s3, $a2
                move    $s1, $a3
                jalr    $t9 ; SSL_state
                move    $s0, $a0
                andi    $v0, 0x3000
                beqz    $v0, loc_2B7E0
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0x1C($s0)
                beqz    $v0, loc_2B818
                nop

loc_2B7E0:                               # CODE XREF: dtls1_write_app_data_bytes+44↑j
                slti    $v0, $s1, 0x4001

loc_2B7E4:                               # CODE XREF: dtls1_write_app_data_bytes+A4↓j
                beqz    $v0, loc_2B874
                move    $a3, $s1
                la      $t9, dtls1_write_bytes
                move    $a0, $s0
                move    $a1, $s2
                move    $a2, $s3
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $t9 ; dtls1_write_bytes
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2B818:                               # CODE XREF: dtls1_write_app_data_bytes+50↑j
                lw      $t9, 0x20($s0)
                jalr    $t9
                move    $a0, $s0
                bltz    $v0, loc_2B858
                lw      $gp, 0x38+var_20($sp)
                bnez    $v0, loc_2B7E4
                slti    $v0, $s1, 0x4001
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x10C
                li      $a2, 0xE5

loc_2B848:                               # CODE XREF: dtls1_write_app_data_bytes+FC↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 0xFFFFFFFF

loc_2B858:                               # CODE XREF: dtls1_write_app_data_bytes+9C↑j
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2B874:                               # CODE XREF: dtls1_write_app_data_bytes:loc_2B7E4↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x10C
                li      $a2, 0x14E
                b       loc_2B848
                sw      $zero, 0x38+var_28($sp)
 # End of function dtls1_write_app_data_bytes


 # =============== S U B R O U T I N E =======================================


sub_2B88C:                               # CODE XREF: dtls1_read_bytes+264↓p
                                         # DATA XREF: dtls1_get_record+1D4↓o ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_2B88C)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, pqueue_size
                move    $s1, $a0
                lw      $a0, 4($a1)
                move    $s3, $a1
                jalr    $t9 ; pqueue_size
                move    $s2, $a2
                slti    $v0, 0x64  # 'd'
                bnez    $v0, loc_2B8F4
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2B8F4:                               # CODE XREF: sub_2B88C+44↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aD1PktC - 0x40000)  # "d1_pkt.c"
                li      $a0, 0x3C  # '<'
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xD8
                lw      $gp, 0x38+var_20($sp)
                la      $t9, pitem_new
                move    $a0, $s2
                move    $a1, $v0
                jalr    $t9 ; pitem_new
                move    $s0, $v0
                move    $s2, $v0
                beqz    $s0, loc_2BAB4
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_2BB08
                la      $t9, CRYPTO_free
                lw      $a0, 0x58($s1)
                lw      $v0, 0x4C($s1)
                lw      $v1, 0x50($s1)
                sw      $v0, 0($s0)
                sw      $v1, 4($s0)
                addiu   $v0, $a0, 0xEC
                lw      $a2, 0xC($v0)
                lw      $a3, 8($v0)
                lw      $a1, 0xEC($a0)
                lw      $a0, 4($v0)
                addiu   $v1, $s0, 8
                sw      $a1, 8($s0)
                sw      $a2, 0xC($v1)
                sw      $a3, 8($v1)
                sw      $a0, 4($v1)
                lw      $v0, 0x58($s1)
                addiu   $a3, $s0, 0x18
                addiu   $t0, $v0, 0x12C
                addiu   $a2, $v0, 0x10C

loc_2B984:                               # CODE XREF: sub_2B88C+11C↓j
                lw      $v0, 0($a2)
                lw      $v1, 4($a2)
                lw      $a0, 8($a2)
                lw      $a1, 0xC($a2)
                addiu   $a2, 0x10
                sw      $v0, 0($a3)
                sw      $v1, 4($a3)
                sw      $a0, 8($a3)
                sw      $a1, 0xC($a3)
                bne     $a2, $t0, loc_2B984
                addiu   $a3, 0x10
                lw      $v0, 0($a2)
                la      $t9, pqueue_insert
                sw      $v0, 0($a3)
                lw      $a0, 4($s3)
                sw      $s0, 8($s2)
                jalr    $t9 ; pqueue_insert
                move    $a1, $s2
                beqz    $v0, loc_2BA74
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 0x58($s1)
                sw      $zero, 0x4C($s1)
                addiu   $v0, $v1, 0xEC
                sw      $zero, 0x50($s1)
                sw      $zero, 0xEC($v1)
                sw      $zero, 0xC($v0)
                sw      $zero, 4($v0)
                sw      $zero, 8($v0)
                lw      $v1, 0x58($s1)
                la      $t9, ssl3_setup_buffers
                addiu   $v0, $v1, 0x10C
                sw      $zero, 0x10C($v1)
                move    $a0, $s1
                sw      $zero, 0x20($v0)
                sw      $zero, 4($v0)
                sw      $zero, 8($v0)
                sw      $zero, 0xC($v0)
                sw      $zero, 0x10($v0)
                sw      $zero, 0x14($v0)
                sw      $zero, 0x18($v0)
                jalr    $t9 ; ssl3_setup_buffers
                sw      $zero, 0x1C($v0)
                beqz    $v0, loc_2BA54
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2BA54:                               # CODE XREF: sub_2B88C+1A0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a1, 0xF7
                li      $a2, 0x44  # 'D'
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                li      $a0, 0x14
                lw      $gp, 0x38+var_20($sp)

loc_2BA74:                               # CODE XREF: sub_2B88C+140↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s2
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2BAB4:                               # CODE XREF: sub_2B88C+9C↑j
                beqz    $v0, loc_2BAC8
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $v0
                lw      $gp, 0x38+var_20($sp)

loc_2BAC8:                               # CODE XREF: sub_2B88C:loc_2BAB4↑j
                                         # sub_2B88C+284↓j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xF7
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2BB08:                               # CODE XREF: sub_2B88C+A4↑j
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                b       loc_2BAC8
                lw      $gp, 0x38+var_20($sp)
 # End of function sub_2B88C


 # =============== S U B R O U T I N E =======================================


sub_2BB18:                               # DATA XREF: dtls1_get_record+1D0↓o
                                         # dtls1_get_record+5F0↓o

var_70          = -0x70
var_68          = -0x68
var_60          = -0x60
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_2BB18)
                addu    $gp, $t9
                addiu   $sp, -0x80
                sw      $ra, 0x80+var_8($sp)
                sw      $s5, 0x80+var_C($sp)
                sw      $s4, 0x80+var_10($sp)
                sw      $s3, 0x80+var_14($sp)
                sw      $s2, 0x80+var_18($sp)
                sw      $s1, 0x80+var_1C($sp)
                sw      $s0, 0x80+var_20($sp)
                sw      $gp, 0x80+var_68($sp)
                lw      $s0, 0x58($a0)
                lw      $v1, 0x4C($a0)
                lw      $v0, 0x110($s0)
                addiu   $v1, 0xD
                sltiu   $v0, 0x4541
                move    $s2, $a0
                sw      $v1, 0x11C($s0)
                bnez    $v0, loc_2BBD0
                lw      $s1, 0xC0($a0)
                la      $t9, ERR_put_error
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x101
                li      $a2, 0x96

loc_2BB80:                               # CODE XREF: sub_2BB18+1E8↓j
                                         # sub_2BB18+458↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_68($sp)
                li      $a2, 0x16

loc_2BB90:                               # CODE XREF: sub_2BB18+438↓j
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x80+var_68($sp)
                move    $a2, $zero

loc_2BBA8:                               # CODE XREF: sub_2BB18+340↓j
                                         # sub_2BB18+488↓j ...
                lw      $ra, 0x80+var_8($sp)
                lw      $s5, 0x80+var_C($sp)
                lw      $s4, 0x80+var_10($sp)
                lw      $s3, 0x80+var_14($sp)
                lw      $s2, 0x80+var_18($sp)
                lw      $s1, 0x80+var_1C($sp)
                lw      $s0, 0x80+var_20($sp)
                move    $v0, $a2
                jr      $ra
                addiu   $sp, 0x80
 # ---------------------------------------------------------------------------

loc_2BBD0:                               # CODE XREF: sub_2BB18+4C↑j
                lw      $v0, 8($a0)
                sw      $v1, 0x118($s0)
                lw      $v1, 0x64($v0)
                lw      $t9, 0($v1)
                jalr    $t9
                move    $a1, $zero
                slti    $s4, $v0, 1
                beqz    $s1, loc_2BCD0
                lw      $gp, 0x80+var_68($sp)
                lw      $v0, 0x80($s2)
                beqz    $v0, loc_2BCD0
                nop
                lw      $a0, 0x84($s2)
                beqz    $a0, loc_2BCD0
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                nop
                lw      $gp, 0x80+var_68($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                move    $s3, $v0
                bltz    $v0, loc_2BF0C
                lw      $gp, 0x80+var_68($sp)
                lw      $a2, 0x110($s0)

loc_2BC34:                               # CODE XREF: sub_2BB18+410↓j
                addiu   $v0, $s3, 0x4400
                sltu    $v0, $a2
                li      $v1, 1
                sltu    $a0, $a2, $s3
                beqz    $a0, loc_2BD08
                movn    $s4, $v1, $v0
                sw      $zero, 0x110($s0)
                move    $s1, $zero

loc_2BC54:                               # CODE XREF: sub_2BB18+1FC↓j
                lw      $v0, 8($s2)
                addiu   $s5, $sp, 0x80+var_60
                lw      $v1, 0x64($v0)
                move    $a0, $s2
                lw      $t9, 4($v1)
                move    $a1, $s5
                jalr    $t9
                move    $a2, $zero
                bltz    $v0, loc_2BC9C
                lw      $gp, 0x80+var_68($sp)
                beqz    $s1, loc_2BC9C
                la      $t9, memcmp
                move    $a0, $s5
                move    $a1, $s1
                jalr    $t9 ; memcmp
                move    $a2, $s3
                beqz    $v0, loc_2BCD0
                lw      $gp, 0x80+var_68($sp)

loc_2BC9C:                               # CODE XREF: sub_2BB18+15C↑j
                                         # sub_2BB18+164↑j ...
                sw      $zero, 0x110($s0)
                move    $a2, $zero
                sw      $zero, 0x50($s2)
                lw      $ra, 0x80+var_8($sp)
                lw      $s5, 0x80+var_C($sp)
                lw      $s4, 0x80+var_10($sp)
                lw      $s3, 0x80+var_14($sp)
                lw      $s2, 0x80+var_18($sp)
                lw      $s1, 0x80+var_1C($sp)
                lw      $s0, 0x80+var_20($sp)
                move    $v0, $a2
                jr      $ra
                addiu   $sp, 0x80
 # ---------------------------------------------------------------------------

loc_2BCD0:                               # CODE XREF: sub_2BB18+D4↑j
                                         # sub_2BB18+E0↑j ...
                bnez    $s4, loc_2BC9C
                nop
                lw      $v0, 0x88($s2)
                beqz    $v0, loc_2BD30
                nop
                lw      $v0, 0x110($s0)
                sltiu   $v0, 0x4401
                bnez    $v0, loc_2BD1C
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x101
                li      $a2, 0x8C
                b       loc_2BB80
                sw      $zero, 0x80+var_70($sp)
 # ---------------------------------------------------------------------------

loc_2BD08:                               # CODE XREF: sub_2BB18+12C↑j
                lw      $v1, 0x118($s0)
                subu    $v0, $a2, $s3
                addu    $s1, $v0, $v1
                b       loc_2BC54
                sw      $v0, 0x110($s0)
 # ---------------------------------------------------------------------------

loc_2BD1C:                               # CODE XREF: sub_2BB18+1D4↑j
                la      $t9, ssl3_do_uncompress
                jalr    $t9 ; ssl3_do_uncompress
                move    $a0, $s2
                beqz    $v0, loc_2BF30
                lw      $gp, 0x80+var_68($sp)

loc_2BD30:                               # CODE XREF: sub_2BB18+1C4↑j
                lw      $v0, 0x110($s0)
                sltiu   $v0, 0x4001
                beqz    $v0, loc_2BF64
                la      $t9, ERR_put_error
                lw      $t2, 0x58($s2)
                lw      $t3, 0x5C($s2)
                sw      $zero, 0x114($s0)
                sw      $zero, 0x50($s2)
                lbu     $v0, 0xF($t2)
                lbu     $v1, 0x217($t3)
                addiu   $t4, $t2, 8
                subu    $t5, $v0, $v1
                andi    $a0, $t5, 0x80
                bnez    $a0, loc_2BE60
                sra     $v0, $t5, 8
                lbu     $v1, 0xE($t2)
                lbu     $a0, 0x216($t3)
                addu    $v1, $v0, $v1
                lbu     $t1, 0xD($t2)
                lbu     $v0, 0x215($t3)
                subu    $v1, $a0
                sra     $a0, $v1, 8
                subu    $t1, $v0
                lbu     $a3, 0xC($t2)
                lbu     $v0, 0x214($t3)
                addu    $t1, $a0
                subu    $a3, $v0
                sra     $a0, $t1, 8
                lbu     $v0, 0x213($t3)
                lbu     $t0, 0xB($t2)
                addu    $a3, $a0
                sra     $a0, $a3, 8
                subu    $t0, $v0
                lbu     $a2, 0xA($t2)
                lbu     $v0, 0x212($t3)
                addu    $t0, $a0
                subu    $a2, $v0
                sra     $a0, $t0, 8
                lbu     $v0, 0x211($t3)
                lbu     $a1, 9($t2)
                addu    $a2, $a0
                or      $v1, $t1
                subu    $a1, $v0
                or      $v1, $a3
                sra     $v0, $a2, 8
                lbu     $a0, 8($t2)
                lbu     $a3, 0x210($t3)
                addu    $a1, $v0
                or      $v1, $t0
                sra     $v0, $a1, 8
                or      $v1, $a2
                subu    $a0, $a3
                addu    $a0, $v0
                or      $v1, $a1
                or      $v0, $a0, $v1
                sra     $a0, 8

loc_2BE10:                               # CODE XREF: sub_2BB18+3EC↓j
                andi    $v0, 0xFF
                beqz    $v0, loc_2BF58
                sll     $a0, 8
                ori     $a0, 0x80

loc_2BE20:                               # CODE XREF: sub_2BB18+444↓j
                blez    $a0, loc_2BF80
                sltiu   $v0, $a0, 0x20  # ' '
                beqz    $v0, loc_2BF78
                li      $v0, 1
                lw      $v0, 0x20C($t3)
                sllv    $v0, $a0
                ori     $v0, 1
                sw      $v0, 0x20C($t3)

loc_2BE40:                               # CODE XREF: sub_2BB18:loc_2BF78↓j
                lwl     $v1, 3($t4)
                lwl     $v0, 7($t4)
                lwr     $v1, 0($t4)
                lwr     $v0, 4($t4)
                li      $a2, 1
                sw      $v0, 0x214($t3)
                b       loc_2BBA8
                sw      $v1, 0x210($t3)
 # ---------------------------------------------------------------------------

loc_2BE60:                               # CODE XREF: sub_2BB18+24C↑j
                lbu     $t1, 0xE($t2)
                lbu     $v1, 0x216($t3)
                addu    $t1, $v0, $t1
                lbu     $a2, 0xD($t2)
                lbu     $v0, 0x215($t3)
                subu    $t1, $v1
                subu    $a2, $v0
                sra     $v1, $t1, 8
                lbu     $v0, 0x214($t3)
                lbu     $a3, 0xC($t2)
                addu    $a2, $v1
                sra     $a0, $a2, 8
                subu    $a3, $v0
                lbu     $v1, 0x213($t3)
                lbu     $v0, 0xB($t2)
                addu    $a3, $a0
                sra     $a1, $a3, 8
                subu    $v0, $v1
                lbu     $a0, 0xA($t2)
                lbu     $v1, 0x212($t3)
                addu    $v0, $a1
                sra     $a1, $v0, 8
                subu    $a0, $v1
                lbu     $t0, 0x211($t3)
                lbu     $v1, 9($t2)
                addu    $a0, $a1
                and     $a2, $t1
                subu    $v1, $t0
                and     $a3, $a2
                lbu     $a1, 8($t2)
                sra     $a2, $a0, 8
                lbu     $t0, 0x210($t3)
                addu    $v1, $a2
                and     $v0, $a3
                and     $a0, $v0
                subu    $a1, $t0
                sra     $v0, $v1, 8
                addu    $a1, $v0
                and     $v1, $a0
                and     $v1, $a1, $v1
                nor     $v0, $zero, $v1
                b       loc_2BE10
                sra     $a0, $a1, 8
 # ---------------------------------------------------------------------------

loc_2BF0C:                               # CODE XREF: sub_2BB18+110↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aD1PktC - 0x40000)  # "d1_pkt.c"
                addiu   $a2, (aT0 - 0x40000)  # "t >= 0"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x1BC
                b       loc_2BC34
                lw      $a2, 0x110($s0)
 # ---------------------------------------------------------------------------

loc_2BF30:                               # CODE XREF: sub_2BB18+210↑j
                la      $t9, ERR_put_error
                li      $a2, 0x6B  # 'k'
                sw      $zero, 0x80+var_70($sp)
                li      $a0, 0x14
                li      $a1, 0x101
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x80+var_68($sp)
                b       loc_2BB90
                li      $a2, 0x1E
 # ---------------------------------------------------------------------------

loc_2BF58:                               # CODE XREF: sub_2BB18+2FC↑j
                andi    $v0, $t5, 0xFF
                b       loc_2BE20
                addu    $a0, $v0
 # ---------------------------------------------------------------------------

loc_2BF64:                               # CODE XREF: sub_2BB18+220↑j
                li      $a0, 0x14
                li      $a1, 0x101
                li      $a2, 0x92
                b       loc_2BB80
                sw      $zero, 0x80+var_70($sp)
 # ---------------------------------------------------------------------------

loc_2BF78:                               # CODE XREF: sub_2BB18+310↑j
                b       loc_2BE40
                sw      $v0, 0x20C($t3)
 # ---------------------------------------------------------------------------

loc_2BF80:                               # CODE XREF: sub_2BB18:loc_2BE20↑j
                negu    $a0, $a0
                sltiu   $v0, $a0, 0x20  # ' '
                beqz    $v0, loc_2BFA8
                li      $v0, 1
                lw      $v1, 0x20C($t3)
                sllv    $v0, $a0
                or      $v1, $v0
                li      $a2, 1
                b       loc_2BBA8
                sw      $v1, 0x20C($t3)
 # ---------------------------------------------------------------------------

loc_2BFA8:                               # CODE XREF: sub_2BB18+470↑j
                b       loc_2BBA8
                li      $a2, 1
 # End of function sub_2BB18


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_get_record
dtls1_get_record:                        # CODE XREF: dtls1_read_bytes:loc_2CCA4↓p
                                         # DATA XREF: LOAD:00003AD8↑o ...

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_get_record)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s6, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                lw      $v0, 0x5C($a0)
                la      $t9, pqueue_peek
                move    $s1, $a0
                lw      $a0, 0x238($v0)
                jalr    $t9 ; pqueue_peek
                lw      $s3, 0x58($s1)
                beqz    $v0, loc_2C14C
                lw      $gp, 0x38+var_28($sp)
                lw      $a0, 0x5C($s1)
                lhu     $v1, 0x234($a0)
                lhu     $v0, 0x208($a0)
                beq     $v1, $v0, loc_2C59C
                la      $v0, loc_30000

loc_2C018:                               # CODE XREF: dtls1_get_record:loc_2C718↓j
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x240($a0)
                move    $s2, $v0
                beqz    $v0, loc_2C178
                lw      $gp, 0x38+var_28($sp)

loc_2C030:                               # CODE XREF: dtls1_get_record+1C0↓j
                lw      $t0, 0x58($s1)
                lw      $a0, 0xEC($t0)
                beqz    $a0, loc_2C054
                lw      $s0, 8($v0)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x38+var_28($sp)
                lw      $t0, 0x58($s1)

loc_2C054:                               # CODE XREF: dtls1_get_record+88↑j
                lw      $v0, 0($s0)
                lw      $v1, 4($s0)
                sw      $v0, 0x4C($s1)
                sw      $v1, 0x50($s1)
                addiu   $v0, $s0, 8
                lw      $a3, 0xC($v0)
                lw      $a2, 8($v0)
                lw      $a1, 4($v0)
                lw      $a0, 8($s0)
                addiu   $v1, $t0, 0xEC
                sw      $a0, 0xEC($t0)
                sw      $a3, 0xC($v1)
                sw      $a2, 8($v1)
                sw      $a1, 4($v1)
                lw      $v0, 0x58($s1)
                addiu   $a2, $s0, 0x18
                addiu   $a3, $v0, 0x10C
                addiu   $t0, $s0, 0x38  # '8'

loc_2C09C:                               # CODE XREF: dtls1_get_record+110↓j
                lw      $v0, 0($a2)
                lw      $v1, 4($a2)
                lw      $a0, 8($a2)
                lw      $a1, 0xC($a2)
                addiu   $a2, 0x10
                sw      $v0, 0($a3)
                sw      $v1, 4($a3)
                sw      $a0, 8($a3)
                sw      $a1, 0xC($a3)
                bne     $a2, $t0, loc_2C09C
                addiu   $a3, 0x10
                lw      $v1, 0($a2)
                la      $t9, CRYPTO_free
                sw      $v1, 0($a3)
                lw      $v0, 0($s0)
                lw      $a1, 0x58($s1)
                addiu   $v0, 5
                lwl     $v1, 3($v0)
                addiu   $a0, $a1, 0xA
                lwr     $v1, 0($v0)
                usw     $v1, 0($a0)
                lbu     $a1, 4($v0)
                sb      $a1, 4($a0)
                lbu     $v1, 5($v0)
                sb      $v1, 5($a0)
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 8($s2)
                lw      $gp, 0x38+var_28($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s2
                lw      $gp, 0x38+var_28($sp)
                li      $v0, 1

loc_2C124:                               # CODE XREF: dtls1_get_record+268↓j
                                         # dtls1_get_record+4D0↓j ...
                lw      $ra, 0x38+var_4($sp)
                lw      $s6, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2C14C:                               # CODE XREF: dtls1_get_record+4C↑j
                                         # dtls1_get_record+604↓j
                lw      $a0, 0x5C($s1)
                la      $t9, pqueue_pop
                lhu     $v1, 0x208($a0)
                addiu   $v0, $v1, 1
                sh      $v0, 0x234($a0)
                sh      $v1, 0x23C($a0)
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x240($a0)
                move    $s2, $v0
                bnez    $v0, loc_2C030
                lw      $gp, 0x38+var_28($sp)

loc_2C178:                               # CODE XREF: dtls1_get_record+78↑j
                la      $v0, loc_30000
                la      $v1, loc_30000
                addiu   $s5, $v0, (sub_2BB18 - 0x30000)
                addiu   $s6, $v1, (sub_2B88C - 0x30000)
                addiu   $s4, $s3, 0x128

loc_2C18C:                               # CODE XREF: dtls1_get_record+280↓j
                                         # dtls1_get_record:loc_2C368↓j ...
                lw      $v0, 0x38($s1)
                li      $s0, 0xF1
                bne     $v0, $s0, loc_2C1FC
                nop

loc_2C19C:                               # CODE XREF: dtls1_get_record+244↓j
                lw      $v1, 0x50($s1)
                sltiu   $v0, $v1, 0xD
                bnez    $v0, loc_2C1FC
                nop

loc_2C1AC:                               # CODE XREF: dtls1_get_record+4B4↓j
                lw      $s0, 0x110($s3)
                addiu   $v0, $v1, -0xD
                sltu    $v0, $s0
                bnez    $v0, loc_2C46C
                la      $t9, ssl3_read_n

loc_2C1C0:                               # CODE XREF: dtls1_get_record+4D8↓j
                lw      $a1, 0x5C($s1)
                lw      $a0, 0x124($s3)
                lhu     $v1, 0x208($a1)
                li      $v0, 0xF0
                beq     $a0, $v1, loc_2C49C
                sw      $v0, 0x38($s1)
                addiu   $v0, $v1, 1
                beq     $a0, $v0, loc_2C238
                nop

loc_2C1E4:                               # CODE XREF: dtls1_get_record+294↓j
                                         # dtls1_get_record+3E8↓j ...
                sw      $zero, 0x110($s3)
                sw      $zero, 0x50($s1)

loc_2C1EC:                               # CODE XREF: dtls1_get_record+408↓j
                                         # dtls1_get_record+4E4↓j ...
                lw      $v0, 0x38($s1)
                li      $s0, 0xF1
                beq     $v0, $s0, loc_2C19C
                nop

loc_2C1FC:                               # CODE XREF: dtls1_get_record+1E4↑j
                                         # dtls1_get_record+1F4↑j
                lw      $v0, 0x58($s1)
                la      $t9, ssl3_read_n
                lw      $a2, 0xF0($v0)
                move    $a0, $s1
                li      $a1, 0xD
                jalr    $t9 ; ssl3_read_n
                move    $a3, $zero
                blez    $v0, loc_2C124
                lw      $gp, 0x38+var_28($sp)
                lw      $v1, 0x50($s1)
                li      $v0, 0xD
                beq     $v1, $v0, loc_2C3C0
                nop
                b       loc_2C18C
                sw      $zero, 0x50($s1)
 # ---------------------------------------------------------------------------

loc_2C238:                               # CODE XREF: dtls1_get_record+22C↑j
                lw      $v0, 0x10C($s3)
                addiu   $v0, -0x15
                sltiu   $v0, 2
                beqz    $v0, loc_2C1E4
                addiu   $t3, $a1, 0x218
                li      $t6, 1

loc_2C250:                               # CODE XREF: dtls1_get_record+4F0↓j
                lw      $v0, 0x254($a1)
                beqz    $v0, loc_2C26C
                nop
                lw      $v1, 0x10C($s3)
                li      $v0, 0x16
                beq     $v1, $v0, loc_2C720
                nop

loc_2C26C:                               # CODE XREF: dtls1_get_record+2A4↑j
                                         # dtls1_get_record+778↓j
                lw      $t2, 0x58($s1)
                lbu     $v0, 0xB($t3)
                lbu     $v1, 0xF($t2)
                addiu   $t4, $t2, 8
                subu    $t5, $v1, $v0
                andi    $a0, $t5, 0x80
                beqz    $a0, loc_2C4B0
                sra     $v0, $t5, 8
                lbu     $t1, 0xE($t2)
                lbu     $v1, 0xA($t3)
                addu    $t1, $v0, $t1
                lbu     $a1, 0xD($t2)
                lbu     $v0, 9($t3)
                subu    $t1, $v1
                subu    $a1, $v0
                sra     $v1, $t1, 8
                lbu     $v0, 8($t3)
                lbu     $a2, 0xC($t2)
                addu    $a1, $v1
                sra     $a0, $a1, 8
                subu    $a2, $v0
                lbu     $v1, 7($t3)
                lbu     $v0, 0xB($t2)
                addu    $a2, $a0
                sra     $a3, $a2, 8
                subu    $v0, $v1
                lbu     $a0, 0xA($t2)
                lbu     $v1, 6($t3)
                addu    $v0, $a3
                sra     $a3, $v0, 8
                subu    $a0, $v1
                lbu     $t0, 5($t3)
                lbu     $v1, 9($t2)
                addu    $a0, $a3
                and     $a1, $t1
                subu    $v1, $t0
                and     $a2, $a1
                sra     $a3, $a0, 8
                lbu     $a1, 8($t2)
                lbu     $t0, 4($t3)
                addu    $v1, $a3
                and     $v0, $a2
                and     $a0, $v0
                subu    $a1, $t0
                sra     $v0, $v1, 8
                addu    $a1, $v0
                and     $v1, $a0
                and     $v1, $a1, $v1
                nor     $v0, $zero, $v1
                sra     $a0, $a1, 8
                andi    $v0, 0xFF
                beqz    $v0, loc_2C560
                sll     $a0, 8

loc_2C340:                               # CODE XREF: dtls1_get_record+5A8↓j
                ori     $v0, $a0, 0x80
                blez    $v0, loc_2C570
                negu    $v1, $v0

loc_2C34C:                               # CODE XREF: dtls1_get_record+5B8↓j
                                         # dtls1_get_record+5D8↓j
                lwl     $v0, 3($t4)
                lwl     $v1, 7($t4)
                lwr     $v0, 0($t4)
                lwr     $v1, 4($t4)
                sw      $v0, 0x128($t2)
                sw      $v1, 0x12C($t2)
                lw      $v0, 0x110($s3)

loc_2C368:                               # CODE XREF: dtls1_get_record+780↓j
                beqz    $v0, loc_2C18C
                nop
                beqz    $t6, loc_2C700
                move    $t9, $s5
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s1
                andi    $v0, 0x3000
                beqz    $v0, loc_2C738
                lw      $gp, 0x38+var_28($sp)

loc_2C390:                               # CODE XREF: dtls1_get_record+78C↓j
                lw      $a1, 0x5C($s1)
                lw      $v0, 0x254($a1)
                bnez    $v0, loc_2C1E4
                move    $a0, $s1
                addiu   $a1, 0x234
                move    $t9, $s6
                jalr    $t9
                move    $a2, $s4
                lw      $gp, 0x38+var_28($sp)
                sw      $zero, 0x110($s3)
                b       loc_2C1EC
                sw      $zero, 0x50($s1)
 # ---------------------------------------------------------------------------

loc_2C3C0:                               # CODE XREF: dtls1_get_record+278↑j
                lw      $a0, 0x4C($s1)
                sw      $s0, 0x38($s1)
                lbu     $v1, 0($a0)
                addiu   $a3, $a0, 5
                sw      $v1, 0x10C($s3)
                lbu     $v0, 3($a0)
                lbu     $v1, 4($a0)
                sll     $v0, 8
                or      $v1, $v0
                lbu     $t1, 2($a0)
                lbu     $t0, 1($a0)
                sw      $v1, 0x124($s3)
                lwl     $v0, 3($a3)
                lw      $a1, 0x58($s1)
                lwr     $v0, 0($a3)
                addiu   $v1, $a1, 0xA
                usw     $v0, 0($v1)
                lbu     $a1, 4($a3)
                sll     $t0, 8
                sb      $a1, 4($v1)
                lbu     $a2, 5($a3)
                or      $t1, $t0
                sb      $a2, 5($v1)
                lbu     $v0, 0xB($a0)
                lbu     $v1, 0xC($a0)
                sll     $v0, 8
                or      $a1, $v1, $v0
                sw      $a1, 0x110($s3)
                lw      $v0, 0x104($s1)
                bnez    $v0, loc_2C4A8
                addiu   $s2, $a0, 0xD
                lw      $v0, 0($s1)
                bne     $t1, $v0, loc_2C1E4
                move    $v0, $t1

loc_2C44C:                               # CODE XREF: dtls1_get_record:loc_2C4A8↓j
                andi    $v1, $t1, 0xFF00
                andi    $v0, 0xFF00
                bne     $v1, $v0, loc_2C1E4
                sltiu   $v0, $a1, 0x4541
                beqz    $v0, loc_2C1E4
                nop
                b       loc_2C1AC
                lw      $v1, 0x50($s1)
 # ---------------------------------------------------------------------------

loc_2C46C:                               # CODE XREF: dtls1_get_record+208↑j
                move    $a0, $s1
                move    $a1, $s0
                move    $a2, $s0
                jalr    $t9 ; ssl3_read_n
                li      $a3, 1
                blez    $v0, loc_2C124
                lw      $gp, 0x38+var_28($sp)
                beq     $s0, $v0, loc_2C1C0
                nop
                sw      $zero, 0x110($s3)
                b       loc_2C1EC
                sw      $zero, 0x50($s1)
 # ---------------------------------------------------------------------------

loc_2C49C:                               # CODE XREF: dtls1_get_record+220↑j
                addiu   $t3, $a1, 0x20C
                b       loc_2C250
                move    $t6, $zero
 # ---------------------------------------------------------------------------

loc_2C4A8:                               # CODE XREF: dtls1_get_record+488↑j
                b       loc_2C44C
                lw      $v0, 0($s1)
 # ---------------------------------------------------------------------------

loc_2C4B0:                               # CODE XREF: dtls1_get_record+2D4↑j
                lbu     $v1, 0xE($t2)
                lbu     $a0, 0xA($t3)
                addu    $v1, $v0, $v1
                lbu     $t1, 0xD($t2)
                lbu     $v0, 9($t3)
                subu    $v1, $a0
                sra     $a1, $v1, 8
                subu    $t1, $v0
                lbu     $a0, 0xC($t2)
                lbu     $v0, 8($t3)
                addu    $t1, $a1
                subu    $a0, $v0
                sra     $a1, $t1, 8
                lbu     $v0, 7($t3)
                lbu     $a3, 0xB($t2)
                addu    $a0, $a1
                sra     $a1, $a0, 8
                subu    $a3, $v0
                lbu     $a2, 0xA($t2)
                lbu     $v0, 6($t3)
                addu    $a3, $a1
                subu    $a2, $v0
                sra     $t0, $a3, 8
                lbu     $v0, 5($t3)
                lbu     $a1, 9($t2)
                addu    $a2, $t0
                or      $v1, $t1
                subu    $a1, $v0
                or      $v1, $a0
                sra     $v0, $a2, 8
                lbu     $a0, 8($t2)
                lbu     $t0, 4($t3)
                addu    $a1, $v0
                or      $v1, $a3
                sra     $v0, $a1, 8
                or      $v1, $a2
                subu    $a0, $t0
                addu    $a0, $v0
                or      $v1, $a1
                or      $v0, $a0, $v1
                andi    $v0, 0xFF
                sra     $a0, 8
                bnez    $v0, loc_2C340
                sll     $a0, 8

loc_2C560:                               # CODE XREF: dtls1_get_record+388↑j
                andi    $v0, $t5, 0xFF
                addu    $v0, $a0, $v0
                bgtz    $v0, loc_2C34C
                negu    $v1, $v0

loc_2C570:                               # CODE XREF: dtls1_get_record+394↑j
                sltiu   $v0, $v1, 0x20  # ' '
                beqz    $v0, loc_2C590
                nop
                lw      $v0, 0($t3)
                srlv    $v0, $v1
                andi    $v0, 1
                beqz    $v0, loc_2C34C
                nop

loc_2C590:                               # CODE XREF: dtls1_get_record+5C4↑j
                sw      $zero, 0x110($s3)
                b       loc_2C18C
                sw      $zero, 0x50($s1)
 # ---------------------------------------------------------------------------

loc_2C59C:                               # CODE XREF: dtls1_get_record+60↑j
                la      $v1, loc_30000
                addiu   $s4, $v0, (sub_2BB18 - 0x30000)
                addiu   $s5, $v1, (sub_2B88C - 0x30000)

loc_2C5A8:                               # CODE XREF: dtls1_get_record+748↓j
                la      $t9, pqueue_peek
                jalr    $t9 ; pqueue_peek
                lw      $a0, 0x238($a0)
                beqz    $v0, loc_2C14C
                lw      $gp, 0x38+var_28($sp)
                lw      $v0, 0x5C($s1)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x238($v0)
                move    $s2, $v0
                beqz    $v0, loc_2C6C4
                lw      $gp, 0x38+var_28($sp)
                lw      $t0, 0x58($s1)
                lw      $a0, 0xEC($t0)
                beqz    $a0, loc_2C5FC
                lw      $s0, 8($v0)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x38+var_28($sp)
                lw      $t0, 0x58($s1)

loc_2C5FC:                               # CODE XREF: dtls1_get_record+630↑j
                lw      $v0, 0($s0)
                lw      $v1, 4($s0)
                sw      $v0, 0x4C($s1)
                sw      $v1, 0x50($s1)
                addiu   $v0, $s0, 8
                lw      $a3, 0xC($v0)
                lw      $a2, 8($v0)
                lw      $a1, 4($v0)
                lw      $a0, 8($s0)
                addiu   $v1, $t0, 0xEC
                sw      $a0, 0xEC($t0)
                sw      $a3, 0xC($v1)
                sw      $a2, 8($v1)
                sw      $a1, 4($v1)
                lw      $v0, 0x58($s1)
                addiu   $a2, $s0, 0x18
                addiu   $a3, $v0, 0x10C
                addiu   $t0, $s0, 0x38  # '8'

loc_2C644:                               # CODE XREF: dtls1_get_record+6B8↓j
                lw      $v0, 0($a2)
                lw      $v1, 4($a2)
                lw      $a0, 8($a2)
                lw      $a1, 0xC($a2)
                addiu   $a2, 0x10
                sw      $v0, 0($a3)
                sw      $v1, 4($a3)
                sw      $a0, 8($a3)
                sw      $a1, 0xC($a3)
                bne     $a2, $t0, loc_2C644
                addiu   $a3, 0x10
                lw      $v1, 0($a2)
                la      $t9, CRYPTO_free
                sw      $v1, 0($a3)
                lw      $v0, 0($s0)
                lw      $a1, 0x58($s1)
                addiu   $v0, 5
                lwl     $v1, 3($v0)
                addiu   $a0, $a1, 0xA
                lwr     $v1, 0($v0)
                usw     $v1, 0($a0)
                lbu     $a1, 4($v0)
                sb      $a1, 4($a0)
                lbu     $v1, 5($v0)
                sb      $v1, 5($a0)
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 8($s2)
                lw      $gp, 0x38+var_28($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s2

loc_2C6C4:                               # CODE XREF: dtls1_get_record+620↑j
                move    $t9, $s4
                jalr    $t9
                move    $a0, $s1
                beqz    $v0, loc_2C718
                lw      $gp, 0x38+var_28($sp)
                lw      $a1, 0x5C($s1)
                lw      $a2, 0x58($s1)
                move    $a0, $s1
                addiu   $a1, 0x23C
                move    $t9, $s5
                jalr    $t9
                addiu   $a2, 0x128
                lw      $gp, 0x38+var_28($sp)
                b       loc_2C5A8
                lw      $a0, 0x5C($s1)
 # ---------------------------------------------------------------------------

loc_2C700:                               # CODE XREF: dtls1_get_record+3C0↑j
                jalr    $t9
                move    $a0, $s1
                beqz    $v0, loc_2C1E4
                lw      $gp, 0x38+var_28($sp)
                b       loc_2C124
                li      $v0, 1
 # ---------------------------------------------------------------------------

loc_2C718:                               # CODE XREF: dtls1_get_record+720↑j
                b       loc_2C018
                lw      $a0, 0x5C($s1)
 # ---------------------------------------------------------------------------

loc_2C720:                               # CODE XREF: dtls1_get_record+2B4↑j
                lbu     $v1, 0($s2)
                li      $v0, 1
                bne     $v1, $v0, loc_2C26C
                nop
                b       loc_2C368
                lw      $v0, 0x110($s3)
 # ---------------------------------------------------------------------------

loc_2C738:                               # CODE XREF: dtls1_get_record+3D8↑j
                lw      $v0, 0x1C($s1)
                bnez    $v0, loc_2C390
                nop
                sw      $zero, 0x110($s3)
                b       loc_2C1EC
                sw      $zero, 0x50($s1)
 # End of function dtls1_get_record


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_read_bytes
dtls1_read_bytes:                        # DATA XREF: LOAD:00004BA8↑o
                                         # .got:dtls1_read_bytes_ptr↓o

var_88          = -0x88
var_84          = -0x84
var_80          = -0x80
var_78          = -0x78
var_70          = -0x70
var_6C          = -0x6C
var_5C          = -0x5C
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - dtls1_read_bytes)
                addu    $gp, $t9
                addiu   $sp, -0x98
                sw      $ra, 0x98+var_4($sp)
                sw      $fp, 0x98+var_8($sp)
                sw      $s7, 0x98+var_C($sp)
                sw      $s6, 0x98+var_10($sp)
                sw      $s5, 0x98+var_14($sp)
                sw      $s4, 0x98+var_18($sp)
                sw      $s3, 0x98+var_1C($sp)
                sw      $s2, 0x98+var_20($sp)
                sw      $s1, 0x98+var_24($sp)
                sw      $s0, 0x98+var_28($sp)
                sw      $gp, 0x98+var_78($sp)
                lw      $t0, 0x58($a0)
                move    $s2, $a0
                lw      $v0, 0xEC($t0)
                move    $s4, $a1
                move    $s7, $a2
                beqz    $v0, loc_2D1AC
                move    $s6, $a3

loc_2C7A8:                               # CODE XREF: dtls1_read_bytes+A68↓j
                beqz    $s4, loc_2C7C8
                lw      $v0, 0x98+arg_10($sp)
                li      $v0, 0x17
                beq     $s4, $v0, loc_2C7C4
                li      $v0, 0x16
                bne     $s4, $v0, loc_2C9D4
                la      $t9, ERR_put_error

loc_2C7C4:                               # CODE XREF: dtls1_read_bytes+64↑j
                lw      $v0, 0x98+arg_10($sp)

loc_2C7C8:                               # CODE XREF: dtls1_read_bytes:loc_2C7A8↑j
                bnez    $v0, loc_2C9CC
                li      $v0, 0x17
                li      $v0, 0x16
                beq     $s4, $v0, loc_2CEA4
                nop

loc_2C7DC:                               # CODE XREF: dtls1_read_bytes:loc_2C9CC↓j
                                         # dtls1_read_bytes+75C↓j ...
                lw      $v0, 0x1C($s2)
                beqz    $v0, loc_2CE5C
                la      $t9, SSL_state

loc_2C7E8:                               # CODE XREF: dtls1_read_bytes+718↓j
                addiu   $v1, $sp, 0x98+var_70

loc_2C7EC:                               # CODE XREF: dtls1_read_bytes+734↓j
                lw      $t0, 0x58($s2)
                move    $s5, $zero
                addiu   $fp, $sp, 0x3C  # '<'
                sw      $v1, 0x98+var_30($sp)

loc_2C7FC:                               # CODE XREF: dtls1_read_bytes+274↓j
                                         # dtls1_read_bytes+514↓j ...
                li      $v1, 1

loc_2C800:                               # CODE XREF: dtls1_read_bytes+3C4↓j
                                         # dtls1_read_bytes+3D0↓j ...
                lw      $v0, 0x34($s2)
                sw      $v1, 0x18($s2)
                li      $v1, 3
                beq     $v0, $v1, loc_2C844
                move    $s1, $t0

loc_2C814:                               # CODE XREF: dtls1_read_bytes+EC↓j
                                         # dtls1_read_bytes+114↓j
                la      $t9, dtls1_handle_timeout

loc_2C818:                               # CODE XREF: dtls1_read_bytes+F8↓j
                jalr    $t9 ; dtls1_handle_timeout
                move    $a0, $s2
                blez    $v0, loc_2C970
                lw      $gp, 0x98+var_78($sp)

loc_2C828:                               # CODE XREF: dtls1_read_bytes+218↓j
                                         # dtls1_read_bytes+3B0↓j ...
                lw      $t0, 0x58($s2)

loc_2C82C:                               # CODE XREF: dtls1_read_bytes+580↓j
                li      $v1, 1
                lw      $v0, 0x34($s2)
                sw      $v1, 0x18($s2)
                li      $v1, 3
                bne     $v0, $v1, loc_2C814
                move    $s1, $t0

loc_2C844:                               # CODE XREF: dtls1_read_bytes+BC↑j
                lw      $v0, 0x110($t0)
                bnez    $v0, loc_2C818
                la      $t9, dtls1_handle_timeout
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_pop
                jalr    $t9 ; pqueue_pop
                lw      $a0, 0x250($v0)
                move    $s3, $v0
                beqz    $v0, loc_2C814
                lw      $gp, 0x98+var_78($sp)
                lw      $t0, 0x58($s2)
                lw      $a0, 0xEC($t0)
                beqz    $a0, loc_2C890
                lw      $s0, 8($v0)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x98+var_78($sp)
                lw      $t0, 0x58($s2)

loc_2C890:                               # CODE XREF: dtls1_read_bytes+124↑j
                lw      $v0, 0($s0)
                lw      $v1, 4($s0)
                sw      $v0, 0x4C($s2)
                sw      $v1, 0x50($s2)
                addiu   $v0, $s0, 8
                lw      $a3, 0xC($v0)
                lw      $a2, 8($v0)
                lw      $a1, 4($v0)
                lw      $a0, 8($s0)
                addiu   $v1, $t0, 0xEC
                sw      $a0, 0xEC($t0)
                sw      $a3, 0xC($v1)
                sw      $a2, 8($v1)
                sw      $a1, 4($v1)
                lw      $v0, 0x58($s2)
                addiu   $a2, $s0, 0x18
                addiu   $a3, $v0, 0x10C
                addiu   $t0, $s0, 0x38  # '8'

loc_2C8D8:                               # CODE XREF: dtls1_read_bytes+1AC↓j
                lw      $v0, 0($a2)
                lw      $v1, 4($a2)
                lw      $a0, 8($a2)
                lw      $a1, 0xC($a2)
                addiu   $a2, 0x10
                sw      $v0, 0($a3)
                sw      $v1, 4($a3)
                sw      $a0, 8($a3)
                sw      $a1, 0xC($a3)
                bne     $a2, $t0, loc_2C8D8
                addiu   $a3, 0x10
                lw      $v1, 0($a2)
                la      $t9, CRYPTO_free
                sw      $v1, 0($a3)
                lw      $v0, 0($s0)
                lw      $a1, 0x58($s2)
                addiu   $v0, 5
                lwl     $v1, 3($v0)
                addiu   $a0, $a1, 0xA
                lwr     $v1, 0($v0)
                usw     $v1, 0($a0)
                lbu     $a1, 4($v0)
                sb      $a1, 4($a0)
                lbu     $v1, 5($v0)
                sb      $v1, 5($a0)
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 8($s3)
                lw      $gp, 0x98+var_78($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s3
                lw      $gp, 0x98+var_78($sp)
                la      $t9, dtls1_handle_timeout
                jalr    $t9 ; dtls1_handle_timeout
                move    $a0, $s2
                bgtz    $v0, loc_2C828
                lw      $gp, 0x98+var_78($sp)

loc_2C970:                               # CODE XREF: dtls1_read_bytes+D0↑j
                lw      $v0, 0x110($s1)
                beqz    $v0, loc_2CCA0
                li      $v0, 0xF1
                lw      $v1, 0x38($s2)
                beq     $v1, $v0, loc_2CCA4
                la      $t9, dtls1_get_record

loc_2C988:                               # CODE XREF: dtls1_read_bytes+55C↓j
                lw      $t0, 0x58($s2)
                lw      $v0, 0x180($t0)
                beqz    $v0, loc_2CA28
                li      $v0, 0x16
                lw      $v1, 0x10C($s1)
                beq     $v1, $v0, loc_2CA28
                la      $t9, loc_30000
                lw      $a1, 0x5C($s2)
                move    $a0, $s2
                addiu   $a1, 0x24C
                addiu   $t9, (sub_2B88C - 0x30000)
                jalr    $t9 ; sub_2B88C
                addiu   $a2, $s1, 0x128
                lw      $gp, 0x98+var_78($sp)
                lw      $t0, 0x58($s2)
                b       loc_2C7FC
                sw      $zero, 0x110($s1)
 # ---------------------------------------------------------------------------

loc_2C9CC:                               # CODE XREF: dtls1_read_bytes:loc_2C7C8↑j
                beq     $s4, $v0, loc_2C7DC
                la      $t9, ERR_put_error

loc_2C9D4:                               # CODE XREF: dtls1_read_bytes+6C↑j
                sw      $zero, 0x98+var_88($sp)
                li      $a0, 0x14
                li      $a1, 0x102
                li      $a2, 0x44  # 'D'

loc_2C9E4:                               # CODE XREF: dtls1_read_bytes+74C↓j
                                         # dtls1_read_bytes+C08↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x98+var_78($sp)
                li      $a2, 0xFFFFFFFF

loc_2C9F4:                               # CODE XREF: dtls1_read_bytes+47C↓j
                                         # dtls1_read_bytes+528↓j ...
                lw      $ra, 0x98+var_4($sp)
                lw      $fp, 0x98+var_8($sp)
                lw      $s7, 0x98+var_C($sp)
                lw      $s6, 0x98+var_10($sp)
                lw      $s5, 0x98+var_14($sp)
                lw      $s4, 0x98+var_18($sp)
                lw      $s3, 0x98+var_1C($sp)
                lw      $s2, 0x98+var_20($sp)
                lw      $s1, 0x98+var_24($sp)
                lw      $s0, 0x98+var_28($sp)
                move    $v0, $a2
                jr      $ra
                addiu   $sp, 0x98
 # ---------------------------------------------------------------------------

loc_2CA28:                               # CODE XREF: dtls1_read_bytes+240↑j
                                         # dtls1_read_bytes+24C↑j
                lw      $v0, 0x30($s2)
                andi    $v0, 2
                bnez    $v0, loc_2CFA0
                li      $v0, 1
                lw      $s0, 0x10C($s1)
                beq     $s0, $s4, loc_2D08C
                li      $v0, 0x16
                beq     $s0, $v0, loc_2CCD8
                li      $v0, 0x15
                beq     $s0, $v0, loc_2CD44
                li      $v0, 0x18
                beq     $s0, $v0, loc_2D248
                li      $v0, 0x14
                bne     $s0, $v0, loc_2D218
                li      $v0, 0x17

loc_2CA64:                               # CODE XREF: dtls1_read_bytes+5EC↓j
                lw      $v0, 0x24($s2)
                bnez    $v0, loc_2CBD4
                nop
                lw      $a3, 0x5C($s2)
                lw      $v0, 0x2DC($a3)
                sltiu   $v0, 0xC
                bnez    $v0, loc_2CBD8
                nop
                lbu     $v0, 0x2D0($a3)
                bnez    $v0, loc_2CBD8
                nop
                lw      $v0, 0xC0($s2)
                beqz    $v0, loc_2CBD8
                nop
                lw      $v0, 0xAC($v0)
                beqz    $v0, loc_2CBD8
                li      $v1, 0xFFFFFF00
                lw      $v0, 0x2D0($a3)
                and     $v0, $v1
                bnez    $v0, loc_2D348
                sw      $zero, 0x2DC($a3)
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_2CAEC
                li      $v0, 4
                lw      $v1, 0x68($s2)
                lw      $a1, 0($s2)
                sw      $v0, 0x98+var_88($sp)
                sw      $v1, 0x98+var_80($sp)
                sw      $s2, 0x98+var_84($sp)
                addiu   $a3, 0x2D0
                move    $a0, $zero
                jalr    $t9
                li      $a2, 0x16
                lw      $gp, 0x98+var_78($sp)

loc_2CAEC:                               # CODE XREF: dtls1_read_bytes+36C↑j
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                move    $s0, $v0
                li      $v0, 3
                bne     $s0, $v0, loc_2C828
                lw      $gp, 0x98+var_78($sp)
                lw      $t0, 0x58($s2)
                lw      $v0, 0($t0)
                andi    $v0, 1
                bnez    $v0, loc_2C800
                li      $v1, 1
                lw      $v0, 0x194($t0)
                bnez    $v0, loc_2C800
                la      $t9, ssl3_renegotiate
                li      $v0, 1
                move    $a0, $s2
                jalr    $t9 ; ssl3_renegotiate
                sw      $v0, 0x28($s2)
                lw      $gp, 0x98+var_78($sp)
                la      $t9, ssl3_renegotiate_check
                jalr    $t9 ; ssl3_renegotiate_check
                move    $a0, $s2
                beqz    $v0, loc_2C828
                lw      $gp, 0x98+var_78($sp)
                lw      $t9, 0x20($s2)
                jalr    $t9
                move    $a0, $s2
                bltz    $v0, loc_2D378
                lw      $gp, 0x98+var_78($sp)
                beqz    $v0, loc_2CE90
                la      $t9, ERR_put_error
                lw      $v0, 0xFC($s2)
                andi    $v0, 4
                bnez    $v0, loc_2C828
                nop
                lw      $t0, 0x58($s2)
                lw      $v0, 0xF8($t0)
                bnez    $v0, loc_2C800
                li      $v1, 1
                la      $t9, SSL_get_rbio
                sw      $s0, 0x18($s2)

loc_2CB94:                               # CODE XREF: dtls1_read_bytes+A4C↓j
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s2
                lw      $gp, 0x98+var_78($sp)
                la      $t9, BIO_clear_flags
                move    $s0, $v0

loc_2CBA8:                               # CODE XREF: dtls1_read_bytes+AF0↓j
                move    $a0, $s0
                jalr    $t9 ; BIO_clear_flags
                li      $a1, 0xF
                lw      $gp, 0x98+var_78($sp)
                la      $t9, BIO_set_flags
                move    $a0, $s0

loc_2CBC0:                               # CODE XREF: dtls1_read_bytes+B4C↓j
                jalr    $t9 ; BIO_set_flags
                li      $a1, 9
                lw      $gp, 0x98+var_78($sp)
                b       loc_2C9F4
                li      $a2, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_2CBD4:                               # CODE XREF: dtls1_read_bytes+318↑j
                lw      $a3, 0x5C($s2)

loc_2CBD8:                               # CODE XREF: dtls1_read_bytes+32C↑j
                                         # dtls1_read_bytes+338↑j ...
                lw      $v0, 0x2CC($a3)
                sltiu   $v0, 2
                bnez    $v0, loc_2CD58
                nop
                lw      $t9, 0x64($s2)
                sw      $zero, 0x2CC($a3)
                lbu     $s0, 0x2CA($a3)
                beqz    $t9, loc_2CC28
                lbu     $s1, 0x2CB($a3)
                lw      $v1, 0x68($s2)
                lw      $a1, 0($s2)
                li      $v0, 2
                sw      $v0, 0x98+var_88($sp)
                sw      $v1, 0x98+var_80($sp)
                sw      $s2, 0x98+var_84($sp)
                addiu   $a3, 0x2CA
                move    $a0, $zero
                jalr    $t9
                li      $a2, 0x15
                lw      $gp, 0x98+var_78($sp)

loc_2CC28:                               # CODE XREF: dtls1_read_bytes+4A4↑j
                lw      $t9, 0xD0($s2)
                beqz    $t9, loc_2CC80
                nop

loc_2CC34:                               # CODE XREF: dtls1_read_bytes+538↓j
                move    $s5, $t9
                sll     $a2, $s0, 8

loc_2CC3C:                               # CODE XREF: dtls1_read_bytes+540↓j
                or      $a2, $s1
                move    $a0, $s2
                move    $t9, $s5
                jalr    $t9
                li      $a1, 0x4004
                lw      $gp, 0x98+var_78($sp)
                li      $v1, 1

loc_2CC58:                               # CODE XREF: dtls1_read_bytes+548↓j
                bne     $s0, $v1, loc_2D1C8
                li      $v0, 2
                lw      $t0, 0x58($s2)
                bnez    $s1, loc_2C7FC
                sw      $s1, 0x184($t0)
                lw      $v0, 0x30($s2)
                move    $a2, $zero
                ori     $v0, 2
                b       loc_2C9F4
                sw      $v0, 0x30($s2)
 # ---------------------------------------------------------------------------

loc_2CC80:                               # CODE XREF: dtls1_read_bytes+4DC↑j
                lw      $v0, 0xDC($s2)
                lw      $t9, 0x9C($v0)
                bnez    $t9, loc_2CC34
                nop
                bnez    $s5, loc_2CC3C
                sll     $a2, $s0, 8
                b       loc_2CC58
                li      $v1, 1
 # ---------------------------------------------------------------------------

loc_2CCA0:                               # CODE XREF: dtls1_read_bytes+224↑j
                la      $t9, dtls1_get_record

loc_2CCA4:                               # CODE XREF: dtls1_read_bytes+230↑j
                jalr    $t9 ; dtls1_get_record
                move    $a0, $s2
                bgtz    $v0, loc_2C988
                lw      $gp, 0x98+var_78($sp)
                la      $t9, dtls1_read_failed
                move    $a1, $v0
                jalr    $t9 ; dtls1_read_failed
                move    $a0, $s2
                move    $a2, $v0
                blez    $v0, loc_2C9F4
                lw      $gp, 0x98+var_78($sp)
                b       loc_2C82C
                lw      $t0, 0x58($s2)
 # ---------------------------------------------------------------------------

loc_2CCD8:                               # CODE XREF: dtls1_read_bytes+2F4↑j
                lw      $v0, 0x5C($s2)
                li      $a3, 0xC
                addiu   $t2, $v0, 0x2DC
                addiu   $t1, $v0, 0x2D0

loc_2CCE8:                               # CODE XREF: dtls1_read_bytes+600↓j
                lw      $v0, 0x110($s1)
                sltu    $v0, $a3
                beqz    $v0, loc_2CD08
                move    $a2, $zero
                li      $v0, 0xF0
                sw      $v0, 0x38($s2)
                b       loc_2C7FC
                sw      $zero, 0x110($s1)
 # ---------------------------------------------------------------------------

loc_2CD08:                               # CODE XREF: dtls1_read_bytes+5A0↑j
                lw      $v1, 0x114($s1)

loc_2CD0C:                               # CODE XREF: dtls1_read_bytes+5E4↓j
                lw      $v0, 0x118($s1)
                addu    $a1, $t1, $a2
                addu    $v0, $v1
                lbu     $a0, 0($v0)
                addiu   $v1, 1
                sb      $a0, 0($a1)
                lw      $v0, 0x110($s1)
                addiu   $a2, 1
                addiu   $v0, -1
                sw      $v1, 0x114($s1)
                bne     $a2, $a3, loc_2CD0C
                sw      $v0, 0x110($s1)
                b       loc_2CA64
                sw      $a3, 0($t2)
 # ---------------------------------------------------------------------------

loc_2CD44:                               # CODE XREF: dtls1_read_bytes+2FC↑j
                lw      $v0, 0x5C($s2)
                li      $a3, 2
                addiu   $t2, $v0, 0x2CC
                b       loc_2CCE8
                addiu   $t1, $v0, 0x2CA
 # ---------------------------------------------------------------------------

loc_2CD58:                               # CODE XREF: dtls1_read_bytes+490↑j
                lw      $v0, 0x30($s2)
                andi    $v0, 1
                bnez    $v0, loc_2D2A4
                li      $s0, 0x14
                lw      $v1, 0x10C($s1)
                beq     $v1, $s0, loc_2CFB0
                la      $t9, dtls1_get_ccs_header
                lw      $v0, 0x2DC($a3)
                sltiu   $v0, 0xC
                bnez    $v0, loc_2CDC0
                slti    $v0, $v1, 0x14
                lw      $v0, 0x1C($s2)
                bnez    $v0, loc_2CDC0
                slti    $v0, $v1, 0x14
                la      $t9, dtls1_get_message_header
                lw      $a0, 0x118($s1)
                jalr    $t9 ; dtls1_get_message_header
                move    $a1, $fp
                lw      $v0, 0x5C($s2)
                lw      $a0, 0x124($s1)
                lhu     $v1, 0x208($v0)
                beq     $a0, $v1, loc_2D13C
                lw      $gp, 0x98+var_78($sp)

loc_2CDB4:                               # CODE XREF: dtls1_read_bytes+694↓j
                lw      $t0, 0x58($s2)
                b       loc_2C7FC
                sw      $zero, 0x110($s1)
 # ---------------------------------------------------------------------------

loc_2CDC0:                               # CODE XREF: dtls1_read_bytes+62C↑j
                                         # dtls1_read_bytes+638↑j
                bnez    $v0, loc_2CDDC
                slti    $v0, $v1, 0x17
                bnez    $v0, loc_2CF8C
                la      $t9, ERR_put_error
                li      $v0, 0x17
                beq     $v1, $v0, loc_2CF38
                nop

loc_2CDDC:                               # CODE XREF: dtls1_read_bytes:loc_2CDC0↑j
                lw      $v1, 0($s2)
                li      $v0, 0x301
                beq     $v1, $v0, loc_2CDB4
                nop

loc_2CDEC:                               # CODE XREF: dtls1_read_bytes:loc_2D218↓j
                la      $t9, ERR_put_error

loc_2CDF0:                               # CODE XREF: dtls1_read_bytes+7F0↓j
                                         # dtls1_read_bytes+7FC↓j ...
                sw      $zero, 0x98+var_88($sp)
                li      $a0, 0x14
                li      $a1, 0x102
                li      $a2, 0xF5

loc_2CE00:                               # CODE XREF: dtls1_read_bytes+848↓j
                                         # dtls1_read_bytes+978↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x98+var_78($sp)
                li      $a2, 0xA

loc_2CE10:                               # CODE XREF: dtls1_read_bytes+A9C↓j
                la      $t9, ssl3_send_alert
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x98+var_78($sp)
                li      $a2, 0xFFFFFFFF
                lw      $ra, 0x98+var_4($sp)
                lw      $fp, 0x98+var_8($sp)
                lw      $s7, 0x98+var_C($sp)
                lw      $s6, 0x98+var_10($sp)
                lw      $s5, 0x98+var_14($sp)
                lw      $s4, 0x98+var_18($sp)
                lw      $s3, 0x98+var_1C($sp)
                lw      $s2, 0x98+var_20($sp)
                lw      $s1, 0x98+var_24($sp)
                lw      $s0, 0x98+var_28($sp)
                move    $v0, $a2
                jr      $ra
                addiu   $sp, 0x98
 # ---------------------------------------------------------------------------

loc_2CE5C:                               # CODE XREF: dtls1_read_bytes+90↑j
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x3000
                beqz    $v0, loc_2C7E8
                lw      $gp, 0x98+var_78($sp)
                lw      $t9, 0x20($s2)
                jalr    $t9
                move    $a0, $s2
                bltz    $v0, loc_2D378
                lw      $gp, 0x98+var_78($sp)
                bnez    $v0, loc_2C7EC
                addiu   $v1, $sp, 0x98+var_70
                la      $t9, ERR_put_error

loc_2CE90:                               # CODE XREF: dtls1_read_bytes+414↑j
                                         # dtls1_read_bytes+A1C↓j
                li      $a0, 0x14
                li      $a1, 0x102
                li      $a2, 0xE5
                b       loc_2C9E4
                sw      $zero, 0x98+var_88($sp)
 # ---------------------------------------------------------------------------

loc_2CEA4:                               # CODE XREF: dtls1_read_bytes+84↑j
                lw      $a1, 0x5C($s2)
                lw      $v0, 0x2DC($a1)
                beqz    $v0, loc_2C7DC
                nop
                blez    $s6, loc_2D3B4
                addiu   $a2, $a1, 0x2D0
                move    $a0, $s7
                b       loc_2CED0
                move    $a3, $zero
 # ---------------------------------------------------------------------------

loc_2CEC8:                               # CODE XREF: dtls1_read_bytes+7A0↓j
                beqz    $v0, loc_2CF30
                nop

loc_2CED0:                               # CODE XREF: dtls1_read_bytes+770↑j
                lbu     $v0, 0($a2)
                addiu   $a3, 1
                sb      $v0, 0($a0)
                lw      $v1, 0x5C($s2)
                addiu   $a0, 1
                lw      $v0, 0x2DC($v1)
                addiu   $a2, 1
                addiu   $v0, -1
                bne     $a3, $s6, loc_2CEC8
                sw      $v0, 0x2DC($v1)
                beqz    $v0, loc_2CF30
                move    $a1, $v1

loc_2CF00:                               # CODE XREF: dtls1_read_bytes:loc_2D3B4↓j
                move    $a0, $zero

loc_2CF04:                               # CODE XREF: dtls1_read_bytes+7D0↓j
                lbu     $v1, 0($a2)
                addu    $v0, $a1, $a0
                sb      $v1, 0x2D0($v0)
                lw      $a1, 0x5C($s2)
                addiu   $a0, 1
                lw      $v0, 0x2DC($a1)
                sltu    $v0, $a0, $v0
                bnez    $v0, loc_2CF04
                addiu   $a2, 1
                beqz    $a3, loc_2C7DC
                nop

loc_2CF30:                               # CODE XREF: dtls1_read_bytes:loc_2CEC8↑j
                                         # dtls1_read_bytes+7A8↑j
                b       loc_2C9F4
                move    $a2, $a3
 # ---------------------------------------------------------------------------

loc_2CF38:                               # CODE XREF: dtls1_read_bytes+684↑j
                lw      $v1, 0x58($s2)
                lw      $v0, 0x1A0($v1)
                beqz    $v0, loc_2CDF0
                la      $t9, ERR_put_error
                lw      $v0, 0x198($v1)
                beqz    $v0, loc_2CDF0
                nop
                lw      $a0, 0x34($s2)
                andi    $v0, $a0, 0x1000
                beqz    $v0, loc_2D1F4
                andi    $v0, $a0, 0x2000
                slti    $v0, $a0, 0x1110
                bnez    $v0, loc_2D1F4
                andi    $v0, $a0, 0x2000
                slti    $v0, $a0, 0x1121
                beqz    $v0, loc_2D1F4
                andi    $v0, $a0, 0x2000
                li      $v0, 2
                li      $a2, 0xFFFFFFFF

loc_2CF84:                               # CODE XREF: dtls1_read_bytes+AC0↓j
                b       loc_2C9F4
                sw      $v0, 0x1A0($v1)
 # ---------------------------------------------------------------------------

loc_2CF8C:                               # CODE XREF: dtls1_read_bytes+678↑j
                li      $a0, 0x14
                li      $a1, 0x102
                li      $a2, 0x44  # 'D'
                b       loc_2CE00
                sw      $zero, 0x98+var_88($sp)
 # ---------------------------------------------------------------------------

loc_2CFA0:                               # CODE XREF: dtls1_read_bytes+2E0↑j
                move    $a2, $zero
                sw      $zero, 0x110($s1)
                b       loc_2C9F4
                sw      $v0, 0x18($s2)
 # ---------------------------------------------------------------------------

loc_2CFB0:                               # CODE XREF: dtls1_read_bytes+61C↑j
                lw      $a0, 0x118($s1)
                jalr    $t9 ; dtls1_get_ccs_header
                lw      $a1, 0x98+var_30($sp)
                lw      $v1, 0($s2)
                li      $a1, 1
                xori    $v1, 0x100
                li      $v0, 3
                lw      $a0, 0x110($s1)
                movn    $v0, $a1, $v1
                bne     $a0, $v0, loc_2D360
                lw      $gp, 0x98+var_78($sp)
                lw      $v0, 0x114($s1)
                bnez    $v0, loc_2D364
                la      $t9, ERR_put_error
                lw      $a3, 0x118($s1)
                lbu     $s0, 0($a3)
                bne     $s0, $a1, loc_2D368
                li      $a0, 0x14
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_2D028
                sw      $zero, 0x110($s1)
                lw      $v0, 0x68($s2)
                lw      $a1, 0($s2)
                move    $a0, $zero
                sw      $s0, 0x98+var_88($sp)
                sw      $v0, 0x98+var_80($sp)
                sw      $s2, 0x98+var_84($sp)
                jalr    $t9
                li      $a2, 0x14
                lw      $gp, 0x98+var_78($sp)

loc_2D028:                               # CODE XREF: dtls1_read_bytes+8AC↑j
                lw      $v1, 0x5C($s2)
                lw      $v0, 0x2E4($v1)
                beqz    $v0, loc_2C828
                la      $t9, ssl3_do_change_cipher_spec
                lw      $v0, 0x58($s2)
                sw      $zero, 0x2E4($v1)
                move    $a0, $s2
                jalr    $t9 ; ssl3_do_change_cipher_spec
                sw      $s0, 0x180($v0)
                beqz    $v0, loc_2D1C0
                lw      $gp, 0x98+var_78($sp)
                la      $t9, dtls1_reset_seq_numbers
                move    $a0, $s2
                jalr    $t9 ; dtls1_reset_seq_numbers
                li      $a1, 1
                lw      $v1, 0($s2)
                li      $v0, 0x100
                bne     $v1, $v0, loc_2C828
                lw      $gp, 0x98+var_78($sp)
                lw      $v1, 0x5C($s2)
                lw      $t0, 0x58($s2)
                lhu     $v0, 0x228($v1)
                addiu   $v0, 1
                b       loc_2C7FC
                sh      $v0, 0x228($v1)
 # ---------------------------------------------------------------------------

loc_2D08C:                               # CODE XREF: dtls1_read_bytes+2EC↑j
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s2
                andi    $v0, 0x3000
                beqz    $v0, loc_2D0D0
                lw      $gp, 0x98+var_78($sp)
                li      $v0, 0x17
                bne     $s0, $v0, loc_2D0D0
                nop
                lw      $v0, 0x80($s2)
                bnez    $v0, loc_2D0D0
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x102
                li      $a2, 0x64  # 'd'
                b       loc_2CE00
                sw      $zero, 0x98+var_88($sp)
 # ---------------------------------------------------------------------------

loc_2D0D0:                               # CODE XREF: dtls1_read_bytes+94C↑j
                                         # dtls1_read_bytes+958↑j ...
                blez    $s6, loc_2D1A4
                la      $t9, memcpy
                lw      $v1, 0x110($s1)
                lw      $a0, 0x118($s1)
                sltu    $v0, $v1, $s6
                lw      $a1, 0x114($s1)
                move    $s0, $v1
                movz    $s0, $s6, $v0
                addu    $a1, $a0, $a1
                move    $a2, $s0
                jalr    $t9 ; memcpy
                move    $a0, $s7
                lw      $v0, 0x98+arg_10($sp)
                bnez    $v0, loc_2D134
                lw      $gp, 0x98+var_78($sp)
                lw      $v1, 0x110($s1)
                lw      $v0, 0x114($s1)
                subu    $v1, $s0
                addu    $v0, $s0
                sw      $v0, 0x114($s1)
                bnez    $v1, loc_2D134
                sw      $v1, 0x110($s1)
                li      $v0, 0xF0
                sw      $v0, 0x38($s2)
                sw      $zero, 0x114($s1)

loc_2D134:                               # CODE XREF: dtls1_read_bytes+9B4↑j
                                         # dtls1_read_bytes+9D0↑j
                b       loc_2C9F4
                move    $a2, $s0
 # ---------------------------------------------------------------------------

loc_2D13C:                               # CODE XREF: dtls1_read_bytes+65C↑j
                lbu     $v0, 0x98+var_5C($sp)
                beq     $v0, $s0, loc_2D3BC
                li      $v1, 3
                lw      $v0, 0x34($s2)
                andi    $v0, 0xFFF
                beq     $v0, $v1, loc_2D380
                nop

loc_2D158:                               # CODE XREF: dtls1_read_bytes+C3C↓j
                                         # dtls1_read_bytes+C5C↓j
                lw      $t9, 0x20($s2)
                jalr    $t9
                move    $a0, $s2
                bltz    $v0, loc_2D378
                lw      $gp, 0x98+var_78($sp)
                beqz    $v0, loc_2CE90
                la      $t9, ERR_put_error
                lw      $v0, 0xFC($s2)
                andi    $v0, 4
                bnez    $v0, loc_2C828
                nop
                lw      $t0, 0x58($s2)
                lw      $v0, 0xF8($t0)
                bnez    $v0, loc_2C800
                li      $v1, 1
                la      $t9, SSL_get_rbio
                li      $v0, 3
                b       loc_2CB94
                sw      $v0, 0x18($s2)
 # ---------------------------------------------------------------------------

loc_2D1A4:                               # CODE XREF: dtls1_read_bytes:loc_2D0D0↑j
                b       loc_2C9F4
                move    $a2, $s6
 # ---------------------------------------------------------------------------

loc_2D1AC:                               # CODE XREF: dtls1_read_bytes+50↑j
                la      $t9, ssl3_setup_buffers
                jalr    $t9 ; ssl3_setup_buffers
                nop
                bnez    $v0, loc_2C7A8
                lw      $gp, 0x98+var_78($sp)

loc_2D1C0:                               # CODE XREF: dtls1_read_bytes+8FC↑j
                                         # dtls1_read_bytes+C78↓j
                b       loc_2C9F4
                li      $a2, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_2D1C8:                               # CODE XREF: dtls1_read_bytes:loc_2CC58↑j
                beq     $s0, $v0, loc_2D2B8
                la      $t9, ERR_put_error
                li      $a2, 0xF6
                sw      $zero, 0x98+var_88($sp)
                li      $a0, 0x14
                li      $a1, 0x102
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x98+var_78($sp)
                b       loc_2CE10
                li      $a2, 0x2F  # '/'
 # ---------------------------------------------------------------------------

loc_2D1F4:                               # CODE XREF: dtls1_read_bytes+80C↑j
                                         # dtls1_read_bytes+818↑j ...
                beqz    $v0, loc_2CDF0
                la      $t9, ERR_put_error
                slti    $v0, $a0, 0x2121
                beqz    $v0, loc_2CDF0
                slti    $v0, $a0, 0x2110
                bnez    $v0, loc_2CDF0
                li      $v0, 2
                b       loc_2CF84
                li      $a2, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_2D218:                               # CODE XREF: dtls1_read_bytes+30C↑j
                bne     $s0, $v0, loc_2CDEC
                la      $t9, SSL_get_rbio
                li      $v0, 2
                sw      $v0, 0x1A0($t0)
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s2
                lw      $gp, 0x98+var_78($sp)
                la      $t9, BIO_clear_flags
                move    $s0, $v0
                li      $v0, 3
                b       loc_2CBA8
                sw      $v0, 0x18($s2)
 # ---------------------------------------------------------------------------

loc_2D248:                               # CODE XREF: dtls1_read_bytes+304↑j
                la      $t9, dtls1_process_heartbeat
                jalr    $t9 ; dtls1_process_heartbeat
                move    $a0, $s2
                lw      $gp, 0x98+var_78($sp)
                li      $v0, 3
                la      $t9, SSL_get_rbio
                sw      $zero, 0x110($s1)
                move    $a0, $s2
                jalr    $t9 ; SSL_get_rbio
                sw      $v0, 0x18($s2)
                lw      $gp, 0x98+var_78($sp)
                la      $t9, BIO_clear_flags
                move    $a0, $v0
                jalr    $t9 ; BIO_clear_flags
                li      $a1, 0xF
                lw      $gp, 0x98+var_78($sp)
                la      $t9, SSL_get_rbio
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s2
                lw      $gp, 0x98+var_78($sp)
                la      $t9, BIO_set_flags
                b       loc_2CBC0
                move    $a0, $v0
 # ---------------------------------------------------------------------------

loc_2D2A4:                               # CODE XREF: dtls1_read_bytes+610↑j
                li      $v0, 1
                move    $a2, $zero
                sw      $v0, 0x18($s2)
                b       loc_2C9F4
                sw      $zero, 0x110($s1)
 # ---------------------------------------------------------------------------

loc_2D2B8:                               # CODE XREF: dtls1_read_bytes:loc_2D1C8↑j
                lw      $v0, 0x58($s2)
                sw      $v1, 0x18($s2)
                li      $a0, 0x14
                sw      $s1, 0x188($v0)
                li      $a1, 0x102
                addiu   $a2, $s1, 0x3E8
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x98+var_88($sp)
                lw      $gp, 0x98+var_78($sp)
                la      $a2, loc_40000
                la      $t9, BIO_snprintf
                addiu   $s0, $sp, 0x98+var_6C
                move    $a3, $s1
                addiu   $a2, (aD - 0x40000)  # "%d"
                move    $a0, $s0
                jalr    $t9 ; BIO_snprintf
                li      $a1, 0x10
                lw      $gp, 0x98+var_78($sp)
                la      $a1, loc_40000
                la      $t9, ERR_add_error_data
                move    $a2, $s0
                addiu   $a1, (aSslAlertNumber - 0x40000)  # "SSL alert number "
                jalr    $t9 ; ERR_add_error_data
                li      $a0, 2
                lw      $gp, 0x98+var_78($sp)
                lw      $v0, 0x30($s2)
                ori     $v0, 2
                la      $t9, SSL_CTX_remove_session
                lw      $a1, 0xC0($s2)
                lw      $a0, 0xDC($s2)
                jalr    $t9 ; SSL_CTX_remove_session
                sw      $v0, 0x30($s2)
                lw      $gp, 0x98+var_78($sp)
                b       loc_2C9F4
                move    $a2, $zero
 # ---------------------------------------------------------------------------

loc_2D348:                               # CODE XREF: dtls1_read_bytes+360↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x102
                li      $a2, 0x69  # 'i'
                b       loc_2C9E4
                sw      $zero, 0x98+var_88($sp)
 # ---------------------------------------------------------------------------

loc_2D360:                               # CODE XREF: dtls1_read_bytes+884↑j
                la      $t9, ERR_put_error

loc_2D364:                               # CODE XREF: dtls1_read_bytes+890↑j
                li      $a0, 0x14

loc_2D368:                               # CODE XREF: dtls1_read_bytes+8A0↑j
                li      $a1, 0x102
                li      $a2, 0x67  # 'g'
                b       loc_2C9E4
                sw      $zero, 0x98+var_88($sp)
 # ---------------------------------------------------------------------------

loc_2D378:                               # CODE XREF: dtls1_read_bytes+40C↑j
                                         # dtls1_read_bytes+72C↑j ...
                b       loc_2C9F4
                move    $a2, $v0
 # ---------------------------------------------------------------------------

loc_2D380:                               # CODE XREF: dtls1_read_bytes+A00↑j
                lw      $v1, 0x58($s2)
                lw      $v0, 0($v1)
                andi    $v0, 1
                bnez    $v0, loc_2D158
                li      $v0, 0x2000
                lw      $a1, 0x24($s2)
                li      $v1, 0x1000
                li      $a0, 1
                movz    $v0, $v1, $a1
                sw      $v0, 0x34($s2)
                sw      $a0, 0x28($s2)
                b       loc_2D158
                sw      $a0, 0x178($s2)
 # ---------------------------------------------------------------------------

loc_2D3B4:                               # CODE XREF: dtls1_read_bytes+764↑j
                b       loc_2CF00
                move    $a3, $zero
 # ---------------------------------------------------------------------------

loc_2D3BC:                               # CODE XREF: dtls1_read_bytes+9F0↑j
                la      $t9, dtls1_check_timeout_num
                jalr    $t9 ; dtls1_check_timeout_num
                move    $a0, $s2
                bltz    $v0, loc_2D1C0
                lw      $gp, 0x98+var_78($sp)
                la      $t9, dtls1_retransmit_buffered_messages
                jalr    $t9 ; dtls1_retransmit_buffered_messages
                move    $a0, $s2
                lw      $gp, 0x98+var_78($sp)
                lw      $t0, 0x58($s2)
                b       loc_2C7FC
                sw      $zero, 0x110($s1)
 # End of function dtls1_read_bytes


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_get_queue_priority
dtls1_get_queue_priority:                # CODE XREF: dtls1_retransmit_buffered_messages+80↓p
                                         # dtls1_buffer_message+120↓p ...
                andi    $v0, $a0, 0xFFFF
                sll     $v0, 1
                jr      $ra
                subu    $v0, $a1
 # End of function dtls1_get_queue_priority


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_min_mtu
dtls1_min_mtu:                           # CODE XREF: dtls1_do_write+4C↓p
                                         # dtls1_do_write+68↓p ...
                jr      $ra
                li      $v0, 0xE4
 # End of function dtls1_min_mtu


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_heartbeat
dtls1_heartbeat:                         # DATA XREF: LOAD:00003E48↑o
                                         # ssl3_ctrl+31C↑o ...

var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_heartbeat)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_20($sp)
                lw      $v0, 0x16C($a0)
                li      $v1, 1
                andi    $s2, $v0, 3
                bne     $s2, $v1, loc_2D5B8
                move    $s1, $a0
                lw      $v0, 0x170($a0)
                bnez    $v0, loc_2D5D0
                la      $t9, ERR_put_error
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                nop
                andi    $v0, 0x3000
                bnez    $v0, loc_2D470
                lw      $gp, 0x40+var_20($sp)
                lw      $v0, 0x1C($s1)
                beqz    $v0, loc_2D4B4
                la      $a1, loc_40000

loc_2D470:                               # CODE XREF: dtls1_heartbeat+58↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0x131
                li      $a2, 0xF4

loc_2D484:                               # CODE XREF: dtls1_heartbeat+1C4↓j
                                         # dtls1_heartbeat+1D8↓j
                li      $s3, 0xFFFFFFFF
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s3
                lw      $gp, 0x40+var_20($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_2D4B4:                               # CODE XREF: dtls1_heartbeat+64↑j
                la      $t9, CRYPTO_malloc
                li      $a2, 0x619
                addiu   $a1, (aD1BothC - 0x40000)  # "d1_both.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a0, 0x25  # '%'
                move    $s0, $v0
                li      $v0, 0x12
                lw      $gp, 0x40+var_20($sp)
                sb      $v0, 2($s0)
                sb      $s2, 0($s0)
                sb      $zero, 1($s0)
                lw      $v0, 0x174($s1)
                srl     $v0, 8
                sb      $v0, 3($s0)
                lw      $v1, 0x174($s1)
                la      $t9, RAND_pseudo_bytes
                sb      $v1, 4($s0)
                addiu   $a0, $s0, 5
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                lw      $gp, 0x40+var_20($sp)
                la      $t9, RAND_pseudo_bytes
                addiu   $a0, $s0, 0x15
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                lw      $gp, 0x40+var_20($sp)
                la      $t9, dtls1_write_bytes
                move    $a0, $s1
                li      $a1, 0x18
                move    $a2, $s0
                jalr    $t9 ; dtls1_write_bytes
                li      $a3, 0x25  # '%'
                move    $s3, $v0
                bltz    $v0, loc_2D588
                lw      $gp, 0x40+var_20($sp)
                lw      $t9, 0x64($s1)
                beqz    $t9, loc_2D574
                li      $v0, 0x25  # '%'
                lw      $v1, 0x68($s1)
                lw      $a1, 0($s1)
                sw      $v0, 0x40+var_30($sp)
                sw      $v1, 0x40+var_28($sp)
                sw      $s1, 0x40+var_2C($sp)
                li      $a0, 1
                li      $a2, 0x18
                jalr    $t9
                move    $a3, $s0
                lw      $gp, 0x40+var_20($sp)

loc_2D574:                               # CODE XREF: dtls1_heartbeat+140↑j
                la      $t9, dtls1_start_timer
                jalr    $t9 ; dtls1_start_timer
                move    $a0, $s1
                lw      $gp, 0x40+var_20($sp)
                sw      $s2, 0x170($s1)

loc_2D588:                               # CODE XREF: dtls1_heartbeat+134↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                move    $v0, $s3
                lw      $gp, 0x40+var_20($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_2D5B8:                               # CODE XREF: dtls1_heartbeat+34↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x131
                li      $a2, 0x16D
                b       loc_2D484
                sw      $zero, 0x40+var_30($sp)
 # ---------------------------------------------------------------------------

loc_2D5D0:                               # CODE XREF: dtls1_heartbeat+40↑j
                li      $a0, 0x14
                li      $a1, 0x131
                li      $a2, 0x16E
                b       loc_2D484
                sw      $zero, 0x40+var_30($sp)
 # End of function dtls1_heartbeat


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_process_heartbeat
dtls1_process_heartbeat:                 # CODE XREF: dtls1_read_bytes+AFC↑p
                                         # DATA XREF: LOAD:00002758↑o ...

var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_process_heartbeat)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_8($sp)
                sw      $s5, 0x48+var_C($sp)
                sw      $s4, 0x48+var_10($sp)
                sw      $s3, 0x48+var_14($sp)
                sw      $s2, 0x48+var_18($sp)
                sw      $s1, 0x48+var_1C($sp)
                sw      $s0, 0x48+var_20($sp)
                sw      $gp, 0x48+var_28($sp)
                move    $s2, $a0
                lw      $a0, 0x58($a0)
                lw      $t9, 0x64($s2)
                lw      $s0, 0x118($a0)
                lbu     $v0, 1($s0)
                lbu     $v1, 2($s0)
                sll     $v0, 8
                or      $s3, $v1, $v0
                lbu     $s1, 0($s0)
                beqz    $t9, loc_2D66C
                addiu   $s4, $s0, 3
                lw      $v0, 0x110($a0)
                lw      $v1, 0x68($s2)
                lw      $a1, 0($s2)
                move    $a0, $zero
                sw      $v0, 0x48+var_38($sp)
                sw      $v1, 0x48+var_30($sp)
                sw      $s2, 0x48+var_34($sp)
                li      $a2, 0x18
                jalr    $t9
                move    $a3, $s0
                lw      $gp, 0x48+var_28($sp)

loc_2D66C:                               # CODE XREF: dtls1_process_heartbeat+54↑j
                li      $v0, 1
                beq     $s1, $v0, loc_2D6F0
                li      $v0, 2
                beq     $s1, $v0, loc_2D6AC
                li      $v0, 0x12

loc_2D680:                               # CODE XREF: dtls1_process_heartbeat+CC↓j
                                         # dtls1_process_heartbeat+E0↓j
                move    $s0, $zero

loc_2D684:                               # CODE XREF: dtls1_process_heartbeat+104↓j
                                         # dtls1_process_heartbeat+210↓j
                move    $v0, $s0
                lw      $ra, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_2D6AC:                               # CODE XREF: dtls1_process_heartbeat+94↑j
                lbu     $a3, 3($s0)
                bne     $s3, $v0, loc_2D680
                lbu     $a1, 1($s4)
                sll     $v0, $a3, 8
                lw      $v1, 0x174($s2)
                or      $v0, $a1, $v0
                bne     $v1, $v0, loc_2D680
                la      $t9, dtls1_stop_timer
                jalr    $t9 ; dtls1_stop_timer
                move    $a0, $s2
                lw      $v0, 0x174($s2)
                lw      $gp, 0x48+var_28($sp)
                addiu   $v0, 1
                move    $s0, $zero
                sw      $v0, 0x174($s2)
                b       loc_2D684
                sw      $zero, 0x170($s2)
 # ---------------------------------------------------------------------------

loc_2D6F0:                               # CODE XREF: dtls1_process_heartbeat+8C↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $s5, $s3, 0x13
                addiu   $a1, (aD1BothC - 0x40000)  # "d1_both.c"
                move    $a0, $s5
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x5C2
                lw      $gp, 0x48+var_28($sp)
                move    $s1, $v0
                addiu   $s0, $v0, 3
                srl     $v1, $s3, 8
                li      $v0, 2
                la      $t9, memcpy
                sb      $v1, 1($s1)
                move    $a2, $s3
                move    $a0, $s0
                move    $a1, $s4
                sb      $v0, 0($s1)
                jalr    $t9 ; memcpy
                sb      $s3, 2($s1)
                lw      $gp, 0x48+var_28($sp)
                la      $t9, RAND_pseudo_bytes
                addu    $a0, $s0, $s3
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                lw      $gp, 0x48+var_28($sp)
                la      $t9, dtls1_write_bytes
                move    $a0, $s2
                li      $a1, 0x18
                move    $a2, $s1
                jalr    $t9 ; dtls1_write_bytes
                move    $a3, $s5
                move    $s0, $v0
                bltz    $v0, loc_2D7E8
                lw      $gp, 0x48+var_28($sp)
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_2D7AC
                li      $a0, 1
                lw      $v0, 0x68($s2)
                lw      $a1, 0($s2)
                sw      $s5, 0x48+var_38($sp)
                sw      $v0, 0x48+var_30($sp)
                sw      $s2, 0x48+var_34($sp)
                li      $a2, 0x18
                jalr    $t9
                move    $a3, $s1
                lw      $gp, 0x48+var_28($sp)

loc_2D7AC:                               # CODE XREF: dtls1_process_heartbeat+19C↑j
                la      $t9, CRYPTO_free
                move    $a0, $s1
                jalr    $t9 ; CRYPTO_free
                move    $s0, $zero
                move    $v0, $s0
                lw      $gp, 0x48+var_28($sp)
                lw      $ra, 0x48+var_8($sp)
                lw      $s5, 0x48+var_C($sp)
                lw      $s4, 0x48+var_10($sp)
                lw      $s3, 0x48+var_14($sp)
                lw      $s2, 0x48+var_18($sp)
                lw      $s1, 0x48+var_1C($sp)
                lw      $s0, 0x48+var_20($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_2D7E8:                               # CODE XREF: dtls1_process_heartbeat+190↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                b       loc_2D684
                lw      $gp, 0x48+var_28($sp)
 # End of function dtls1_process_heartbeat


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_shutdown
dtls1_shutdown:                          # DATA XREF: LOAD:000049A8↑o
                                         # .got:dtls1_shutdown_ptr↓o
                la      $gp, (off_5A360+0x7FF0 - dtls1_shutdown)
                addu    $gp, $t9
                la      $t9, ssl3_shutdown
                jr      $t9 ; ssl3_shutdown
                nop
 # End of function dtls1_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_get_ccs_header
dtls1_get_ccs_header:                    # CODE XREF: dtls1_read_bytes+864↑p
                                         # DATA XREF: LOAD:000026F8↑o ...
                sh      $zero, 0($a1)
                sh      $zero, 2($a1)
                lbu     $v0, 0($a0)
                jr      $ra
                sb      $v0, 0($a1)
 # End of function dtls1_get_ccs_header


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_get_message_header
dtls1_get_message_header:                # CODE XREF: dtls1_read_bytes+648↑p
                                         # sub_2F4F0+10C↓p
                                         # DATA XREF: ...
                sw      $zero, 0($a1)
                sw      $zero, 4($a1)
                sw      $zero, 8($a1)
                sw      $zero, 0xC($a1)
                sw      $zero, 0x10($a1)
                sw      $zero, 0x14($a1)
                sw      $zero, 0x18($a1)
                sw      $zero, 0x1C($a1)
                sw      $zero, 0x20($a1)
                sw      $zero, 0x24($a1)
                sw      $zero, 0x28($a1)
                lbu     $v1, 0($a0)
                addiu   $a3, $a0, 1
                sb      $v1, 0($a1)
                lbu     $v0, 1($a0)
                lbu     $a2, 1($a3)
                lbu     $v1, 2($a3)
                sll     $v0, 16
                or      $v1, $v0
                sll     $a2, 8
                or      $v1, $a2
                sw      $v1, 4($a1)
                lbu     $v0, 4($a0)
                lbu     $v1, 5($a0)
                sll     $v0, 8
                or      $v0, $v1
                sh      $v0, 8($a1)
                lbu     $v1, 6($a0)
                addiu   $a3, $a0, 6
                lbu     $a2, 1($a3)
                lbu     $v0, 2($a3)
                sll     $v1, 16
                or      $v0, $v1
                sll     $a2, 8
                or      $v0, $a2
                sw      $v0, 0xC($a1)
                lbu     $v1, 9($a0)
                addiu   $a0, 9
                lbu     $a2, 1($a0)
                lbu     $v0, 2($a0)
                sll     $v1, 16
                or      $v0, $v1
                sll     $a2, 8
                or      $v0, $a2
                jr      $ra
                sw      $v0, 0x10($a1)
 # End of function dtls1_get_message_header


 # =============== S U B R O U T I N E =======================================


sub_2D8E0:                               # CODE XREF: dtls1_buffer_message+40↓p
                                         # sub_2F088+194↓p ...

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_2D8E0)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                la      $s3, loc_40000
                la      $t9, CRYPTO_malloc
                move    $s2, $a0
                move    $s5, $a1
                li      $a0, 0x34  # '4'
                addiu   $a1, $s3, (aD1BothC - 0x40000)  # "d1_both.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xB3
                move    $s0, $v0
                beqz    $v0, loc_2D9EC
                lw      $gp, 0x38+var_28($sp)
                bnez    $s2, loc_2D980
                move    $s4, $v0
                move    $s1, $zero
                bnez    $s5, loc_2D9A8
                sw      $s1, 0x2C($s0)

loc_2D950:                               # CODE XREF: sub_2D8E0+C0↓j
                move    $s1, $zero

loc_2D954:                               # CODE XREF: sub_2D8E0+104↓j
                sw      $s1, 0x30($s0)

loc_2D958:                               # CODE XREF: sub_2D8E0+15C↓j
                                         # sub_2D8E0+174↓j
                move    $v0, $s4
                lw      $ra, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2D980:                               # CODE XREF: sub_2D8E0+5C↑j
                la      $t9, CRYPTO_malloc
                move    $a0, $s2
                addiu   $a1, $s3, (aD1BothC - 0x40000)  # "d1_both.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xB9
                beqz    $v0, loc_2DA44
                lw      $gp, 0x38+var_28($sp)
                move    $s1, $v0
                beqz    $s5, loc_2D950
                sw      $s1, 0x2C($s0)

loc_2D9A8:                               # CODE XREF: sub_2D8E0+68↑j
                addiu   $v0, $s2, 7
                la      $t9, CRYPTO_malloc
                srl     $s2, $v0, 3
                addiu   $a1, $s3, (aD1BothC - 0x40000)  # "d1_both.c"
                move    $a0, $s2
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xC7
                beqz    $v0, loc_2DA18
                lw      $gp, 0x38+var_28($sp)
                la      $t9, memset
                move    $a2, $s2
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; memset
                move    $s1, $v0
                b       loc_2D954
                lw      $gp, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_2D9EC:                               # CODE XREF: sub_2D8E0+54↑j
                move    $s4, $zero
                move    $v0, $s4
                lw      $ra, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2DA18:                               # CODE XREF: sub_2D8E0+E4↑j
                beqz    $s1, loc_2DA2C
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                lw      $gp, 0x38+var_28($sp)

loc_2DA2C:                               # CODE XREF: sub_2D8E0:loc_2DA18↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x38+var_28($sp)
                b       loc_2D958
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_2DA44:                               # CODE XREF: sub_2D8E0+B4↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x38+var_28($sp)
                b       loc_2D958
                move    $s4, $zero
 # End of function sub_2D8E0


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_read_failed
dtls1_read_failed:                       # CODE XREF: dtls1_read_bytes+56C↑p
                                         # DATA XREF: LOAD:00002D78↑o ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_read_failed)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                move    $s0, $a1
                blez    $a1, loc_2DACC
                move    $s1, $a0
                la      $v0, stderr
                la      $a1, loc_40000
                la      $a2, loc_40000
                la      $t9, fprintf
                lw      $a0, (stderr - 0x5B0A8)($v0)
                addiu   $a1, (aInvalidStateRe - 0x40000)  # "invalid state reached %s:%d"
                addiu   $a2, (aD1BothC - 0x40000)  # "d1_both.c"
                jalr    $t9 ; fprintf
                li      $a3, 0x434
                lw      $gp, 0x28+var_18($sp)
                li      $s0, 1

loc_2DAB4:                               # CODE XREF: dtls1_read_failed+7C↓j
                                         # dtls1_read_failed+E0↓j
                move    $v0, $s0
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_2DACC:                               # CODE XREF: dtls1_read_failed+24↑j
                la      $t9, dtls1_is_timer_expired
                jalr    $t9 ; dtls1_is_timer_expired
                nop
                beqz    $v0, loc_2DAB4
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s1
                andi    $v0, 0x3000
                bnez    $v0, loc_2DB04
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x170($s1)
                beqz    $v0, loc_2DB20
                la      $t9, SSL_get_rbio

loc_2DB04:                               # CODE XREF: dtls1_read_failed+94↑j
                la      $t9, dtls1_handle_timeout
                move    $a0, $s1
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $t9 ; dtls1_handle_timeout
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_2DB20:                               # CODE XREF: dtls1_read_failed+A0↑j
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_set_flags
                move    $a0, $v0
                jalr    $t9 ; BIO_set_flags
                li      $a1, 1
                b       loc_2DAB4
                lw      $gp, 0x28+var_18($sp)
 # End of function dtls1_read_failed


 # =============== S U B R O U T I N E =======================================


sub_2DB44:                               # CODE XREF: sub_2F4F0+284↓p
                                         # sub_2F4F0+370↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - sub_2DB44)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $v0, 0x10($a1)
                lw      $v1, 0xC($a1)
                lw      $s1, 4($a1)
                addu    $v0, $v1
                move    $s0, $a1
                sltu    $a1, $s1, $v0
                beqz    $a1, loc_2DBC8
                move    $s2, $a0
                la      $t9, ERR_put_error

loc_2DB8C:                               # CODE XREF: sub_2DB44+88↓j
                                         # sub_2DB44+A4↓j
                move    $a3, $zero
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x120
                jalr    $t9 ; ERR_put_error
                li      $a2, 0x98
                lw      $gp, 0x30+var_18($sp)
                li      $a3, 0x2F  # '/'

loc_2DBAC:                               # CODE XREF: sub_2DB44+AC↓j
                                         # sub_2DB44+E8↓j ...
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $a3
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_2DBC8:                               # CODE XREF: sub_2DB44+3C↑j
                sltu    $v0, $a2, $v0
                bnez    $v0, loc_2DB8C
                la      $t9, ERR_put_error
                lw      $v1, 0x5C($a0)
                lw      $v0, 0x294($v1)
                beqz    $v0, loc_2DBF8
                la      $t9, BUF_MEM_grow_clean
                lw      $v0, 0x28C($v1)
                bne     $v0, $s1, loc_2DB8C
                la      $t9, ERR_put_error
                b       loc_2DBAC
                move    $a3, $zero
 # ---------------------------------------------------------------------------

loc_2DBF8:                               # CODE XREF: sub_2DB44+98↑j
                lw      $a0, 0x3C($a0)
                jalr    $t9 ; BUF_MEM_grow_clean
                addiu   $a1, $s1, 0xC
                bnez    $v0, loc_2DC34
                lw      $gp, 0x30+var_18($sp)
                la      $t9, ERR_put_error
                move    $a3, $zero
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x120
                jalr    $t9 ; ERR_put_error
                li      $a2, 7
                lw      $gp, 0x30+var_18($sp)
                b       loc_2DBAC
                li      $a3, 0x50  # 'P'
 # ---------------------------------------------------------------------------

loc_2DC34:                               # CODE XREF: sub_2DB44+C0↑j
                lw      $a0, 0x58($s2)
                lw      $a1, 0x5C($s2)
                sw      $s1, 0x33C($a0)
                lbu     $v0, 0($s0)
                lhu     $a2, 8($s0)
                sw      $v0, 0x340($a0)
                lbu     $v1, 0($s0)
                move    $a3, $zero
                sb      $v1, 0x288($a1)
                lw      $v0, 0x5C($s2)
                sw      $s1, 0x28C($a1)
                b       loc_2DBAC
                sh      $a2, 0x290($v0)
 # End of function sub_2DB44


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_do_write
dtls1_do_write:                          # CODE XREF: dtls1_send_newsession_ticket+54↑p
                                         # dtls1_send_server_done+40↑j ...

var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_529C        =  0x529C

                la      $gp, (off_5A360+0x7FF0 - dtls1_do_write)
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_4($sp)
                sw      $fp, 0x50+var_8($sp)
                sw      $s7, 0x50+var_C($sp)
                sw      $s6, 0x50+var_10($sp)
                sw      $s5, 0x50+var_14($sp)
                sw      $s4, 0x50+var_18($sp)
                sw      $s3, 0x50+var_1C($sp)
                sw      $s2, 0x50+var_20($sp)
                sw      $s1, 0x50+var_24($sp)
                sw      $s0, 0x50+var_28($sp)
                sw      $gp, 0x50+var_30($sp)
                lw      $v0, 0x5C($a0)
                la      $t9, dtls1_min_mtu
                lw      $s0, 0x258($v0)
                move    $s2, $a0
                jalr    $t9 ; dtls1_min_mtu
                move    $s5, $a1
                sltu    $s0, $v0
                bnez    $s0, loc_2E160
                lw      $gp, 0x50+var_30($sp)

loc_2DCC8:                               # CODE XREF: dtls1_do_write+514↓j
                                         # dtls1_do_write+564↓j ...
                lw      $v0, 0x5C($s2)
                la      $t9, dtls1_min_mtu
                jalr    $t9 ; dtls1_min_mtu
                lw      $s0, 0x258($v0)
                sltu    $s0, $v0
                bnez    $s0, loc_2E13C
                lw      $gp, 0x50+var_30($sp)

loc_2DCE4:                               # CODE XREF: dtls1_do_write+4F0↓j
                lw      $v0, 0x48($s2)
                bnez    $v0, loc_2DCF8
                li      $v0, 0x16
                beq     $s5, $v0, loc_2E230
                nop

loc_2DCF8:                               # CODE XREF: dtls1_do_write+80↑j
                                         # dtls1_do_write+5D8↓j ...
                lw      $a0, 0x90($s2)
                beqz    $a0, loc_2E134
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                nop
                lw      $gp, 0x50+var_30($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                lw      $gp, 0x50+var_30($sp)
                move    $s6, $v0

loc_2DD24:                               # CODE XREF: dtls1_do_write:loc_2E134↓j
                lw      $a0, 0x8C($s2)
                beqz    $a0, loc_2DD44
                la      $t9, EVP_CIPHER_flags
                jalr    $t9 ; EVP_CIPHER_flags
                lw      $a0, 0($a0)
                andi    $v0, 2
                bnez    $v0, loc_2E214
                lw      $gp, 0x50+var_30($sp)

loc_2DD44:                               # CODE XREF: dtls1_do_write+C0↑j
                move    $s3, $zero

loc_2DD48:                               # CODE XREF: dtls1_do_write+5C0↓j
                la      $s7, loc_40000
                la      $fp, loc_40000
                lw      $v0, 0x44($s2)
                move    $s4, $zero

loc_2DD58:                               # CODE XREF: dtls1_do_write+664↓j
                beqz    $v0, loc_2DE50
                lw      $ra, 0x50+var_4($sp)

loc_2DD60:                               # CODE XREF: dtls1_do_write+1DC↓j
                la      $t9, SSL_get_wbio
                lw      $v0, 0x5C($s2)
                move    $a0, $s2
                jalr    $t9 ; SSL_get_wbio
                lw      $s0, 0x258($v0)
                lw      $gp, 0x50+var_30($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0xD
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                subu    $s0, $v0
                subu    $s0, $s6
                subu    $s0, $s3
                addiu   $v1, $s0, -0xD
                slti    $v0, $v1, 0xD
                bnez    $v0, loc_2DE7C
                lw      $gp, 0x50+var_30($sp)
                lw      $a0, 0x44($s2)
                move    $s1, $v1
                slt     $v0, $v1, $a0
                li      $v1, 0x16
                beq     $s5, $v1, loc_2DED8
                movz    $s1, $a0, $v0

loc_2DDC4:                               # CODE XREF: dtls1_do_write+268↓j
                                         # dtls1_do_write+338↓j ...
                lw      $v0, 0x3C($s2)
                lw      $v1, 0x48($s2)
                lw      $a2, 4($v0)
                la      $t9, dtls1_write_bytes
                addu    $a2, $v1
                move    $a0, $s2
                move    $a1, $s5
                jalr    $t9 ; dtls1_write_bytes
                move    $a3, $s1
                move    $s0, $v0
                bltz    $v0, loc_2E268
                lw      $gp, 0x50+var_30($sp)
                beq     $v0, $s1, loc_2DE10
                la      $t9, OpenSSLDie
                addiu   $a0, $s7, 0x5214
                li      $a1, 0x15F
                jalr    $t9 ; OpenSSLDie
                addiu   $a2, $fp, 0x50+arg_529C
                lw      $gp, 0x50+var_30($sp)

loc_2DE10:                               # CODE XREF: dtls1_do_write+18C↑j
                li      $v0, 0x16
                beq     $s5, $v0, loc_2DFC8
                nop

loc_2DE1C:                               # CODE XREF: dtls1_do_write+368↓j
                lw      $a0, 0x44($s2)
                beq     $s0, $a0, loc_2E08C
                nop

loc_2DE28:                               # CODE XREF: dtls1_do_write+41C↓j
                lw      $v0, 0x48($s2)
                subu    $a0, $s0
                addu    $v0, $s0
                addiu   $v1, $s0, -0xC
                sw      $v0, 0x48($s2)
                move    $v0, $a0
                sw      $a0, 0x44($s2)
                bnez    $v0, loc_2DD60
                addu    $s4, $v1

loc_2DE4C:                               # CODE XREF: dtls1_do_write+23C↓j
                                         # dtls1_do_write:loc_2E2D4↓j
                lw      $ra, 0x50+var_4($sp)

loc_2DE50:                               # CODE XREF: dtls1_do_write:loc_2DD58↑j
                lw      $fp, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_2DE7C:                               # CODE XREF: dtls1_do_write+13C↑j
                la      $t9, SSL_get_wbio
                jalr    $t9 ; SSL_get_wbio
                move    $a0, $s2
                lw      $gp, 0x50+var_30($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                blez    $v0, loc_2DE4C
                lw      $gp, 0x50+var_30($sp)
                lw      $v1, 0x5C($s2)
                lw      $a0, 0x44($s2)
                lw      $v0, 0x258($v1)
                subu    $v0, $s6
                subu    $v0, $s3
                addiu   $v1, $v0, -0xD
                slt     $v0, $v1, $a0
                move    $s1, $v1
                li      $v1, 0x16
                bne     $s5, $v1, loc_2DDC4
                movz    $s1, $a0, $v0

loc_2DED8:                               # CODE XREF: dtls1_do_write+154↑j
                lw      $a3, 0x48($s2)
                beqz    $a3, loc_2DF08
                slti    $v0, $a3, 0xD
                bnez    $v0, loc_2E110
                la      $v0, loc_40000

loc_2DEEC:                               # CODE XREF: dtls1_do_write+4C4↓j
                addiu   $a3, -0xC
                addiu   $a0, 0xC
                sltiu   $v1, $s1, 0xD
                addiu   $v0, $s1, 0xC
                movn    $s1, $v0, $v1
                sw      $a0, 0x44($s2)
                sw      $a3, 0x48($s2)

loc_2DF08:                               # CODE XREF: dtls1_do_write+274↑j
                lw      $v0, 0x3C($s2)
                lw      $a1, 0x5C($s2)
                lw      $a2, 4($v0)
                lbu     $a0, 0x25C($a1)
                addu    $a2, $a3
                addiu   $v0, $s1, -0xC
                sw      $v0, 0x26C($a1)
                sw      $s4, 0x268($a1)
                sb      $a0, 0($a2)
                lhu     $v1, 0x262($a1)
                addiu   $a0, $a2, 1
                sb      $v1, 1($a2)
                lw      $v0, 0x260($a1)
                addiu   $a3, $a2, 6
                srl     $v0, 8
                sb      $v0, 1($a0)
                lw      $v1, 0x260($a1)
                addiu   $t0, $a2, 9
                sb      $v1, 2($a0)
                lhu     $v0, 0x264($a1)
                sltiu   $t1, $s1, 0xC
                srl     $v0, 8
                sb      $v0, 4($a2)
                lhu     $v1, 0x264($a1)
                sb      $v1, 5($a2)
                lhu     $a0, 0x26A($a1)
                sb      $a0, 6($a2)
                lw      $v0, 0x268($a1)
                srl     $v0, 8
                sb      $v0, 1($a3)
                lw      $v1, 0x268($a1)
                sb      $v1, 2($a3)
                lhu     $a0, 0x26E($a1)
                sb      $a0, 9($a2)
                lw      $v0, 0x26C($a1)
                srl     $v0, 8
                sb      $v0, 1($t0)
                lw      $v1, 0x26C($a1)
                beqz    $t1, loc_2DDC4
                sb      $v1, 2($t0)
                la      $v0, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, $s7, 0x5214
                li      $a1, 0x146
                jalr    $t9 ; OpenSSLDie
                addiu   $a2, $v0, (aLenDtls1HmHead - 0x40000)  # "len >= DTLS1_HM_HEADER_LENGTH"
                b       loc_2DDC4
                lw      $gp, 0x50+var_30($sp)
 # ---------------------------------------------------------------------------

loc_2DFC8:                               # CODE XREF: dtls1_do_write+1AC↑j
                lw      $a3, 0x5C($s2)
                lw      $v0, 0x2E0($a3)
                bnez    $v0, loc_2DE1C
                nop
                lw      $v0, 0x3C($s2)
                lw      $a0, 0x48($s2)
                lw      $v1, 4($v0)
                bnez    $s4, loc_2E104
                addu    $t0, $v1, $a0
                lw      $v1, 0($s2)
                li      $v0, 0x100
                beq     $v1, $v0, loc_2E104
                addiu   $a1, $t0, 6
                lbu     $v0, 0x25C($a3)
                addiu   $a0, $t0, 1
                sb      $v0, 0($t0)
                lhu     $v1, 0x262($a3)
                sb      $v1, 1($t0)
                lw      $v0, 0x260($a3)
                addiu   $a2, $t0, 9
                srl     $v0, 8
                sb      $v0, 1($a0)
                lw      $v1, 0x260($a3)
                move    $t1, $t0
                sb      $v1, 2($a0)
                lhu     $v0, 0x264($a3)
                move    $a0, $s0
                srl     $v0, 8
                sb      $v0, 4($t0)
                lhu     $v1, 0x264($a3)
                sb      $zero, 6($t0)
                sb      $v1, 5($t0)
                sb      $zero, 2($a1)
                sb      $zero, 1($a1)
                lhu     $v1, 0x262($a3)
                sb      $v1, 9($t0)
                lw      $v0, 0x260($a3)
                srl     $v0, 8
                sb      $v0, 1($a2)
                lw      $v1, 0x260($a3)
                sb      $v1, 2($a2)

loc_2E06C:                               # CODE XREF: dtls1_do_write+4A0↓j
                la      $t9, ssl3_finish_mac
                move    $a2, $a0
                move    $a1, $t1
                jalr    $t9 ; ssl3_finish_mac
                move    $a0, $s2
                lw      $a0, 0x44($s2)
                bne     $s0, $a0, loc_2DE28
                lw      $gp, 0x50+var_30($sp)

loc_2E08C:                               # CODE XREF: dtls1_do_write+1B8↑j
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_2E0C8
                move    $a2, $s5
                lw      $v1, 0x3C($s2)
                lw      $v0, 0x48($s2)
                lw      $a3, 4($v1)
                lw      $v1, 0x68($s2)
                lw      $a1, 0($s2)
                addu    $v0, $s0, $v0
                sw      $v0, 0x50+var_40($sp)
                sw      $v1, 0x50+var_38($sp)
                sw      $s2, 0x50+var_3C($sp)
                jalr    $t9
                li      $a0, 1
                lw      $gp, 0x50+var_30($sp)

loc_2E0C8:                               # CODE XREF: dtls1_do_write+428↑j
                sw      $zero, 0x44($s2)
                sw      $zero, 0x48($s2)
                lw      $ra, 0x50+var_4($sp)
                lw      $fp, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_2E104:                               # CODE XREF: dtls1_do_write+37C↑j
                                         # dtls1_do_write+38C↑j
                addiu   $t1, $t0, 0xC
                b       loc_2E06C
                addiu   $a0, $s0, -0xC
 # ---------------------------------------------------------------------------

loc_2E110:                               # CODE XREF: dtls1_do_write+27C↑j
                la      $t9, OpenSSLDie
                addiu   $a0, $s7, 0x5214
                li      $a1, 0x138
                jalr    $t9 ; OpenSSLDie
                addiu   $a2, $v0, (aSInitOffDtls1H - 0x40000)  # "s->init_off > DTLS1_HM_HEADER_LENGTH"
                lw      $gp, 0x50+var_30($sp)
                lw      $a3, 0x48($s2)
                b       loc_2DEEC
                lw      $a0, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_2E134:                               # CODE XREF: dtls1_do_write+94↑j
                b       loc_2DD24
                move    $s6, $zero
 # ---------------------------------------------------------------------------

loc_2E13C:                               # CODE XREF: dtls1_do_write+74↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aD1BothC - 0x40000)  # "d1_both.c"
                addiu   $a2, (aSD1MtuDtls1Min - 0x40000)  # "s->d1->mtu >= dtls1_min_mtu()"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x10C
                b       loc_2DCE4
                lw      $gp, 0x50+var_30($sp)
 # ---------------------------------------------------------------------------

loc_2E160:                               # CODE XREF: dtls1_do_write+58↑j
                la      $t9, SSL_ctrl
                move    $a0, $s2
                li      $a1, 0x20  # ' '
                move    $a2, $zero
                jalr    $t9 ; SSL_ctrl
                move    $a3, $zero
                andi    $v0, 0x1000
                bnez    $v0, loc_2DCC8
                lw      $gp, 0x50+var_30($sp)
                la      $t9, SSL_get_wbio
                move    $a0, $s2
                jalr    $t9 ; SSL_get_wbio
                lw      $s0, 0x5C($s2)
                lw      $gp, 0x50+var_30($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0x28  # '('
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                lw      $gp, 0x50+var_30($sp)
                lw      $v1, 0x5C($s2)
                sw      $v0, 0x258($s0)
                la      $t9, dtls1_min_mtu
                jalr    $t9 ; dtls1_min_mtu
                lw      $s0, 0x258($v1)
                sltu    $s0, $v0
                beqz    $s0, loc_2DCC8
                lw      $gp, 0x50+var_30($sp)
                lw      $v1, 0x5C($s2)
                la      $t9, SSL_get_wbio
                li      $v0, 0x5C0
                sw      $v0, 0x258($v1)
                jalr    $t9 ; SSL_get_wbio
                move    $a0, $s2
                lw      $gp, 0x50+var_30($sp)
                lw      $v1, 0x5C($s2)
                lw      $a2, 0x258($v1)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0x2A  # '*'
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                b       loc_2DCC8
                lw      $gp, 0x50+var_30($sp)
 # ---------------------------------------------------------------------------

loc_2E214:                               # CODE XREF: dtls1_do_write+D4↑j
                lw      $v0, 0x8C($s2)
                la      $t9, EVP_CIPHER_block_size
                jalr    $t9 ; EVP_CIPHER_block_size
                lw      $a0, 0($v0)
                lw      $gp, 0x50+var_30($sp)
                b       loc_2DD48
                sll     $s3, $v0, 1
 # ---------------------------------------------------------------------------

loc_2E230:                               # CODE XREF: dtls1_do_write+88↑j
                lw      $v0, 0x5C($s2)
                lw      $a0, 0x44($s2)
                lw      $v1, 0x260($v0)
                addiu   $v1, 0xC
                beq     $a0, $v1, loc_2DCF8
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aD1BothC - 0x40000)  # "d1_both.c"
                addiu   $a2, (aSInitNumIntSD1 - 0x40000)  # "s->init_num == (int)s->d1->w_msg_hdr.ms"...
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x110
                b       loc_2DCF8
                lw      $gp, 0x50+var_30($sp)
 # ---------------------------------------------------------------------------

loc_2E268:                               # CODE XREF: dtls1_do_write+184↑j
                la      $t9, SSL_get_wbio
                jalr    $t9 ; SSL_get_wbio
                move    $a0, $s2
                lw      $gp, 0x50+var_30($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0x2B  # '+'
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                blez    $v0, loc_2E2D4
                lw      $gp, 0x50+var_30($sp)
                la      $t9, SSL_get_wbio
                move    $a0, $s2
                jalr    $t9 ; SSL_get_wbio
                lw      $s0, 0x5C($s2)
                lw      $gp, 0x50+var_30($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0x28  # '('
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                lw      $gp, 0x50+var_30($sp)
                sw      $v0, 0x258($s0)
                b       loc_2DD58
                lw      $v0, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_2E2D4:                               # CODE XREF: dtls1_do_write+628↑j
                b       loc_2DE4C
                li      $v0, 0xFFFFFFFF
 # End of function dtls1_do_write


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_retransmit_message
dtls1_retransmit_message:                # CODE XREF: dtls1_retransmit_buffered_messages+9C↓p
                                         # DATA XREF: LOAD:000045E8↑o ...

var_40          = -0x40
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_retransmit_message)
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_8($sp)
                sw      $s7, 0x50+var_C($sp)
                sw      $s6, 0x50+var_10($sp)
                sw      $s5, 0x50+var_14($sp)
                sw      $s4, 0x50+var_18($sp)
                sw      $s3, 0x50+var_1C($sp)
                sw      $s2, 0x50+var_20($sp)
                sw      $s1, 0x50+var_24($sp)
                sw      $s0, 0x50+var_28($sp)
                sw      $gp, 0x50+var_40($sp)
                andi    $s0, $a1, 0xFFFF
                lw      $v0, 0x5C($a0)
                srl     $v1, $s0, 8
                sw      $zero, 0x50+var_34($sp)
                sw      $zero, 0x50+var_38($sp)
                sb      $v1, 0x50+var_34+2($sp)
                sb      $s0, 0x50+var_34+3($sp)
                la      $t9, pqueue_find
                move    $s3, $a0
                lw      $a0, 0x248($v0)
                addiu   $a1, $sp, 0x50+var_38
                jalr    $t9 ; pqueue_find
                move    $s4, $a3
                beqz    $v0, loc_2E520
                lw      $gp, 0x50+var_40($sp)
                lw      $s2, 8($v0)
                li      $s1, 1
                sw      $s1, 0($s4)
                lw      $v1, 0x3C($s3)
                lw      $v0, 0x14($s2)
                lw      $a2, 4($s2)
                li      $s0, 0xC
                movn    $s0, $s1, $v0
                lw      $a0, 4($v1)
                la      $t9, memcpy
                lw      $a1, 0x2C($s2)
                jalr    $t9 ; memcpy
                addu    $a2, $s0, $a2
                lw      $a2, 4($s2)
                lw      $gp, 0x50+var_40($sp)
                addu    $s0, $a2
                sw      $s0, 0x44($s3)
                lbu     $v0, 0($s2)
                lw      $v1, 0x5C($s3)
                lhu     $a0, 0x28($s2)
                sb      $v0, 0x25C($v1)
                lw      $t3, 0x5C($s3)
                lhu     $a1, 8($s2)
                lhu     $s6, 0x20A($t3)
                sh      $a0, 0x20A($t3)
                lw      $v0, 0x10($s2)
                lw      $a0, 0x18($s2)
                lw      $a3, 0x1C($s2)
                lw      $t0, 0x20($s2)
                lw      $t1, 0x24($s2)
                lhu     $t2, 0x28($s2)
                addiu   $s4, $s6, -1
                sw      $s1, 0x2E0($t3)
                lw      $s5, 0x8C($s3)
                lw      $s7, 0x90($s3)
                lw      $s1, 0x94($s3)
                lw      $s0, 0xC0($s3)
                sw      $v0, 0x26C($v1)
                sw      $a2, 0x260($v1)
                sh      $a1, 0x264($v1)
                sw      $zero, 0x268($v1)
                sw      $a0, 0x8C($s3)
                sw      $a3, 0x90($s3)
                sw      $t0, 0x94($s3)
                beq     $t2, $s4, loc_2E4AC
                sw      $t1, 0xC0($s3)

loc_2E408:                               # CODE XREF: dtls1_retransmit_message+200↓j
                lw      $v1, 0x14($s2)
                la      $t9, dtls1_do_write
                li      $v0, 0x16
                li      $a1, 0x14
                movz    $a1, $v0, $v1
                jalr    $t9 ; dtls1_do_write
                move    $a0, $s3
                lw      $a2, 0x5C($s3)
                lw      $gp, 0x50+var_40($sp)
                sh      $s6, 0x20A($a2)
                lhu     $v1, 0x28($s2)
                sw      $s0, 0xC0($s3)
                sw      $s5, 0x8C($s3)
                sw      $s7, 0x90($s3)
                sw      $s1, 0x94($s3)
                beq     $s4, $v1, loc_2E4E4
                move    $s0, $v0

loc_2E44C:                               # CODE XREF: dtls1_retransmit_message+23C↓j
                la      $t9, SSL_get_wbio
                sw      $zero, 0x2E0($a2)
                jalr    $t9 ; SSL_get_wbio
                move    $a0, $s3
                lw      $gp, 0x50+var_40($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0xB
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                lw      $gp, 0x50+var_40($sp)

loc_2E47C:                               # CODE XREF: dtls1_retransmit_message+268↓j
                move    $v0, $s0
                lw      $ra, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_2E4AC:                               # CODE XREF: dtls1_retransmit_message+124↑j
                lw      $a1, 0x58($s3)
                addiu   $v0, $t3, 0x22A
                addiu   $a2, $a1, 0x54  # 'T'
                lw      $v1, 0x54($a1)
                lw      $a0, 4($a2)
                sw      $v1, 0x50+var_30($sp)
                sw      $a0, 0x50+var_2C($sp)
                lwl     $v1, 3($v0)
                lwl     $a0, 7($v0)
                lwr     $v1, 0($v0)
                lwr     $a0, 4($v0)
                sw      $v1, 0x54($a1)
                b       loc_2E408
                sw      $a0, 4($a2)
 # ---------------------------------------------------------------------------

loc_2E4E4:                               # CODE XREF: dtls1_retransmit_message+168↑j
                lw      $v1, 0x58($s3)
                addiu   $v0, $a2, 0x22A
                lw      $a0, 0x54($v1)
                lw      $a1, 0x58($v1)
                usw     $a0, 0($v0)
                usw     $a1, 4($v0)
                lw      $v1, 0x58($s3)
                lw      $a0, 0x50+var_2C($sp)
                lw      $v0, 0x50+var_30($sp)
                sw      $a0, 0x58($v1)
                sw      $v0, 0x54($v1)
                b       loc_2E44C
                lw      $a2, 0x5C($s3)
 # ---------------------------------------------------------------------------

loc_2E520:                               # CODE XREF: dtls1_retransmit_message+6C↑j
                la      $v0, stderr
                la      $a1, loc_40000
                la      $t9, fprintf
                lw      $a0, (stderr - 0x5B0A8)($v0)
                move    $a2, $s0
                jalr    $t9 ; fprintf
                addiu   $a1, (aRetransmitMess - 0x40000)  # "retransmit:  message %d non-existant\n"
                lw      $gp, 0x50+var_40($sp)
                move    $s0, $zero
                b       loc_2E47C
                sw      $zero, 0($s4)
 # End of function dtls1_retransmit_message


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_retransmit_buffered_messages
dtls1_retransmit_buffered_messages:      # CODE XREF: dtls1_read_bytes+C84↑p
                                         # DATA XREF: LOAD:00002458↑o ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_retransmit_buffered_messages)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $v0, 0x5C($a0)
                la      $t9, pqueue_iterator
                move    $s2, $a0
                lw      $a0, 0x248($v0)
                jalr    $t9 ; pqueue_iterator
                sw      $zero, 0x30+var_14($sp)
                lw      $gp, 0x30+var_20($sp)
                addiu   $s1, $sp, 0x30+var_18
                la      $t9, pqueue_next
                sw      $v0, 0x30+var_18($sp)
                jalr    $t9 ; pqueue_next
                move    $a0, $s1
                beqz    $v0, loc_2E648
                lw      $gp, 0x30+var_20($sp)
                b       loc_2E5C0
                addiu   $s0, $sp, 0x30+var_14
 # ---------------------------------------------------------------------------

loc_2E5B0:                               # CODE XREF: dtls1_retransmit_buffered_messages+AC↓j
                                         # dtls1_retransmit_buffered_messages+B8↓j
                jalr    $t9 ; pqueue_next
                nop
                beqz    $v0, loc_2E648
                lw      $gp, 0x30+var_20($sp)

loc_2E5C0:                               # CODE XREF: dtls1_retransmit_buffered_messages+5C↑j
                lw      $v0, 8($v0)
                la      $t9, dtls1_get_queue_priority
                lw      $a1, 0x14($v0)
                jalr    $t9 ; dtls1_get_queue_priority
                lhu     $a0, 8($v0)
                lw      $gp, 0x30+var_20($sp)
                la      $t9, dtls1_retransmit_message
                move    $a0, $s2
                andi    $a1, $v0, 0xFFFF
                move    $a2, $zero
                jalr    $t9 ; dtls1_retransmit_message
                move    $a3, $s0
                lw      $gp, 0x30+var_20($sp)
                move    $a0, $s1
                bgtz    $v0, loc_2E5B0
                la      $t9, pqueue_next
                lw      $v0, 0x30+var_14($sp)
                beqz    $v0, loc_2E5B0
                la      $v0, stderr
                la      $a0, loc_40000
                la      $t9, fwrite
                lw      $a3, (stderr - 0x5B0A8)($v0)
                addiu   $a0, (aDtls1Retransmi_1 - 0x40000)  # "dtls1_retransmit_message() failed\n"
                li      $a1, 1
                jalr    $t9 ; fwrite
                li      $a2, 0x22  # '"'
                lw      $gp, 0x30+var_20($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_2E648:                               # CODE XREF: dtls1_retransmit_buffered_messages+54↑j
                                         # dtls1_retransmit_buffered_messages+6C↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # End of function dtls1_retransmit_buffered_messages


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_set_message_header
dtls1_set_message_header:                # CODE XREF: dtls1_send_newsession_ticket+384↑p
                                         # dtls1_send_server_done+60↑p ...

arg_10          =  0x10
arg_14          =  0x14

                lw      $t0, arg_10($sp)
                bnez    $t0, loc_2E6B4
                andi    $a2, 0xFF
                lw      $a0, 0x5C($a0)
                lw      $v0, 0x254($a0)
                bnez    $v0, loc_2E690
                nop
                lhu     $v1, 0x226($a0)
                addiu   $v0, $v1, 1
                sh      $v0, 0x226($a0)
                sh      $v1, 0x224($a0)

loc_2E690:                               # CODE XREF: dtls1_set_message_header+14↑j
                lw      $v0, arg_14($sp)
                lhu     $v1, 0x224($a0)
                sw      $v0, 0x26C($a0)
                addiu   $v0, $a1, 0xC
                sb      $a2, 0x25C($a0)
                sw      $a3, 0x260($a0)
                sh      $v1, 0x264($a0)
                jr      $ra
                sw      $t0, 0x268($a0)
 # ---------------------------------------------------------------------------

loc_2E6B4:                               # CODE XREF: dtls1_set_message_header+4↑j
                lw      $a0, 0x5C($a0)
                lw      $v0, arg_14($sp)
                lhu     $v1, 0x224($a0)
                sw      $v0, 0x26C($a0)
                addiu   $v0, $a1, 0xC
                sb      $a2, 0x25C($a0)
                sw      $a3, 0x260($a0)
                sh      $v1, 0x264($a0)
                jr      $ra
                sw      $t0, 0x268($a0)
 # End of function dtls1_set_message_header


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_output_cert_chain
dtls1_output_cert_chain:                 # CODE XREF: dtls1_send_server_certificate+64↑p
                                         # dtls1_send_client_certificate+180↑p
                                         # DATA XREF: ...

var_C8          = -0xC8
var_C4          = -0xC4
var_C0          = -0xC0
var_B8          = -0xB8
var_60          = -0x60
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_output_cert_chain)
                addu    $gp, $t9
                addiu   $sp, -0xD8
                sw      $ra, 0xD8+var_4($sp)
                sw      $fp, 0xD8+var_8($sp)
                sw      $s7, 0xD8+var_C($sp)
                sw      $s6, 0xD8+var_10($sp)
                sw      $s5, 0xD8+var_14($sp)
                sw      $s4, 0xD8+var_18($sp)
                sw      $s3, 0xD8+var_1C($sp)
                sw      $s2, 0xD8+var_20($sp)
                sw      $s1, 0xD8+var_24($sp)
                sw      $s0, 0xD8+var_28($sp)
                sw      $gp, 0xD8+var_C0($sp)
                lw      $s4, 0x3C($a0)
                la      $t9, BUF_MEM_grow_clean
                move    $s6, $a0
                move    $s0, $a1
                move    $a0, $s4
                jalr    $t9 ; BUF_MEM_grow_clean
                li      $a1, 0xA
                beqz    $v0, loc_2E904
                lw      $gp, 0xD8+var_C0($sp)
                beqz    $s0, loc_2E7BC
                addiu   $fp, $sp, 0x24  # '$'
                lw      $v0, 0xDC($s6)
                la      $t9, X509_STORE_CTX_init
                lw      $a1, 0xC($v0)
                move    $a2, $s0
                move    $a0, $fp
                jalr    $t9 ; X509_STORE_CTX_init
                move    $a3, $zero
                bnez    $v0, loc_2E91C
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0xD8+var_C8($sp)
                li      $a0, 0x14
                li      $a1, 0xFF
                li      $a2, 0xB

loc_2E77C:                               # CODE XREF: dtls1_output_cert_chain+238↓j
                                         # dtls1_output_cert_chain+348↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xD8+var_C0($sp)
                lw      $ra, 0xD8+var_4($sp)
                lw      $fp, 0xD8+var_8($sp)
                lw      $s7, 0xD8+var_C($sp)
                lw      $s6, 0xD8+var_10($sp)
                lw      $s5, 0xD8+var_14($sp)
                lw      $s4, 0xD8+var_18($sp)
                lw      $s3, 0xD8+var_1C($sp)
                lw      $s2, 0xD8+var_20($sp)
                lw      $s1, 0xD8+var_24($sp)
                lw      $s0, 0xD8+var_28($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0xD8
 # ---------------------------------------------------------------------------

loc_2E7BC:                               # CODE XREF: dtls1_output_cert_chain+60↑j
                li      $s5, 0xF

loc_2E7C0:                               # CODE XREF: dtls1_output_cert_chain+330↓j
                move    $s3, $zero
                b       loc_2E864
                addiu   $s7, $sp, 0xD8+var_B8
 # ---------------------------------------------------------------------------

loc_2E7CC:                               # CODE XREF: dtls1_output_cert_chain+1A8↓j
                lw      $v0, 0xDC($s6)
                jalr    $t9 ; sk_value
                lw      $a0, 0x94($v0)
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, i2d_X509
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; i2d_X509
                move    $s0, $v0
                lw      $gp, 0xD8+var_C0($sp)
                move    $s1, $v0
                addiu   $v0, $s5, 3
                addu    $s2, $v0, $s1
                la      $t9, BUF_MEM_grow_clean
                move    $a0, $s4
                jalr    $t9 ; BUF_MEM_grow_clean
                move    $a1, $s2
                lw      $gp, 0xD8+var_C0($sp)
                sra     $v1, $s1, 16
                sra     $a2, $s1, 8
                move    $a0, $s0
                move    $a1, $s7
                beqz    $v0, loc_2EA14
                la      $t9, i2d_X509
                lw      $v0, 4($s4)
                addu    $v0, $s5, $v0
                sw      $v0, 0xD8+var_B8($sp)
                sb      $v1, 0($v0)
                lw      $v0, 0xD8+var_B8($sp)
                move    $s5, $s2
                sb      $a2, 1($v0)
                lw      $v1, 0xD8+var_B8($sp)
                sb      $s1, 2($v1)
                lw      $v0, 0xD8+var_B8($sp)
                addiu   $v0, 3
                jalr    $t9 ; i2d_X509
                sw      $v0, 0xD8+var_B8($sp)
                lw      $gp, 0xD8+var_C0($sp)

loc_2E864:                               # CODE XREF: dtls1_output_cert_chain+E8↑j
                lw      $v0, 0xDC($s6)
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                lw      $a0, 0x94($v0)
                lw      $gp, 0xD8+var_C0($sp)
                slt     $v0, $s3, $v0
                move    $a1, $s3
                addiu   $s3, 1
                bnez    $v0, loc_2E7CC
                la      $t9, sk_value
                lw      $a1, 4($s4)
                addiu   $v0, $s5, -0xF
                addiu   $a2, $a1, 0xC
                srl     $a0, $v0, 8
                srl     $v1, $v0, 16
                sb      $v1, 0xC($a1)
                sb      $a0, 1($a2)
                sb      $v0, 2($a2)
                lw      $a1, 4($s4)
                addiu   $a3, $s5, -0xC
                la      $t9, dtls1_set_message_header
                sw      $zero, 0xD8+var_C8($sp)
                sw      $a3, 0xD8+var_C4($sp)
                move    $a0, $s6
                jalr    $t9 ; dtls1_set_message_header
                li      $a2, 0xB
                move    $v0, $s5
                lw      $gp, 0xD8+var_C0($sp)
                lw      $ra, 0xD8+var_4($sp)
                lw      $fp, 0xD8+var_8($sp)
                lw      $s7, 0xD8+var_C($sp)
                lw      $s6, 0xD8+var_10($sp)
                lw      $s5, 0xD8+var_14($sp)
                lw      $s4, 0xD8+var_18($sp)
                lw      $s3, 0xD8+var_1C($sp)
                lw      $s2, 0xD8+var_20($sp)
                lw      $s1, 0xD8+var_24($sp)
                lw      $s0, 0xD8+var_28($sp)
                jr      $ra
                addiu   $sp, 0xD8
 # ---------------------------------------------------------------------------

loc_2E904:                               # CODE XREF: dtls1_output_cert_chain+58↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xFF
                li      $a2, 7
                b       loc_2E77C
                sw      $zero, 0xD8+var_C8($sp)
 # ---------------------------------------------------------------------------

loc_2E91C:                               # CODE XREF: dtls1_output_cert_chain+84↑j
                la      $t9, X509_verify_cert
                jalr    $t9 ; X509_verify_cert
                move    $a0, $fp
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                move    $s3, $zero
                lw      $gp, 0xD8+var_C0($sp)
                li      $s5, 0xF
                b       loc_2E9DC
                addiu   $s7, $sp, 0xD8+var_B8
 # ---------------------------------------------------------------------------

loc_2E948:                               # CODE XREF: dtls1_output_cert_chain+31C↓j
                jalr    $t9 ; sk_value
                lw      $a0, 0xD8+var_60($sp)
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, i2d_X509
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; i2d_X509
                move    $s0, $v0
                lw      $gp, 0xD8+var_C0($sp)
                move    $s1, $v0
                addiu   $v0, $s5, 3
                addu    $s2, $v0, $s1
                la      $t9, BUF_MEM_grow_clean
                move    $a0, $s4
                jalr    $t9 ; BUF_MEM_grow_clean
                move    $a1, $s2
                lw      $gp, 0xD8+var_C0($sp)
                sra     $v1, $s1, 16
                sra     $a2, $s1, 8
                move    $a0, $s0
                move    $a1, $s7
                beqz    $v0, loc_2EA2C
                la      $t9, i2d_X509
                lw      $v0, 4($s4)
                addu    $v0, $s5, $v0
                sw      $v0, 0xD8+var_B8($sp)
                sb      $v1, 0($v0)
                lw      $v0, 0xD8+var_B8($sp)
                move    $s5, $s2
                sb      $a2, 1($v0)
                lw      $v1, 0xD8+var_B8($sp)
                sb      $s1, 2($v1)
                lw      $v0, 0xD8+var_B8($sp)
                addiu   $v0, 3
                jalr    $t9 ; i2d_X509
                sw      $v0, 0xD8+var_B8($sp)
                lw      $gp, 0xD8+var_C0($sp)

loc_2E9DC:                               # CODE XREF: dtls1_output_cert_chain+264↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                lw      $a0, 0xD8+var_60($sp)
                lw      $gp, 0xD8+var_C0($sp)
                slt     $v0, $s3, $v0
                move    $a1, $s3
                addiu   $s3, 1
                bnez    $v0, loc_2E948
                la      $t9, sk_value
                la      $t9, X509_STORE_CTX_cleanup
                jalr    $t9 ; X509_STORE_CTX_cleanup
                move    $a0, $fp
                b       loc_2E7C0
                lw      $gp, 0xD8+var_C0($sp)
 # ---------------------------------------------------------------------------

loc_2EA14:                               # CODE XREF: dtls1_output_cert_chain+148↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x127
                li      $a2, 7
                b       loc_2E77C
                sw      $zero, 0xD8+var_C8($sp)
 # ---------------------------------------------------------------------------

loc_2EA2C:                               # CODE XREF: dtls1_output_cert_chain+2C0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xD8+var_C8($sp)
                li      $a0, 0x14
                li      $a1, 0x127
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xD8+var_C0($sp)
                la      $t9, X509_STORE_CTX_cleanup
                jalr    $t9 ; X509_STORE_CTX_cleanup
                move    $a0, $fp
                lw      $gp, 0xD8+var_C0($sp)
                lw      $ra, 0xD8+var_4($sp)
                lw      $fp, 0xD8+var_8($sp)
                lw      $s7, 0xD8+var_C($sp)
                lw      $s6, 0xD8+var_10($sp)
                lw      $s5, 0xD8+var_14($sp)
                lw      $s4, 0xD8+var_18($sp)
                lw      $s3, 0xD8+var_1C($sp)
                lw      $s2, 0xD8+var_20($sp)
                lw      $s1, 0xD8+var_24($sp)
                lw      $s0, 0xD8+var_28($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0xD8
 # End of function dtls1_output_cert_chain


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_clear_record_buffer
dtls1_clear_record_buffer:               # CODE XREF: dtls1_stop_timer+88↑j
                                         # DATA XREF: LOAD:00003F48↑o ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_clear_record_buffer)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x5C($a0)
                move    $s2, $a0
                la      $t9, pqueue_pop
                b       loc_2EB30
                lw      $a0, 0x248($v0)
 # ---------------------------------------------------------------------------

loc_2EAC8:                               # CODE XREF: dtls1_clear_record_buffer+AC↓j
                lw      $s0, 8($v0)
                la      $t9, CRYPTO_free
                lw      $v0, 0x2C($s0)
                beqz    $v0, loc_2EAE8
                move    $a0, $v0
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_2EAE8:                               # CODE XREF: dtls1_clear_record_buffer+44↑j
                lw      $v0, 0x30($s0)
                la      $t9, CRYPTO_free
                beqz    $v0, loc_2EB08
                move    $a0, $v0
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_free

loc_2EB08:                               # CODE XREF: dtls1_clear_record_buffer+60↑j
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x5C($s2)
                lw      $a0, 0x248($v0)
                la      $t9, pqueue_pop

loc_2EB30:                               # CODE XREF: dtls1_clear_record_buffer+30↑j
                jalr    $t9 ; pqueue_pop
                nop
                move    $s1, $v0
                bnez    $v0, loc_2EAC8
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function dtls1_clear_record_buffer


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_buffer_message
dtls1_buffer_message:                    # CODE XREF: dtls1_send_newsession_ticket+398↑p
                                         # dtls1_send_server_done+88↑p ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_buffer_message)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_20($sp)
                lw      $v0, 0x48($a0)
                move    $s1, $a0
                bnez    $v0, loc_2ED8C
                move    $s2, $a1

loc_2EB90:                               # CODE XREF: dtls1_buffer_message+24C↓j
                la      $t9, loc_30000
                lw      $a0, 0x44($s1)
                addiu   $t9, (sub_2D8E0 - 0x30000)
                jalr    $t9 ; sub_2D8E0
                move    $a1, $zero
                lw      $gp, 0x30+var_20($sp)
                lw      $v1, 0x3C($s1)
                lw      $a1, 4($v1)
                la      $t9, memcpy
                lw      $a0, 0x2C($v0)
                lw      $a2, 0x44($s1)
                jalr    $t9 ; memcpy
                move    $s0, $v0
                beqz    $s2, loc_2ECF4
                lw      $gp, 0x30+var_20($sp)
                lw      $a3, 0x5C($s1)
                lw      $a0, 0($s1)
                lw      $a2, 0x260($a3)
                xori    $a0, 0xFEFF
                li      $v0, 1
                li      $v1, 3
                movn    $v0, $v1, $a0
                lw      $a1, 0x44($s1)
                addu    $v0, $a2
                beq     $v0, $a1, loc_2EC18
                la      $a2, loc_40000
                la      $a0, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aD1BothC - 0x40000)  # "d1_both.c"
                addiu   $a2, (aSD1WMsgHdrMsgL - 0x40000)  # "s->d1->w_msg_hdr.msg_len + ((s->version"...
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x495
                lw      $gp, 0x30+var_20($sp)
                lw      $a3, 0x5C($s1)

loc_2EC18:                               # CODE XREF: dtls1_buffer_message+94↑j
                                         # dtls1_buffer_message+1A8↓j ...
                lbu     $v0, 0x25C($a3)
                lw      $a0, 0x260($a3)
                sb      $v0, 0($s0)
                lhu     $v1, 0x264($a3)
                lw      $v0, 0x5C($s1)
                sh      $v1, 8($s0)
                sw      $a0, 4($s0)
                lhu     $a3, 0x20A($v0)
                lw      $v1, 0x260($v0)
                lw      $a2, 0xC0($s1)
                lw      $a0, 0x8C($s1)
                lw      $a1, 0x94($s1)
                lw      $v0, 0x90($s1)
                sw      $v1, 0x10($s0)
                sw      $a2, 0x24($s0)
                sh      $a3, 0x28($s0)
                sw      $s2, 0x14($s0)
                sw      $a0, 0x18($s0)
                sw      $a1, 0x20($s0)
                sw      $v0, 0x1C($s0)
                sw      $zero, 0xC($s0)
                sw      $zero, 0x30+var_18($sp)
                sw      $zero, 0x30+var_14($sp)
                la      $t9, dtls1_get_queue_priority
                lhu     $a0, 8($s0)
                jalr    $t9 ; dtls1_get_queue_priority
                lw      $a1, 0x14($s0)
                sra     $v0, 8
                lw      $gp, 0x30+var_20($sp)
                sb      $v0, 0x30+var_14+2($sp)
                lhu     $a0, 8($s0)
                la      $t9, dtls1_get_queue_priority
                jalr    $t9 ; dtls1_get_queue_priority
                lw      $a1, 0x14($s0)
                lw      $gp, 0x30+var_20($sp)
                la      $t9, pitem_new
                move    $a1, $s0
                sb      $v0, 0x30+var_14+3($sp)
                jalr    $t9 ; pitem_new
                addiu   $a0, $sp, 0x30+var_18
                move    $a1, $v0
                beqz    $v0, loc_2ED30
                lw      $gp, 0x30+var_20($sp)
                lw      $v0, 0x5C($s1)
                la      $t9, pqueue_insert
                jalr    $t9 ; pqueue_insert
                lw      $a0, 0x248($v0)
                lw      $gp, 0x30+var_20($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_2ECF4:                               # CODE XREF: dtls1_buffer_message+68↑j
                lw      $a3, 0x5C($s1)
                lw      $v1, 0x44($s1)
                lw      $v0, 0x260($a3)
                addiu   $v0, 0xC
                beq     $v0, $v1, loc_2EC18
                la      $a2, loc_40000
                la      $a0, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aD1BothC - 0x40000)  # "d1_both.c"
                addiu   $a2, (aSD1WMsgHdrMsgL_0 - 0x40000)  # "s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEA"...
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x49A
                lw      $gp, 0x30+var_20($sp)
                b       loc_2EC18
                lw      $a3, 0x5C($s1)
 # ---------------------------------------------------------------------------

loc_2ED30:                               # CODE XREF: dtls1_buffer_message+160↑j
                lw      $a0, 0x2C($s0)
                beqz    $a0, loc_2ED48
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x30+var_20($sp)

loc_2ED48:                               # CODE XREF: dtls1_buffer_message+1D8↑j
                lw      $a0, 0x30($s0)
                beqz    $a0, loc_2ED60
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x30+var_20($sp)

loc_2ED60:                               # CODE XREF: dtls1_buffer_message+1F0↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x30+var_20($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_2ED8C:                               # CODE XREF: dtls1_buffer_message+2C↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aD1BothC - 0x40000)  # "d1_both.c"
                addiu   $a2, (aSInitOff0 - 0x40000)  # "s->init_off == 0"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x48C
                b       loc_2EB90
                lw      $gp, 0x30+var_20($sp)
 # End of function dtls1_buffer_message


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_change_cipher_spec
dtls1_send_change_cipher_spec:           # CODE XREF: dtls1_accept+1C0↑p
                                         # dtls1_connect+3BC↑p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_change_cipher_spec)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x34($a0)
                move    $s0, $a0
                beq     $v0, $a1, loc_2EE00
                move    $s1, $a2
                la      $t9, dtls1_do_write
                move    $a0, $s0
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $a1, 0x14
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_2EE00:                               # CODE XREF: dtls1_send_change_cipher_spec+28↑j
                lw      $v0, 0x3C($a0)
                li      $t0, 1
                lw      $a3, 4($v0)
                li      $v0, 1
                sb      $v0, 0($a3)
                lw      $a1, 0x5C($a0)
                lw      $v1, 0($a0)
                lhu     $a2, 0x226($a1)
                li      $v0, 0x100
                sh      $a2, 0x224($a1)
                beq     $v1, $v0, loc_2EE80
                sw      $t0, 0x44($a0)

loc_2EE30:                               # CODE XREF: dtls1_send_change_cipher_spec+FC↓j
                lhu     $v0, 0x224($a1)
                la      $t9, dtls1_buffer_message
                sw      $zero, 0x48($s0)
                sh      $v0, 0x264($a1)
                sw      $zero, 0x26C($a1)
                sb      $t0, 0x25C($a1)
                sw      $zero, 0x260($a1)
                sw      $zero, 0x268($a1)
                jalr    $t9 ; dtls1_buffer_message
                li      $a1, 1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, dtls1_do_write
                sw      $s1, 0x34($s0)
                move    $a0, $s0
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $a1, 0x14
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_2EE80:                               # CODE XREF: dtls1_send_change_cipher_spec+78↑j
                andi    $v0, $a2, 0xFFFF
                addiu   $v1, $a2, 1
                srl     $v0, 8
                sh      $v1, 0x226($a1)
                sb      $v0, 1($a3)
                lw      $v1, 0x5C($a0)
                lhu     $a1, 0x224($v1)
                sb      $a1, 2($a3)
                lw      $v0, 0x44($a0)
                lw      $a1, 0x5C($a0)
                addiu   $v0, 2
                b       loc_2EE30
                sw      $v0, 0x44($a0)
 # End of function dtls1_send_change_cipher_spec


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_send_finished
dtls1_send_finished:                     # CODE XREF: dtls1_accept+924↑p
                                         # dtls1_connect+A40↑p
                                         # DATA XREF: ...

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - dtls1_send_finished)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $v0, 0x34($a0)
                move    $s2, $a2
                move    $s0, $a0
                move    $t1, $a3
                beq     $v0, $a1, loc_2EF1C
                lw      $a2, 0x38+arg_10($sp)
                la      $t9, dtls1_do_write
                move    $a0, $s0
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2EF1C:                               # CODE XREF: dtls1_send_finished+38↑j
                lw      $v0, 8($a0)
                lw      $a3, 0x58($a0)
                lw      $v1, 0x64($v0)
                lw      $t0, 0x3C($a0)
                lw      $t9, 0x14($v1)
                move    $a1, $t1
                addiu   $a3, 0x234
                jalr    $t9
                lw      $s3, 4($t0)
                lw      $gp, 0x38+var_20($sp)
                lw      $a1, 0x58($s0)
                la      $t9, memcpy
                sw      $v0, 0x2B4($a1)
                addiu   $a0, $s3, 0xC
                addiu   $a1, 0x234
                move    $a2, $v0
                jalr    $t9 ; memcpy
                move    $s1, $v0
                lw      $v1, 4($s0)
                li      $v0, 0x1000
                beq     $v1, $v0, loc_2F014
                lw      $gp, 0x38+var_20($sp)
                slti    $v0, $s1, 0x41  # 'A'
                beqz    $v0, loc_2F048
                la      $t9, OpenSSLDie

loc_2EF80:                               # CODE XREF: dtls1_send_finished+1AC↓j
                lw      $a0, 0x58($s0)
                la      $t9, memcpy
                addiu   $a1, $a0, 0x234
                move    $a2, $s1
                jalr    $t9 ; memcpy
                addiu   $a0, 0x3CD
                lw      $v1, 0x58($s0)
                lw      $gp, 0x38+var_20($sp)
                sb      $s1, 0x40D($v1)

loc_2EFA4:                               # CODE XREF: dtls1_send_finished+18C↓j
                la      $t9, dtls1_set_message_header
                move    $a1, $s3
                sw      $s1, 0x38+var_24($sp)
                move    $a0, $s0
                move    $a3, $s1
                sw      $zero, 0x38+var_28($sp)
                jalr    $t9 ; dtls1_set_message_header
                li      $a2, 0x14
                lw      $gp, 0x38+var_20($sp)
                addiu   $v0, $s1, 0xC
                la      $t9, dtls1_buffer_message
                move    $a0, $s0
                sw      $v0, 0x44($s0)
                sw      $zero, 0x48($s0)
                jalr    $t9 ; dtls1_buffer_message
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                la      $t9, dtls1_do_write
                sw      $s2, 0x34($s0)
                move    $a0, $s0
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $a1, 0x16
                jr      $t9 ; dtls1_do_write
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_2F014:                               # CODE XREF: dtls1_send_finished+B8↑j
                slti    $v0, $s1, 0x41  # 'A'
                beqz    $v0, loc_2F068
                la      $t9, OpenSSLDie

loc_2F020:                               # CODE XREF: dtls1_send_finished+1CC↓j
                lw      $a0, 0x58($s0)
                la      $t9, memcpy
                addiu   $a1, $a0, 0x234
                move    $a2, $s1
                jalr    $t9 ; memcpy
                addiu   $a0, 0x38C
                lw      $gp, 0x38+var_20($sp)
                lw      $v1, 0x58($s0)
                b       loc_2EFA4
                sb      $s1, 0x3CC($v1)
 # ---------------------------------------------------------------------------

loc_2F048:                               # CODE XREF: dtls1_send_finished+C4↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                addiu   $a0, (aD1BothC - 0x40000)  # "d1_both.c"
                addiu   $a2, (aIEvpMaxMdSize - 0x40000)  # "i <= EVP_MAX_MD_SIZE"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x3A0
                b       loc_2EF80
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_2F068:                               # CODE XREF: dtls1_send_finished+164↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                addiu   $a0, (aD1BothC - 0x40000)  # "d1_both.c"
                addiu   $a2, (aIEvpMaxMdSize - 0x40000)  # "i <= EVP_MAX_MD_SIZE"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x399
                b       loc_2F020
                lw      $gp, 0x38+var_20($sp)
 # End of function dtls1_send_finished


 # =============== S U B R O U T I N E =======================================


sub_2F088:                               # CODE XREF: sub_2F4F0+1C0↓p
                                         # sub_2F4F0+6D0↓p
                                         # DATA XREF: ...

var_140         = -0x140
var_138         = -0x138
var_130         = -0x130
var_12C         = -0x12C
var_128         = -0x128
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_2F088)
                addu    $gp, $t9
                addiu   $sp, -0x150
                sw      $ra, 0x150+var_8($sp)
                sw      $s7, 0x150+var_C($sp)
                sw      $s6, 0x150+var_10($sp)
                sw      $s5, 0x150+var_14($sp)
                sw      $s4, 0x150+var_18($sp)
                sw      $s3, 0x150+var_1C($sp)
                sw      $s2, 0x150+var_20($sp)
                sw      $s1, 0x150+var_24($sp)
                sw      $s0, 0x150+var_28($sp)
                sw      $gp, 0x150+var_138($sp)
                lw      $s0, 0x10($a1)
                lw      $v1, 0xC($a1)
                lw      $v0, 4($a1)
                move    $s1, $a1
                addu    $a1, $s0, $v1
                sltu    $v0, $a1
                move    $s5, $a0
                bnez    $v0, loc_2F100
                move    $s6, $a2
                lw      $v0, 0x100($a0)
                li      $v1, 0x454C
                slti    $a0, $v0, 0x454D
                movz    $v1, $v0, $a0
                sltu    $v1, $a1
                beqz    $v1, loc_2F138
                la      $t9, pqueue_find

loc_2F100:                               # CODE XREF: sub_2F088+54↑j
                                         # sub_2F088+1A0↓j
                li      $s2, 0xFFFFFFFF

loc_2F104:                               # CODE XREF: sub_2F088+16C↓j
                                         # sub_2F088+180↓j
                sw      $zero, 0($s6)

loc_2F108:                               # CODE XREF: sub_2F088:loc_2F2D8↓j
                                         # sub_2F088+33C↓j
                move    $v0, $s2
                lw      $ra, 0x150+var_8($sp)
                lw      $s7, 0x150+var_C($sp)
                lw      $s6, 0x150+var_10($sp)
                lw      $s5, 0x150+var_14($sp)
                lw      $s4, 0x150+var_18($sp)
                lw      $s3, 0x150+var_1C($sp)
                lw      $s2, 0x150+var_20($sp)
                lw      $s1, 0x150+var_24($sp)
                lw      $s0, 0x150+var_28($sp)
                jr      $ra
                addiu   $sp, 0x150
 # ---------------------------------------------------------------------------

loc_2F138:                               # CODE XREF: sub_2F088+70↑j
                lhu     $v1, 8($s1)
                lw      $a1, 0x5C($s5)
                srl     $v0, $v1, 8
                sw      $zero, 0x150+var_12C($sp)
                sw      $zero, 0x150+var_130($sp)
                sb      $v0, 0x150+var_12C+2($sp)
                sb      $v1, 0x150+var_12C+3($sp)
                lw      $a0, 0x244($a1)
                addiu   $s7, $sp, 0x150+var_130
                jalr    $t9 ; pqueue_find
                move    $a1, $s7
                move    $s3, $v0
                beqz    $v0, loc_2F210
                lw      $gp, 0x150+var_138($sp)
                lw      $s4, 8($v0)

loc_2F174:                               # CODE XREF: sub_2F088+200↓j
                lw      $v0, 0x30($s4)
                beqz    $v0, loc_2F290
                move    $a0, $s5
                lw      $v0, 8($s5)
                lw      $v1, 0x2C($s4)
                sw      $zero, 0x150+var_140($sp)
                lw      $a2, 0xC($s1)
                lw      $t9, 0x34($v0)
                addu    $a2, $v1, $a2
                li      $a1, 0x16
                jalr    $t9
                move    $a3, $s0
                move    $s2, $v0
                blez    $v0, loc_2F1B8
                lw      $gp, 0x150+var_138($sp)
                beq     $v0, $s0, loc_2F2E0
                nop

loc_2F1B8:                               # CODE XREF: sub_2F088+120↑j
                                         # sub_2F088+240↓j ...
                lw      $a0, 0x2C($s4)
                beqz    $a0, loc_2F1D0
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x150+var_138($sp)

loc_2F1D0:                               # CODE XREF: sub_2F088+134↑j
                lw      $a0, 0x30($s4)
                beqz    $a0, loc_2F1E8
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x150+var_138($sp)

loc_2F1E8:                               # CODE XREF: sub_2F088+14C↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s4
                beqz    $s3, loc_2F104
                lw      $gp, 0x150+var_138($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s3
                b       loc_2F104
                lw      $gp, 0x150+var_138($sp)
 # ---------------------------------------------------------------------------

loc_2F210:                               # CODE XREF: sub_2F088+E0↑j
                la      $t9, loc_30000
                lw      $a0, 4($s1)
                addiu   $t9, (sub_2D8E0 - 0x30000)
                jalr    $t9 ; sub_2D8E0
                li      $a1, 1
                move    $s4, $v0
                beqz    $v0, loc_2F100
                lw      $gp, 0x150+var_138($sp)
                move    $a2, $s1
                move    $a3, $v0
                addiu   $t0, $s1, 0x20  # ' '

loc_2F23C:                               # CODE XREF: sub_2F088+1D8↓j
                lw      $v0, 0($a2)
                lw      $v1, 4($a2)
                lw      $a0, 8($a2)
                lw      $a1, 0xC($a2)
                addiu   $a2, 0x10
                sw      $v0, 0($a3)
                sw      $v1, 4($a3)
                sw      $a0, 8($a3)
                sw      $a1, 0xC($a3)
                bne     $a2, $t0, loc_2F23C
                addiu   $a3, 0x10
                lw      $v0, 8($a2)
                lw      $v1, 0($a2)
                lw      $a0, 4($a2)
                sw      $v0, 8($a3)
                sw      $v1, 0($a3)
                sw      $a0, 4($a3)
                lw      $v0, 4($s4)
                sw      $zero, 0xC($s4)
                b       loc_2F174
                sw      $v0, 0x10($s4)
 # ---------------------------------------------------------------------------

loc_2F290:                               # CODE XREF: sub_2F088+F0↑j
                beqz    $s0, loc_2F2D8
                addiu   $s1, $sp, 0x150+var_128

loc_2F298:                               # CODE XREF: sub_2F088+248↓j
                lw      $v1, 8($s5)
                sw      $zero, 0x150+var_140($sp)
                sltiu   $v0, $s0, 0x101
                li      $a3, 0x100
                lw      $t9, 0x34($v1)
                movn    $a3, $s0, $v0
                move    $a0, $s5
                li      $a1, 0x16
                jalr    $t9
                move    $a2, $s1
                move    $s2, $v0
                lw      $gp, 0x150+var_138($sp)
                blez    $v0, loc_2F1B8
                subu    $s0, $v0
                bnez    $s0, loc_2F298
                nop

loc_2F2D8:                               # CODE XREF: sub_2F088:loc_2F290↑j
                                         # sub_2F088:loc_2F374↓j
                b       loc_2F108
                li      $s2, 0xFFFFFFFD
 # ---------------------------------------------------------------------------

loc_2F2E0:                               # CODE XREF: sub_2F088+128↑j
                lw      $a0, 0xC($s1)
                slti    $v0, 9
                move    $a2, $a0
                beqz    $v0, loc_2F424
                addu    $v1, $s2, $a0
                slt     $v0, $a0, $v1
                beqz    $v0, loc_2F33C
                la      $v0, loc_40000

loc_2F300:                               # CODE XREF: sub_2F088+2AC↓j
                lw      $v0, 0x30($s4)
                sra     $a0, $a2, 3
                addu    $a0, $v0
                andi    $v1, $a2, 7
                lbu     $a1, 0($a0)
                li      $v0, 1
                sllv    $v0, $v1
                or      $v0, $a1
                sb      $v0, 0($a0)
                lw      $v1, 0xC($s1)
                addiu   $a2, 1
                addu    $v1, $s2, $v1
                slt     $v1, $a2, $v1
                bnez    $v1, loc_2F300
                la      $v0, loc_40000

loc_2F33C:                               # CODE XREF: sub_2F088+270↑j
                addiu   $s0, $v0, (dword_45450 - 0x40000)

loc_2F340:                               # CODE XREF: sub_2F088+43C↓j
                lw      $v0, 4($s1)
                blez    $v0, loc_2F4CC
                la      $a0, loc_40000

loc_2F34C:                               # CODE XREF: sub_2F088+460↓j
                addiu   $v1, $v0, -1
                lw      $a2, 0x30($s4)
                sra     $a1, $v1, 3
                andi    $v0, 7
                addu    $v0, $s0
                addu    $a3, $a2, $a1
                lbu     $a0, 0($v0)
                lbu     $v1, 0($a3)
                beq     $v1, $a0, loc_2F3CC
                nop

loc_2F374:                               # CODE XREF: sub_2F088+358↓j
                                         # sub_2F088+36C↓j ...
                bnez    $s3, loc_2F2D8
                la      $t9, pitem_new
                lhu     $v0, 8($s1)
                srl     $v1, $v0, 8
                sw      $zero, 0x150+var_12C($sp)
                sw      $zero, 0x150+var_130($sp)
                sb      $v1, 0x150+var_12C+2($sp)
                sb      $v0, 0x150+var_12C+3($sp)
                move    $a0, $s7
                jalr    $t9 ; pitem_new
                move    $a1, $s4
                move    $s3, $v0
                beqz    $v0, loc_2F1B8
                lw      $gp, 0x150+var_138($sp)
                lw      $v0, 0x5C($s5)
                la      $t9, pqueue_insert
                lw      $a0, 0x244($v0)
                jalr    $t9 ; pqueue_insert
                move    $a1, $s3
                lw      $gp, 0x150+var_138($sp)
                b       loc_2F108
                li      $s2, 0xFFFFFFFD
 # ---------------------------------------------------------------------------

loc_2F3CC:                               # CODE XREF: sub_2F088+2E4↑j
                addiu   $a1, -1
                bltz    $a1, loc_2F40C
                addu    $v0, $a2, $a1
                lbu     $a0, 0($v0)
                li      $v1, 0xFF
                bne     $a0, $v1, loc_2F374
                move    $a0, $a3
                b       loc_2F400
                addiu   $a1, -1
 # ---------------------------------------------------------------------------

loc_2F3F0:                               # CODE XREF: sub_2F088+37C↓j
                lbu     $v1, -2($a0)
                bne     $v1, $v0, loc_2F374
                addiu   $a0, -1
                addiu   $a1, -1

loc_2F400:                               # CODE XREF: sub_2F088+360↑j
                li      $v0, 0xFFFFFFFF
                bne     $a1, $v0, loc_2F3F0
                li      $v0, 0xFF

loc_2F40C:                               # CODE XREF: sub_2F088+348↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $a2
                lw      $gp, 0x150+var_138($sp)
                b       loc_2F374
                sw      $zero, 0x30($s4)
 # ---------------------------------------------------------------------------

loc_2F424:                               # CODE XREF: sub_2F088+264↑j
                la      $v0, loc_40000
                lw      $a1, 0x30($s4)
                andi    $v1, $a0, 7
                addiu   $v0, (dword_45448 - 0x40000)
                sra     $a0, 3
                addu    $a0, $a1
                addu    $v1, $v0
                lbu     $a1, 0($v1)
                lbu     $v0, 0($a0)
                or      $v0, $a1
                sb      $v0, 0($a0)
                lw      $v1, 0xC($s1)
                addu    $a3, $s2, $v1
                addiu   $a0, $a3, -1
                sra     $v1, 3
                addiu   $a1, $v1, 1
                sra     $a2, $a0, 3
                slt     $v0, $a1, $a2
                beqz    $v0, loc_2F4A4
                la      $v0, loc_40000

loc_2F474:                               # CODE XREF: sub_2F088+414↓j
                lw      $v0, 0x30($s4)
                li      $v1, 0xFFFFFFFF
                addu    $v0, $a1
                sb      $v1, 0($v0)
                lw      $a0, 0xC($s1)
                addiu   $a1, 1
                addu    $a3, $s2, $a0
                addiu   $v0, $a3, -1
                sra     $a2, $v0, 3
                slt     $v1, $a1, $a2
                bnez    $v1, loc_2F474
                la      $v0, loc_40000

loc_2F4A4:                               # CODE XREF: sub_2F088+3E4↑j
                lw      $a0, 0x30($s4)
                addiu   $s0, $v0, (dword_45450 - 0x40000)
                andi    $v1, $a3, 7
                addu    $a0, $a2, $a0
                addu    $v1, $s0
                lbu     $v0, 0($a0)
                lbu     $a1, 0($v1)
                or      $v0, $a1
                b       loc_2F340
                sb      $v0, 0($a0)
 # ---------------------------------------------------------------------------

loc_2F4CC:                               # CODE XREF: sub_2F088+2BC↑j
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aD1BothC - 0x40000)  # "d1_both.c"
                addiu   $a2, (aLongMsgHdrMsgL - 0x40000)  # "((long)msg_hdr->msg_len) > 0"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x28D
                lw      $gp, 0x150+var_138($sp)
                b       loc_2F34C
                lw      $v0, 4($s1)
 # End of function sub_2F088


 # =============== S U B R O U T I N E =======================================


sub_2F4F0:                               # CODE XREF: sub_2F4F0+264↓p
                                         # DATA XREF: sub_2F4F0+260↓o ...

var_180         = -0x180
var_17C         = -0x17C
var_178         = -0x178
var_170         = -0x170
var_168         = -0x168
var_164         = -0x164
var_160         = -0x160
var_15F         = -0x15F
var_15E         = -0x15E
var_15D         = -0x15D
var_154         = -0x154
var_150         = -0x150
var_14C         = -0x14C
var_148         = -0x148
var_144         = -0x144
var_134         = -0x134
var_128         = -0x128
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - sub_2F4F0)
                addu    $gp, $t9
                addiu   $sp, -0x190
                sw      $ra, 0x190+var_4($sp)
                sw      $fp, 0x190+var_8($sp)
                sw      $s7, 0x190+var_C($sp)
                sw      $s6, 0x190+var_10($sp)
                sw      $s5, 0x190+var_14($sp)
                sw      $s4, 0x190+var_18($sp)
                sw      $s3, 0x190+var_1C($sp)
                sw      $s2, 0x190+var_20($sp)
                sw      $s1, 0x190+var_24($sp)
                sw      $s0, 0x190+var_28($sp)
                sw      $gp, 0x190+var_170($sp)
                lw      $v0, 0x5C($a0)
                lw      $s3, 0x190+arg_10($sp)
                la      $t9, pqueue_peek
                move    $s2, $a0
                lw      $a0, 0x244($v0)
                sw      $zero, 0($s3)
                move    $s5, $a1
                move    $s7, $a2
                jalr    $t9 ; pqueue_peek
                move    $s4, $a3
                move    $s1, $v0
                beqz    $v0, loc_2F570
                lw      $gp, 0x190+var_170($sp)
                lw      $s0, 8($v0)
                lw      $v0, 0x30($s0)
                beqz    $v0, loc_2F82C
                nop

loc_2F570:                               # CODE XREF: sub_2F4F0+68↑j
                                         # sub_2F4F0+348↓j
                lw      $v0, 0($s3)
                beqz    $v0, loc_2F5BC
                addiu   $s1, $sp, 0x190+var_160

loc_2F57C:                               # CODE XREF: sub_2F4F0+3DC↓j
                move    $v0, $zero

loc_2F580:                               # CODE XREF: sub_2F4F0+3E4↓j
                move    $a3, $v0
                sw      $v0, 0x44($s2)

loc_2F588:                               # CODE XREF: sub_2F4F0+1CC↓j
                                         # sub_2F4F0+270↓j ...
                lw      $ra, 0x190+var_4($sp)
                lw      $fp, 0x190+var_8($sp)
                lw      $s7, 0x190+var_C($sp)
                lw      $s6, 0x190+var_10($sp)
                lw      $s5, 0x190+var_14($sp)
                lw      $s4, 0x190+var_18($sp)
                lw      $s3, 0x190+var_1C($sp)
                lw      $s2, 0x190+var_20($sp)
                lw      $s1, 0x190+var_24($sp)
                lw      $s0, 0x190+var_28($sp)
                move    $v0, $a3
                jr      $ra
                addiu   $sp, 0x190
 # ---------------------------------------------------------------------------

loc_2F5BC:                               # CODE XREF: sub_2F4F0+84↑j
                lw      $v0, 8($s2)
                sw      $zero, 0x190+var_180($sp)
                lw      $t9, 0x34($v0)
                move    $a0, $s2
                li      $a1, 0x16
                move    $a2, $s1
                jalr    $t9
                li      $a3, 0xC
                move    $v1, $v0
                blez    $v0, loc_2F8DC
                lw      $gp, 0x190+var_170($sp)
                li      $v0, 0xC
                bne     $v1, $v0, loc_2FABC
                la      $t9, dtls1_get_message_header
                addiu   $s6, $sp, 0x190+var_154
                move    $a0, $s1
                jalr    $t9 ; dtls1_get_message_header
                move    $a1, $s6
                lw      $a1, 0x5C($s2)
                lhu     $a0, 0x190+var_14C($sp)
                lhu     $v0, 0x228($a1)
                beq     $v0, $a0, loc_2F688
                lw      $gp, 0x190+var_170($sp)
                lw      $v0, 0x254($a1)
                beqz    $v0, loc_2F62C
                li      $v0, 1
                beq     $a0, $v0, loc_2F68C
                lw      $s0, 0x190+var_144($sp)

loc_2F62C:                               # CODE XREF: sub_2F4F0+12C↑j
                lw      $s1, 0x190+var_144($sp)
                lw      $v0, 0x190+var_148($sp)
                lw      $v1, 0x190+var_150($sp)
                addu    $v0, $s1, $v0
                sltu    $v0, $v1, $v0
                beqz    $v0, loc_2F8F0
                srl     $v0, $a0, 8

loc_2F648:                               # CODE XREF: sub_2F4F0+514↓j
                li      $s0, 0xFFFFFFFF

loc_2F64C:                               # CODE XREF: sub_2F4F0:loc_2F9A8↓j
                sw      $zero, 0($s3)

loc_2F650:                               # CODE XREF: sub_2F4F0+4CC↓j
                move    $a3, $s0

loc_2F654:                               # CODE XREF: sub_2F4F0+5C4↓j
                                         # sub_2F4F0:loc_2FAE8↓j ...
                lw      $ra, 0x190+var_4($sp)
                lw      $fp, 0x190+var_8($sp)
                lw      $s7, 0x190+var_C($sp)
                lw      $s6, 0x190+var_10($sp)
                lw      $s5, 0x190+var_14($sp)
                lw      $s4, 0x190+var_18($sp)
                lw      $s3, 0x190+var_1C($sp)
                lw      $s2, 0x190+var_20($sp)
                lw      $s1, 0x190+var_24($sp)
                lw      $s0, 0x190+var_28($sp)
                move    $v0, $a3
                jr      $ra
                addiu   $sp, 0x190
 # ---------------------------------------------------------------------------

loc_2F688:                               # CODE XREF: sub_2F4F0+120↑j
                lw      $s0, 0x190+var_144($sp)

loc_2F68C:                               # CODE XREF: sub_2F4F0+134↑j
                lw      $v0, 0x190+var_150($sp)
                beqz    $s0, loc_2F6C4
                lw      $fp, 0x190+var_148($sp)
                sltu    $v0, $s0, $v0
                beqz    $v0, loc_2F6C4
                la      $t9, loc_30000
                move    $a0, $s2
                move    $a1, $s6
                addiu   $t9, (sub_2F088 - 0x30000)
                jalr    $t9 ; sub_2F088
                move    $a2, $s3
                lw      $gp, 0x190+var_170($sp)
                b       loc_2F588
                move    $a3, $v0
 # ---------------------------------------------------------------------------

loc_2F6C4:                               # CODE XREF: sub_2F4F0+1A0↑j
                                         # sub_2F4F0+1AC↑j
                lw      $v0, 0x24($s2)
                bnez    $v0, loc_2F768
                la      $t9, loc_30000
                lw      $v0, 0x294($a1)
                bnez    $v0, loc_2F768
                lbu     $v0, 0x190+var_160($sp)
                bnez    $v0, loc_2F768
                lbu     $v0, 0x190+var_15F($sp)
                bnez    $v0, loc_2FAC0
                la      $t9, ERR_put_error
                lbu     $v0, 0x190+var_15E($sp)
                bnez    $v0, loc_2FAC0
                nop
                lbu     $v0, 0x190+var_15D($sp)
                bnez    $v0, loc_2FAC0
                nop
                lw      $t9, 0x64($s2)
                beqz    $t9, loc_2F738
                li      $v0, 0xC
                lw      $v1, 0x68($s2)
                lw      $a1, 0($s2)
                sw      $v0, 0x190+var_180($sp)
                sw      $v1, 0x190+var_178($sp)
                sw      $s2, 0x190+var_17C($sp)
                move    $a3, $s1
                move    $a0, $zero
                jalr    $t9
                li      $a2, 0x16
                lw      $gp, 0x190+var_170($sp)

loc_2F738:                               # CODE XREF: sub_2F4F0+218↑j
                la      $t9, loc_30000
                sw      $zero, 0x44($s2)
                move    $a3, $s4
                move    $a0, $s2
                move    $a1, $s5
                move    $a2, $s7
                addiu   $t9, (sub_2F4F0 - 0x30000)
                jalr    $t9 ; sub_2F4F0
                sw      $s3, 0x190+var_180($sp)
                lw      $gp, 0x190+var_170($sp)
                b       loc_2F588
                move    $a3, $v0
 # ---------------------------------------------------------------------------

loc_2F768:                               # CODE XREF: sub_2F4F0+1D8↑j
                                         # sub_2F4F0+1E4↑j ...
                move    $a1, $s6
                move    $a2, $s4
                addiu   $t9, (sub_2DB44 - 0x30000)
                jalr    $t9 ; sub_2DB44
                move    $a0, $s2
                bnez    $v0, loc_2F804
                lw      $gp, 0x190+var_170($sp)
                bnez    $s0, loc_2F7A4
                sw      $s7, 0x34($s2)
                move    $v1, $zero

loc_2F790:                               # CODE XREF: sub_2F4F0+2EC↓j
                li      $v0, 1
                move    $a3, $s0
                sw      $v0, 0($s3)
                b       loc_2F588
                sw      $v1, 0x44($s2)
 # ---------------------------------------------------------------------------

loc_2F7A4:                               # CODE XREF: sub_2F4F0+294↑j
                lw      $v0, 0x3C($s2)
                lw      $v1, 8($s2)
                lw      $a2, 4($v0)
                sw      $zero, 0x190+var_180($sp)
                lw      $t9, 0x34($v1)
                addiu   $a2, 0xC
                addu    $a2, $fp
                move    $a0, $s2
                li      $a1, 0x16
                jalr    $t9
                move    $a3, $s0
                lw      $gp, 0x190+var_170($sp)
                blez    $v0, loc_2FB1C
                move    $v1, $s0
                beq     $s0, $v0, loc_2F790
                la      $t9, ERR_put_error
                sw      $zero, 0x190+var_180($sp)
                li      $a0, 0x14
                li      $a1, 0xFD
                li      $a2, 0x2F  # '/'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x190+var_170($sp)
                li      $v0, 0x2F  # '/'

loc_2F804:                               # CODE XREF: sub_2F4F0+28C↑j
                                         # sub_2F4F0+5EC↓j
                la      $t9, ssl3_send_alert
                move    $a2, $v0

loc_2F80C:                               # CODE XREF: sub_2F4F0+6BC↓j
                move    $a0, $s2
                jalr    $t9 ; ssl3_send_alert
                li      $a1, 2
                lw      $gp, 0x190+var_170($sp)
                li      $a3, 0xFFFFFFFF
                sw      $zero, 0x44($s2)
                b       loc_2F588
                sw      $zero, 0($s3)
 # ---------------------------------------------------------------------------

loc_2F82C:                               # CODE XREF: sub_2F4F0+78↑j
                lw      $a0, 0x5C($s2)
                lhu     $v1, 8($s0)
                lhu     $v0, 0x228($a0)
                bne     $v0, $v1, loc_2F570
                la      $t9, pqueue_pop
                lw      $a0, 0x244($a0)
                jalr    $t9 ; pqueue_pop
                lw      $s5, 0x10($s0)
                lw      $gp, 0x190+var_170($sp)
                move    $a2, $s4
                la      $t9, loc_30000
                move    $a0, $s2
                addiu   $t9, (sub_2DB44 - 0x30000)
                jalr    $t9 ; sub_2DB44
                move    $a1, $s0
                move    $s4, $v0
                beqz    $v0, loc_2FAF0
                lw      $gp, 0x190+var_170($sp)

loc_2F874:                               # CODE XREF: sub_2F4F0+624↓j
                lw      $a0, 0x2C($s0)
                beqz    $a0, loc_2F88C
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x190+var_170($sp)

loc_2F88C:                               # CODE XREF: sub_2F4F0+388↑j
                lw      $a0, 0x30($s0)
                beqz    $a0, loc_2F8A4
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x190+var_170($sp)

loc_2F8A4:                               # CODE XREF: sub_2F4F0+3A0↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s0
                lw      $gp, 0x190+var_170($sp)
                la      $t9, pitem_free
                jalr    $t9 ; pitem_free
                move    $a0, $s1
                bnez    $s4, loc_2FBA8
                lw      $gp, 0x190+var_170($sp)
                li      $v0, 1
                beqz    $s5, loc_2F57C
                sw      $v0, 0($s3)
                b       loc_2F580
                move    $v0, $s5
 # ---------------------------------------------------------------------------

loc_2F8DC:                               # CODE XREF: sub_2F4F0+F0↑j
                move    $a3, $v0
                li      $v0, 3
                sw      $v0, 0x18($s2)
                b       loc_2F588
                sw      $zero, 0($s3)
 # ---------------------------------------------------------------------------

loc_2F8F0:                               # CODE XREF: sub_2F4F0+150↑j
                sw      $zero, 0x190+var_164($sp)
                sw      $zero, 0x190+var_168($sp)
                sb      $v0, 0x190+var_164+2($sp)
                sb      $a0, 0x190+var_164+3($sp)
                la      $t9, pqueue_find
                lw      $a0, 0x244($a1)
                addiu   $s4, $sp, 0x190+var_168
                jalr    $t9 ; pqueue_find
                move    $a1, $s4
                move    $s5, $v0
                beqz    $v0, loc_2F92C
                lw      $gp, 0x190+var_170($sp)
                lw      $v0, 0x190+var_150($sp)
                sltu    $v0, $s1, $v0
                movn    $s5, $zero, $v0

loc_2F92C:                               # CODE XREF: sub_2F4F0+428↑j
                lw      $v1, 0x5C($s2)
                lhu     $a0, 0x190+var_14C($sp)
                lhu     $v1, 0x228($v1)
                sltu    $v0, $v1, $a0
                beqz    $v0, loc_2F958
                addiu   $v0, $v1, 0xA
                slt     $v0, $a0
                bnez    $v0, loc_2F958
                nop
                beqz    $s5, loc_2F9C4
                nop

loc_2F958:                               # CODE XREF: sub_2F4F0+44C↑j
                                         # sub_2F4F0+458↑j ...
                beqz    $s1, loc_2FAE4
                addiu   $s4, $sp, 0x190+var_128
                b       loc_2F974
                lw      $v1, 8($s2)
 # ---------------------------------------------------------------------------

loc_2F968:                               # CODE XREF: sub_2F4F0+4B0↓j
                beqz    $s1, loc_2FAE8
                li      $s0, 0xFFFFFFFD
                lw      $v1, 8($s2)

loc_2F974:                               # CODE XREF: sub_2F4F0+470↑j
                sw      $zero, 0x190+var_180($sp)
                sltiu   $v0, $s1, 0x101
                li      $a3, 0x100
                lw      $t9, 0x34($v1)
                movn    $a3, $s1, $v0
                move    $a0, $s2
                li      $a1, 0x16
                jalr    $t9
                move    $a2, $s4
                move    $s0, $v0
                lw      $gp, 0x190+var_170($sp)
                bgtz    $v0, loc_2F968
                subu    $s1, $v0

loc_2F9A8:                               # CODE XREF: sub_2F4F0+6B0↓j
                beqz    $s5, loc_2F64C
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s5
                lw      $gp, 0x190+var_170($sp)
                b       loc_2F650
                sw      $zero, 0($s3)
 # ---------------------------------------------------------------------------

loc_2F9C4:                               # CODE XREF: sub_2F4F0+460↑j
                bnez    $v1, loc_2F9D8
                lbu     $v1, 0x190+var_154($sp)
                li      $v0, 0x14
                beq     $v1, $v0, loc_2F958
                nop

loc_2F9D8:                               # CODE XREF: sub_2F4F0:loc_2F9C4↑j
                beqz    $s1, loc_2F9EC
                lw      $v0, 0x190+var_150($sp)
                sltu    $v0, $s1, $v0
                bnez    $v0, loc_2FBB4
                la      $t9, loc_30000

loc_2F9EC:                               # CODE XREF: sub_2F4F0:loc_2F9D8↑j
                la      $t9, loc_30000
                move    $a0, $s1
                addiu   $t9, (sub_2D8E0 - 0x30000)
                jalr    $t9 ; sub_2D8E0
                move    $a1, $zero
                move    $s7, $v0
                beqz    $v0, loc_2F648
                lw      $gp, 0x190+var_170($sp)
                move    $a3, $s6
                move    $a2, $v0
                addiu   $t0, $sp, 0x190+var_134

loc_2FA18:                               # CODE XREF: sub_2F4F0+54C↓j
                lw      $v0, 0($a3)
                lw      $v1, 4($a3)
                lw      $a0, 8($a3)
                lw      $a1, 0xC($a3)
                addiu   $a3, 0x10
                sw      $v0, 0($a2)
                sw      $v1, 4($a2)
                sw      $a0, 8($a2)
                sw      $a1, 0xC($a2)
                bne     $a3, $t0, loc_2FA18
                addiu   $a2, 0x10
                lw      $v0, 8($a3)
                lw      $v1, 0($a3)
                lw      $a0, 4($a3)
                sw      $v0, 8($a2)
                sw      $v1, 0($a2)
                bnez    $s1, loc_2FB30
                sw      $a0, 4($a2)
                li      $s0, 0xFFFFFFFF
                lhu     $v0, 0x190+var_14C($sp)

loc_2FA68:                               # CODE XREF: sub_2F4F0+66C↓j
                la      $t9, pitem_new
                srl     $v1, $v0, 8
                sw      $zero, 0x190+var_164($sp)
                sw      $zero, 0x190+var_168($sp)
                sb      $v1, 0x190+var_164+2($sp)
                sb      $v0, 0x190+var_164+3($sp)
                move    $a0, $s4
                jalr    $t9 ; pitem_new
                move    $a1, $s7
                move    $s5, $v0
                beqz    $v0, loc_2FB64
                lw      $gp, 0x190+var_170($sp)
                lw      $v0, 0x5C($s2)
                la      $t9, pqueue_insert
                lw      $a0, 0x244($v0)
                jalr    $t9 ; pqueue_insert
                move    $a1, $s5
                li      $s0, 0xFFFFFFFD
                lw      $gp, 0x190+var_170($sp)
                b       loc_2F654
                move    $a3, $s0
 # ---------------------------------------------------------------------------

loc_2FABC:                               # CODE XREF: sub_2F4F0+FC↑j
                la      $t9, ERR_put_error

loc_2FAC0:                               # CODE XREF: sub_2F4F0+1F4↑j
                                         # sub_2F4F0+200↑j ...
                sw      $zero, 0x190+var_180($sp)
                li      $a0, 0x14
                li      $a1, 0xFD
                li      $a2, 0xF4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x190+var_170($sp)
                b       loc_2F804
                li      $v0, 0xA
 # ---------------------------------------------------------------------------

loc_2FAE4:                               # CODE XREF: sub_2F4F0:loc_2F958↑j
                li      $s0, 0xFFFFFFFD

loc_2FAE8:                               # CODE XREF: sub_2F4F0:loc_2F968↑j
                b       loc_2F654
                move    $a3, $s0
 # ---------------------------------------------------------------------------

loc_2FAF0:                               # CODE XREF: sub_2F4F0+37C↑j
                lw      $v0, 0x3C($s2)
                lw      $v1, 0xC($s0)
                lw      $a0, 4($v0)
                la      $t9, memcpy
                addiu   $a0, 0xC
                lw      $a1, 0x2C($s0)
                lw      $a2, 0x10($s0)
                jalr    $t9 ; memcpy
                addu    $a0, $v1
                b       loc_2F874
                lw      $gp, 0x190+var_170($sp)
 # ---------------------------------------------------------------------------

loc_2FB1C:                               # CODE XREF: sub_2F4F0+2E4↑j
                move    $a3, $v0
                li      $v0, 3
                sw      $v0, 0x18($s2)
                b       loc_2F588
                sw      $zero, 0($s3)
 # ---------------------------------------------------------------------------

loc_2FB30:                               # CODE XREF: sub_2F4F0+568↑j
                lw      $v0, 8($s2)
                lw      $a2, 0x2C($s7)
                sw      $zero, 0x190+var_180($sp)
                lw      $t9, 0x34($v0)
                move    $a0, $s2
                li      $a1, 0x16
                jalr    $t9
                move    $a3, $s1
                move    $s0, $v0
                blez    $v0, loc_2FB64
                lw      $gp, 0x190+var_170($sp)
                beq     $v0, $s1, loc_2FA68
                lhu     $v0, 0x190+var_14C($sp)

loc_2FB64:                               # CODE XREF: sub_2F4F0+5A0↑j
                                         # sub_2F4F0+664↑j
                lw      $a0, 0x2C($s7)
                beqz    $a0, loc_2FB7C
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x190+var_170($sp)

loc_2FB7C:                               # CODE XREF: sub_2F4F0+678↑j
                lw      $a0, 0x30($s7)
                beqz    $a0, loc_2FB94
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x190+var_170($sp)

loc_2FB94:                               # CODE XREF: sub_2F4F0+690↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s7
                b       loc_2F9A8
                lw      $gp, 0x190+var_170($sp)
 # ---------------------------------------------------------------------------

loc_2FBA8:                               # CODE XREF: sub_2F4F0+3D0↑j
                la      $t9, ssl3_send_alert
                b       loc_2F80C
                move    $a2, $s4
 # ---------------------------------------------------------------------------

loc_2FBB4:                               # CODE XREF: sub_2F4F0+4F4↑j
                move    $a0, $s2
                move    $a1, $s6
                addiu   $t9, (sub_2F088 - 0x30000)
                jalr    $t9 ; sub_2F088
                move    $a2, $s3
                move    $s0, $v0
                lw      $gp, 0x190+var_170($sp)
                b       loc_2F654
                move    $a3, $s0
 # End of function sub_2F4F0


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_get_message
dtls1_get_message:                       # DATA XREF: LOAD:00004B48↑o
                                         # .got:dtls1_get_message_ptr↓o

var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_10          =  0x10
arg_14          =  0x14

                la      $gp, (off_5A360+0x7FF0 - dtls1_get_message)
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_8($sp)
                sw      $s7, 0x50+var_C($sp)
                sw      $s6, 0x50+var_10($sp)
                sw      $s5, 0x50+var_14($sp)
                sw      $s4, 0x50+var_18($sp)
                sw      $s3, 0x50+var_1C($sp)
                sw      $s2, 0x50+var_20($sp)
                sw      $s1, 0x50+var_24($sp)
                sw      $s0, 0x50+var_28($sp)
                sw      $gp, 0x50+var_30($sp)
                lw      $v1, 0x58($a0)
                move    $s1, $a0
                lw      $v0, 0x34C($v1)
                move    $s7, $a1
                move    $s6, $a2
                lw      $s5, 0x50+arg_10($sp)
                beqz    $v0, loc_2FC98
                lw      $s2, 0x50+arg_14($sp)
                bltz    $a3, loc_2FC44
                sw      $zero, 0x34C($v1)
                lw      $v0, 0x340($v1)
                bne     $v0, $a3, loc_2FE78
                la      $t9, ERR_put_error

loc_2FC44:                               # CODE XREF: dtls1_get_message+58↑j
                lw      $v0, 0x3C($s1)
                lw      $a0, 0x33C($v1)
                lw      $v1, 4($v0)
                li      $v0, 1
                addiu   $v1, 0xC
                sw      $v0, 0($s2)
                move    $a1, $a0
                sw      $v1, 0x40($s1)
                sw      $a0, 0x44($s1)

loc_2FC68:                               # CODE XREF: dtls1_get_message+2D8↓j
                lw      $ra, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)

loc_2FC70:                               # CODE XREF: dtls1_get_message+298↓j
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_2FC98:                               # CODE XREF: dtls1_get_message+50↑j
                lw      $s3, 0x5C($a0)
                la      $v0, loc_30000
                addiu   $s0, $s3, 0x288
                sw      $zero, 0x288($s3)
                addiu   $s4, $v0, (sub_2F4F0 - 0x30000)
                sw      $zero, 4($s0)
                sw      $zero, 8($s0)
                sw      $zero, 0xC($s0)
                sw      $zero, 0x10($s0)
                sw      $zero, 0x14($s0)
                sw      $zero, 0x18($s0)
                sw      $zero, 0x1C($s0)
                sw      $zero, 0x20($s0)
                sw      $zero, 0x24($s0)
                sw      $zero, 0x28($s0)

loc_2FCD4:                               # CODE XREF: dtls1_get_message+124↓j
                move    $a1, $s7
                move    $a0, $s1
                move    $a2, $s6
                move    $a3, $s5
                move    $t9, $s4
                jalr    $t9
                sw      $s2, 0x50+var_40($sp)
                move    $a1, $v0
                addiu   $v0, 3
                sltiu   $v0, 2
                bnez    $v0, loc_2FCD4
                lw      $gp, 0x50+var_30($sp)
                blez    $a1, loc_2FE64
                nop

loc_2FD0C:                               # CODE XREF: dtls1_get_message+290↓j
                lw      $v0, 0x3C($s1)
                lw      $s2, 0x28C($s3)
                lw      $t0, 4($v0)
                lbu     $a2, 0x288($s3)
                srl     $a0, $s2, 16
                srl     $a1, $s2, 8
                addiu   $v1, $t0, 1
                andi    $a0, 0xFF
                andi    $a1, 0xFF
                andi    $a3, $s2, 0xFF
                sb      $a2, 0($t0)
                sb      $a0, 1($t0)
                sb      $a3, 2($v1)
                sb      $a1, 1($v1)
                lhu     $v0, 0x290($s3)
                addiu   $a2, $t0, 6
                srl     $v0, 8
                sb      $v0, 4($t0)
                lhu     $v1, 0x290($s3)
                addiu   $v0, $t0, 9
                sb      $v1, 5($t0)
                sb      $zero, 6($t0)
                sb      $zero, 2($a2)
                sb      $zero, 1($a2)
                sb      $a0, 9($t0)
                sb      $a3, 2($v0)
                sb      $a1, 1($v0)
                lw      $v1, 0($s1)
                li      $v0, 0x100
                beq     $v1, $v0, loc_2FD90
                addiu   $s3, $t0, 0xC
                move    $s3, $t0
                addiu   $s2, 0xC

loc_2FD90:                               # CODE XREF: dtls1_get_message+1A8↑j
                la      $t9, ssl3_finish_mac
                move    $a0, $s1
                move    $a1, $s3
                jalr    $t9 ; ssl3_finish_mac
                move    $a2, $s2
                lw      $t9, 0x64($s1)
                beqz    $t9, loc_2FDD8
                lw      $gp, 0x50+var_30($sp)
                lw      $v0, 0x68($s1)
                lw      $a1, 0($s1)
                move    $a3, $s3
                sw      $s2, 0x50+var_40($sp)
                sw      $v0, 0x50+var_38($sp)
                sw      $s1, 0x50+var_3C($sp)
                move    $a0, $zero
                jalr    $t9
                li      $a2, 0x16
                lw      $gp, 0x50+var_30($sp)

loc_2FDD8:                               # CODE XREF: dtls1_get_message+1D0↑j
                sw      $zero, 0x28($s0)
                sw      $zero, 0($s0)
                sw      $zero, 4($s0)
                sw      $zero, 8($s0)
                sw      $zero, 0xC($s0)
                sw      $zero, 0x10($s0)
                sw      $zero, 0x14($s0)
                sw      $zero, 0x18($s0)
                sw      $zero, 0x1C($s0)
                sw      $zero, 0x20($s0)
                sw      $zero, 0x24($s0)
                lw      $v1, 0x5C($s1)
                lw      $v0, 0x254($v1)
                bnez    $v0, loc_2FE20
                nop
                lhu     $v0, 0x228($v1)
                addiu   $v0, 1
                sh      $v0, 0x228($v1)

loc_2FE20:                               # CODE XREF: dtls1_get_message+234↑j
                lw      $v1, 0x3C($s1)
                lw      $a1, 0x44($s1)
                lw      $v0, 4($v1)
                lw      $ra, 0x50+var_8($sp)
                addiu   $v0, 0xC
                sw      $v0, 0x40($s1)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_2FE64:                               # CODE XREF: dtls1_get_message+12C↑j
                lw      $v0, 0($s2)
                bnez    $v0, loc_2FD0C
                lw      $ra, 0x50+var_8($sp)
                b       loc_2FC70
                lw      $s7, 0x50+var_C($sp)
 # ---------------------------------------------------------------------------

loc_2FE78:                               # CODE XREF: dtls1_get_message+64↑j
                li      $a0, 0x14
                li      $a1, 0xFC
                li      $a2, 0xF4
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x50+var_40($sp)
                lw      $gp, 0x50+var_30($sp)
                la      $t9, ssl3_send_alert
                li      $a1, 2
                move    $a0, $s1
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0xA
                lw      $gp, 0x50+var_30($sp)
                li      $a1, 0xFFFFFFFF
                b       loc_2FC68
                sw      $zero, 0($s2)
 # End of function dtls1_get_message


 # =============== S U B R O U T I N E =======================================


                .globl dtls1_enc
dtls1_enc:                               # DATA XREF: LOAD:000047B8↑o
                                         # .got:dtls1_enc_ptr↓o

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - dtls1_enc)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s6, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                move    $s5, $a1
                beqz    $a1, loc_2FF68
                move    $s4, $a0
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x90($a0)
                bnez    $v0, loc_30190
                lw      $gp, 0x38+var_28($sp)

loc_2FF0C:                               # CODE XREF: dtls1_enc+2F4↓j
                lw      $s0, 0x58($s4)
                lw      $s2, 0x8C($s4)
                beqz    $s2, loc_30114
                addiu   $s1, $s0, 0x130
                la      $t9, EVP_CIPHER_CTX_cipher
                jalr    $t9 ; EVP_CIPHER_CTX_cipher
                move    $a0, $s2
                lw      $a0, 0x13C($s0)
                lw      $v1, 0x140($s0)
                lw      $gp, 0x38+var_28($sp)
                beq     $a0, $v1, loc_30144
                move    $s3, $v0
                la      $v0, stderr
                la      $a1, loc_40000
                la      $a2, loc_40000
                la      $t9, fprintf
                lw      $a0, (stderr - 0x5B0A8)($v0)
                addiu   $a1, (aSDRecDataRecIn - 0x40000)  # "%s:%d: rec->data != rec->input\n"
                addiu   $a2, (aD1EncC - 0x40000)  # "d1_enc.c"
                jalr    $t9 ; fprintf
                li      $a3, 0x9B
                b       loc_2FFA0
                lw      $gp, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_2FF68:                               # CODE XREF: dtls1_enc+38↑j
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x84($a0)
                bnez    $v0, loc_301BC
                lw      $gp, 0x38+var_28($sp)

loc_2FF7C:                               # CODE XREF: dtls1_enc+320↓j
                lw      $v0, 0x58($s4)
                lw      $s2, 0x80($s4)
                beqz    $s2, loc_30114
                addiu   $s1, $v0, 0x10C
                la      $t9, EVP_CIPHER_CTX_cipher
                jalr    $t9 ; EVP_CIPHER_CTX_cipher
                move    $a0, $s2
                lw      $gp, 0x38+var_28($sp)
                move    $s3, $v0

loc_2FFA0:                               # CODE XREF: dtls1_enc+A8↑j
                                         # dtls1_enc:loc_30114↓j ...
                lw      $v0, 0xC0($s4)
                beqz    $v0, loc_300C8
                la      $t9, memmove
                beqz    $s2, loc_300C8
                nop
                beqz    $s3, loc_300C4
                la      $t9, EVP_CIPHER_block_size
                lw      $a0, 0($s2)
                jalr    $t9 ; EVP_CIPHER_block_size
                lw      $s0, 4($s1)
                move    $s3, $v0
                li      $v0, 1
                beq     $s3, $v0, loc_3011C
                lw      $gp, 0x38+var_28($sp)
                beqz    $s5, loc_3008C
                move    $a1, $s0
                div     $s0, $s3
                teq     $s3, $zero  #7
                lw      $v1, 0xF8($s4)
                andi    $v1, 0x200
                mfhi    $v0
                subu    $t0, $s3, $v0
                beqz    $v1, loc_30010
                addiu   $a2, $t0, -1

loc_30000:                               # DATA XREF: dtls1_clear+40↑o
                                         # dtls1_free+2C↑o ...
                lw      $v1, 0x58($s4)
                lw      $v0, 0($v1)
                andi    $v0, 8
                movn    $a2, $t0, $v0

loc_30010:                               # CODE XREF: dtls1_enc+140↑j
                addu    $a3, $t0, $s0
                slt     $v0, $s0, $a3
                beqz    $v0, loc_30038
                andi    $a0, $a2, 0xFF

loc_30020:                               # CODE XREF: dtls1_enc+178↓j
                lw      $v0, 0x10($s1)
                addu    $v0, $a1
                addiu   $a1, 1
                slt     $v1, $a1, $a3
                bnez    $v1, loc_30020
                sb      $a0, 0($v0)

loc_30038:                               # CODE XREF: dtls1_enc+160↑j
                lw      $v0, 4($s1)
                la      $t9, EVP_Cipher
                lw      $a1, 0xC($s1)
                lw      $a2, 0x10($s1)
                addu    $v0, $t0
                sw      $v0, 4($s1)
                jalr    $t9 ; EVP_Cipher
                move    $a0, $s2
                lw      $gp, 0x38+var_28($sp)
                li      $a1, 1
                lw      $ra, 0x38+var_4($sp)
                lw      $s6, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3008C:                               # CODE XREF: dtls1_enc+120↑j
                                         # dtls1_enc:loc_3011C↓j
                bnez    $s0, loc_301E8
                nop

loc_30094:                               # CODE XREF: dtls1_enc+33C↓j
                                         # dtls1_enc+39C↓j ...
                li      $a1, 0xFFFFFFFF

loc_30098:                               # CODE XREF: dtls1_enc+284↓j
                                         # dtls1_enc+2D0↓j ...
                lw      $ra, 0x38+var_4($sp)
                lw      $s6, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_300C4:                               # CODE XREF: dtls1_enc+FC↑j
                la      $t9, memmove

loc_300C8:                               # CODE XREF: dtls1_enc+EC↑j
                                         # dtls1_enc+F4↑j
                lw      $a1, 0x10($s1)
                lw      $a0, 0xC($s1)
                jalr    $t9 ; memmove
                lw      $a2, 4($s1)
                lw      $v1, 0xC($s1)
                lw      $gp, 0x38+var_28($sp)
                li      $a1, 1
                sw      $v1, 0x10($s1)
                lw      $ra, 0x38+var_4($sp)
                lw      $s6, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_30114:                               # CODE XREF: dtls1_enc+5C↑j
                                         # dtls1_enc+CC↑j
                b       loc_2FFA0
                move    $s3, $zero
 # ---------------------------------------------------------------------------

loc_3011C:                               # CODE XREF: dtls1_enc+118↑j
                beqz    $s5, loc_3008C
                la      $t9, EVP_Cipher
                lw      $a1, 0xC($s1)
                lw      $a2, 0x10($s1)
                move    $a0, $s2
                jalr    $t9 ; EVP_Cipher
                move    $a3, $s0
                lw      $gp, 0x38+var_28($sp)
                b       loc_30098
                li      $a1, 1
 # ---------------------------------------------------------------------------

loc_30144:                               # CODE XREF: dtls1_enc+7C↑j
                la      $t9, EVP_CIPHER_block_size
                jalr    $t9 ; EVP_CIPHER_block_size
                lw      $a0, 0($s2)
                slti    $v0, 2
                bnez    $v0, loc_2FFA0
                lw      $gp, 0x38+var_28($sp)
                la      $t9, EVP_CIPHER_block_size
                lw      $a0, 0($s2)
                jalr    $t9 ; EVP_CIPHER_block_size
                lw      $s0, 0x140($s0)
                lw      $gp, 0x38+var_28($sp)
                la      $t9, RAND_bytes
                move    $a0, $s0
                jalr    $t9 ; RAND_bytes
                move    $a1, $v0
                bgtz    $v0, loc_2FFA0
                lw      $gp, 0x38+var_28($sp)
                b       loc_30098
                li      $a1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_30190:                               # CODE XREF: dtls1_enc+4C↑j
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x90($s4)
                lw      $gp, 0x38+var_28($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                bgez    $v0, loc_2FF0C
                lw      $gp, 0x38+var_28($sp)
                b       loc_30098
                li      $a1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_301BC:                               # CODE XREF: dtls1_enc+BC↑j
                la      $t9, EVP_MD_CTX_md
                jalr    $t9 ; EVP_MD_CTX_md
                lw      $a0, 0x84($s4)
                lw      $gp, 0x38+var_28($sp)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                bgez    $v0, loc_2FF7C
                lw      $gp, 0x38+var_28($sp)
                b       loc_30098
                li      $a1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_301E8:                               # CODE XREF: dtls1_enc:loc_3008C↑j
                divu    $s0, $s3
                teq     $s3, $zero  #7
                mfhi    $v0
                bnez    $v0, loc_30094
                la      $t9, EVP_Cipher
                lw      $a1, 0xC($s1)
                lw      $a2, 0x10($s1)
                move    $a0, $s2
                jalr    $t9 ; EVP_Cipher
                move    $a3, $s0
                li      $v0, 1
                beq     $s3, $v0, loc_30224
                lw      $gp, 0x38+var_28($sp)
                beqz    $s5, loc_3022C
                nop

loc_30224:                               # CODE XREF: dtls1_enc+35C↑j
                b       loc_30098
                li      $a1, 1
 # ---------------------------------------------------------------------------

loc_3022C:                               # CODE XREF: dtls1_enc+364↑j
                lw      $s6, 0xC($s1)
                lw      $v1, 0xF8($s4)
                addu    $v0, $s0, $s6
                lbu     $s2, -1($v0)
                andi    $v1, 0x200
                bnez    $v1, loc_302C4
                addiu   $s5, $s2, 1

loc_30248:                               # CODE XREF: dtls1_enc+450↓j
                lw      $v1, 4($s1)
                addu    $v0, $s5, $s3
                slt     $v0, $v1, $v0
                bnez    $v0, loc_30094
                subu    $a1, $s0, $s5
                slt     $v0, $a1, $s0
                beqz    $v0, loc_3029C
                addu    $a0, $s6, $a1
                lbu     $v0, 0($a0)
                beq     $s2, $v0, loc_30290
                addiu   $a1, 1
                addiu   $a1, -1
                b       loc_30098
                li      $a1, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_30280:                               # CODE XREF: dtls1_enc+3DC↓j
                lbu     $v0, 1($a0)
                bne     $s2, $v0, loc_30094
                addiu   $a0, 1
                addiu   $a1, 1

loc_30290:                               # CODE XREF: dtls1_enc+3B4↑j
                slt     $v0, $a1, $s0
                bnez    $v0, loc_30280
                nop

loc_3029C:                               # CODE XREF: dtls1_enc+3A8↑j
                lw      $v0, 0x10($s1)
                subu    $v1, $s5
                subu    $v1, $s3
                addu    $a0, $s6, $s3
                addu    $v0, $s3
                li      $a1, 1
                sw      $v1, 4($s1)
                sw      $a0, 0xC($s1)
                b       loc_30098
                sw      $v0, 0x10($s1)
 # ---------------------------------------------------------------------------

loc_302C4:                               # CODE XREF: dtls1_enc+388↑j
                la      $a1, loc_40000
                lw      $s4, 0x58($s4)
                la      $t9, memcmp
                addiu   $a1, (dword_45470 - 0x40000)
                addiu   $a0, $s4, 8
                jalr    $t9 ; memcmp
                li      $a2, 8
                bnez    $v0, loc_30310
                lw      $gp, 0x38+var_28($sp)
                andi    $v0, $s2, 1
                bnez    $v0, loc_30310
                nop
                lw      $v1, 0($s4)
                ori     $v1, 8
                sw      $v1, 0($s4)

loc_30300:                               # CODE XREF: dtls1_enc:loc_30310↓j
                andi    $v1, 8
                addiu   $v0, $s5, -1
                b       loc_30248
                movn    $s5, $v0, $v1
 # ---------------------------------------------------------------------------

loc_30310:                               # CODE XREF: dtls1_enc+428↑j
                                         # dtls1_enc+434↑j
                b       loc_30300
                lw      $v1, 0($s4)
 # End of function dtls1_enc


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_srtp_profiles
SSL_get_srtp_profiles:                   # CODE XREF: ssl_add_clienthello_tlsext:loc_23A4C↑p
                                         # ssl_parse_serverhello_use_srtp_ext+CC↓p ...
                beqz    $a0, locret_30334
                nop
                lw      $v0, 0x164($a0)
                beqz    $v0, loc_3033C
                nop

locret_3032C:                            # CODE XREF: SSL_get_srtp_profiles+28↓j
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

locret_30334:                            # CODE XREF: SSL_get_srtp_profiles↑j
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_3033C:                               # CODE XREF: SSL_get_srtp_profiles+C↑j
                lw      $a0, 0xDC($a0)
                beqz    $a0, locret_3032C
                nop
                jr      $ra
                lw      $v0, 0x1A8($a0)
 # End of function SSL_get_srtp_profiles


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_selected_srtp_profile
SSL_get_selected_srtp_profile:           # DATA XREF: LOAD:00001958↑o
                jr      $ra
                lw      $v0, 0x168($a0)
 # End of function SSL_get_selected_srtp_profile


 # =============== S U B R O U T I N E =======================================


                .globl ssl_add_serverhello_use_srtp_ext
ssl_add_serverhello_use_srtp_ext:        # CODE XREF: ssl_add_serverhello_tlsext+2D4↑p
                                         # ssl_add_serverhello_tlsext+328↑p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_add_serverhello_use_srtp_ext)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                beqz    $a1, loc_303BC
                move    $t0, $a0
                slti    $v0, $a3, 5
                bnez    $v0, loc_303D4
                la      $t9, ERR_put_error
                lw      $v0, 0x168($a0)
                beqz    $v0, loc_30400
                li      $v0, 2
                sb      $v0, 1($a1)
                sb      $zero, 0($a1)
                lw      $v1, 0x168($a0)
                addiu   $a0, $a1, 2
                lw      $v0, 4($v1)
                srl     $v0, 8
                sb      $v0, 2($a1)
                lw      $v1, 0x168($t0)
                lw      $v0, 4($v1)
                sb      $zero, 2($a0)
                sb      $v0, 1($a0)

loc_303BC:                               # CODE XREF: ssl_add_serverhello_use_srtp_ext+18↑j
                li      $v0, 5
                lw      $ra, 0x28+var_8($sp)
                sw      $v0, 0($a2)
                addiu   $sp, 0x28
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_303D4:                               # CODE XREF: ssl_add_serverhello_use_srtp_ext+24↑j
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0x134
                li      $a2, 0x16B

loc_303E4:                               # CODE XREF: ssl_add_serverhello_use_srtp_ext+B4↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_30400:                               # CODE XREF: ssl_add_serverhello_use_srtp_ext+30↑j
                li      $a0, 0x14
                li      $a1, 0x134
                li      $a2, 0x171
                b       loc_303E4
                sw      $zero, 0x28+var_18($sp)
 # End of function ssl_add_serverhello_use_srtp_ext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_parse_serverhello_use_srtp_ext
ssl_parse_serverhello_use_srtp_ext:      # CODE XREF: ssl_parse_serverhello_tlsext+2A0↑p
                                         # DATA XREF: LOAD:000044F8↑o ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_parse_serverhello_use_srtp_ext)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s4, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                li      $v0, 5
                move    $t0, $a1
                move    $s3, $a3
                beq     $a2, $v0, loc_304A4
                move    $s4, $a0
                la      $t9, ERR_put_error

loc_30458:                               # CODE XREF: ssl_parse_serverhello_use_srtp_ext+A4↓j
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x137
                li      $a2, 0x161

loc_30468:                               # CODE XREF: ssl_parse_serverhello_use_srtp_ext+1C4↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                li      $v0, 0x32  # '2'
                lw      $gp, 0x38+var_20($sp)
                li      $a0, 1
                sw      $v0, 0($s3)

loc_30480:                               # CODE XREF: ssl_parse_serverhello_use_srtp_ext+150↓j
                                         # ssl_parse_serverhello_use_srtp_ext+1AC↓j
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_304A4:                               # CODE XREF: ssl_parse_serverhello_use_srtp_ext+38↑j
                lbu     $v0, 0($a1)
                lbu     $v1, 1($a1)
                sll     $v0, 8
                or      $v1, $v0
                li      $a1, 2
                bne     $v1, $a1, loc_30458
                la      $t9, ERR_put_error
                addiu   $v1, $t0, 2
                lbu     $v0, 2($t0)
                lbu     $a1, 1($v1)
                lbu     $a2, 2($v1)
                sll     $v0, 8
                bnez    $a2, loc_3056C
                or      $s2, $a1, $v0
                la      $t9, SSL_get_srtp_profiles
                jalr    $t9 ; SSL_get_srtp_profiles
                nop
                move    $s1, $v0
                beqz    $v0, loc_305C8
                lw      $gp, 0x38+var_20($sp)
                b       loc_30514
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_304FC:                               # CODE XREF: ssl_parse_serverhello_use_srtp_ext+120↓j
                jalr    $t9 ; sk_value
                nop
                move    $v1, $v0
                lw      $v0, 4($v0)
                beq     $v0, $s2, loc_305B8
                lw      $gp, 0x38+var_20($sp)

loc_30514:                               # CODE XREF: ssl_parse_serverhello_use_srtp_ext+E0↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s1
                lw      $gp, 0x38+var_20($sp)
                slt     $v0, $s0, $v0
                move    $a1, $s0
                move    $a0, $s1
                addiu   $s0, 1
                bnez    $v0, loc_304FC
                la      $t9, sk_value
                la      $t9, ERR_put_error
                li      $a0, 0x14
                sw      $zero, 0x38+var_28($sp)
                li      $a1, 0x137
                li      $a2, 0x161
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 0x32  # '2'
                li      $a0, 1
                b       loc_30480
                sw      $v0, 0($s3)
 # ---------------------------------------------------------------------------

loc_3056C:                               # CODE XREF: ssl_parse_serverhello_use_srtp_ext+C0↑j
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x137
                li      $a2, 0x160
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                li      $v0, 0x2F  # '/'
                lw      $gp, 0x38+var_20($sp)
                li      $a0, 1
                sw      $v0, 0($s3)
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_305B8:                               # CODE XREF: ssl_parse_serverhello_use_srtp_ext+F8↑j
                move    $a0, $zero
                sw      $v1, 0x168($s4)
                b       loc_30480
                sw      $zero, 0($s3)
 # ---------------------------------------------------------------------------

loc_305C8:                               # CODE XREF: ssl_parse_serverhello_use_srtp_ext+D8↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x137
                li      $a2, 0x167
                b       loc_30468
                sw      $zero, 0x38+var_28($sp)
 # End of function ssl_parse_serverhello_use_srtp_ext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_add_clienthello_use_srtp_ext
ssl_add_clienthello_use_srtp_ext:        # CODE XREF: ssl_add_clienthello_tlsext+810↑p
                                         # ssl_add_clienthello_tlsext+884↑p
                                         # DATA XREF: ...

var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_add_clienthello_use_srtp_ext)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_8($sp)
                sw      $s7, 0x48+var_C($sp)
                sw      $s6, 0x48+var_10($sp)
                sw      $s5, 0x48+var_14($sp)
                sw      $s4, 0x48+var_18($sp)
                sw      $s3, 0x48+var_1C($sp)
                sw      $s2, 0x48+var_20($sp)
                sw      $s1, 0x48+var_24($sp)
                sw      $s0, 0x48+var_28($sp)
                sw      $gp, 0x48+var_30($sp)
                la      $t9, SSL_get_srtp_profiles
                move    $s0, $a1
                move    $s7, $a2
                jalr    $t9 ; SSL_get_srtp_profiles
                move    $s1, $a3
                lw      $gp, 0x48+var_30($sp)
                la      $t9, sk_num
                move    $a0, $v0
                jalr    $t9 ; sk_num
                move    $s4, $v0
                move    $s2, $v0
                beqz    $s0, loc_30758
                lw      $gp, 0x48+var_30($sp)
                beqz    $v0, loc_306F0
                sll     $v0, 1
                addiu   $s6, $v0, 3
                slt     $v1, $s1, $s6
                bnez    $v1, loc_30740
                sll     $s5, $s2, 1
                sra     $v0, $s5, 8
                sb      $v0, 0($s0)
                sb      $s5, 1($s0)
                blez    $s2, loc_306B8
                addiu   $s3, $s0, 2
                move    $s0, $s3
                move    $s1, $zero

loc_30680:                               # CODE XREF: ssl_add_clienthello_use_srtp_ext+CC↓j
                la      $t9, sk_value
                move    $a1, $s1
                jalr    $t9 ; sk_value
                move    $a0, $s4
                lw      $v1, 4($v0)
                lw      $gp, 0x48+var_30($sp)
                srl     $v1, 8
                sb      $v1, 0($s0)
                lw      $a0, 4($v0)
                addiu   $s1, 1
                sb      $a0, 1($s0)
                bne     $s1, $s2, loc_30680
                addiu   $s0, 2
                addu    $s3, $s5

loc_306B8:                               # CODE XREF: ssl_add_clienthello_use_srtp_ext+90↑j
                sb      $zero, 0($s3)

loc_306BC:                               # CODE XREF: ssl_add_clienthello_use_srtp_ext+17C↓j
                sw      $s6, 0($s7)
                lw      $ra, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_306F0:                               # CODE XREF: ssl_add_clienthello_use_srtp_ext+6C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x133
                li      $a2, 0x162

loc_30704:                               # CODE XREF: ssl_add_clienthello_use_srtp_ext+170↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                lw      $ra, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_30740:                               # CODE XREF: ssl_add_clienthello_use_srtp_ext+7C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x133
                li      $a2, 0x16B
                b       loc_30704
                sw      $zero, 0x48+var_38($sp)
 # ---------------------------------------------------------------------------

loc_30758:                               # CODE XREF: ssl_add_clienthello_use_srtp_ext+64↑j
                sll     $v0, 1
                b       loc_306BC
                addiu   $s6, $v0, 3
 # End of function ssl_add_clienthello_use_srtp_ext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_parse_clienthello_use_srtp_ext
ssl_parse_clienthello_use_srtp_ext:      # CODE XREF: ssl_parse_clienthello_tlsext+40C↑p
                                         # DATA XREF: LOAD:00003CB8↑o ...

var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_parse_clienthello_use_srtp_ext)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_8($sp)
                sw      $s7, 0x48+var_C($sp)
                sw      $s6, 0x48+var_10($sp)
                sw      $s5, 0x48+var_14($sp)
                sw      $s4, 0x48+var_18($sp)
                sw      $s3, 0x48+var_1C($sp)
                sw      $s2, 0x48+var_20($sp)
                sw      $s1, 0x48+var_24($sp)
                sw      $s0, 0x48+var_28($sp)
                sw      $gp, 0x48+var_30($sp)
                slti    $v0, $a2, 3
                move    $s7, $a0
                bnez    $v0, loc_30878
                move    $s6, $a3
                lbu     $v0, 0($a1)
                lbu     $a0, 1($a1)
                sll     $v0, 8
                or      $s1, $a0, $v0
                andi    $v1, $s1, 1
                bnez    $v1, loc_30878
                addiu   $s2, $a2, -2
                addiu   $v0, $s1, 1
                slt     $v0, $s2, $v0
                bnez    $v0, loc_3087C
                la      $t9, ERR_put_error
                la      $t9, sk_new_null
                jalr    $t9 ; sk_new_null
                addiu   $s0, $a1, 2
                move    $s4, $v0
                beqz    $s1, loc_30854
                lw      $gp, 0x48+var_30($sp)
                li      $s5, 0x60000
                addiu   $s3, $s5, (off_5A290 - 0x60000)  # "SRTP_AES128_CM_SHA1_80"

loc_307F8:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+17C↓j
                lw      $v0, -0x5D70($s5)

loc_307FC:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext:loc_3084C↓j
                lbu     $v1, 0($s0)
                lbu     $a0, 1($s0)
                addiu   $s1, -2
                addiu   $s2, -2
                beqz    $v0, loc_3084C
                addiu   $s0, 2
                sll     $v0, $v1, 8
                lw      $v1, 4($s3)
                or      $a0, $v0, $a0
                beq     $a0, $v1, loc_308D4
                move    $a1, $s3
                b       loc_30840
                addiu   $a1, 8
 # ---------------------------------------------------------------------------

loc_30830:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+E0↓j
                lw      $v0, 4($a1)
                beq     $a0, $v0, loc_308D8
                la      $t9, sk_push
                addiu   $a1, 8

loc_30840:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+C4↑j
                lw      $v0, 0($a1)
                bnez    $v0, loc_30830
                nop

loc_3084C:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+A8↑j
                bnez    $s1, loc_307FC
                lw      $v0, -0x5D70($s5)

loc_30854:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+84↑j
                lbu     $v1, 0($s0)

loc_30858:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+184↓j
                addiu   $v0, $s2, -1
                beq     $v1, $v0, loc_308F0
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x136
                li      $a2, 0x160
                b       loc_3088C
                sw      $zero, 0x48+var_38($sp)
 # ---------------------------------------------------------------------------

loc_30878:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+40↑j
                                         # ssl_parse_clienthello_use_srtp_ext+5C↑j
                la      $t9, ERR_put_error

loc_3087C:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+6C↑j
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x136
                li      $a2, 0x161

loc_3088C:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+10C↑j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                li      $v0, 0x32  # '2'
                lw      $gp, 0x48+var_30($sp)
                li      $v1, 1
                sw      $v0, 0($s6)

loc_308A4:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+240↓j
                                         # ssl_parse_clienthello_use_srtp_ext:loc_309AC↓j
                lw      $ra, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_308D4:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+BC↑j
                la      $t9, sk_push

loc_308D8:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+D0↑j
                jalr    $t9 ; sk_push
                move    $a0, $s4
                bnez    $s1, loc_307F8
                lw      $gp, 0x48+var_30($sp)
                b       loc_30858
                lbu     $v1, 0($s0)
 # ---------------------------------------------------------------------------

loc_308F0:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+F8↑j
                la      $t9, SSL_get_srtp_profiles
                jalr    $t9 ; SSL_get_srtp_profiles
                move    $a0, $s7
                lw      $gp, 0x48+var_30($sp)
                move    $s3, $v0
                move    $s2, $zero

loc_30908:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+21C↓j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s3
                slt     $v0, $s2, $v0
                beqz    $v0, loc_30990
                lw      $gp, 0x48+var_30($sp)
                la      $t9, sk_value
                move    $a0, $s3
                jalr    $t9 ; sk_value
                move    $a1, $s2
                lw      $gp, 0x48+var_30($sp)
                move    $s1, $v0
                b       loc_30958
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_30940:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+214↓j
                jalr    $t9 ; sk_value
                nop
                lw      $v1, 4($v0)
                lw      $v0, 4($s1)
                beq     $v1, $v0, loc_30988
                lw      $gp, 0x48+var_30($sp)

loc_30958:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+1D4↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s4
                lw      $gp, 0x48+var_30($sp)
                slt     $v0, $s0, $v0
                move    $a1, $s0
                move    $a0, $s4
                addiu   $s0, 1
                bnez    $v0, loc_30940
                la      $t9, sk_value
                b       loc_30908
                addiu   $s2, 1
 # ---------------------------------------------------------------------------

loc_30988:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+1EC↑j
                sw      $s1, 0x168($s7)
                sw      $zero, 0($s6)

loc_30990:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext+1B4↑j
                beqz    $s4, loc_309AC
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                move    $a0, $s4
                lw      $gp, 0x48+var_30($sp)
                b       loc_308A4
                move    $v1, $zero
 # ---------------------------------------------------------------------------

loc_309AC:                               # CODE XREF: ssl_parse_clienthello_use_srtp_ext:loc_30990↑j
                b       loc_308A4
                move    $v1, $zero
 # End of function ssl_parse_clienthello_use_srtp_ext


 # =============== S U B R O U T I N E =======================================


sub_309B4:                               # CODE XREF: SSL_set_tlsext_use_srtp+1C↓j
                                         # SSL_CTX_set_tlsext_use_srtp+1C↓j
                                         # DATA XREF: ...

var_48          = -0x48
var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - sub_309B4)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_4($sp)
                sw      $fp, 0x48+var_8($sp)
                sw      $s7, 0x48+var_C($sp)
                sw      $s6, 0x48+var_10($sp)
                sw      $s5, 0x48+var_14($sp)
                sw      $s4, 0x48+var_18($sp)
                sw      $s3, 0x48+var_1C($sp)
                sw      $s2, 0x48+var_20($sp)
                sw      $s1, 0x48+var_24($sp)
                sw      $s0, 0x48+var_28($sp)
                sw      $gp, 0x48+var_30($sp)
                la      $t9, sk_new_null
                move    $s0, $a0
                jalr    $t9 ; sk_new_null
                move    $fp, $a1
                move    $s5, $v0
                beqz    $v0, loc_30B00
                lw      $gp, 0x48+var_30($sp)
                li      $s6, 0x60000
                move    $s3, $s0
                addiu   $s7, $s6, (off_5A290 - 0x60000)  # "SRTP_AES128_CM_SHA1_80"

loc_30A18:                               # CODE XREF: sub_309B4+F0↓j
                la      $t9, strchr
                move    $a0, $s3
                jalr    $t9 ; strchr
                li      $a1, 0x3A  # ':'
                move    $s4, $v0
                beqz    $v0, loc_30B18
                lw      $gp, 0x48+var_30($sp)
                subu    $s2, $v0, $s3

loc_30A38:                               # CODE XREF: sub_309B4+174↓j
                lw      $s0, -0x5D70($s6)
                beqz    $s0, loc_30AAC
                move    $s1, $s7
                b       loc_30A60
                la      $t9, strlen
 # ---------------------------------------------------------------------------

loc_30A4C:                               # CODE XREF: sub_309B4+B4↓j
                                         # sub_309B4+D0↓j
                addiu   $s1, 8
                lw      $s0, 0($s1)
                beqz    $s0, loc_30AB0
                la      $t9, ERR_put_error
                la      $t9, strlen

loc_30A60:                               # CODE XREF: sub_309B4+90↑j
                jalr    $t9 ; strlen
                move    $a0, $s0
                bne     $s2, $v0, loc_30A4C
                lw      $gp, 0x48+var_30($sp)
                la      $t9, strncmp
                move    $a0, $s0
                move    $a1, $s3
                jalr    $t9 ; strncmp
                move    $a2, $s2
                bnez    $v0, loc_30A4C
                lw      $gp, 0x48+var_30($sp)
                la      $t9, sk_push
                move    $a1, $s1
                jalr    $t9 ; sk_push
                move    $a0, $s5
                beqz    $s4, loc_30B30
                lw      $gp, 0x48+var_30($sp)
                b       loc_30A18
                addiu   $s3, $s4, 1
 # ---------------------------------------------------------------------------

loc_30AAC:                               # CODE XREF: sub_309B4+88↑j
                la      $t9, ERR_put_error

loc_30AB0:                               # CODE XREF: sub_309B4+A0↑j
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0x135
                li      $a2, 0x16C

loc_30AC0:                               # CODE XREF: sub_309B4+15C↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                li      $v0, 1

loc_30AD0:                               # CODE XREF: sub_309B4+180↓j
                lw      $ra, 0x48+var_4($sp)
                lw      $fp, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_30B00:                               # CODE XREF: sub_309B4+50↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x135
                li      $a2, 0x16A
                b       loc_30AC0
                sw      $zero, 0x48+var_38($sp)
 # ---------------------------------------------------------------------------

loc_30B18:                               # CODE XREF: sub_309B4+78↑j
                la      $t9, strlen
                jalr    $t9 ; strlen
                move    $a0, $s3
                lw      $gp, 0x48+var_30($sp)
                b       loc_30A38
                move    $s2, $v0
 # ---------------------------------------------------------------------------

loc_30B30:                               # CODE XREF: sub_309B4+E8↑j
                move    $v0, $zero
                b       loc_30AD0
                sw      $s5, 0x48+var_48($fp)
 # End of function sub_309B4


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_tlsext_use_srtp
SSL_set_tlsext_use_srtp:                 # DATA XREF: LOAD:000017A8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_set_tlsext_use_srtp)
                addu    $gp, $t9
                la      $t9, loc_30000
                addiu   $v0, $a0, 0x164
                addiu   $t9, (sub_309B4 - 0x30000)
                move    $a0, $a1
                jr      $t9 ; sub_309B4
                move    $a1, $v0
 # End of function SSL_set_tlsext_use_srtp


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_tlsext_use_srtp
SSL_CTX_set_tlsext_use_srtp:             # DATA XREF: LOAD:00001888↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_tlsext_use_srtp)
                addu    $gp, $t9
                la      $t9, loc_30000
                addiu   $v0, $a0, 0x1A8
                addiu   $t9, (sub_309B4 - 0x30000)
                move    $a0, $a1
                jr      $t9 ; sub_309B4
                move    $a1, $v0
 # End of function SSL_CTX_set_tlsext_use_srtp


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_rbio
SSL_get_rbio:                            # CODE XREF: ssl3_read_bytes:loc_1D444↑p
                                         # ssl3_read_bytes+DC4↑p ...
                jr      $ra
                lw      $v0, 0xC($a0)
 # End of function SSL_get_rbio


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_wbio
SSL_get_wbio:                            # CODE XREF: dtls1_check_timeout_num+58↑p
                                         # dtls1_do_write+104↑p ...
                jr      $ra
                lw      $v0, 0x10($a0)
 # End of function SSL_get_wbio


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_verify_mode
SSL_get_verify_mode:                     # CODE XREF: SSL_dup+104↓p
                                         # DATA XREF: LOAD:00002F58↑o ...
                jr      $ra
                lw      $v0, 0xC8($a0)
 # End of function SSL_get_verify_mode


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_verify_callback
SSL_get_verify_callback:                 # CODE XREF: SSL_dup+118↓p
                                         # DATA XREF: LOAD:00004688↑o ...
                jr      $ra
                lw      $v0, 0xCC($a0)
 # End of function SSL_get_verify_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_verify_mode
SSL_CTX_get_verify_mode:                 # DATA XREF: LOAD:00001DA8↑o
                jr      $ra
                lw      $v0, 0xC0($a0)
 # End of function SSL_CTX_get_verify_mode


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_verify_callback
SSL_CTX_get_verify_callback:             # DATA XREF: LOAD:00002208↑o
                jr      $ra
                lw      $v0, 0xE8($a0)
 # End of function SSL_CTX_get_verify_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_verify
SSL_set_verify:                          # CODE XREF: SSL_dup+130↓p
                                         # DATA XREF: LOAD:00002AE8↑o ...
                beqz    $a2, locret_30BC0
                sw      $a1, 0xC8($a0)
                sw      $a2, 0xCC($a0)

locret_30BC0:                            # CODE XREF: SSL_set_verify↑j
                jr      $ra
                nop
 # End of function SSL_set_verify


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_read_ahead
SSL_set_read_ahead:                      # CODE XREF: SSL_dup+E4↓p
                                         # DATA XREF: LOAD:000031C8↑o ...
                jr      $ra
                sw      $a1, 0x60($a0)
 # End of function SSL_set_read_ahead


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_read_ahead
SSL_get_read_ahead:                      # CODE XREF: SSL_dup+D0↓p
                                         # DATA XREF: LOAD:000034D8↑o ...
                jr      $ra
                lw      $v0, 0x60($a0)
 # End of function SSL_get_read_ahead


 # =============== S U B R O U T I N E =======================================


                .globl SSL_pending
SSL_pending:                             # CODE XREF: sub_41404+378↓p
                                         # DATA XREF: LOAD:00003678↑o ...
                lw      $v0, 8($a0)
                lw      $t9, 0x50($v0)
                jr      $t9
                nop
 # End of function SSL_pending


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_peer_cert_chain
SSL_get_peer_cert_chain:                 # DATA XREF: LOAD:000022C8↑o
                bnez    $a0, loc_30BF8
                nop

locret_30BF0:                            # CODE XREF: SSL_get_peer_cert_chain+14↓j
                                         # SSL_get_peer_cert_chain+20↓j
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_30BF8:                               # CODE XREF: SSL_get_peer_cert_chain↑j
                lw      $a0, 0xC0($a0)
                beqz    $a0, locret_30BF0
                nop
                lw      $v0, 0x90($a0)
                beqz    $v0, locret_30BF0
                nop
                jr      $ra
                lw      $v0, 0($v0)
 # End of function SSL_get_peer_cert_chain


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_default_timeout
SSL_get_default_timeout:                 # CODE XREF: ssl_get_new_session:loc_377B4↓p
                                         # DATA XREF: LOAD:00002408↑o ...
                lw      $v0, 8($a0)
                lw      $t9, 0x60($v0)
                jr      $t9
                nop
 # End of function SSL_get_default_timeout


 # =============== S U B R O U T I N E =======================================


                .globl SSL_renegotiate
SSL_renegotiate:                         # CODE XREF: sub_40FBC+1B8↓p
                                         # sub_40FBC+21C↓p ...
                lw      $v0, 0x178($a0)
                bnez    $v0, loc_30C3C
                move    $a1, $a0
                li      $v0, 1
                sw      $v0, 0x178($a0)

loc_30C3C:                               # CODE XREF: SSL_renegotiate+4↑j
                lw      $v0, 8($a1)
                li      $v1, 1
                lw      $t9, 0x28($v0)
                jr      $t9
                sw      $v1, 0x28($a1)
 # End of function SSL_renegotiate


 # =============== S U B R O U T I N E =======================================


                .globl SSL_renegotiate_abbreviated
SSL_renegotiate_abbreviated:             # DATA XREF: LOAD:00001D78↑o
                lw      $v0, 0x178($a0)
                bnez    $v0, loc_30C64
                move    $v1, $a0
                li      $v0, 1
                sw      $v0, 0x178($a0)

loc_30C64:                               # CODE XREF: SSL_renegotiate_abbreviated+4↑j
                lw      $v0, 8($v1)
                sw      $zero, 0x28($v1)
                lw      $t9, 0x28($v0)
                jr      $t9
                nop
 # End of function SSL_renegotiate_abbreviated


 # =============== S U B R O U T I N E =======================================


                .globl SSL_renegotiate_pending
SSL_renegotiate_pending:                 # DATA XREF: LOAD:00001718↑o
                lw      $v0, 0x178($a0)
                jr      $ra
                sltu    $v0, $zero, $v0
 # End of function SSL_renegotiate_pending


 # =============== S U B R O U T I N E =======================================


                .globl SSL_callback_ctrl
SSL_callback_ctrl:                       # CODE XREF: SSL_set_tmp_rsa_callback+14↓j
                                         # SSL_set_msg_callback+14↓j
                                         # DATA XREF: ...
                li      $v0, 0xF
                beq     $a1, $v0, loc_30CA0
                move    $a3, $a0
                lw      $v0, 8($a0)
                lw      $t9, 0x6C($v0)
                jr      $t9
                nop
 # ---------------------------------------------------------------------------

loc_30CA0:                               # CODE XREF: SSL_callback_ctrl+4↑j
                li      $v0, 1
                jr      $ra
                sw      $a2, 0x64($a3)
 # End of function SSL_callback_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_sessions
SSL_CTX_sessions:                        # DATA XREF: LOAD:00001D58↑o
                jr      $ra
                lw      $v0, 0x10($a0)
 # End of function SSL_CTX_sessions


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_callback_ctrl
SSL_CTX_callback_ctrl:                   # CODE XREF: SSL_CTX_set_tmp_rsa_callback+14↓j
                                         # SSL_CTX_set_msg_callback+14↓j
                                         # DATA XREF: ...
                li      $v0, 0xF
                beq     $a1, $v0, loc_30CD0
                move    $a3, $a0
                lw      $v0, 0($a0)
                lw      $t9, 0x70($v0)
                jr      $t9
                nop
 # ---------------------------------------------------------------------------

loc_30CD0:                               # CODE XREF: SSL_CTX_callback_ctrl+4↑j
                li      $v0, 1
                jr      $ra
                sw      $a2, 0xB8($a3)
 # End of function SSL_CTX_callback_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl ssl_cipher_id_cmp
ssl_cipher_id_cmp:                       # CODE XREF: sub_31384+10↓j
                                         # DATA XREF: LOAD:00002AF8↑o ...
                lw      $v1, 8($a0)
                lw      $v0, 8($a1)
                subu    $v1, $v0
                beqz    $v1, loc_30D04
                slti    $v1, 1
                li      $v0, 0xFFFFFFFF
                li      $a0, 1
                movn    $a0, $v0, $v1
                jr      $ra
                move    $v0, $a0
 # ---------------------------------------------------------------------------

loc_30D04:                               # CODE XREF: ssl_cipher_id_cmp+C↑j
                move    $a0, $zero
                jr      $ra
                move    $v0, $a0
 # End of function ssl_cipher_id_cmp


 # =============== S U B R O U T I N E =======================================


                .globl ssl_cipher_ptr_id_cmp
ssl_cipher_ptr_id_cmp:                   # DATA XREF: LOAD:00002FE8↑o
                                         # ssl2_connect+DF0↑o ...
                lw      $v1, 0($a0)
                lw      $a0, 0($a1)
                lw      $a1, 8($v1)
                lw      $v0, 8($a0)
                subu    $v1, $a1, $v0
                beqz    $v1, loc_30D40
                slti    $v1, 1
                li      $v0, 0xFFFFFFFF
                li      $a0, 1
                movn    $a0, $v0, $v1
                jr      $ra
                move    $v0, $a0
 # ---------------------------------------------------------------------------

loc_30D40:                               # CODE XREF: ssl_cipher_ptr_id_cmp+14↑j
                move    $a0, $zero
                jr      $ra
                move    $v0, $a0
 # End of function ssl_cipher_ptr_id_cmp


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_ciphers
SSL_get_ciphers:                         # CODE XREF: ssl2_accept+F48↑p
                                         # ssl2_connect+300↑p ...
                beqz    $a0, locret_30D68
                nop
                lw      $v0, 0x74($a0)
                beqz    $v0, loc_30D70
                nop

locret_30D60:                            # CODE XREF: SSL_get_ciphers+28↓j
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

locret_30D68:                            # CODE XREF: SSL_get_ciphers↑j
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_30D70:                               # CODE XREF: SSL_get_ciphers+C↑j
                lw      $a0, 0xDC($a0)
                beqz    $a0, locret_30D60
                nop
                jr      $ra
                lw      $v0, 4($a0)
 # End of function SSL_get_ciphers


 # =============== S U B R O U T I N E =======================================


                .globl ssl_get_ciphers_by_id
ssl_get_ciphers_by_id:                   # CODE XREF: ssl3_get_server_hello+3E4↑p
                                         # DATA XREF: LOAD:00004478↑o ...
                beqz    $a0, locret_30DA0
                nop
                lw      $v0, 0x78($a0)
                beqz    $v0, loc_30DA8
                nop

locret_30D98:                            # CODE XREF: ssl_get_ciphers_by_id+28↓j
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

locret_30DA0:                            # CODE XREF: ssl_get_ciphers_by_id↑j
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_30DA8:                               # CODE XREF: ssl_get_ciphers_by_id+C↑j
                lw      $a0, 0xDC($a0)
                beqz    $a0, locret_30D98
                nop
                jr      $ra
                lw      $v0, 8($a0)
 # End of function ssl_get_ciphers_by_id


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_servername
SSL_get_servername:                      # DATA XREF: LOAD:00001A58↑o
                bnez    $a1, locret_30DE4
                nop
                lw      $v1, 0xC0($a0)
                beqz    $v1, locret_30DF4
                nop
                lw      $v0, 0x118($a0)
                beqz    $v0, locret_30DEC
                nop
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

locret_30DE4:                            # CODE XREF: SSL_get_servername↑j
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

locret_30DEC:                            # CODE XREF: SSL_get_servername+18↑j
                jr      $ra
                lw      $v0, 0xC8($v1)
 # ---------------------------------------------------------------------------

locret_30DF4:                            # CODE XREF: SSL_get_servername+C↑j
                jr      $ra
                lw      $v0, 0x118($a0)
 # End of function SSL_get_servername


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_servername_type
SSL_get_servername_type:                 # DATA XREF: LOAD:00001C48↑o
                lw      $v1, 0xC0($a0)
                beqz    $v1, locret_30E28
                nop
                lw      $v0, 0x118($a0)
                beqz    $v0, loc_30E1C
                nop

locret_30E14:                            # CODE XREF: SSL_get_servername_type+24↓j
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_30E1C:                               # CODE XREF: SSL_get_servername_type+10↑j
                lw      $v0, 0xC8($v1)
                bnez    $v0, locret_30E14
                nop

locret_30E28:                            # CODE XREF: SSL_get_servername_type+4↑j
                jr      $ra
                li      $v0, 0xFFFFFFFF
 # End of function SSL_get_servername_type


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get0_next_proto_negotiated
SSL_get0_next_proto_negotiated:          # DATA XREF: LOAD:00001818↑o
                lw      $v0, 0x15C($a0)
                beqz    $v0, locret_30E48
                sw      $v0, 0($a1)
                lbu     $v0, 0x160($a0)
                jr      $ra
                sw      $v0, 0($a2)
 # ---------------------------------------------------------------------------

locret_30E48:                            # CODE XREF: SSL_get0_next_proto_negotiated+4↑j
                jr      $ra
                sw      $zero, 0($a2)
 # End of function SSL_get0_next_proto_negotiated


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_next_protos_advertised_cb
SSL_CTX_set_next_protos_advertised_cb:   # DATA XREF: LOAD:00001F68↑o
                sw      $a2, 0x19C($a0)
                jr      $ra
                sw      $a1, 0x198($a0)
 # End of function SSL_CTX_set_next_protos_advertised_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_next_proto_select_cb
SSL_CTX_set_next_proto_select_cb:        # DATA XREF: LOAD:00002108↑o
                sw      $a2, 0x1A4($a0)
                jr      $ra
                sw      $a1, 0x1A0($a0)
 # End of function SSL_CTX_set_next_proto_select_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_export_keying_material
SSL_export_keying_material:              # DATA XREF: LOAD:000018A8↑o
                lw      $v0, 0($a0)
                slti    $v0, 0x301
                beqz    $v0, loc_30E80
                li      $v0, 0xFFFFFFFF
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_30E80:                               # CODE XREF: SSL_export_keying_material+8↑j
                lw      $v0, 8($a0)
                lw      $v1, 0x64($v0)
                lw      $t9, 0x34($v1)
                jr      $t9
                nop
 # End of function SSL_export_keying_material


 # =============== S U B R O U T I N E =======================================


sub_30E94:                               # DATA XREF: SSL_CTX_new+15C↓o
                lbu     $v0, 0x49($a0)
                lbu     $v1, 0x4A($a0)
                lbu     $a1, 0x4B($a0)
                sll     $v1, 16
                lbu     $a2, 0x48($a0)
                sll     $v0, 8
                or      $v0, $v1
                or      $v0, $a2
                sll     $a1, 24
                jr      $ra
                or      $v0, $a1
 # End of function sub_30E94


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_default_passwd_cb
SSL_CTX_set_default_passwd_cb:           # DATA XREF: LOAD:00001EC8↑o
                jr      $ra
                sw      $a1, 0x6C($a0)
 # End of function SSL_CTX_set_default_passwd_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_default_passwd_cb_userdata
SSL_CTX_set_default_passwd_cb_userdata:  # DATA XREF: LOAD:00001B48↑o
                jr      $ra
                sw      $a1, 0x70($a0)
 # End of function SSL_CTX_set_default_passwd_cb_userdata


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_cert_verify_callback
SSL_CTX_set_cert_verify_callback:        # DATA XREF: LOAD:000018F8↑o
                sw      $a2, 0x68($a0)
                jr      $ra
                sw      $a1, 0x64($a0)
 # End of function SSL_CTX_set_cert_verify_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_verify
SSL_CTX_set_verify:                      # DATA XREF: LOAD:00001938↑o
                sw      $a2, 0xE8($a0)
                jr      $ra
                sw      $a1, 0xC0($a0)
 # End of function SSL_CTX_set_verify


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_ssl_method
SSL_get_ssl_method:                      # DATA XREF: LOAD:00001978↑o
                jr      $ra
                lw      $v0, 8($a0)
 # End of function SSL_get_ssl_method


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_ssl_method
SSL_set_ssl_method:                      # CODE XREF: SSL_set_session+58↓p
                                         # SSL_set_session+100↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                move    $s1, $a0
                lw      $a0, 8($a0)
                beq     $a0, $a1, loc_30FC8
                move    $s0, $a1
                lw      $v1, 0x20($s1)
                beqz    $v1, loc_30F30
                li      $s2, 0xFFFFFFFF
                lw      $v0, 0x14($a0)
                xor     $v0, $v1, $v0
                sltiu   $s2, $v0, 1

loc_30F30:                               # CODE XREF: SSL_set_ssl_method+2C↑j
                lw      $v1, 0($a0)
                lw      $v0, 0($s0)
                beq     $v1, $v0, loc_30F98
                li      $v0, 1
                lw      $t9, 0xC($a0)
                jalr    $t9
                move    $a0, $s1
                lw      $t9, 4($s0)
                sw      $s0, 8($s1)
                jalr    $t9
                move    $a0, $s1
                move    $v1, $v0
                li      $v0, 1
                beq     $s2, $v0, loc_30FA4
                lw      $gp, 0x28+var_18($sp)

loc_30F6C:                               # CODE XREF: SSL_set_ssl_method+AC↓j
                bnez    $s2, loc_30F80
                lw      $ra, 0x28+var_4($sp)
                lw      $v0, 0x10($s0)
                sw      $v0, 0x20($s1)
                lw      $ra, 0x28+var_4($sp)

loc_30F80:                               # CODE XREF: SSL_set_ssl_method:loc_30F6C↑j
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_30F98:                               # CODE XREF: SSL_set_ssl_method+48↑j
                li      $v1, 1
                bne     $s2, $v0, loc_30F6C
                sw      $s0, 8($s1)

loc_30FA4:                               # CODE XREF: SSL_set_ssl_method+74↑j
                lw      $v0, 0x14($s0)
                lw      $ra, 0x28+var_4($sp)
                sw      $v0, 0x20($s1)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_30FC8:                               # CODE XREF: SSL_set_ssl_method+20↑j
                li      $v1, 1
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_set_ssl_method


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_version
SSL_get_version:                         # DATA XREF: LOAD:00002148↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_get_version)
                addu    $gp, $t9
                lw      $a0, 0($a0)
                li      $v0, 0x303
                beq     $a0, $v0, locret_31054
                la      $v0, loc_40000
                li      $v0, 0x302
                beq     $a0, $v0, locret_3105C
                la      $v0, loc_40000
                li      $v0, 0x301
                beq     $a0, $v0, locret_31064
                la      $v0, loc_40000
                li      $v0, 0x300
                beq     $a0, $v0, locret_3104C
                la      $v0, loc_40000
                li      $v0, 2
                beq     $a0, $v0, loc_31040
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aUnknown - 0x40000)  # "unknown"
 # ---------------------------------------------------------------------------

loc_31040:                               # CODE XREF: SSL_get_version+44↑j
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2 - 0x40000)  # "SSLv2"
 # ---------------------------------------------------------------------------

locret_3104C:                            # CODE XREF: SSL_get_version+38↑j
                jr      $ra
                addiu   $v0, (aSslv3 - 0x40000)  # "SSLv3"
 # ---------------------------------------------------------------------------

locret_31054:                            # CODE XREF: SSL_get_version+14↑j
                jr      $ra
                addiu   $v0, (aTlsv12 - 0x40000)  # "TLSv1.2"
 # ---------------------------------------------------------------------------

locret_3105C:                            # CODE XREF: SSL_get_version+20↑j
                jr      $ra
                addiu   $v0, (aTlsv11 - 0x40000)  # "TLSv1.1"
 # ---------------------------------------------------------------------------

locret_31064:                            # CODE XREF: SSL_get_version+2C↑j
                jr      $ra
                addiu   $v0, (aTlsv1 - 0x40000)  # "TLSv1"
 # End of function SSL_get_version


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_certificate
SSL_get_certificate:                     # DATA XREF: LOAD:00001B18↑o
                lw      $v0, 0x98($a0)
                beqz    $v0, locret_31080
                nop
                lw      $v0, 0($v0)
                lw      $v0, 0($v0)

locret_31080:                            # CODE XREF: SSL_get_certificate+4↑j
                jr      $ra
                nop
 # End of function SSL_get_certificate


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_privatekey
SSL_get_privatekey:                      # DATA XREF: LOAD:00001E48↑o
                lw      $v0, 0x98($a0)
                beqz    $v0, locret_3109C
                nop
                lw      $v0, 0($v0)
                lw      $v0, 4($v0)

locret_3109C:                            # CODE XREF: SSL_get_privatekey+4↑j
                jr      $ra
                nop
 # End of function SSL_get_privatekey


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_current_cipher
SSL_get_current_cipher:                  # DATA XREF: LOAD:00001C58↑o
                lw      $v0, 0xC0($a0)
                beqz    $v0, locret_310B4
                nop
                lw      $v0, 0xAC($v0)

locret_310B4:                            # CODE XREF: SSL_get_current_cipher+4↑j
                jr      $ra
                nop
 # End of function SSL_get_current_cipher


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_current_compression
SSL_get_current_compression:             # DATA XREF: LOAD:000018E8↑o
                lw      $v0, 0x94($a0)
                beqz    $v0, locret_310CC
                nop
                lw      $v0, 0($v0)

locret_310CC:                            # CODE XREF: SSL_get_current_compression+4↑j
                jr      $ra
                nop
 # End of function SSL_get_current_compression


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_current_expansion
SSL_get_current_expansion:               # DATA XREF: LOAD:00001CC8↑o
                lw      $v0, 0x88($a0)
                beqz    $v0, locret_310E4
                nop
                lw      $v0, 0($v0)

locret_310E4:                            # CODE XREF: SSL_get_current_expansion+4↑j
                jr      $ra
                nop
 # End of function SSL_get_current_expansion


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_quiet_shutdown
SSL_CTX_set_quiet_shutdown:              # DATA XREF: LOAD:00001D28↑o
                jr      $ra
                sw      $a1, 0xF4($a0)
 # End of function SSL_CTX_set_quiet_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_quiet_shutdown
SSL_CTX_get_quiet_shutdown:              # DATA XREF: LOAD:00001A08↑o
                jr      $ra
                lw      $v0, 0xF4($a0)
 # End of function SSL_CTX_get_quiet_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_quiet_shutdown
SSL_set_quiet_shutdown:                  # DATA XREF: LOAD:00001FA8↑o
                jr      $ra
                sw      $a1, 0x2C($a0)
 # End of function SSL_set_quiet_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_quiet_shutdown
SSL_get_quiet_shutdown:                  # DATA XREF: LOAD:000021B8↑o
                jr      $ra
                lw      $v0, 0x2C($a0)
 # End of function SSL_get_quiet_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_shutdown
SSL_set_shutdown:                        # DATA XREF: LOAD:00001B98↑o
                jr      $ra
                sw      $a1, 0x30($a0)
 # End of function SSL_set_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_shutdown
SSL_get_shutdown:                        # DATA XREF: LOAD:000020F8↑o
                jr      $ra
                lw      $v0, 0x30($a0)
 # End of function SSL_get_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl SSL_version
SSL_version:                             # CODE XREF: ssl3_get_server_hello+9C↑p
                                         # ssl3_get_server_hello+B4↑p ...
                jr      $ra
                lw      $v0, 0($a0)
 # End of function SSL_version


 # =============== S U B R O U T I N E =======================================


                .globl SSL_ctrl
SSL_ctrl:                                # CODE XREF: ssl3_get_client_hello+190↑p
                                         # ssl3_get_client_hello+814↑p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_ctrl)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                addiu   $v1, $a1, -0x10  # switch 63 cases
                sltiu   $v0, $v1, 0x3F
                move    $s0, $a0
                bnez    $v0, loc_3117C

def_31194:                               # jumptable 00031194 default case
                move    $s1, $a2

loc_31158:                               # CODE XREF: SSL_ctrl+70↓j
                                         # DATA XREF: .rodata:jpt_31194↓o
                lw      $v0, 8($s0)      # jumptable 00031194 cases 18-31,34-39,42-49,53-75
                move    $a0, $s0
                lw      $t9, 0x40($v0)
                move    $a2, $s1
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $t9
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_3117C:                               # CODE XREF: SSL_ctrl+2C↑j
                sll     $v0, $v1, 2
                la      $v1, loc_40000
                addiu   $v1, (jpt_31194 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_3119C:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                lw      $v1, 0xFC($s0)   # jumptable 00031194 case 78
                nor     $v0, $zero, $a2
                and     $v0, $v1
                move    $a0, $v0
                sw      $v0, 0xFC($s0)

loc_311B0:                               # CODE XREF: SSL_ctrl+A8↓j
                                         # SSL_ctrl:loc_31204↓j ...
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_311C8:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                li      $a0, 1           # jumptable 00031194 case 16
                b       loc_311B0
                sw      $a3, 0x68($s0)
 # ---------------------------------------------------------------------------

loc_311D4:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                la      $t9, SSL_version  # jumptable 00031194 case 17
                jalr    $t9 ; SSL_version
                move    $a0, $s0
                li      $v1, 0xFEFF
                beq     $v0, $v1, loc_312A4
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_version
                jalr    $t9 ; SSL_version
                move    $a0, $s0
                li      $v1, 0x100
                beq     $v0, $v1, loc_312A4
                lw      $gp, 0x28+var_18($sp)

loc_31204:                               # CODE XREF: SSL_ctrl+140↓j
                                         # SSL_ctrl+158↓j
                b       loc_311B0
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_3120C:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                lw      $v0, 0xF8($s0)   # jumptable 00031194 case 32
                or      $v0, $a2, $v0
                move    $a0, $v0
                b       loc_311B0
                sw      $v0, 0xF8($s0)
 # ---------------------------------------------------------------------------

loc_31220:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                lw      $v0, 0xFC($s0)   # jumptable 00031194 case 33
                or      $v0, $a2, $v0
                move    $a0, $v0
                b       loc_311B0
                sw      $v0, 0xFC($s0)
 # ---------------------------------------------------------------------------

loc_31234:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                b       loc_311B0        # jumptable 00031194 case 40
                lw      $a0, 0x60($s0)
 # ---------------------------------------------------------------------------

loc_3123C:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                lw      $a0, 0x60($s0)   # jumptable 00031194 case 41
                b       loc_311B0
                sw      $a2, 0x60($s0)
 # ---------------------------------------------------------------------------

loc_31248:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                b       loc_311B0        # jumptable 00031194 case 50
                lw      $a0, 0x100($s0)
 # ---------------------------------------------------------------------------

loc_31250:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                lw      $a0, 0x100($s0)  # jumptable 00031194 case 51
                b       loc_311B0
                sw      $a2, 0x100($s0)
 # ---------------------------------------------------------------------------

loc_3125C:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                addiu   $v0, $a2, -0x200  # jumptable 00031194 case 52
                sltiu   $v0, 0x3E01
                beqz    $v0, loc_31204
                nop
                li      $a0, 1
                b       loc_311B0
                sw      $a2, 0x10C($s0)
 # ---------------------------------------------------------------------------

loc_31278:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                lw      $v0, 0x58($s0)   # jumptable 00031194 case 76
                beqz    $v0, loc_31204
                nop
                b       loc_311B0
                lw      $a0, 0x410($v0)
 # ---------------------------------------------------------------------------

loc_3128C:                               # CODE XREF: SSL_ctrl+70↑j
                                         # DATA XREF: .rodata:jpt_31194↓o
                lw      $v1, 0xF8($s0)   # jumptable 00031194 case 77
                nor     $v0, $zero, $a2
                and     $v0, $v1
                move    $a0, $v0
                b       loc_311B0
                sw      $v0, 0xF8($s0)
 # ---------------------------------------------------------------------------

loc_312A4:                               # CODE XREF: SSL_ctrl+C0↑j
                                         # SSL_ctrl+D8↑j
                lw      $v0, 0x5C($s0)
                move    $a0, $s1
                b       loc_311B0
                sw      $s1, 0x258($v0)
 # End of function SSL_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_SSL_CTX
SSL_get_SSL_CTX:                         # CODE XREF: SSL_dup+2C↓p
                                         # DATA XREF: LOAD:00002D98↑o ...
                jr      $ra
                lw      $v0, 0xDC($a0)
 # End of function SSL_get_SSL_CTX


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_info_callback
SSL_set_info_callback:                   # CODE XREF: SSL_dup+180↓p
                                         # sub_40D70+40↓p
                                         # DATA XREF: ...
                jr      $ra
                sw      $a1, 0xD0($a0)
 # End of function SSL_set_info_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_info_callback
SSL_get_info_callback:                   # CODE XREF: SSL_dup+16C↓p
                                         # sub_41404+4CC↓p
                                         # DATA XREF: ...
                jr      $ra
                lw      $v0, 0xD0($a0)
 # End of function SSL_get_info_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_state
SSL_state:                               # CODE XREF: ssl2_accept+B0↑p
                                         # ssl2_accept+C8↑p ...
                jr      $ra
                lw      $v0, 0x34($a0)
 # End of function SSL_state


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_state
SSL_set_state:                           # DATA XREF: LOAD:00002098↑o
                jr      $ra
                sw      $a1, 0x34($a0)
 # End of function SSL_set_state


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_verify_result
SSL_set_verify_result:                   # DATA XREF: LOAD:000019F8↑o
                jr      $ra
                sw      $a1, 0xE4($a0)
 # End of function SSL_set_verify_result


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_verify_result
SSL_get_verify_result:                   # DATA XREF: LOAD:00001BD8↑o
                jr      $ra
                lw      $v0, 0xE4($a0)
 # End of function SSL_get_verify_result


 # =============== S U B R O U T I N E =======================================


                .globl ssl_ok
ssl_ok:                                  # DATA XREF: LOAD:00004808↑o
                                         # .got:ssl_ok_ptr↓o
                jr      $ra
                li      $v0, 1
 # End of function ssl_ok


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_cert_store
SSL_CTX_get_cert_store:                  # DATA XREF: LOAD:00001FE8↑o
                jr      $ra
                lw      $v0, 0xC($a0)
 # End of function SSL_CTX_get_cert_store


 # =============== S U B R O U T I N E =======================================


                .globl SSL_want
SSL_want:                                # CODE XREF: SSL_get_error+C0↓p
                                         # SSL_get_error+174↓p ...
                jr      $ra
                lw      $v0, 0x18($a0)
 # End of function SSL_want


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_tmp_rsa_callback
SSL_CTX_set_tmp_rsa_callback:            # DATA XREF: LOAD:000021C8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_tmp_rsa_callback)
                addu    $gp, $t9
                la      $t9, SSL_CTX_callback_ctrl
                move    $a2, $a1
                jr      $t9 ; SSL_CTX_callback_ctrl
                li      $a1, 5
 # End of function SSL_CTX_set_tmp_rsa_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_tmp_rsa_callback
SSL_set_tmp_rsa_callback:                # DATA XREF: LOAD:00001878↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_set_tmp_rsa_callback)
                addu    $gp, $t9
                la      $t9, SSL_callback_ctrl
                move    $a2, $a1
                jr      $t9 ; SSL_callback_ctrl
                li      $a1, 5
 # End of function SSL_set_tmp_rsa_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_msg_callback
SSL_CTX_set_msg_callback:                # DATA XREF: LOAD:00002028↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_msg_callback)
                addu    $gp, $t9
                la      $t9, SSL_CTX_callback_ctrl
                move    $a2, $a1
                jr      $t9 ; SSL_CTX_callback_ctrl
                li      $a1, 0xF
 # End of function SSL_CTX_set_msg_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_msg_callback
SSL_set_msg_callback:                    # DATA XREF: LOAD:00001FD8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_set_msg_callback)
                addu    $gp, $t9
                la      $t9, SSL_callback_ctrl
                move    $a2, $a1
                jr      $t9 ; SSL_callback_ctrl
                li      $a1, 0xF
 # End of function SSL_set_msg_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_debug
SSL_set_debug:                           # DATA XREF: LOAD:000017F8↑o
                jr      $ra
                sw      $a1, 0xE0($a0)
 # End of function SSL_set_debug


 # =============== S U B R O U T I N E =======================================


                .globl SSL_cache_hit
SSL_cache_hit:                           # DATA XREF: LOAD:00001BF8↑o
                jr      $ra
                lw      $v0, 0x6C($a0)
 # End of function SSL_cache_hit


 # =============== S U B R O U T I N E =======================================


sub_31384:                               # DATA XREF: OBJ_bsearch_ssl_cipher_id+20↓o
                la      $gp, (off_5A360+0x7FF0 - sub_31384)
                addu    $gp, $t9
                la      $t9, ssl_cipher_id_cmp
                jr      $t9 ; ssl_cipher_id_cmp
                nop
 # End of function sub_31384


 # =============== S U B R O U T I N E =======================================


                .globl OBJ_bsearch_ssl_cipher_id
OBJ_bsearch_ssl_cipher_id:               # CODE XREF: ssl2_get_cipher_by_char+4C↑p
                                         # ssl3_get_cipher_by_char+40↑p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - OBJ_bsearch_ssl_cipher_id)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $v0, loc_30000
                la      $t9, OBJ_bsearch_
                addiu   $v0, (sub_31384 - 0x30000)
                sw      $v0, 0x28+var_18($sp)
                jalr    $t9 ; OBJ_bsearch_
                li      $a3, 0x30  # '0'
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function OBJ_bsearch_ssl_cipher_id


 # =============== S U B R O U T I N E =======================================


                .globl ssl_clear_hash_ctx
ssl_clear_hash_ctx:                      # CODE XREF: ssl_replace_hash+28↓p
                                         # SSL_set_connect_state+4C↓p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_clear_hash_ctx)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                move    $s0, $a0
                lw      $a0, 0($a0)
                beqz    $a0, loc_31414
                la      $t9, EVP_MD_CTX_destroy
                jalr    $t9 ; EVP_MD_CTX_destroy
                nop
                lw      $gp, 0x20+var_10($sp)

loc_31414:                               # CODE XREF: ssl_clear_hash_ctx+24↑j
                sw      $zero, 0($s0)
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function ssl_clear_hash_ctx


 # =============== S U B R O U T I N E =======================================


                .globl ssl_replace_hash
ssl_replace_hash:                        # CODE XREF: ssl2_enc_init+C0↑p
                                         # ssl2_enc_init+D4↑p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_replace_hash)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, ssl_clear_hash_ctx
                move    $s1, $a0
                jalr    $t9 ; ssl_clear_hash_ctx
                move    $s0, $a1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_MD_CTX_create
                jalr    $t9 ; EVP_MD_CTX_create
                nop
                lw      $gp, 0x28+var_18($sp)
                beqz    $s0, loc_31490
                sw      $v0, 0($s1)
                la      $t9, EVP_DigestInit_ex
                move    $a0, $v0
                move    $a1, $s0
                jalr    $t9 ; EVP_DigestInit_ex
                move    $a2, $zero
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0($s1)

loc_31490:                               # CODE XREF: ssl_replace_hash+44↑j
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl_replace_hash


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_cert_store
SSL_CTX_set_cert_store:                  # DATA XREF: LOAD:00001748↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_cert_store)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                move    $s0, $a0
                lw      $a0, 0xC($a0)
                beqz    $a0, loc_314E4
                move    $s1, $a1
                la      $t9, X509_STORE_free
                jalr    $t9 ; X509_STORE_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_314E4:                               # CODE XREF: SSL_CTX_set_cert_store+28↑j
                sw      $s1, 0xC($s0)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_CTX_set_cert_store


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_ex_data
SSL_CTX_get_ex_data:                     # DATA XREF: LOAD:000018B8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_get_ex_data)
                addu    $gp, $t9
                la      $t9, CRYPTO_get_ex_data
                jr      $t9 ; CRYPTO_get_ex_data
                addiu   $a0, 0x80
 # End of function SSL_CTX_get_ex_data


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_ex_data
SSL_get_ex_data:                         # DATA XREF: LOAD:00001F28↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_get_ex_data)
                addu    $gp, $t9
                la      $t9, CRYPTO_get_ex_data
                jr      $t9 ; CRYPTO_get_ex_data
                addiu   $a0, 0xE8
 # End of function SSL_get_ex_data


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_ex_data
SSL_CTX_set_ex_data:                     # DATA XREF: LOAD:00001A38↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_ex_data)
                addu    $gp, $t9
                la      $t9, CRYPTO_set_ex_data
                jr      $t9 ; CRYPTO_set_ex_data
                addiu   $a0, 0x80
 # End of function SSL_CTX_set_ex_data


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_ex_data
SSL_set_ex_data:                         # DATA XREF: LOAD:00001768↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_set_ex_data)
                addu    $gp, $t9
                la      $t9, CRYPTO_set_ex_data
                jr      $t9 ; CRYPTO_set_ex_data
                addiu   $a0, 0xE8
 # End of function SSL_set_ex_data


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_ex_new_index
SSL_CTX_get_ex_new_index:                # DATA XREF: LOAD:00001B78↑o

var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_8           = -8
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_get_ex_new_index)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x28+arg_10($sp)
                move    $v1, $a1
                move    $t0, $a2
                la      $t9, CRYPTO_get_ex_new_index
                sw      $a3, 0x28+var_18($sp)
                sw      $v0, 0x28+var_14($sp)
                move    $a1, $a0
                move    $a2, $v1
                move    $a3, $t0
                jalr    $t9 ; CRYPTO_get_ex_new_index
                li      $a0, 2
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_CTX_get_ex_new_index


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_ex_new_index
SSL_get_ex_new_index:                    # DATA XREF: LOAD:000020B8↑o

var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_8           = -8
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - SSL_get_ex_new_index)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x28+arg_10($sp)
                move    $v1, $a1
                move    $t0, $a2
                la      $t9, CRYPTO_get_ex_new_index
                sw      $a3, 0x28+var_18($sp)
                sw      $v0, 0x28+var_14($sp)
                move    $a1, $a0
                move    $a2, $v1
                move    $a3, $t0
                jalr    $t9 ; CRYPTO_get_ex_new_index
                li      $a0, 1
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_get_ex_new_index


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_load_verify_locations
SSL_CTX_load_verify_locations:           # DATA XREF: LOAD:00001CD8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_load_verify_locations)
                addu    $gp, $t9
                la      $t9, X509_STORE_load_locations
                jr      $t9 ; X509_STORE_load_locations
                lw      $a0, 0xC($a0)
 # End of function SSL_CTX_load_verify_locations


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_default_verify_paths
SSL_CTX_set_default_verify_paths:        # DATA XREF: LOAD:00002138↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_default_verify_paths)
                addu    $gp, $t9
                la      $t9, X509_STORE_set_default_paths
                jr      $t9 ; X509_STORE_set_default_paths
                lw      $a0, 0xC($a0)
 # End of function SSL_CTX_set_default_verify_paths


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_peer_certificate
SSL_get_peer_certificate:                # DATA XREF: LOAD:00001AB8↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_get_peer_certificate)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                bnez    $a0, loc_3166C
                move    $s0, $zero

loc_31658:                               # CODE XREF: SSL_get_peer_certificate+3C↓j
                                         # SSL_get_peer_certificate+48↓j
                move    $v0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_3166C:                               # CODE XREF: SSL_get_peer_certificate+1C↑j
                lw      $v0, 0xC0($a0)
                beqz    $v0, loc_31658
                nop
                lw      $s0, 0x94($v0)
                beqz    $s0, loc_31658
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x345
                sw      $v0, 0x28+var_18($sp)
                addiu   $a0, $s0, 0x10
                addiu   $a3, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 3
                move    $v0, $s0
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_get_peer_certificate


 # =============== S U B R O U T I N E =======================================


                .globl ssl_free_wbio_buffer
ssl_free_wbio_buffer:                    # CODE XREF: ssl2_accept+694↑p
                                         # ssl3_accept+268↑p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_free_wbio_buffer)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                move    $s0, $a0
                lw      $a0, 0x14($a0)
                beqz    $a0, loc_3170C
                lw      $ra, 0x20+var_4($sp)
                lw      $v0, 0x10($s0)
                beq     $a0, $v0, loc_31718
                la      $t9, BIO_pop

loc_316F4:                               # CODE XREF: ssl_free_wbio_buffer+6C↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                nop
                lw      $gp, 0x20+var_10($sp)
                sw      $zero, 0x14($s0)
                lw      $ra, 0x20+var_4($sp)

loc_3170C:                               # CODE XREF: ssl_free_wbio_buffer+24↑j
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_31718:                               # CODE XREF: ssl_free_wbio_buffer+30↑j
                jalr    $t9 ; BIO_pop
                nop
                lw      $gp, 0x20+var_10($sp)
                lw      $a0, 0x14($s0)
                b       loc_316F4
                sw      $v0, 0x10($s0)
 # End of function ssl_free_wbio_buffer


 # =============== S U B R O U T I N E =======================================


                .globl ssl_bad_method
ssl_bad_method:                          # DATA XREF: LOAD:00001D88↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_bad_method)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xA0
                li      $a2, 0x42  # 'B'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl_bad_method


 # =============== S U B R O U T I N E =======================================


                .globl ssl_undefined_const_function
ssl_undefined_const_function:            # DATA XREF: LOAD:00004798↑o
                                         # .got:ssl_undefined_const_function_ptr↓o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_undefined_const_function)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xF3
                li      $a2, 0x42  # 'B'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl_undefined_const_function


 # =============== S U B R O U T I N E =======================================


                .globl ssl_undefined_void_function
ssl_undefined_void_function:             # DATA XREF: LOAD:00004B68↑o
                                         # .got:ssl_undefined_void_function_ptr↓o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_undefined_void_function)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xF4
                li      $a2, 0x42  # 'B'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl_undefined_void_function


 # =============== S U B R O U T I N E =======================================


                .globl ssl_undefined_function
ssl_undefined_function:                  # CODE XREF: ssl23_write+68↑p
                                         # ssl23_peek+68↑p ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_undefined_function)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xC5
                li      $a2, 0x42  # 'B'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl_undefined_function


 # =============== S U B R O U T I N E =======================================


                .globl SSL_do_handshake
SSL_do_handshake:                        # CODE XREF: sub_41404+45C↓p
                                         # DATA XREF: LOAD:00002F18↑o ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_do_handshake)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x20($a0)
                beqz    $v0, loc_318E8
                move    $s0, $a0
                lw      $v0, 8($a0)
                lw      $t9, 0x2C($v0)
                jalr    $t9
                nop
                lw      $gp, 0x28+var_10($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s0
                andi    $v0, 0x3000
                bnez    $v0, loc_318D0
                lw      $gp, 0x28+var_10($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s0
                andi    $v0, 0x4000
                bnez    $v0, loc_318D0
                lw      $gp, 0x28+var_10($sp)
                li      $v0, 1

loc_318C0:                               # CODE XREF: SSL_do_handshake+B8↓j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_318D0:                               # CODE XREF: SSL_do_handshake+4C↑j
                                         # SSL_do_handshake+64↑j
                lw      $t9, 0x20($s0)
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $t9
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_318E8:                               # CODE XREF: SSL_do_handshake+20↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xB4
                li      $a2, 0x90
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                b       loc_318C0
                li      $v0, 0xFFFFFFFF
 # End of function SSL_do_handshake


 # =============== S U B R O U T I N E =======================================


                .globl ssl_get_sign_pkey
ssl_get_sign_pkey:                       # CODE XREF: ssl3_send_server_key_exchange+3B4↑p
                                         # dtls1_send_server_key_exchange+2F4↑p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_get_sign_pkey)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v1, 0x10($a1)
                andi    $v0, $v1, 2
                beqz    $v0, loc_3197C
                lw      $a3, 0x98($a0)
                lw      $v0, 0x3C($a3)
                beqz    $v0, loc_3197C
                li      $v0, 2

loc_31944:                               # CODE XREF: ssl_get_sign_pkey+AC↓j
                                         # ssl_get_sign_pkey+B8↓j
                beqz    $a2, loc_319A0
                sll     $a1, $v0, 4

loc_3194C:                               # CODE XREF: ssl_get_sign_pkey+84↓j
                sll     $a1, $v0, 4
                sll     $a0, $v0, 2
                subu    $v0, $a1, $a0
                addu    $v0, $a3
                lw      $v1, 0x28($v0)
                sw      $v1, 0($a2)

loc_31964:                               # CODE XREF: ssl_get_sign_pkey:loc_319A0↓j
                subu    $v0, $a1, $a0
                addu    $v0, $a3
                lw      $v0, 0x24($v0)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_3197C:                               # CODE XREF: ssl_get_sign_pkey+20↑j
                                         # ssl_get_sign_pkey+2C↑j
                andi    $v0, $v1, 1
                beqz    $v0, loc_319A8
                andi    $v0, $v1, 0x40
                lw      $v0, 0x30($a3)
                beqz    $v0, loc_319C4
                nop
                bnez    $a2, loc_3194C
                li      $v0, 1
                sll     $a1, $v0, 4

loc_319A0:                               # CODE XREF: ssl_get_sign_pkey:loc_31944↑j
                b       loc_31964
                sll     $a0, $v0, 2
 # ---------------------------------------------------------------------------

loc_319A8:                               # CODE XREF: ssl_get_sign_pkey+70↑j
                beqz    $v0, loc_319D4
                la      $t9, ERR_put_error
                lw      $v0, 0x60($a3)
                beqz    $v0, loc_319D4
                li      $v0, 5
                b       loc_31944
                nop
 # ---------------------------------------------------------------------------

loc_319C4:                               # CODE XREF: ssl_get_sign_pkey+7C↑j
                lw      $v0, 0x24($a3)
                bnez    $v0, loc_31944
                move    $v0, $zero
                la      $t9, ERR_put_error

loc_319D4:                               # CODE XREF: ssl_get_sign_pkey:loc_319A8↑j
                                         # ssl_get_sign_pkey+A4↑j
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xB7
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl_get_sign_pkey


 # =============== S U B R O U T I N E =======================================


                .globl SSL_shutdown
SSL_shutdown:                            # CODE XREF: BIO_ssl_shutdown+40↓j
                                         # sub_40DCC+38↓p ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_shutdown)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x20($a0)
                beqz    $v0, loc_31A70
                move    $s0, $a0
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                nop
                andi    $v0, 0x3000
                beqz    $v0, loc_31A54
                lw      $gp, 0x28+var_10($sp)
                li      $v0, 1

loc_31A44:                               # CODE XREF: SSL_shutdown+90↓j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_31A54:                               # CODE XREF: SSL_shutdown+38↑j
                lw      $v0, 8($s0)
                move    $a0, $s0
                lw      $t9, 0x24($v0)
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $t9
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_31A70:                               # CODE XREF: SSL_shutdown+20↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xE0
                li      $a2, 0x114
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                b       loc_31A44
                li      $v0, 0xFFFFFFFF
 # End of function SSL_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl SSL_write
SSL_write:                               # CODE XREF: ssl23_write+C8↑j
                                         # sub_411F0+60↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_write)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x20($a0)
                beqz    $v0, loc_31B10
                la      $t9, ERR_put_error
                lw      $v0, 0x30($a0)
                andi    $v0, 1
                bnez    $v0, loc_31ADC
                lw      $ra, 0x28+var_8($sp)
                lw      $v0, 8($a0)
                lw      $t9, 0x20($v0)
                jr      $t9
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_31ADC:                               # CODE XREF: SSL_write+2C↑j
                li      $v0, 1
                sw      $v0, 0x18($a0)
                li      $a1, 0xD0
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a2, 0xCF
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)

loc_31B00:                               # CODE XREF: SSL_write+90↓j
                lw      $ra, 0x28+var_8($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_31B10:                               # CODE XREF: SSL_write+1C↑j
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xD0
                li      $a2, 0x114
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_31B00
                lw      $gp, 0x28+var_10($sp)
 # End of function SSL_write


 # =============== S U B R O U T I N E =======================================


                .globl SSL_peek
SSL_peek:                                # CODE XREF: ssl23_peek+C8↑j
                                         # DATA XREF: LOAD:00003FA8↑o ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_peek)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x20($a0)
                beqz    $v0, loc_31B84
                la      $t9, ERR_put_error
                lw      $v0, 0x30($a0)
                andi    $v0, 2
                beqz    $v0, loc_31B74
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero

loc_31B68:                               # CODE XREF: SSL_peek+70↓j
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_31B74:                               # CODE XREF: SSL_peek+2C↑j
                lw      $v0, 8($a0)
                lw      $t9, 0x1C($v0)
                jr      $t9
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_31B84:                               # CODE XREF: SSL_peek+1C↑j
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0x10E
                li      $a2, 0x114
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                b       loc_31B68
                li      $v0, 0xFFFFFFFF
 # End of function SSL_peek


 # =============== S U B R O U T I N E =======================================


                .globl SSL_read
SSL_read:                                # CODE XREF: ssl23_read+C8↑j
                                         # sub_40FBC+60↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_read)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x20($a0)
                beqz    $v0, loc_31C08
                move    $v1, $a0
                lw      $v0, 0x30($a0)
                andi    $v0, 2
                beqz    $v0, loc_31BF4
                li      $v0, 1
                move    $a0, $zero
                sw      $v0, 0x18($v1)

loc_31BE4:                               # CODE XREF: SSL_read+80↓j
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_31BF4:                               # CODE XREF: SSL_read+2C↑j
                lw      $v0, 8($a0)
                lw      $ra, 0x28+var_8($sp)
                lw      $t9, 0x18($v0)
                jr      $t9
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_31C08:                               # CODE XREF: SSL_read+1C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                sw      $zero, 0x28+var_18($sp)
                li      $a1, 0xDF
                li      $a2, 0x114
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                b       loc_31BE4
                li      $a0, 0xFFFFFFFF
 # End of function SSL_read


 # =============== S U B R O U T I N E =======================================


                .globl ssl_init_wbio_buffer
ssl_init_wbio_buffer:                    # CODE XREF: ssl2_accept+830↑p
                                         # ssl3_accept+574↑p ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_init_wbio_buffer)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $s0, 0x14($a0)
                move    $s1, $a0
                beqz    $s0, loc_31D74
                move    $s2, $a1
                lw      $v0, 0x10($a0)
                beq     $s0, $v0, loc_31DA4
                la      $t9, BIO_pop

loc_31C70:                               # CODE XREF: ssl_init_wbio_buffer+16C↓j
                                         # ssl_init_wbio_buffer+180↓j
                la      $t9, BIO_ctrl
                move    $a0, $s0
                li      $a1, 1
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_int_ctrl
                move    $a0, $s0
                li      $a1, 0x75  # 'u'
                li      $a2, 1
                jalr    $t9 ; BIO_int_ctrl
                move    $a3, $zero
                beqz    $v0, loc_31D1C
                lw      $gp, 0x30+var_18($sp)
                beqz    $s2, loc_31CF0
                nop
                lw      $a1, 0x10($s1)
                beq     $a1, $s0, loc_31CFC
                la      $t9, BIO_push
                jalr    $t9 ; BIO_push
                move    $a0, $s0
                lw      $gp, 0x30+var_18($sp)
                li      $v1, 1
                sw      $v0, 0x10($s1)

loc_31CD4:                               # CODE XREF: ssl_init_wbio_buffer+13C↓j
                                         # ssl_init_wbio_buffer:loc_31DB8↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_31CF0:                               # CODE XREF: ssl_init_wbio_buffer+7C↑j
                lw      $a0, 0x10($s1)
                beq     $a0, $s0, loc_31D5C
                la      $t9, BIO_pop

loc_31CFC:                               # CODE XREF: ssl_init_wbio_buffer+88↑j
                li      $v1, 1
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_31D1C:                               # CODE XREF: ssl_init_wbio_buffer+74↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xB8
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                move    $v1, $zero
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_31D5C:                               # CODE XREF: ssl_init_wbio_buffer+C4↑j
                jalr    $t9 ; BIO_pop
                nop
                lw      $gp, 0x30+var_18($sp)
                li      $v1, 1
                b       loc_31CD4
                sw      $v0, 0x10($s1)
 # ---------------------------------------------------------------------------

loc_31D74:                               # CODE XREF: ssl_init_wbio_buffer+2C↑j
                la      $t9, BIO_f_buffer
                jalr    $t9 ; BIO_f_buffer
                nop
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s0, $v0
                beqz    $v0, loc_31DB8
                lw      $gp, 0x30+var_18($sp)
                b       loc_31C70
                sw      $v0, 0x14($s1)
 # ---------------------------------------------------------------------------

loc_31DA4:                               # CODE XREF: ssl_init_wbio_buffer+38↑j
                jalr    $t9 ; BIO_pop
                move    $a0, $s0
                lw      $gp, 0x30+var_18($sp)
                b       loc_31C70
                sw      $v0, 0x10($s1)
 # ---------------------------------------------------------------------------

loc_31DB8:                               # CODE XREF: ssl_init_wbio_buffer+164↑j
                b       loc_31CD4
                move    $v1, $zero
 # End of function ssl_init_wbio_buffer


 # =============== S U B R O U T I N E =======================================


                .globl ssl_clear_cipher_ctx
ssl_clear_cipher_ctx:                    # CODE XREF: SSL_set_connect_state+3C↓p
                                         # SSL_set_accept_state+40↓p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_clear_cipher_ctx)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                move    $s0, $a0
                lw      $a0, 0x80($a0)
                beqz    $a0, loc_31E0C
                la      $t9, EVP_CIPHER_CTX_cleanup
                jalr    $t9 ; EVP_CIPHER_CTX_cleanup
                nop
                lw      $gp, 0x20+var_10($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x80($s0)
                lw      $gp, 0x20+var_10($sp)
                sw      $zero, 0x80($s0)

loc_31E0C:                               # CODE XREF: ssl_clear_cipher_ctx+24↑j
                lw      $a0, 0x8C($s0)
                beqz    $a0, loc_31E38
                la      $t9, EVP_CIPHER_CTX_cleanup
                jalr    $t9 ; EVP_CIPHER_CTX_cleanup
                nop
                lw      $gp, 0x20+var_10($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x8C($s0)
                lw      $gp, 0x20+var_10($sp)
                sw      $zero, 0x8C($s0)

loc_31E38:                               # CODE XREF: ssl_clear_cipher_ctx+50↑j
                lw      $a0, 0x88($s0)
                beqz    $a0, loc_31E54
                la      $t9, COMP_CTX_free
                jalr    $t9 ; COMP_CTX_free
                nop
                lw      $gp, 0x20+var_10($sp)
                sw      $zero, 0x88($s0)

loc_31E54:                               # CODE XREF: ssl_clear_cipher_ctx+7C↑j
                lw      $a0, 0x94($s0)
                beqz    $a0, loc_31E70
                la      $t9, COMP_CTX_free
                jalr    $t9 ; COMP_CTX_free
                nop
                lw      $gp, 0x20+var_10($sp)
                sw      $zero, 0x94($s0)

loc_31E70:                               # CODE XREF: ssl_clear_cipher_ctx+98↑j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function ssl_clear_cipher_ctx


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_connect_state
SSL_set_connect_state:                   # CODE XREF: SSL_connect+48↓p
                                         # BIO_new_ssl:loc_40B84↓p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_set_connect_state)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v1, 8($a0)
                la      $t9, ssl_clear_cipher_ctx
                lw      $a1, 0x14($v1)
                li      $v0, 0x5000
                sw      $v0, 0x34($a0)
                sw      $a1, 0x20($a0)
                sw      $zero, 0x24($a0)
                sw      $zero, 0x30($a0)
                jalr    $t9 ; ssl_clear_cipher_ctx
                move    $s0, $a0
                lw      $gp, 0x20+var_10($sp)
                la      $t9, ssl_clear_hash_ctx
                jalr    $t9 ; ssl_clear_hash_ctx
                addiu   $a0, $s0, 0x84
                lw      $gp, 0x20+var_10($sp)
                la      $t9, ssl_clear_hash_ctx
                addiu   $a0, $s0, 0x90
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9 ; ssl_clear_hash_ctx
                addiu   $sp, 0x20
 # End of function SSL_set_connect_state


 # =============== S U B R O U T I N E =======================================


                .globl SSL_connect
SSL_connect:                             # CODE XREF: ssl23_connect+C54↑p
                                         # DATA XREF: LOAD:000046C8↑o ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_connect)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x20($a0)
                beqz    $v0, loc_31F34
                move    $s0, $a0
                lw      $v0, 8($s0)
                move    $a0, $s0
                lw      $t9, 0x14($v0)
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_31F34:                               # CODE XREF: SSL_connect+20↑j
                la      $t9, SSL_set_connect_state
                jalr    $t9 ; SSL_set_connect_state
                nop
                lw      $v0, 8($s0)
                lw      $gp, 0x20+var_10($sp)
                lw      $t9, 0x14($v0)
                move    $a0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9
                addiu   $sp, 0x20
 # End of function SSL_connect


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_accept_state
SSL_set_accept_state:                    # CODE XREF: SSL_accept+48↓p
                                         # BIO_new_ssl+74↓p ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_set_accept_state)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v1, 8($a0)
                la      $t9, ssl_clear_cipher_ctx
                lw      $a1, 0x10($v1)
                li      $v0, 1
                li      $v1, 0x6000
                sw      $v0, 0x24($a0)
                sw      $v1, 0x34($a0)
                sw      $a1, 0x20($a0)
                sw      $zero, 0x30($a0)
                jalr    $t9 ; ssl_clear_cipher_ctx
                move    $s0, $a0
                lw      $gp, 0x20+var_10($sp)
                la      $t9, ssl_clear_hash_ctx
                jalr    $t9 ; ssl_clear_hash_ctx
                addiu   $a0, $s0, 0x84
                lw      $gp, 0x20+var_10($sp)
                la      $t9, ssl_clear_hash_ctx
                addiu   $a0, $s0, 0x90
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9 ; ssl_clear_hash_ctx
                addiu   $sp, 0x20
 # End of function SSL_set_accept_state


 # =============== S U B R O U T I N E =======================================


                .globl SSL_accept
SSL_accept:                              # CODE XREF: ssl23_get_client_hello+90↑p
                                         # dtls1_listen+50↑p
                                         # DATA XREF: ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_accept)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x20($a0)
                beqz    $v0, loc_32018
                move    $s0, $a0
                lw      $v0, 8($s0)
                move    $a0, $s0
                lw      $t9, 0x10($v0)
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_32018:                               # CODE XREF: SSL_accept+20↑j
                la      $t9, SSL_set_accept_state
                jalr    $t9 ; SSL_set_accept_state
                nop
                lw      $v0, 8($s0)
                lw      $gp, 0x20+var_10($sp)
                lw      $t9, 0x10($v0)
                move    $a0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $t9
                addiu   $sp, 0x20
 # End of function SSL_accept


 # =============== S U B R O U T I N E =======================================


                .globl ssl_cipher_list_to_bytes
ssl_cipher_list_to_bytes:                # CODE XREF: ssl2_accept+109C↑p
                                         # ssl2_connect+320↑p ...

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_cipher_list_to_bytes)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                move    $s2, $a1
                move    $s4, $a0
                move    $s5, $a2
                beqz    $a1, loc_321BC
                move    $s3, $a3
                la      $t9, sk_num
                move    $a0, $s2
                move    $s1, $zero
                jalr    $t9 ; sk_num
                move    $s0, $a2
                lw      $gp, 0x38+var_28($sp)
                slt     $v0, $s1, $v0
                move    $a1, $s1
                move    $a0, $s2
                beqz    $v0, loc_32114
                la      $t9, sk_value

loc_320B4:                               # CODE XREF: ssl_cipher_list_to_bytes+C8↓j
                jalr    $t9 ; sk_value
                nop
                move    $a2, $v0
                move    $a0, $v0
                lw      $v0, 0x1C($v0)
                lw      $gp, 0x38+var_28($sp)
                andi    $v0, 4
                beqz    $v0, loc_32178
                move    $a1, $s0
                lw      $a3, 0x108($s4)
                li      $v0, 3
                sra     $v1, $a3, 8
                beq     $v1, $v0, loc_32170
                slti    $v0, $a3, 0x303

loc_320EC:                               # CODE XREF: ssl_cipher_list_to_bytes:loc_32170↓j
                addiu   $s1, 1

loc_320F0:                               # CODE XREF: ssl_cipher_list_to_bytes:loc_32194↓j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s2
                lw      $gp, 0x38+var_28($sp)
                slt     $v0, $s1, $v0
                move    $a1, $s1
                move    $a0, $s2
                bnez    $v0, loc_320B4
                la      $t9, sk_value

loc_32114:                               # CODE XREF: ssl_cipher_list_to_bytes+68↑j
                beq     $s0, $s5, loc_3214C
                subu    $v0, $s0, $s5
                lw      $v0, 0x178($s4)
                bnez    $v0, loc_3214C
                subu    $v0, $s0, $s5
                beqz    $s3, loc_321E4
                move    $a1, $s0
                li      $a0, 0x60000
                move    $t9, $s3
                jalr    $t9
                addiu   $a0, (dword_5A2E4 - 0x60000)
                lw      $gp, 0x38+var_28($sp)
                addu    $s0, $v0

loc_32148:                               # CODE XREF: ssl_cipher_list_to_bytes+1B8↓j
                subu    $v0, $s0, $s5

loc_3214C:                               # CODE XREF: ssl_cipher_list_to_bytes:loc_32114↑j
                                         # ssl_cipher_list_to_bytes+DC↑j
                lw      $ra, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_32170:                               # CODE XREF: ssl_cipher_list_to_bytes+A0↑j
                bnez    $v0, loc_320EC
                nop

loc_32178:                               # CODE XREF: ssl_cipher_list_to_bytes+8C↑j
                beqz    $s3, loc_3219C
                nop
                move    $t9, $s3
                jalr    $t9
                nop
                lw      $gp, 0x38+var_28($sp)
                addu    $s0, $v0

loc_32194:                               # CODE XREF: ssl_cipher_list_to_bytes+170↓j
                b       loc_320F0
                addiu   $s1, 1
 # ---------------------------------------------------------------------------

loc_3219C:                               # CODE XREF: ssl_cipher_list_to_bytes:loc_32178↑j
                lw      $v0, 8($s4)
                move    $a1, $s0
                lw      $t9, 0x4C($v0)
                jalr    $t9
                move    $a0, $a2
                lw      $gp, 0x38+var_28($sp)
                b       loc_32194
                addu    $s0, $v0
 # ---------------------------------------------------------------------------

loc_321BC:                               # CODE XREF: ssl_cipher_list_to_bytes+3C↑j
                lw      $ra, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_321E4:                               # CODE XREF: ssl_cipher_list_to_bytes+E4↑j
                lw      $v0, 8($s4)
                li      $a0, 0x60000
                lw      $t9, 0x4C($v0)
                jalr    $t9
                addiu   $a0, (dword_5A2E4 - 0x60000)
                lw      $gp, 0x38+var_28($sp)
                b       loc_32148
                addu    $s0, $v0
 # End of function ssl_cipher_list_to_bytes


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_cipher_list
SSL_get_cipher_list:                     # DATA XREF: LOAD:000019D8↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_get_cipher_list)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                bnez    $a0, loc_32244
                move    $s1, $a1

loc_3222C:                               # CODE XREF: SSL_get_cipher_list+50↓j
                                         # SSL_get_cipher_list+68↓j ...
                move    $v0, $zero

loc_32230:                               # CODE XREF: SSL_get_cipher_list+88↓j
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_32244:                               # CODE XREF: SSL_get_cipher_list+20↑j
                la      $t9, SSL_get_ciphers
                jalr    $t9 ; SSL_get_ciphers
                nop
                move    $s0, $v0
                beqz    $v0, loc_3222C
                lw      $gp, 0x28+var_18($sp)
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $v0
                slt     $v0, $s1, $v0
                beqz    $v0, loc_3222C
                lw      $gp, 0x28+var_18($sp)
                la      $t9, sk_value
                move    $a0, $s0
                jalr    $t9 ; sk_value
                move    $a1, $s1
                beqz    $v0, loc_3222C
                lw      $gp, 0x28+var_18($sp)
                b       loc_32230
                lw      $v0, 4($v0)
 # End of function SSL_get_cipher_list


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_error
SSL_get_error:                           # CODE XREF: sub_40FBC+78↓p
                                         # sub_411F0+78↓p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_get_error)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                move    $s0, $a1
                blez    $a1, loc_322E0
                move    $s1, $a0
                move    $v0, $zero

loc_322C8:                               # CODE XREF: SSL_get_error:loc_32304↓j
                                         # SSL_get_error+84↓j ...
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_322E0:                               # CODE XREF: SSL_get_error+28↑j
                la      $t9, ERR_peek_error
                jalr    $t9 ; ERR_peek_error
                nop
                beqz    $v0, loc_3230C
                lw      $gp, 0x28+var_18($sp)
                srl     $v1, $v0, 24
                li      $v0, 2
                bne     $v1, $v0, loc_32348
                nop

loc_32304:                               # CODE XREF: SSL_get_error+A4↓j
                                         # SSL_get_error+158↓j ...
                b       loc_322C8
                li      $v0, 5
 # ---------------------------------------------------------------------------

loc_3230C:                               # CODE XREF: SSL_get_error+58↑j
                bnez    $s0, loc_32350
                li      $v0, 2
                lw      $v1, 0($s1)
                beq     $v1, $v0, loc_322C8
                li      $v0, 6
                lw      $v0, 0x30($s1)
                andi    $v0, 2
                beqz    $v0, loc_322C8
                li      $v0, 5
                lw      $v0, 0x58($s1)
                lw      $v1, 0x184($v0)
                bnez    $v1, loc_32304
                nop
                b       loc_322C8
                li      $v0, 6
 # ---------------------------------------------------------------------------

loc_32348:                               # CODE XREF: SSL_get_error+68↑j
                b       loc_322C8
                li      $v0, 1
 # ---------------------------------------------------------------------------

loc_32350:                               # CODE XREF: SSL_get_error:loc_3230C↑j
                la      $t9, SSL_want
                jalr    $t9 ; SSL_want
                move    $a0, $s1
                move    $s2, $v0
                li      $v0, 3
                bne     $s2, $v0, loc_32404
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_get_rbio
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_test_flags
                move    $a0, $v0
                li      $a1, 1
                jalr    $t9 ; BIO_test_flags
                move    $s0, $v0
                bnez    $v0, loc_323FC
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_test_flags
                move    $a0, $s0
                jalr    $t9 ; BIO_test_flags
                li      $a1, 2
                beqz    $v0, loc_323B8
                lw      $gp, 0x28+var_18($sp)

loc_323B0:                               # CODE XREF: SSL_get_error+1D0↓j
                b       loc_322C8
                li      $v0, 3
 # ---------------------------------------------------------------------------

loc_323B8:                               # CODE XREF: SSL_get_error+114↑j
                la      $t9, BIO_test_flags
                move    $a0, $s0
                jalr    $t9 ; BIO_test_flags
                li      $a1, 4
                beqz    $v0, loc_32404
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_get_retry_reason
                jalr    $t9 ; BIO_get_retry_reason
                move    $a0, $s0
                move    $v1, $v0
                li      $v0, 2
                beq     $v1, $v0, loc_324C8
                lw      $gp, 0x28+var_18($sp)
                bne     $v1, $s2, loc_32304
                nop
                b       loc_322C8
                li      $v0, 8
 # ---------------------------------------------------------------------------

loc_323FC:                               # CODE XREF: SSL_get_error+FC↑j
                                         # SSL_get_error+1E8↓j
                b       loc_322C8
                li      $v0, 2
 # ---------------------------------------------------------------------------

loc_32404:                               # CODE XREF: SSL_get_error+D0↑j
                                         # SSL_get_error+134↑j
                la      $t9, SSL_want
                jalr    $t9 ; SSL_want
                move    $a0, $s1
                move    $s2, $v0
                li      $v0, 2
                beq     $s2, $v0, loc_32440
                lw      $gp, 0x28+var_18($sp)

loc_32420:                               # CODE XREF: SSL_get_error+200↓j
                la      $t9, SSL_want
                jalr    $t9 ; SSL_want
                move    $a0, $s1
                li      $v1, 4
                bne     $v0, $v1, loc_32304
                lw      $gp, 0x28+var_18($sp)
                b       loc_322C8
                li      $v0, 4
 # ---------------------------------------------------------------------------

loc_32440:                               # CODE XREF: SSL_get_error+184↑j
                la      $t9, SSL_get_wbio
                jalr    $t9 ; SSL_get_wbio
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_test_flags
                move    $a0, $v0
                li      $a1, 2
                jalr    $t9 ; BIO_test_flags
                move    $s0, $v0
                bnez    $v0, loc_323B0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_test_flags
                move    $a0, $s0
                jalr    $t9 ; BIO_test_flags
                li      $a1, 1
                bnez    $v0, loc_323FC
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_test_flags
                move    $a0, $s0
                jalr    $t9 ; BIO_test_flags
                li      $a1, 4
                beqz    $v0, loc_32420
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_get_retry_reason
                jalr    $t9 ; BIO_get_retry_reason
                move    $a0, $s0
                move    $v1, $v0
                beq     $v0, $s2, loc_324C8
                lw      $gp, 0x28+var_18($sp)
                li      $v0, 3
                bne     $v1, $v0, loc_32304
                nop
                b       loc_322C8
                li      $v0, 8
 # ---------------------------------------------------------------------------

loc_324C8:                               # CODE XREF: SSL_get_error+150↑j
                                         # SSL_get_error+218↑j
                b       loc_322C8
                li      $v0, 7
 # End of function SSL_get_error


 # =============== S U B R O U T I N E =======================================


                .globl ssl_update_cache
ssl_update_cache:                        # CODE XREF: ssl2_accept+6B0↑p
                                         # ssl2_connect+740↑p ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_update_cache)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $v1, 0xC0($a0)
                move    $s0, $a0
                lw      $v0, 0x44($v1)
                beqz    $v0, loc_325F0
                move    $s2, $a1
                lw      $a0, 0x158($a0)
                lw      $s1, 0x20($a0)
                and     $s3, $a1, $s1
                beqz    $s3, loc_32588
                andi    $v0, $s1, 0x80
                lw      $v0, 0x6C($s0)
                bnez    $v0, loc_32588
                andi    $v0, $s1, 0x80
                andi    $v0, $s1, 0x200
                beqz    $v0, loc_32620
                la      $t9, SSL_CTX_add_session

loc_32538:                               # CODE XREF: ssl_update_cache+160↓j
                lw      $v0, 0x28($a0)
                beqz    $v0, loc_32584
                la      $a3, loc_40000
                lw      $a0, 0xC0($s0)
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x95F
                addiu   $a0, 0x9C
                addiu   $a3, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a1, 1
                li      $a2, 0xE
                jalr    $t9 ; CRYPTO_add_lock
                sw      $v0, 0x38+var_28($sp)
                lw      $v1, 0x158($s0)
                lw      $a1, 0xC0($s0)
                lw      $t9, 0x28($v1)
                jalr    $t9
                move    $a0, $s0
                beqz    $v0, loc_32638
                lw      $gp, 0x38+var_20($sp)

loc_32584:                               # CODE XREF: ssl_update_cache+6C↑j
                                         # ssl_update_cache+158↓j ...
                andi    $v0, $s1, 0x80

loc_32588:                               # CODE XREF: ssl_update_cache+48↑j
                                         # ssl_update_cache+54↑j
                bnez    $v0, loc_325F4
                lw      $ra, 0x38+var_8($sp)
                bne     $s2, $s3, loc_325F4
                andi    $v0, $s2, 1
                beqz    $v0, loc_3260C
                nop
                lw      $s0, 0x158($s0)
                lbu     $v0, 0x3C($s0)
                xori    $v0, 0xFF
                sltiu   $v0, 1

loc_325B0:                               # CODE XREF: ssl_update_cache+148↓j
                beqz    $v0, loc_325F4
                lw      $ra, 0x38+var_8($sp)
                la      $t9, time
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_CTX_flush_sessions
                move    $a0, $s0
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $a1, $v0
                jr      $t9 ; SSL_CTX_flush_sessions
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_325F0:                               # CODE XREF: ssl_update_cache+34↑j
                lw      $ra, 0x38+var_8($sp)

loc_325F4:                               # CODE XREF: ssl_update_cache:loc_32588↑j
                                         # ssl_update_cache+C0↑j ...
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3260C:                               # CODE XREF: ssl_update_cache+C8↑j
                lw      $s0, 0x158($s0)
                lbu     $v0, 0x48($s0)
                xori    $v0, 0xFF
                b       loc_325B0
                sltiu   $v0, 1
 # ---------------------------------------------------------------------------

loc_32620:                               # CODE XREF: ssl_update_cache+60↑j
                jalr    $t9 ; SSL_CTX_add_session
                move    $a1, $v1
                beqz    $v0, loc_32584
                lw      $gp, 0x38+var_20($sp)
                b       loc_32538
                lw      $a0, 0x158($s0)
 # ---------------------------------------------------------------------------

loc_32638:                               # CODE XREF: ssl_update_cache+AC↑j
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                lw      $a0, 0xC0($s0)
                b       loc_32584
                lw      $gp, 0x38+var_20($sp)
 # End of function ssl_update_cache


 # =============== S U B R O U T I N E =======================================


                .globl ssl_set_cert_masks
ssl_set_cert_masks:                      # CODE XREF: ssl3_choose_cipher+F4↑p
                                         # ssl_get_server_send_cert+34↓p
                                         # DATA XREF: ...

var_48          = -0x48
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_set_cert_masks)
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_4($sp)
                sw      $fp, 0x58+var_8($sp)
                sw      $s7, 0x58+var_C($sp)
                sw      $s6, 0x58+var_10($sp)
                sw      $s5, 0x58+var_14($sp)
                sw      $s4, 0x58+var_18($sp)
                sw      $s3, 0x58+var_1C($sp)
                sw      $s2, 0x58+var_20($sp)
                sw      $s1, 0x58+var_24($sp)
                sw      $s0, 0x58+var_28($sp)
                sw      $gp, 0x58+var_48($sp)
                beqz    $a0, loc_3287C
                move    $s0, $a0
                lw      $v1, 0x20($a1)
                lw      $a0, 0x18($a0)
                andi    $v1, 8
                li      $s1, 0x200
                li      $v0, 0x400
                movz    $s1, $v0, $v1
                sw      $zero, 0x58+var_40($sp)
                beqz    $a0, loc_329B0
                sw      $zero, 0x58+var_3C($sp)
                lw      $v0, 0x1C($s0)
                beqz    $v0, loc_329C8
                la      $t9, RSA_size

loc_326C0:                               # CODE XREF: ssl_set_cert_masks+38C↓j
                li      $a3, 1

loc_326C4:                               # CODE XREF: ssl_set_cert_masks+368↓j
                sw      $a3, 0x58+var_38($sp)
                sw      $a3, 0x58+var_2C($sp)

loc_326CC:                               # CODE XREF: ssl_set_cert_masks+374↓j
                                         # ssl_set_cert_masks+39C↓j
                lw      $v0, 0x20($s0)
                beqz    $v0, loc_328AC
                nop
                lw      $a0, 0x24($s0)
                beqz    $a0, loc_328AC
                la      $t9, EVP_PKEY_size
                jalr    $t9 ; EVP_PKEY_size
                li      $s6, 1
                sll     $v0, 3
                slt     $v0, $s1, $v0
                sltiu   $s3, $v0, 1
                lw      $v0, 0x2C($s0)
                beqz    $v0, loc_328BC
                lw      $gp, 0x58+var_48($sp)

loc_32704:                               # CODE XREF: ssl_set_cert_masks+268↓j
                lw      $v0, 0x30($s0)
                sltu    $fp, $zero, $v0
                lw      $v0, 0x38($s0)
                beqz    $v0, loc_328C8
                nop

loc_32718:                               # CODE XREF: ssl_set_cert_masks+274↓j
                lw      $v0, 0x3C($s0)
                sltu    $v0, $zero, $v0
                sw      $v0, 0x58+var_34($sp)
                lw      $v0, 0x44($s0)
                beqz    $v0, loc_328D4
                nop

loc_32730:                               # CODE XREF: ssl_set_cert_masks+280↓j
                lw      $a0, 0x48($s0)
                beqz    $a0, loc_328D4
                la      $t9, EVP_PKEY_size
                jalr    $t9 ; EVP_PKEY_size
                nop
                sll     $v0, 3
                slt     $v0, $s1, $v0
                sltiu   $s7, $v0, 1
                li      $v0, 1
                sw      $v0, 0x58+var_30($sp)
                lw      $v0, 0x50($s0)
                beqz    $v0, loc_328E4
                lw      $gp, 0x58+var_48($sp)

loc_32764:                               # CODE XREF: ssl_set_cert_masks+290↓j
                lw      $a0, 0x54($s0)
                beqz    $a0, loc_328E4
                la      $t9, EVP_PKEY_size
                jalr    $t9 ; EVP_PKEY_size
                nop
                sll     $v0, 3
                lw      $s5, 0x5C($s0)
                slt     $v0, $s1, $v0
                lw      $gp, 0x58+var_48($sp)
                sltiu   $a0, $v0, 1
                beqz    $s5, loc_328F4
                li      $a1, 1

loc_32794:                               # CODE XREF: ssl_set_cert_masks+2A0↓j
                lw      $v0, 0x60($s0)
                sltu    $a2, $zero, $v0
                lw      $v0, 0x74($s0)
                beqz    $v0, loc_32904
                move    $s2, $zero

loc_327A8:                               # CODE XREF: ssl_set_cert_masks+2AC↓j
                lw      $v0, 0x78($s0)
                beqz    $v0, loc_32904
                move    $s2, $zero
                li      $s2, 0x200
                li      $s4, 0x200

loc_327BC:                               # CODE XREF: ssl_set_cert_masks:loc_32904↓j
                lw      $v0, 0x68($s0)
                beqz    $v0, loc_327DC
                nop
                lw      $v0, 0x6C($s0)
                beqz    $v0, loc_327DC
                nop
                ori     $s2, 0x200
                ori     $s4, 0x100

loc_327DC:                               # CODE XREF: ssl_set_cert_masks+174↑j
                                         # ssl_set_cert_masks+180↑j
                bnez    $s6, loc_32918
                lw      $a3, 0x58+var_2C($sp)
                beqz    $a3, loc_327F4
                nop
                bnez    $fp, loc_32918
                nop

loc_327F4:                               # CODE XREF: ssl_set_cert_masks+198↑j
                                         # ssl_set_cert_masks:loc_32918↓j
                bnez    $s3, loc_3280C
                lw      $v0, 0x58+var_38($sp)
                beqz    $v0, loc_32814
                lw      $a3, 0x58+var_30($sp)
                beqz    $fp, loc_329A8
                nop

loc_3280C:                               # CODE XREF: ssl_set_cert_masks:loc_327F4↑j
                li      $s3, 1

loc_32810:                               # CODE XREF: ssl_set_cert_masks:loc_329A8↓j
                lw      $a3, 0x58+var_30($sp)

loc_32814:                               # CODE XREF: ssl_set_cert_masks+1B0↑j
                ori     $v0, $s2, 2
                ori     $v1, $s3, 2
                movn    $s2, $v0, $a3
                movn    $s3, $v1, $s7
                ori     $v0, $s2, 4
                ori     $v1, $s3, 4
                movn    $s2, $v0, $a1
                bnez    $s6, loc_3290C
                movn    $s3, $v1, $a0
                bnez    $fp, loc_3290C
                nop

loc_32840:                               # CODE XREF: ssl_set_cert_masks+2C4↓j
                lw      $v0, 0x58+var_34($sp)
                beqz    $v0, loc_32854
                nop
                ori     $s4, 2
                ori     $s6, 2

loc_32854:                               # CODE XREF: ssl_set_cert_masks+1F8↑j
                bnez    $a2, loc_32920
                la      $t9, X509_check_purpose

loc_3285C:                               # CODE XREF: ssl_set_cert_masks+320↓j
                                         # ssl_set_cert_masks+32C↓j ...
                ori     $v0, $s4, 4
                ori     $a0, $s6, 4
                li      $v1, 1
                sw      $v1, 4($s0)
                sw      $s2, 8($s0)
                sw      $v0, 0xC($s0)
                sw      $s3, 0x10($s0)
                sw      $a0, 0x14($s0)

loc_3287C:                               # CODE XREF: ssl_set_cert_masks+3C↑j
                lw      $ra, 0x58+var_4($sp)
                lw      $fp, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_328AC:                               # CODE XREF: ssl_set_cert_masks+84↑j
                                         # ssl_set_cert_masks+90↑j
                lw      $v0, 0x2C($s0)
                move    $s3, $zero
                bnez    $v0, loc_32704
                move    $s6, $zero

loc_328BC:                               # CODE XREF: ssl_set_cert_masks+B0↑j
                lw      $v0, 0x38($s0)
                bnez    $v0, loc_32718
                move    $fp, $zero

loc_328C8:                               # CODE XREF: ssl_set_cert_masks+C4↑j
                lw      $v0, 0x44($s0)
                bnez    $v0, loc_32730
                sw      $zero, 0x58+var_34($sp)

loc_328D4:                               # CODE XREF: ssl_set_cert_masks+DC↑j
                                         # ssl_set_cert_masks+E8↑j
                lw      $v0, 0x50($s0)
                move    $s7, $zero
                bnez    $v0, loc_32764
                sw      $zero, 0x58+var_30($sp)

loc_328E4:                               # CODE XREF: ssl_set_cert_masks+110↑j
                                         # ssl_set_cert_masks+11C↑j
                lw      $s5, 0x5C($s0)
                move    $a0, $zero
                bnez    $s5, loc_32794
                move    $a1, $zero

loc_328F4:                               # CODE XREF: ssl_set_cert_masks+140↑j
                lw      $v0, 0x74($s0)
                bnez    $v0, loc_327A8
                move    $a2, $zero
                move    $s2, $zero

loc_32904:                               # CODE XREF: ssl_set_cert_masks+154↑j
                                         # ssl_set_cert_masks+160↑j
                b       loc_327BC
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_3290C:                               # CODE XREF: ssl_set_cert_masks+1E4↑j
                                         # ssl_set_cert_masks+1EC↑j
                ori     $s4, 1
                b       loc_32840
                li      $s6, 1
 # ---------------------------------------------------------------------------

loc_32918:                               # CODE XREF: ssl_set_cert_masks:loc_327DC↑j
                                         # ssl_set_cert_masks+1A0↑j
                b       loc_327F4
                ori     $s2, 1
 # ---------------------------------------------------------------------------

loc_32920:                               # CODE XREF: ssl_set_cert_masks:loc_32854↑j
                move    $a0, $s5
                li      $a1, 0xFFFFFFFF
                jalr    $t9 ; X509_check_purpose
                move    $a2, $zero
                lw      $gp, 0x58+var_48($sp)
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                move    $a0, $s5
                move    $s1, $v0
                beqz    $v0, loc_3295C
                lw      $gp, 0x58+var_48($sp)
                la      $t9, EVP_PKEY_bits
                jalr    $t9 ; EVP_PKEY_bits
                move    $a0, $v0
                lw      $gp, 0x58+var_48($sp)

loc_3295C:                               # CODE XREF: ssl_set_cert_masks+2F8↑j
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s1
                lw      $a0, 4($s5)
                beqz    $a0, loc_3285C
                lw      $gp, 0x58+var_48($sp)
                lw      $a0, 0($a0)
                beqz    $a0, loc_3285C
                la      $t9, OBJ_obj2nid
                jalr    $t9 ; OBJ_obj2nid
                nop
                lw      $gp, 0x58+var_48($sp)
                la      $t9, OBJ_find_sigid_algs
                move    $a0, $v0
                addiu   $a1, $sp, 0x58+var_3C
                jalr    $t9 ; OBJ_find_sigid_algs
                addiu   $a2, $sp, 0x58+var_40
                b       loc_3285C
                lw      $gp, 0x58+var_48($sp)
 # ---------------------------------------------------------------------------

loc_329A8:                               # CODE XREF: ssl_set_cert_masks+1B8↑j
                b       loc_32810
                sltu    $s3, $zero, $s6
 # ---------------------------------------------------------------------------

loc_329B0:                               # CODE XREF: ssl_set_cert_masks+60↑j
                lw      $v0, 0x1C($s0)
                bnez    $v0, loc_326C4
                li      $a3, 1
                sw      $zero, 0x58+var_38($sp)
                b       loc_326CC
                sw      $zero, 0x58+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_329C8:                               # CODE XREF: ssl_set_cert_masks+6C↑j
                jalr    $t9 ; RSA_size
                nop
                sll     $v0, 3
                slt     $v0, $s1, $v0
                beqz    $v0, loc_326C0
                lw      $gp, 0x58+var_48($sp)
                li      $v0, 1
                sw      $zero, 0x58+var_38($sp)
                b       loc_326CC
                sw      $v0, 0x58+var_2C($sp)
 # End of function ssl_set_cert_masks


 # =============== S U B R O U T I N E =======================================


                .globl ssl_get_server_send_cert
ssl_get_server_send_cert:                # CODE XREF: ssl3_send_server_certificate+4C↑p
                                         # dtls1_send_server_certificate+4C↑p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_get_server_send_cert)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $v0, 0x58($a0)
                lw      $s1, 0x98($a0)
                la      $t9, ssl_set_cert_masks
                lw      $a1, 0x344($v0)
                move    $s0, $a0
                jalr    $t9 ; ssl_set_cert_masks
                move    $a0, $s1
                lw      $v0, 0x58($s0)
                lw      $gp, 0x30+var_18($sp)
                lw      $v1, 0x344($v0)
                lw      $a0, 0xC($v1)
                andi    $v0, $a0, 0x60
                bnez    $v0, loc_32A54
                lw      $v1, 0x10($v1)
                andi    $v0, $v1, 0x40
                beqz    $v0, loc_32A80
                andi    $v0, $a0, 2

loc_32A54:                               # CODE XREF: ssl_get_server_send_cert+50↑j
                li      $v1, 5

loc_32A58:                               # CODE XREF: ssl_get_server_send_cert+98↓j
                                         # ssl_get_server_send_cert+B0↓j ...
                sll     $v0, $v1, 4
                sll     $v1, 2
                subu    $v0, $v1
                addu    $v0, $s1
                lw      $v0, 0x20($v0)

loc_32A6C:                               # CODE XREF: ssl_get_server_send_cert:loc_32ACC↓j
                                         # ssl_get_server_send_cert+120↓j
                lw      $ra, 0x30+var_8($sp)

loc_32A70:                               # CODE XREF: ssl_get_server_send_cert+CC↓j
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_32A80:                               # CODE XREF: ssl_get_server_send_cert+5C↑j
                beqz    $v0, loc_32A90
                andi    $v0, $a0, 4
                b       loc_32A58
                li      $v1, 3
 # ---------------------------------------------------------------------------

loc_32A90:                               # CODE XREF: ssl_get_server_send_cert:loc_32A80↑j
                bnez    $v0, loc_32AA8
                andi    $v0, $v1, 2
                beqz    $v0, loc_32AB0
                andi    $v0, $v1, 1
                b       loc_32A58
                li      $v1, 2
 # ---------------------------------------------------------------------------

loc_32AA8:                               # CODE XREF: ssl_get_server_send_cert:loc_32A90↑j
                b       loc_32A58
                li      $v1, 4
 # ---------------------------------------------------------------------------

loc_32AB0:                               # CODE XREF: ssl_get_server_send_cert+A8↑j
                beqz    $v0, loc_32ACC
                andi    $v0, $v1, 0x20
                lw      $v0, 0x20($s1)
                bnez    $v0, loc_32A70
                lw      $ra, 0x30+var_8($sp)
                b       loc_32A58
                li      $v1, 1
 # ---------------------------------------------------------------------------

loc_32ACC:                               # CODE XREF: ssl_get_server_send_cert:loc_32AB0↑j
                bnez    $v0, loc_32A6C
                move    $v0, $zero
                andi    $v0, $v1, 0x100
                beqz    $v0, loc_32AE8
                andi    $v0, $v1, 0x200
                b       loc_32A58
                li      $v1, 6
 # ---------------------------------------------------------------------------

loc_32AE8:                               # CODE XREF: ssl_get_server_send_cert+E8↑j
                bnez    $v0, loc_32A58
                li      $v1, 7
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xB6
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_32A6C
                move    $v0, $zero
 # End of function ssl_get_server_send_cert


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_verify_depth
SSL_CTX_set_verify_depth:                # DATA XREF: LOAD:00001DE8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_verify_depth)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_set_depth
                jr      $t9 ; X509_VERIFY_PARAM_set_depth
                lw      $a0, 0xF0($a0)
 # End of function SSL_CTX_set_verify_depth


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_verify_depth
SSL_set_verify_depth:                    # CODE XREF: SSL_dup+154↓p
                                         # DATA XREF: LOAD:00004628↑o ...
                la      $gp, (off_5A360+0x7FF0 - SSL_set_verify_depth)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_set_depth
                jr      $t9 ; X509_VERIFY_PARAM_set_depth
                lw      $a0, 0x70($a0)
 # End of function SSL_set_verify_depth


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_cipher_list
SSL_set_cipher_list:                     # DATA XREF: LOAD:00001EF8↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_set_cipher_list)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v1, 0xDC($a0)
                move    $v0, $a0
                la      $t9, ssl_create_cipher_list
                lw      $a0, 0($v1)
                move    $a3, $a1
                addiu   $a2, $v0, 0x78  # 'x'
                jalr    $t9 ; ssl_create_cipher_list
                addiu   $a1, $v0, 0x74  # 't'
                beqz    $v0, loc_32BA0
                lw      $gp, 0x28+var_10($sp)
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $v0
                beqz    $v0, loc_32BAC
                lw      $gp, 0x28+var_10($sp)
                li      $v0, 1

loc_32BA0:                               # CODE XREF: SSL_set_cipher_list+38↑j
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_32BAC:                               # CODE XREF: SSL_set_cipher_list+4C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0x10F
                li      $a2, 0xB9
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_set_cipher_list


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_cipher_list
SSL_CTX_set_cipher_list:                 # DATA XREF: LOAD:00001F58↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_cipher_list)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                move    $v0, $a0
                la      $t9, ssl_create_cipher_list
                lw      $a0, 0($a0)
                move    $a3, $a1
                addiu   $a2, $v0, 8
                jalr    $t9 ; ssl_create_cipher_list
                addiu   $a1, $v0, 4
                beqz    $v0, loc_32C30
                lw      $gp, 0x28+var_10($sp)
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $v0
                beqz    $v0, loc_32C3C
                lw      $gp, 0x28+var_10($sp)
                li      $v0, 1

loc_32C30:                               # CODE XREF: SSL_CTX_set_cipher_list+34↑j
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_32C3C:                               # CODE XREF: SSL_CTX_set_cipher_list+48↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0x10D
                li      $a2, 0xB9
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_CTX_set_cipher_list


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_ssl_version
SSL_CTX_set_ssl_version:                 # DATA XREF: LOAD:00001B68↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_ssl_version)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v1, 0($a1)
                li      $v0, 2
                move    $t0, $a0
                beq     $v1, $v0, loc_32D10
                sw      $a1, 0($a0)
                la      $v0, loc_40000
                addiu   $a3, $v0, (aAllAnullEnullS - 0x40000)  # "ALL:!aNULL:!eNULL:!SSLv2"

loc_32CA0:                               # CODE XREF: SSL_CTX_set_ssl_version+A8↓j
                la      $t9, ssl_create_cipher_list
                move    $a0, $a1
                addiu   $a2, $t0, 8
                jalr    $t9 ; ssl_create_cipher_list
                addiu   $a1, $t0, 4
                beqz    $v0, loc_32CE0
                lw      $gp, 0x28+var_10($sp)
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $v0
                blez    $v0, loc_32CE0
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_32CE0:                               # CODE XREF: SSL_CTX_set_ssl_version+48↑j
                                         # SSL_CTX_set_ssl_version+5C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xAA
                li      $a2, 0xE6
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_32D10:                               # CODE XREF: SSL_CTX_set_ssl_version+24↑j
                la      $v0, loc_40000
                b       loc_32CA0
                addiu   $a3, $v0, (aSslv2 - 0x40000)  # "SSLv2"
 # End of function SSL_CTX_set_ssl_version


 # =============== S U B R O U T I N E =======================================


sub_32D1C:                               # DATA XREF: SSL_CTX_new+164↓o
                la      $gp, (off_5A360+0x7FF0 - sub_32D1C)
                addu    $gp, $t9
                lw      $v1, 0($a0)
                lw      $v0, 0($a1)
                beq     $v1, $v0, loc_32D40
                nop

locret_32D38:                            # CODE XREF: sub_32D1C+2C↓j
                jr      $ra
                li      $v0, 1
 # ---------------------------------------------------------------------------

loc_32D40:                               # CODE XREF: sub_32D1C+14↑j
                lw      $a2, 0x44($a0)
                lw      $v0, 0x44($a1)
                bne     $a2, $v0, locret_32D38
                la      $t9, memcmp
                addiu   $a0, 0x48  # 'H'
                jr      $t9 ; memcmp
                addiu   $a1, 0x48  # 'H'
 # End of function sub_32D1C


 # =============== S U B R O U T I N E =======================================


                .globl SSL_select_next_proto
SSL_select_next_proto:                   # DATA XREF: LOAD:000022D8↑o

var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_0           =  0
arg_4           =  4
arg_8           =  8
arg_C           =  0xC
arg_10          =  0x10
arg_14          =  0x14

                la      $gp, (off_5A360+0x7FF0 - SSL_select_next_proto)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_4($sp)
                sw      $fp, 0x48+var_8($sp)
                sw      $s7, 0x48+var_C($sp)
                sw      $s6, 0x48+var_10($sp)
                sw      $s5, 0x48+var_14($sp)
                sw      $s4, 0x48+var_18($sp)
                sw      $s3, 0x48+var_1C($sp)
                sw      $s2, 0x48+var_20($sp)
                sw      $s1, 0x48+var_24($sp)
                sw      $s0, 0x48+var_28($sp)
                sw      $gp, 0x48+var_38($sp)
                sw      $a3, 0x48+arg_C($sp)
                sw      $a0, 0x48+arg_0($sp)
                sw      $a1, 0x48+arg_4($sp)
                sw      $a2, 0x48+arg_8($sp)
                lw      $s3, 0x48+arg_10($sp)
                beqz    $a3, loc_32E98
                lw      $s4, 0x48+arg_14($sp)
                addiu   $v0, $a2, 1
                move    $s7, $zero
                sw      $v0, 0x48+var_30($sp)
                addiu   $fp, $s3, 1

loc_32DC4:                               # CODE XREF: SSL_select_next_proto+134↓j
                beqz    $s4, loc_32E74
                lw      $a0, 0x48+arg_8($sp)
                lw      $v0, 0x48+var_30($sp)
                addu    $s6, $a0, $s7
                lbu     $s2, 0($s6)
                move    $s0, $zero
                b       loc_32DF8
                addu    $s5, $v0, $s7
 # ---------------------------------------------------------------------------

loc_32DE4:                               # CODE XREF: SSL_select_next_proto+C0↓j
                addiu   $v0, $s0, 1

loc_32DE8:                               # CODE XREF: SSL_select_next_proto+A4↓j
                addu    $s0, $v0, $s1
                sltu    $v1, $s0, $s4
                beqz    $v1, loc_32E84
                addiu   $v0, $s7, 1

loc_32DF8:                               # CODE XREF: SSL_select_next_proto+80↑j
                addu    $v0, $s3, $s0
                lbu     $s1, 0($v0)
                bne     $s1, $s2, loc_32DE8
                addiu   $v0, $s0, 1
                la      $t9, memcmp
                addu    $a1, $s0, $fp
                move    $a0, $s5
                jalr    $t9 ; memcmp
                move    $a2, $s2
                bnez    $v0, loc_32DE4
                lw      $gp, 0x48+var_38($sp)
                li      $a0, 1

loc_32E28:                               # CODE XREF: SSL_select_next_proto+140↓j
                lw      $v1, 0x48+arg_0($sp)
                addiu   $v0, $s6, 1
                sw      $v0, 0($v1)
                lbu     $v1, 0($s6)
                move    $v0, $a0
                lw      $a0, 0x48+arg_4($sp)
                sb      $v1, 0($a0)
                lw      $ra, 0x48+var_4($sp)
                lw      $fp, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_32E74:                               # CODE XREF: SSL_select_next_proto:loc_32DC4↑j
                lw      $v1, 0x48+arg_8($sp)
                addu    $v0, $v1, $s7
                lbu     $s2, 0($v0)
                addiu   $v0, $s7, 1

loc_32E84:                               # CODE XREF: SSL_select_next_proto+94↑j
                lw      $a0, 0x48+arg_C($sp)
                addu    $s7, $v0, $s2
                sltu    $v1, $s7, $a0
                bnez    $v1, loc_32DC4
                nop

loc_32E98:                               # CODE XREF: SSL_select_next_proto+50↑j
                move    $s6, $s3
                b       loc_32E28
                li      $a0, 2
 # End of function SSL_select_next_proto


 # =============== S U B R O U T I N E =======================================


                .globl ssl_bytes_to_cipher_list
ssl_bytes_to_cipher_list:                # CODE XREF: ssl2_accept+F30↑p
                                         # ssl2_connect+DD4↑p ...

var_38          = -0x38
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_bytes_to_cipher_list)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_8($sp)
                sw      $s7, 0x48+var_C($sp)
                sw      $s6, 0x48+var_10($sp)
                sw      $s5, 0x48+var_14($sp)
                sw      $s4, 0x48+var_18($sp)
                sw      $s3, 0x48+var_1C($sp)
                sw      $s2, 0x48+var_20($sp)
                sw      $s1, 0x48+var_24($sp)
                sw      $s0, 0x48+var_28($sp)
                sw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x58($a0)
                move    $s4, $a0
                move    $s2, $a1
                move    $s6, $a2
                beqz    $v0, loc_32EF8
                move    $s7, $a3
                sw      $zero, 0x410($v0)

loc_32EF8:                               # CODE XREF: ssl_bytes_to_cipher_list+48↑j
                lw      $v0, 8($s4)
                move    $a0, $zero
                lw      $t9, 0x4C($v0)
                jalr    $t9
                move    $a1, $zero
                div     $s6, $v0
                teq     $v0, $zero  #7
                move    $s0, $v0
                mfhi    $v0
                bnez    $v0, loc_33144
                lw      $gp, 0x48+var_30($sp)
                beqz    $s7, loc_33050
                la      $t9, sk_new_null
                lw      $s5, 0($s7)
                beqz    $s5, loc_3304C
                la      $t9, sk_zero
                jalr    $t9 ; sk_zero
                move    $a0, $s5
                lw      $gp, 0x48+var_30($sp)

loc_32F44:                               # CODE XREF: ssl_bytes_to_cipher_list+1B8↓j
                blez    $s6, loc_33010
                move    $s1, $s2
                move    $s3, $s0
                b       loc_32FBC
                addu    $s2, $s0
 # ---------------------------------------------------------------------------

loc_32F58:                               # CODE XREF: ssl_bytes_to_cipher_list+128↓j
                lbu     $v0, -2($s2)

loc_32F5C:                               # CODE XREF: ssl_bytes_to_cipher_list+13C↓j
                bnez    $v0, loc_32F70
                li      $v0, 0xFF
                lbu     $v1, -1($s2)
                beq     $v1, $v0, loc_32FE8
                nop

loc_32F70:                               # CODE XREF: ssl_bytes_to_cipher_list:loc_32F5C↑j
                                         # ssl_bytes_to_cipher_list+11C↓j ...
                lw      $v0, 8($s4)
                lw      $t9, 0x48($v0)
                jalr    $t9
                nop
                lw      $gp, 0x48+var_30($sp)
                move    $a0, $s5
                move    $a1, $v0
                beqz    $v0, loc_32FA4
                la      $t9, sk_push
                jalr    $t9 ; sk_push
                nop
                beqz    $v0, loc_33064
                lw      $gp, 0x48+var_30($sp)

loc_32FA4:                               # CODE XREF: ssl_bytes_to_cipher_list+E8↑j
                addu    $s3, $s0
                subu    $v0, $s3, $s0
                slt     $v0, $s6
                addu    $s2, $s0
                beqz    $v0, loc_33010
                addu    $s1, $s0

loc_32FBC:                               # CODE XREF: ssl_bytes_to_cipher_list+AC↑j
                                         # ssl_bytes_to_cipher_list+164↓j
                lw      $a1, 0x58($s4)
                beqz    $a1, loc_32F70
                move    $a0, $s1
                li      $v0, 3
                bne     $s0, $v0, loc_32F58
                nop
                lbu     $v0, 0($s1)
                bnez    $v0, loc_32F70
                nop
                b       loc_32F5C
                lbu     $v0, -2($s2)
 # ---------------------------------------------------------------------------

loc_32FE8:                               # CODE XREF: ssl_bytes_to_cipher_list+C4↑j
                lw      $v0, 0x178($s4)
                bnez    $v0, loc_33108
                li      $v0, 1
                addu    $s3, $s0
                sw      $v0, 0x410($a1)
                subu    $v0, $s3, $s0
                slt     $v0, $s6
                addu    $s2, $s0
                bnez    $v0, loc_32FBC
                addu    $s1, $s0

loc_33010:                               # CODE XREF: ssl_bytes_to_cipher_list:loc_32F44↑j
                                         # ssl_bytes_to_cipher_list+110↑j
                beqz    $s7, loc_33020
                move    $v0, $s5
                sw      $s5, 0($s7)

loc_3301C:                               # CODE XREF: ssl_bytes_to_cipher_list+2C0↓j
                move    $v0, $s5

loc_33020:                               # CODE XREF: ssl_bytes_to_cipher_list:loc_33010↑j
                lw      $ra, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_3304C:                               # CODE XREF: ssl_bytes_to_cipher_list+8C↑j
                la      $t9, sk_new_null

loc_33050:                               # CODE XREF: ssl_bytes_to_cipher_list+80↑j
                jalr    $t9 ; sk_new_null
                nop
                lw      $gp, 0x48+var_30($sp)
                b       loc_32F44
                move    $s5, $v0
 # ---------------------------------------------------------------------------

loc_33064:                               # CODE XREF: ssl_bytes_to_cipher_list+F8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0xA1
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)

loc_33084:                               # CODE XREF: ssl_bytes_to_cipher_list+298↓j
                beqz    $s7, loc_330C8
                la      $t9, sk_free
                lw      $v0, 0($s7)
                beqz    $v0, loc_330C8
                lw      $ra, 0x48+var_8($sp)
                move    $s5, $zero
                move    $v0, $s5
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_330C8:                               # CODE XREF: ssl_bytes_to_cipher_list:loc_33084↑j
                                         # ssl_bytes_to_cipher_list+1EC↑j
                move    $a0, $s5
                jalr    $t9 ; sk_free
                move    $s5, $zero
                move    $v0, $s5
                lw      $gp, 0x48+var_30($sp)
                lw      $ra, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_33108:                               # CODE XREF: ssl_bytes_to_cipher_list+148↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xA1
                li      $a2, 0x159
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                lw      $gp, 0x48+var_30($sp)
                la      $t9, ssl3_send_alert
                move    $a0, $s4
                li      $a1, 2
                jalr    $t9 ; ssl3_send_alert
                li      $a2, 0x28  # '('
                b       loc_33084
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_33144:                               # CODE XREF: ssl_bytes_to_cipher_list+78↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x48+var_38($sp)
                li      $a0, 0x14
                li      $a1, 0xA1
                li      $a2, 0x97
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x48+var_30($sp)
                b       loc_3301C
                move    $s5, $zero
 # End of function ssl_bytes_to_cipher_list


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_shared_ciphers
SSL_get_shared_ciphers:                  # DATA XREF: LOAD:00001EE8↑o

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_get_shared_ciphers)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s6, 0x38+var_8($sp)
                sw      $s5, 0x38+var_C($sp)
                sw      $s4, 0x38+var_10($sp)
                sw      $s3, 0x38+var_14($sp)
                sw      $s2, 0x38+var_18($sp)
                sw      $s1, 0x38+var_1C($sp)
                sw      $s0, 0x38+var_20($sp)
                sw      $gp, 0x38+var_28($sp)
                lw      $a0, 0xC0($a0)
                move    $s4, $a1
                bnez    $a0, loc_331E0
                move    $s3, $a2

loc_331B0:                               # CODE XREF: SSL_get_shared_ciphers+78↓j
                                         # SSL_get_shared_ciphers+80↓j
                move    $s4, $zero

loc_331B4:                               # CODE XREF: SSL_get_shared_ciphers+114↓j
                                         # SSL_get_shared_ciphers+128↓j
                move    $v0, $s4
                lw      $ra, 0x38+var_4($sp)
                lw      $s6, 0x38+var_8($sp)
                lw      $s5, 0x38+var_C($sp)
                lw      $s4, 0x38+var_10($sp)
                lw      $s3, 0x38+var_14($sp)
                lw      $s2, 0x38+var_18($sp)
                lw      $s1, 0x38+var_1C($sp)
                lw      $s0, 0x38+var_20($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_331E0:                               # CODE XREF: SSL_get_shared_ciphers+3C↑j
                lw      $s5, 0xB4($a0)
                beqz    $s5, loc_331B0
                slti    $v0, $a2, 2
                bnez    $v0, loc_331B0
                move    $s2, $a1
                b       loc_33258
                move    $s6, $zero
 # ---------------------------------------------------------------------------

loc_331FC:                               # CODE XREF: SSL_get_shared_ciphers+10C↓j
                jalr    $t9 ; sk_value
                nop
                lw      $gp, 0x38+var_28($sp)
                lw      $s0, 4($v0)
                la      $t9, strlen
                jalr    $t9 ; strlen
                move    $a0, $s0
                move    $s1, $v0
                lw      $gp, 0x38+var_28($sp)
                addiu   $v0, 1
                slt     $v1, $s3, $v0
                move    $a1, $s0
                move    $a0, $s2
                subu    $s3, $v0
                bnez    $v1, loc_33288
                la      $t9, strcpy
                jalr    $t9 ; strcpy
                nop
                addu    $v1, $s2, $s1
                li      $v0, 0x3A  # ':'
                lw      $gp, 0x38+var_28($sp)
                addiu   $s2, $v1, 1
                sb      $v0, 0($v1)

loc_33258:                               # CODE XREF: SSL_get_shared_ciphers+88↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s5
                lw      $gp, 0x38+var_28($sp)
                slt     $v0, $s6, $v0
                move    $a1, $s6
                move    $a0, $s5
                addiu   $s6, 1
                bnez    $v0, loc_331FC
                la      $t9, sk_value
                b       loc_331B4
                sb      $zero, -1($s2)
 # ---------------------------------------------------------------------------

loc_33288:                               # CODE XREF: SSL_get_shared_ciphers+C8↑j
                addiu   $v1, $s2, -1
                xor     $v0, $s2, $s4
                movn    $s2, $v1, $v0
                b       loc_331B4
                sb      $zero, 0($s2)
 # End of function SSL_get_shared_ciphers


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_ctrl
SSL_CTX_ctrl:                            # CODE XREF: SSL_CTX_add_session+14C↓p
                                         # SSL_CTX_add_session+198↓p ...
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_ctrl)
                addu    $gp, $t9
                addiu   $v1, $a1, -0x10  # switch 63 cases
                sltiu   $v0, $v1, 0x3F
                bnez    $v0, loc_332C8

def_332E0:                               # jumptable 000332E0 default case
                move    $t0, $a0

loc_332B8:                               # CODE XREF: SSL_CTX_ctrl+44↓j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                lw      $v0, 0($t0)      # jumptable 000332E0 cases 17-19,34-39,46-49,53-76
                lw      $t9, 0x44($v0)
                jr      $t9
                move    $a0, $t0
 # ---------------------------------------------------------------------------

loc_332C8:                               # CODE XREF: SSL_CTX_ctrl+14↑j
                sll     $v0, $v1, 2
                la      $v1, loc_40000
                addiu   $v1, (jpt_332E0 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_332E8:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                lw      $v1, 0xA8($t0)   # jumptable 000332E0 case 78
                nor     $v0, $zero, $a2
                and     $v0, $v1
                move    $v1, $v0
                sw      $v0, 0xA8($t0)

locret_332FC:                            # CODE XREF: SSL_CTX_ctrl+78↓j
                                         # SSL_CTX_ctrl+94↓j ...
                jr      $ra
                move    $v0, $v1
 # ---------------------------------------------------------------------------

loc_33304:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                lw      $v1, 0xA4($t0)   # jumptable 000332E0 case 77
                nor     $v0, $zero, $a2
                and     $v0, $v1
                move    $v1, $v0
                b       locret_332FC
                sw      $v0, 0xA4($t0)
 # ---------------------------------------------------------------------------

loc_3331C:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                addiu   $v0, $a2, -0x200  # jumptable 000332E0 case 52
                sltiu   $v0, 0x3E01
                beqz    $v0, loc_33420
                nop
                li      $v1, 1
                b       locret_332FC
                sw      $a2, 0xF8($t0)
 # ---------------------------------------------------------------------------

loc_33338:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                lw      $v1, 0xAC($t0)   # jumptable 000332E0 case 51
                b       locret_332FC
                sw      $a2, 0xAC($t0)
 # ---------------------------------------------------------------------------

loc_33344:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 50
                lw      $v1, 0xAC($t0)
 # ---------------------------------------------------------------------------

loc_3334C:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 45
                lw      $v1, 0x20($t0)
 # ---------------------------------------------------------------------------

loc_33354:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                lw      $v1, 0x20($t0)   # jumptable 000332E0 case 44
                b       locret_332FC
                sw      $a2, 0x20($t0)
 # ---------------------------------------------------------------------------

loc_33360:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 43
                lw      $v1, 0x14($t0)
 # ---------------------------------------------------------------------------

loc_33368:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                lw      $v1, 0x14($t0)   # jumptable 000332E0 case 42
                b       locret_332FC
                sw      $a2, 0x14($t0)
 # ---------------------------------------------------------------------------

loc_33374:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                lw      $v1, 0xB4($t0)   # jumptable 000332E0 case 41
                b       locret_332FC
                sw      $a2, 0xB4($t0)
 # ---------------------------------------------------------------------------

loc_33380:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 40
                lw      $v1, 0xB4($t0)
 # ---------------------------------------------------------------------------

loc_33388:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                lw      $v0, 0xA8($t0)   # jumptable 000332E0 case 33
                or      $v0, $a2, $v0
                move    $v1, $v0
                b       locret_332FC
                sw      $v0, 0xA8($t0)
 # ---------------------------------------------------------------------------

loc_3339C:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                lw      $v0, 0xA4($t0)   # jumptable 000332E0 case 32
                or      $v0, $a2, $v0
                move    $v1, $v0
                b       locret_332FC
                sw      $v0, 0xA4($t0)
 # ---------------------------------------------------------------------------

loc_333B0:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 31
                lw      $v1, 0x54($t0)
 # ---------------------------------------------------------------------------

loc_333B8:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 30
                lw      $v1, 0x50($t0)
 # ---------------------------------------------------------------------------

loc_333C0:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 29
                lw      $v1, 0x4C($t0)
 # ---------------------------------------------------------------------------

loc_333C8:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 28
                lw      $v1, 0x5C($t0)
 # ---------------------------------------------------------------------------

loc_333D0:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 27
                lw      $v1, 0x58($t0)
 # ---------------------------------------------------------------------------

loc_333D8:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 26
                lw      $v1, 0x44($t0)
 # ---------------------------------------------------------------------------

loc_333E0:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 25
                lw      $v1, 0x48($t0)
 # ---------------------------------------------------------------------------

loc_333E8:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 24
                lw      $v1, 0x40($t0)
 # ---------------------------------------------------------------------------

loc_333F0:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 23
                lw      $v1, 0x38($t0)
 # ---------------------------------------------------------------------------

loc_333F8:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 22
                lw      $v1, 0x3C($t0)
 # ---------------------------------------------------------------------------

loc_33400:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                b       locret_332FC     # jumptable 000332E0 case 21
                lw      $v1, 0x34($t0)
 # ---------------------------------------------------------------------------

loc_33408:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                la      $t9, lh_num_items  # jumptable 000332E0 case 20
                jr      $t9 ; lh_num_items
                lw      $a0, 0x10($t0)
 # ---------------------------------------------------------------------------

loc_33414:                               # CODE XREF: SSL_CTX_ctrl+44↑j
                                         # DATA XREF: .rodata:jpt_332E0↓o
                li      $v1, 1           # jumptable 000332E0 case 16
                b       locret_332FC
                sw      $a3, 0xBC($t0)
 # ---------------------------------------------------------------------------

loc_33420:                               # CODE XREF: SSL_CTX_ctrl+88↑j
                b       locret_332FC
                move    $v1, $zero
 # End of function SSL_CTX_ctrl


 # =============== S U B R O U T I N E =======================================


                .globl SSL_check_private_key
SSL_check_private_key:                   # DATA XREF: LOAD:000019C8↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_check_private_key)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                beqz    $a0, loc_334DC
                la      $t9, ERR_put_error
                lw      $a0, 0x98($a0)
                beqz    $a0, loc_33480
                nop
                lw      $a0, 0($a0)
                lw      $v0, 0($a0)
                beqz    $v0, loc_33480
                nop
                lw      $a1, 4($a0)
                beqz    $a1, loc_334AC
                la      $t9, X509_check_private_key
                lw      $ra, 0x28+var_8($sp)
                move    $a0, $v0
                jr      $t9 ; X509_check_private_key
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_33480:                               # CODE XREF: SSL_check_private_key+24↑j
                                         # SSL_check_private_key+34↑j
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xA3
                li      $a2, 0xB1
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)

loc_3349C:                               # CODE XREF: SSL_check_private_key+CC↓j
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_334AC:                               # CODE XREF: SSL_check_private_key+40↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xA3
                li      $a2, 0xBE
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_334DC:                               # CODE XREF: SSL_check_private_key+18↑j
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xA3
                li      $a2, 0x43  # 'C'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3349C
                lw      $gp, 0x28+var_10($sp)
 # End of function SSL_check_private_key


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_check_private_key
SSL_CTX_check_private_key:               # DATA XREF: LOAD:00001A28↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_check_private_key)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                beqz    $a0, loc_33554
                la      $t9, ERR_put_error
                lw      $a0, 0xB0($a0)
                beqz    $a0, loc_33554
                nop
                lw      $a0, 0($a0)
                lw      $v0, 0($a0)
                beqz    $v0, loc_33554
                nop
                lw      $a1, 4($a0)
                beqz    $a1, loc_33580
                la      $t9, X509_check_private_key
                lw      $ra, 0x28+var_8($sp)
                move    $a0, $v0
                jr      $t9 ; X509_check_private_key
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_33554:                               # CODE XREF: SSL_CTX_check_private_key+18↑j
                                         # SSL_CTX_check_private_key+24↑j ...
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xA8
                li      $a2, 0xB1
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_33580:                               # CODE XREF: SSL_CTX_check_private_key+40↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xA8
                li      $a2, 0xBE
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_CTX_check_private_key


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_verify_depth
SSL_CTX_get_verify_depth:                # DATA XREF: LOAD:000020C8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_get_verify_depth)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_get_depth
                jr      $t9 ; X509_VERIFY_PARAM_get_depth
                lw      $a0, 0xF0($a0)
 # End of function SSL_CTX_get_verify_depth


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_verify_depth
SSL_get_verify_depth:                    # CODE XREF: SSL_dup+140↓p
                                         # DATA XREF: LOAD:00003B18↑o ...
                la      $gp, (off_5A360+0x7FF0 - SSL_get_verify_depth)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_get_depth
                jr      $t9 ; X509_VERIFY_PARAM_get_depth
                lw      $a0, 0x70($a0)
 # End of function SSL_get_verify_depth


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_peer_finished
SSL_get_peer_finished:                   # DATA XREF: LOAD:00001788↑o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_get_peer_finished)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($a0)
                beqz    $v1, loc_33638
                move    $a0, $a1
                lw      $s0, 0x338($v1)
                la      $t9, memcpy
                sltu    $v0, $s0, $a2
                movn    $a2, $s0, $v0
                jalr    $t9 ; memcpy
                addiu   $a1, $v1, 0x2B8
                move    $v0, $s0
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_33638:                               # CODE XREF: SSL_get_peer_finished+20↑j
                move    $s0, $zero
                move    $v0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function SSL_get_peer_finished


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_finished
SSL_get_finished:                        # DATA XREF: LOAD:00002008↑o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_get_finished)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v1, 0x58($a0)
                beqz    $v1, loc_336A8
                move    $a0, $a1
                lw      $s0, 0x2B4($v1)
                la      $t9, memcpy
                sltu    $v0, $s0, $a2
                movn    $a2, $s0, $v0
                jalr    $t9 ; memcpy
                addiu   $a1, $v1, 0x234
                move    $v0, $s0
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_336A8:                               # CODE XREF: SSL_get_finished+20↑j
                move    $s0, $zero
                move    $v0, $s0
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # End of function SSL_get_finished


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_session_id_context
SSL_set_session_id_context:              # CODE XREF: SSL_copy_session_id+F0↓j
                                         # SSL_dup+404↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_set_session_id_context)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                sltiu   $v0, $a2, 0x21  # '!'
                bnez    $v0, loc_33714
                la      $t9, memcpy
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xDA
                li      $a2, 0x111
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_33714:                               # CODE XREF: SSL_set_session_id_context+1C↑j
                sw      $a2, 0x9C($a0)
                jalr    $t9 ; memcpy
                addiu   $a0, 0xA0
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_set_session_id_context


 # =============== S U B R O U T I N E =======================================


                .globl SSL_copy_session_id
SSL_copy_session_id:                     # CODE XREF: SSL_dup+78↓p
                                         # BIO_ssl_copy_session_id+78↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_copy_session_id)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_get_session
                move    $s0, $a0
                move    $a0, $a1
                jalr    $t9 ; SSL_get_session
                move    $s1, $a1
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_set_session
                move    $a1, $v0
                jalr    $t9 ; SSL_set_session
                move    $a0, $s0
                lw      $v1, 8($s0)
                lw      $v0, 8($s1)
                beq     $v1, $v0, loc_337B4
                lw      $gp, 0x30+var_18($sp)
                lw      $t9, 0xC($v1)
                jalr    $t9
                move    $a0, $s0
                lw      $v0, 8($s1)
                move    $a0, $s0
                lw      $t9, 4($v0)
                jalr    $t9
                sw      $v0, 8($s0)
                lw      $gp, 0x30+var_18($sp)

loc_337B4:                               # CODE XREF: SSL_copy_session_id+54↑j
                lw      $a0, 0x98($s1)
                beqz    $a0, loc_3382C
                lw      $s2, 0x98($s0)
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x36E
                sw      $v0, 0x30+var_20($sp)
                addiu   $a0, 0x80
                addiu   $a3, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0xD
                lw      $v1, 0x98($s1)
                lw      $gp, 0x30+var_18($sp)
                sw      $v1, 0x98($s0)

loc_337F0:                               # CODE XREF: SSL_copy_session_id:loc_3382C↓j
                beqz    $s2, loc_33804
                la      $t9, ssl_cert_free
                jalr    $t9 ; ssl_cert_free
                move    $a0, $s2
                lw      $gp, 0x30+var_18($sp)

loc_33804:                               # CODE XREF: SSL_copy_session_id:loc_337F0↑j
                lw      $a2, 0x9C($s1)
                la      $t9, SSL_set_session_id_context
                move    $a0, $s0
                addiu   $a1, $s1, 0xA0
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $t9 ; SSL_set_session_id_context
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3382C:                               # CODE XREF: SSL_copy_session_id+84↑j
                b       loc_337F0
                sw      $zero, 0x98($s0)
 # End of function SSL_copy_session_id


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_session_id_context
SSL_CTX_set_session_id_context:          # DATA XREF: LOAD:00001C28↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_session_id_context)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                sltiu   $v0, $a2, 0x21  # '!'
                bnez    $v0, loc_33888
                la      $t9, memcpy
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xDB
                li      $a2, 0x111
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_33888:                               # CODE XREF: SSL_CTX_set_session_id_context+1C↑j
                sw      $a2, 0xC4($a0)
                jalr    $t9 ; memcpy
                addiu   $a0, 0xC8
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_CTX_set_session_id_context


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_wfd
SSL_get_wfd:                             # DATA XREF: LOAD:00001B38↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_get_wfd)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_get_wbio
                li      $v0, 0xFFFFFFFF
                jalr    $t9 ; SSL_get_wbio
                sw      $v0, 0x28+var_10($sp)
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_find_type
                move    $a0, $v0
                jalr    $t9 ; BIO_find_type
                li      $a1, 0x100
                beqz    $v0, loc_33908
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0x69  # 'i'
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                addiu   $a3, $sp, 0x28+var_10
                lw      $gp, 0x28+var_18($sp)

loc_33908:                               # CODE XREF: SSL_get_wfd+3C↑j
                lw      $v0, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_get_wfd


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_rfd
SSL_get_rfd:                             # CODE XREF: SSL_get_fd+10↓j
                                         # DATA XREF: LOAD:00004078↑o ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_get_rfd)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_get_rbio
                li      $v0, 0xFFFFFFFF
                jalr    $t9 ; SSL_get_rbio
                sw      $v0, 0x28+var_10($sp)
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_find_type
                move    $a0, $v0
                jalr    $t9 ; BIO_find_type
                li      $a1, 0x100
                beqz    $v0, loc_33978
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_ctrl
                move    $a0, $v0
                li      $a1, 0x69  # 'i'
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                addiu   $a3, $sp, 0x28+var_10
                lw      $gp, 0x28+var_18($sp)

loc_33978:                               # CODE XREF: SSL_get_rfd+3C↑j
                lw      $v0, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_get_rfd


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_fd
SSL_get_fd:                              # DATA XREF: LOAD:00001758↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_get_fd)
                addu    $gp, $t9
                la      $t9, SSL_get_rfd
                jr      $t9 ; SSL_get_rfd
                nop
 # End of function SSL_get_fd


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_bio
SSL_set_bio:                             # CODE XREF: SSL_set_rfd+B0↓p
                                         # SSL_set_wfd+AC↓p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_set_bio)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                lw      $v1, 0x14($a0)
                move    $s0, $a0
                move    $s2, $a1
                beqz    $v1, loc_339E4
                move    $s1, $a2
                lw      $v0, 0x10($a0)
                beq     $v1, $v0, loc_33A50
                nop

loc_339E4:                               # CODE XREF: SSL_set_bio+30↑j
                                         # SSL_set_bio+B8↓j
                lw      $a0, 0xC($s0)
                beqz    $a0, loc_33A04
                nop
                beq     $a0, $s2, loc_33A04
                la      $t9, BIO_free_all
                jalr    $t9 ; BIO_free_all
                nop
                lw      $gp, 0x28+var_18($sp)

loc_33A04:                               # CODE XREF: SSL_set_bio+48↑j
                                         # SSL_set_bio+50↑j
                lw      $a0, 0x10($s0)
                beqz    $a0, loc_33A30
                nop
                beq     $a0, $s1, loc_33A30
                nop
                lw      $v0, 0xC($s0)
                beq     $a0, $v0, loc_33A30
                la      $t9, BIO_free_all
                jalr    $t9 ; BIO_free_all
                nop
                lw      $gp, 0x28+var_18($sp)

loc_33A30:                               # CODE XREF: SSL_set_bio+68↑j
                                         # SSL_set_bio+70↑j ...
                sw      $s1, 0x10($s0)
                sw      $s2, 0xC($s0)
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_33A50:                               # CODE XREF: SSL_set_bio+3C↑j
                lw      $v0, 0x24($v1)
                sw      $v0, 0x10($a0)
                b       loc_339E4
                sw      $zero, 0x24($v1)
 # End of function SSL_set_bio


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_rfd
SSL_set_rfd:                             # DATA XREF: LOAD:00001BB8↑o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_set_rfd)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s1, $a0
                lw      $a0, 0x10($a0)
                beqz    $a0, loc_33AAC
                move    $s2, $a1
                la      $t9, BIO_method_type
                jalr    $t9 ; BIO_method_type
                nop
                li      $v1, 0x505
                beq     $v0, $v1, loc_33B74
                lw      $gp, 0x30+var_18($sp)

loc_33AAC:                               # CODE XREF: SSL_set_rfd+2C↑j
                                         # SSL_set_rfd+12C↓j
                la      $t9, BIO_s_socket
                jalr    $t9 ; BIO_s_socket
                nop
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s0, $v0
                beqz    $v0, loc_33B38
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_int_ctrl
                move    $a0, $v0
                move    $a3, $s2
                li      $a1, 0x68  # 'h'
                jalr    $t9 ; BIO_int_ctrl
                move    $a2, $zero
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_get_wbio
                move    $a0, $s1

loc_33AF8:                               # CODE XREF: SSL_set_rfd+14C↓j
                jalr    $t9 ; SSL_get_wbio
                nop
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_set_bio
                move    $a0, $s1
                move    $a1, $s0
                jalr    $t9 ; SSL_set_bio
                move    $a2, $v0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_33B38:                               # CODE XREF: SSL_set_rfd+6C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xC2
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_33B74:                               # CODE XREF: SSL_set_rfd+44↑j
                la      $t9, BIO_ctrl
                lw      $a0, 0x10($s1)
                li      $a1, 0x69  # 'i'
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                bne     $v0, $s2, loc_33AAC
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_get_wbio
                jalr    $t9 ; SSL_get_wbio
                move    $a0, $s1
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_get_wbio
                move    $a0, $s1
                b       loc_33AF8
                move    $s0, $v0
 # End of function SSL_set_rfd


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_wfd
SSL_set_wfd:                             # DATA XREF: LOAD:00001BE8↑o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_set_wfd)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s1, $a0
                lw      $a0, 0xC($a0)
                beqz    $a0, loc_33C00
                move    $s2, $a1
                la      $t9, BIO_method_type
                jalr    $t9 ; BIO_method_type
                nop
                li      $v1, 0x505
                beq     $v0, $v1, loc_33CC4
                lw      $gp, 0x30+var_18($sp)

loc_33C00:                               # CODE XREF: SSL_set_wfd+2C↑j
                                         # SSL_set_wfd+128↓j
                la      $t9, BIO_s_socket
                jalr    $t9 ; BIO_s_socket
                nop
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s0, $v0
                beqz    $v0, loc_33C88
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_int_ctrl
                move    $a3, $s2
                li      $a1, 0x68  # 'h'
                move    $a2, $zero
                jalr    $t9 ; BIO_int_ctrl
                move    $a0, $v0
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_get_rbio
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s1
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_set_bio
                move    $a1, $v0
                move    $a0, $s1
                jalr    $t9 ; SSL_set_bio
                move    $a2, $s0
                lw      $gp, 0x30+var_18($sp)
                li      $v0, 1

loc_33C70:                               # CODE XREF: SSL_set_wfd+16C↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_33C88:                               # CODE XREF: SSL_set_wfd+6C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xC4
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_33CC4:                               # CODE XREF: SSL_set_wfd+44↑j
                la      $t9, BIO_ctrl
                lw      $a0, 0xC($s1)
                li      $a1, 0x69  # 'i'
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                move    $a3, $zero
                bne     $v0, $s2, loc_33C00
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_get_rbio
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s1
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_get_rbio
                move    $a0, $s1
                jalr    $t9 ; SSL_get_rbio
                move    $s0, $v0
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_set_bio
                move    $a2, $v0
                move    $a0, $s1
                jalr    $t9 ; SSL_set_bio
                move    $a1, $s0
                lw      $gp, 0x30+var_18($sp)
                b       loc_33C70
                li      $v0, 1
 # End of function SSL_set_wfd


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_fd
SSL_set_fd:                              # DATA XREF: LOAD:00001C18↑o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_set_fd)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_s_socket
                move    $s2, $a0
                jalr    $t9 ; BIO_s_socket
                move    $s1, $a1
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s0, $v0
                beqz    $v0, loc_33DC8
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_int_ctrl
                move    $a3, $s1
                move    $a0, $v0
                li      $a1, 0x68  # 'h'
                jalr    $t9 ; BIO_int_ctrl
                move    $a2, $zero
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_set_bio
                move    $a1, $s0
                move    $a0, $s2
                jalr    $t9 ; SSL_set_bio
                move    $a2, $s0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_33DC8:                               # CODE XREF: SSL_set_fd+48↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xC0
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # End of function SSL_set_fd


 # =============== S U B R O U T I N E =======================================


                .globl SSL_clear
SSL_clear:                               # CODE XREF: ssl2_accept+1EC↑p
                                         # ssl2_connect+27C↑p ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_clear)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 8($a0)
                beqz    $v0, loc_33FA4
                move    $s0, $a0
                la      $t9, ssl_clear_bad_session
                jalr    $t9 ; ssl_clear_bad_session
                nop
                bnez    $v0, loc_33F48
                lw      $gp, 0x28+var_10($sp)

loc_33E40:                               # CODE XREF: SSL_clear+154↓j
                lw      $v0, 0x178($s0)
                sw      $zero, 0xD4($s0)
                sw      $zero, 0x6C($s0)
                bnez    $v0, loc_33F14
                sw      $zero, 0x30($s0)
                lw      $a0, 0x24($s0)
                li      $v1, 0x5000
                li      $v0, 0x6000
                movz    $v0, $v1, $a0
                lw      $a1, 8($s0)
                sw      $v0, 0x34($s0)
                sw      $zero, 4($s0)
                lw      $a0, 0($a1)
                lw      $a1, 0x3C($s0)
                li      $v0, 1
                li      $v1, 0xF0
                sw      $a0, 0x108($s0)
                sw      $v0, 0x18($s0)
                sw      $v1, 0x38($s0)
                beqz    $a1, loc_33EA8
                sw      $a0, 0($s0)
                la      $t9, BUF_MEM_free
                jalr    $t9 ; BUF_MEM_free
                move    $a0, $a1
                lw      $gp, 0x28+var_10($sp)
                sw      $zero, 0x3C($s0)

loc_33EA8:                               # CODE XREF: SSL_clear+88↑j
                la      $t9, ssl_clear_cipher_ctx
                jalr    $t9 ; ssl_clear_cipher_ctx
                move    $a0, $s0
                lw      $gp, 0x28+var_10($sp)
                la      $t9, ssl_clear_hash_ctx
                jalr    $t9 ; ssl_clear_hash_ctx
                addiu   $a0, $s0, 0x84
                lw      $gp, 0x28+var_10($sp)
                la      $t9, ssl_clear_hash_ctx
                jalr    $t9 ; ssl_clear_hash_ctx
                addiu   $a0, $s0, 0x90
                lw      $v0, 0x1C($s0)
                bnez    $v0, loc_33EEC
                sw      $zero, 0x104($s0)
                lw      $v0, 0xC0($s0)
                beqz    $v0, loc_33F60
                nop

loc_33EEC:                               # CODE XREF: SSL_clear+D4↑j
                lw      $a1, 8($s0)

loc_33EF0:                               # CODE XREF: SSL_clear+168↓j
                lw      $t9, 8($a1)
                jalr    $t9
                move    $a0, $s0
                lw      $gp, 0x28+var_10($sp)
                li      $v0, 1

loc_33F04:                               # CODE XREF: SSL_clear+198↓j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_33F14:                               # CODE XREF: SSL_clear+48↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xA4
                li      $a2, 0x44  # 'D'

loc_33F28:                               # CODE XREF: SSL_clear+1B0↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_33F48:                               # CODE XREF: SSL_clear+34↑j
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                lw      $a0, 0xC0($s0)
                lw      $gp, 0x28+var_10($sp)
                b       loc_33E40
                sw      $zero, 0xC0($s0)
 # ---------------------------------------------------------------------------

loc_33F60:                               # CODE XREF: SSL_clear+E0↑j
                lw      $v1, 0xDC($s0)
                lw      $a1, 8($s0)
                lw      $v0, 0($v1)
                beq     $a1, $v0, loc_33EF0
                nop
                lw      $t9, 0xC($a1)
                jalr    $t9
                move    $a0, $s0
                lw      $v0, 0xDC($s0)
                move    $a0, $s0
                lw      $a1, 0($v0)
                lw      $t9, 4($a1)
                jalr    $t9
                sw      $a1, 8($s0)
                lw      $gp, 0x28+var_10($sp)
                b       loc_33F04
                sltu    $v0, $zero, $v0
 # ---------------------------------------------------------------------------

loc_33FA4:                               # CODE XREF: SSL_clear+20↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xA4
                li      $a2, 0xBC
                b       loc_33F28
                sw      $zero, 0x28+var_18($sp)
 # End of function SSL_clear


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set1_param
SSL_set1_param:                          # DATA XREF: LOAD:000018C8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_set1_param)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_set1
                jr      $t9 ; X509_VERIFY_PARAM_set1
                lw      $a0, 0x70($a0)
 # End of function SSL_set1_param


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set1_param
SSL_CTX_set1_param:                      # DATA XREF: LOAD:00001728↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set1_param)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_set1
                jr      $t9 ; X509_VERIFY_PARAM_set1
                lw      $a0, 0xF0($a0)
 # End of function SSL_CTX_set1_param


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_trust
SSL_set_trust:                           # DATA XREF: LOAD:00001968↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_set_trust)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_set_trust
                jr      $t9 ; X509_VERIFY_PARAM_set_trust
                lw      $a0, 0x70($a0)
 # End of function SSL_set_trust


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_trust
SSL_CTX_set_trust:                       # DATA XREF: LOAD:00002218↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_trust)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_set_trust
                jr      $t9 ; X509_VERIFY_PARAM_set_trust
                lw      $a0, 0xF0($a0)
 # End of function SSL_CTX_set_trust


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_purpose
SSL_set_purpose:                         # DATA XREF: LOAD:00001AD8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_set_purpose)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_set_purpose
                jr      $t9 ; X509_VERIFY_PARAM_set_purpose
                lw      $a0, 0x70($a0)
 # End of function SSL_set_purpose


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_purpose
SSL_CTX_set_purpose:                     # DATA XREF: LOAD:00001D68↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_purpose)
                addu    $gp, $t9
                la      $t9, X509_VERIFY_PARAM_set_purpose
                jr      $t9 ; X509_VERIFY_PARAM_set_purpose
                lw      $a0, 0xF0($a0)
 # End of function SSL_CTX_set_purpose


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_generate_session_id
SSL_set_generate_session_id:             # DATA XREF: LOAD:00002048↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_set_generate_session_id)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $s0, loc_40000
                la      $t9, CRYPTO_lock
                move    $s2, $a0
                move    $s1, $a1
                addiu   $a2, $s0, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a0, 9
                li      $a1, 0x10
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x1B3
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_lock
                sw      $s1, 0xC4($s2)
                addiu   $a2, $s0, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a0, 0xA
                li      $a1, 0x10
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x1B5
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_set_generate_session_id


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_generate_session_id
SSL_CTX_set_generate_session_id:         # DATA XREF: LOAD:000017E8↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_generate_session_id)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $s0, loc_40000
                la      $t9, CRYPTO_lock
                move    $s2, $a0
                move    $s1, $a1
                addiu   $a2, $s0, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a0, 9
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x1AB
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_lock
                sw      $s1, 0xEC($s2)
                addiu   $a2, $s0, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x1AD
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_CTX_set_generate_session_id


 # =============== S U B R O U T I N E =======================================


                .globl SSL_has_matching_session_id
SSL_has_matching_session_id:             # CODE XREF: sub_37230+54↓p
                                         # sub_37230+88↓p ...

var_100         = -0x100
var_F8          = -0xF8
var_B4          = -0xB4
var_B0          = -0xB0
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_has_matching_session_id)
                addu    $gp, $t9
                addiu   $sp, -0x110
                sw      $ra, 0x110+var_8($sp)
                sw      $s3, 0x110+var_C($sp)
                sw      $s2, 0x110+var_10($sp)
                sw      $s1, 0x110+var_14($sp)
                sw      $s0, 0x110+var_18($sp)
                sw      $gp, 0x110+var_100($sp)
                sltiu   $v0, $a2, 0x21  # '!'
                move    $s1, $a2
                bnez    $v0, loc_341B4
                move    $s2, $a0
                lw      $ra, 0x110+var_8($sp)
                lw      $s3, 0x110+var_C($sp)
                lw      $s2, 0x110+var_10($sp)
                lw      $s1, 0x110+var_14($sp)
                lw      $s0, 0x110+var_18($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x110
 # ---------------------------------------------------------------------------

loc_341B4:                               # CODE XREF: SSL_has_matching_session_id+30↑j
                lw      $v0, 0($a0)
                la      $t9, memcpy
                sw      $v0, 0x110+var_F8($sp)
                sw      $a2, 0x110+var_B4($sp)
                jalr    $t9 ; memcpy
                addiu   $a0, $sp, 0x110+var_B0
                lw      $v1, 0x110+var_F8($sp)
                li      $v0, 2
                beq     $v1, $v0, loc_34258
                lw      $gp, 0x110+var_100($sp)

loc_341DC:                               # CODE XREF: SSL_has_matching_session_id+100↓j
                addiu   $s3, $sp, 0x110+var_F8

loc_341E0:                               # CODE XREF: SSL_has_matching_session_id+128↓j
                la      $s1, loc_40000
                la      $t9, CRYPTO_lock
                addiu   $a2, $s1, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a3, 0x1D5
                li      $a0, 5
                jalr    $t9 ; CRYPTO_lock
                li      $a1, 0xC
                lw      $gp, 0x110+var_100($sp)
                lw      $v0, 0xDC($s2)
                lw      $a0, 0x10($v0)
                la      $t9, lh_retrieve
                jalr    $t9 ; lh_retrieve
                move    $a1, $s3
                lw      $gp, 0x110+var_100($sp)
                la      $t9, CRYPTO_lock
                move    $s0, $v0
                addiu   $a2, $s1, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a0, 6
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x1D7
                sltu    $v0, $zero, $s0
                lw      $gp, 0x110+var_100($sp)
                lw      $ra, 0x110+var_8($sp)
                lw      $s3, 0x110+var_C($sp)
                lw      $s2, 0x110+var_10($sp)
                lw      $s1, 0x110+var_14($sp)
                lw      $s0, 0x110+var_18($sp)
                jr      $ra
                addiu   $sp, 0x110
 # ---------------------------------------------------------------------------

loc_34258:                               # CODE XREF: SSL_has_matching_session_id+78↑j
                sltiu   $v0, $s1, 0x10
                beqz    $v0, loc_341DC
                la      $t9, memset
                li      $s0, 0x10
                addiu   $a0, $s1, 0x48  # 'H'
                addiu   $s3, $sp, 0x110+var_F8
                addu    $a0, $s3, $a0
                subu    $a2, $s0, $s1
                jalr    $t9 ; memset
                move    $a1, $zero
                lw      $gp, 0x110+var_100($sp)
                b       loc_341E0
                sw      $s0, 0x110+var_B4($sp)
 # End of function SSL_has_matching_session_id


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_free
SSL_CTX_free:                            # CODE XREF: SSL_set_SSL_CTX+98↓p
                                         # SSL_CTX_new+3EC↓p ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_free)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                beqz    $a0, loc_342E4
                move    $s1, $a0
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x76F
                sw      $v0, 0x30+var_20($sp)
                addiu   $a3, (aSslLibC - 0x40000)  # "ssl_lib.c"
                addiu   $a0, 0x60  # '`'
                li      $a1, 0xFFFFFFFF
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0xC
                blez    $v0, loc_342FC
                lw      $gp, 0x30+var_18($sp)

loc_342E4:                               # CODE XREF: SSL_CTX_free+24↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_342FC:                               # CODE XREF: SSL_CTX_free+50↑j
                lw      $a0, 0xF0($s1)
                beqz    $a0, loc_34314
                la      $t9, X509_VERIFY_PARAM_free
                jalr    $t9 ; X509_VERIFY_PARAM_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_34314:                               # CODE XREF: SSL_CTX_free+74↑j
                lw      $v0, 0x10($s1)
                beqz    $v0, loc_34330
                la      $t9, SSL_CTX_flush_sessions
                move    $a0, $s1
                jalr    $t9 ; SSL_CTX_flush_sessions
                move    $a1, $zero
                lw      $gp, 0x30+var_18($sp)

loc_34330:                               # CODE XREF: SSL_CTX_free+8C↑j
                la      $t9, CRYPTO_free_ex_data
                li      $a0, 2
                move    $a1, $s1
                jalr    $t9 ; CRYPTO_free_ex_data
                addiu   $a2, $s1, 0x80
                lw      $a0, 0x10($s1)
                beqz    $a0, loc_34360
                lw      $gp, 0x30+var_18($sp)
                la      $t9, lh_free
                jalr    $t9 ; lh_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_34360:                               # CODE XREF: SSL_CTX_free+BC↑j
                lw      $a0, 0xC($s1)
                beqz    $a0, loc_34378
                la      $t9, X509_STORE_free
                jalr    $t9 ; X509_STORE_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_34378:                               # CODE XREF: SSL_CTX_free+D8↑j
                lw      $a0, 4($s1)
                beqz    $a0, loc_34390
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_34390:                               # CODE XREF: SSL_CTX_free+F0↑j
                lw      $a0, 8($s1)
                beqz    $a0, loc_343A8
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_343A8:                               # CODE XREF: SSL_CTX_free+108↑j
                lw      $a0, 0xB0($s1)
                beqz    $a0, loc_343C0
                la      $t9, ssl_cert_free
                jalr    $t9 ; ssl_cert_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_343C0:                               # CODE XREF: SSL_CTX_free+120↑j
                lw      $a0, 0xA0($s1)
                beqz    $a0, loc_343DC
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_343DC:                               # CODE XREF: SSL_CTX_free+138↑j
                lw      $a0, 0x94($s1)
                beqz    $a0, loc_343F8
                la      $t9, sk_pop_free
                la      $a1, X509_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_343F8:                               # CODE XREF: SSL_CTX_free+154↑j
                lw      $a0, 0x1A8($s1)
                beqz    $a0, loc_34414
                sw      $zero, 0x98($s1)
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_34414:                               # CODE XREF: SSL_CTX_free+170↑j
                la      $t9, SSL_CTX_SRP_CTX_free
                jalr    $t9 ; SSL_CTX_SRP_CTX_free
                move    $a0, $s1
                lw      $s2, 0x150($s1)
                beqz    $s2, loc_34460
                lw      $gp, 0x30+var_18($sp)
                lw      $a0, 8($s2)
                beqz    $a0, loc_34454
                la      $t9, CRYPTO_free

loc_34438:                               # CODE XREF: SSL_CTX_free+1BC↓j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $s0, 0($a0)
                lw      $gp, 0x30+var_18($sp)
                bnez    $s0, loc_34438
                move    $a0, $s0
                la      $t9, CRYPTO_free

loc_34454:                               # CODE XREF: SSL_CTX_free+1A4↑j
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s2
                lw      $gp, 0x30+var_18($sp)

loc_34460:                               # CODE XREF: SSL_CTX_free+198↑j
                lw      $s2, 0x154($s1)
                beqz    $s2, loc_344A4
                la      $t9, CRYPTO_free
                lw      $a0, 8($s2)
                beqz    $a0, loc_34494
                nop

loc_34478:                               # CODE XREF: SSL_CTX_free+1FC↓j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $s0, 0($a0)
                lw      $gp, 0x30+var_18($sp)
                bnez    $s0, loc_34478
                move    $a0, $s0
                la      $t9, CRYPTO_free

loc_34494:                               # CODE XREF: SSL_CTX_free+1E4↑j
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s2
                lw      $gp, 0x30+var_18($sp)
                la      $t9, CRYPTO_free

loc_344A4:                               # CODE XREF: SSL_CTX_free+1D8↑j
                move    $a0, $s1
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $t9 ; CRYPTO_free
                addiu   $sp, 0x30
 # End of function SSL_CTX_free


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_SSL_CTX
SSL_set_SSL_CTX:                         # DATA XREF: LOAD:00001A68↑o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_set_SSL_CTX)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $v0, 0xDC($a0)
                move    $s1, $a0
                beq     $v0, $a1, loc_3456C
                move    $s0, $a1
                beqz    $a1, loc_34580
                nop

loc_344F8:                               # CODE XREF: SSL_set_SSL_CTX:loc_34580↓j
                lw      $a0, 0x98($s1)
                beqz    $a0, loc_34510
                la      $t9, ssl_cert_free
                jalr    $t9 ; ssl_cert_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_34510:                               # CODE XREF: SSL_set_SSL_CTX+3C↑j
                la      $t9, ssl_cert_dup
                jalr    $t9 ; ssl_cert_dup
                lw      $a0, 0xB0($s0)
                lw      $gp, 0x30+var_18($sp)
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                sw      $v0, 0x98($s1)
                li      $v0, 0xB75
                addiu   $a0, $s0, 0x60  # '`'
                sw      $v0, 0x30+var_20($sp)
                addiu   $a3, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0xC
                lw      $a0, 0xDC($s1)
                beqz    $a0, loc_34564
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_CTX_free
                jalr    $t9 ; SSL_CTX_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_34564:                               # CODE XREF: SSL_set_SSL_CTX+8C↑j
                sw      $s0, 0xDC($s1)
                move    $v0, $s0

loc_3456C:                               # CODE XREF: SSL_set_SSL_CTX+28↑j
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_34580:                               # CODE XREF: SSL_set_SSL_CTX+30↑j
                b       loc_344F8
                lw      $s0, 0x158($a0)
 # End of function SSL_set_SSL_CTX


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_new
SSL_CTX_new:                             # DATA XREF: LOAD:00001BC8↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_new)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                beqz    $a0, loc_349E8
                move    $s1, $a0
                la      $t9, SSL_get_ex_data_X509_STORE_CTX_idx
                jalr    $t9 ; SSL_get_ex_data_X509_STORE_CTX_idx
                nop
                bltz    $v0, loc_348F8
                lw      $gp, 0x38+var_20($sp)
                la      $s3, loc_40000
                la      $t9, CRYPTO_malloc
                li      $a0, 0x1AC
                addiu   $a1, $s3, (aSslLibC - 0x40000)  # "ssl_lib.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x6A4
                move    $s0, $v0
                beqz    $v0, loc_3491C
                lw      $gp, 0x38+var_20($sp)
                la      $t9, memset
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; memset
                li      $a2, 0x1AC
                li      $s2, 2
                lw      $t9, 0x60($s1)
                li      $v0, 0x5000
                sw      $v0, 0x14($s0)
                sw      $s1, 0($s0)
                sw      $zero, 0xC($s0)
                sw      $s2, 0x20($s0)
                sw      $zero, 0x18($s0)
                jalr    $t9
                sw      $zero, 0x1C($s0)
                lw      $gp, 0x38+var_20($sp)
                sw      $v0, 0x24($s0)
                lui     $v0, 1
                addiu   $a0, $s0, 0x34  # '4'
                li      $v1, 1
                la      $t9, ssl_cert_new
                la      $v0, loc_19000
                sw      $zero, 0x28($s0)
                sw      $zero, 0x2C($s0)
                sw      $zero, 0x30($s0)
                sw      $zero, 0xEC($s0)
                sw      $zero, 0x34($s0)
                sw      $zero, 0x28($a0)
                sw      $zero, 4($a0)
                sw      $zero, 8($a0)
                sw      $zero, 0xC($a0)
                sw      $zero, 0x10($a0)
                sw      $zero, 0x14($a0)
                sw      $zero, 0x18($a0)
                sw      $zero, 0x1C($a0)
                sw      $zero, 0x20($a0)
                sw      $zero, 0x24($a0)
                sw      $v1, 0x60($s0)
                sw      $v0, 0xAC($s0)
                sw      $zero, 0xF4($s0)
                sw      $zero, 0x9C($s0)
                sw      $zero, 0x64($s0)
                sw      $zero, 0x68($s0)
                sw      $zero, 0xB4($s0)
                sw      $zero, 0xB8($s0)
                sw      $zero, 0xBC($s0)
                sw      $zero, 0xC0($s0)
                sw      $zero, 0xC4($s0)
                jalr    $t9 ; ssl_cert_new
                sw      $zero, 0xE8($s0)
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_3491C
                sw      $v0, 0xB0($s0)
                la      $a0, loc_30000
                la      $a1, loc_30000
                la      $t9, lh_new
                sw      $zero, 0x6C($s0)
                sw      $zero, 0x70($s0)
                sw      $zero, 0x74($s0)
                sw      $zero, 0x78($s0)
                sw      $zero, 0x7C($s0)
                addiu   $a0, (sub_30E94 - 0x30000)
                jalr    $t9 ; lh_new
                addiu   $a1, (sub_32D1C - 0x30000)
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_3491C
                sw      $v0, 0x10($s0)
                la      $t9, X509_STORE_new
                jalr    $t9 ; X509_STORE_new
                nop
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_3491C
                sw      $v0, 0xC($s0)
                lw      $v0, 0($s1)
                beq     $v0, $s2, loc_34964
                lw      $a0, 0($s0)
                la      $v0, loc_40000
                addiu   $a3, $v0, (aAllAnullEnullS - 0x40000)  # "ALL:!aNULL:!eNULL:!SSLv2"

loc_34728:                               # CODE XREF: SSL_CTX_new+3E0↓j
                la      $t9, ssl_create_cipher_list
                addiu   $a1, $s0, 4
                jalr    $t9 ; ssl_create_cipher_list
                addiu   $a2, $s0, 8
                lw      $a0, 4($s0)
                beqz    $a0, loc_349A0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                nop
                blez    $v0, loc_349A0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, X509_VERIFY_PARAM_new
                jalr    $t9 ; X509_VERIFY_PARAM_new
                nop
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_3491C
                sw      $v0, 0xF0($s0)
                la      $a0, loc_40000
                la      $t9, EVP_get_digestbyname
                jalr    $t9 ; EVP_get_digestbyname
                addiu   $a0, (aSsl2Md5 - 0x40000)  # "ssl2-md5"
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_34A20
                sw      $v0, 0x88($s0)
                la      $a0, loc_40000
                la      $t9, EVP_get_digestbyname
                jalr    $t9 ; EVP_get_digestbyname
                addiu   $a0, (aSsl3Md5 - 0x40000)  # "ssl3-md5"
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_349C4
                sw      $v0, 0x8C($s0)
                la      $a0, loc_40000
                la      $t9, EVP_get_digestbyname
                jalr    $t9 ; EVP_get_digestbyname
                addiu   $a0, (aSsl3Sha1 - 0x40000)  # "ssl3-sha1"
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_34A44
                sw      $v0, 0x90($s0)
                la      $t9, sk_new_null
                jalr    $t9 ; sk_new_null
                nop
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_3491C
                sw      $v0, 0xA0($s0)
                la      $t9, CRYPTO_new_ex_data
                li      $a0, 2
                move    $a1, $s0
                jalr    $t9 ; CRYPTO_new_ex_data
                addiu   $a2, $s0, 0x80
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_COMP_get_compression_methods
                jalr    $t9 ; SSL_COMP_get_compression_methods
                sw      $zero, 0x94($s0)
                lw      $gp, 0x38+var_20($sp)
                sw      $v0, 0x98($s0)
                la      $t9, RAND_pseudo_bytes
                li      $v0, 0x4000
                sw      $v0, 0xF8($s0)
                sw      $zero, 0x100($s0)
                sw      $zero, 0x104($s0)
                addiu   $a0, $s0, 0x108
                jalr    $t9 ; RAND_pseudo_bytes
                li      $a1, 0x10
                blez    $v0, loc_34A10
                lw      $gp, 0x38+var_20($sp)
                la      $t9, RAND_bytes
                addiu   $a0, $s0, 0x118
                jalr    $t9 ; RAND_bytes
                li      $a1, 0x10
                blez    $v0, loc_34A10
                lw      $gp, 0x38+var_20($sp)
                la      $t9, RAND_bytes
                addiu   $a0, $s0, 0x128
                jalr    $t9 ; RAND_bytes
                li      $a1, 0x10
                blez    $v0, loc_34A10
                lw      $gp, 0x38+var_20($sp)

loc_34860:                               # CODE XREF: SSL_CTX_new+490↓j
                la      $t9, SSL_CTX_SRP_CTX_init
                move    $a0, $s0
                sw      $zero, 0x13C($s0)
                sw      $zero, 0x140($s0)
                sw      $zero, 0x198($s0)
                jalr    $t9 ; SSL_CTX_SRP_CTX_init
                sw      $zero, 0x1A0($s0)
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 0x20  # ' '
                la      $t9, CRYPTO_malloc
                sw      $v0, 0x14C($s0)
                addiu   $a1, $s3, 0x54D8
                li      $a0, 0xC
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x725
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_3491C
                sw      $v0, 0x154($s0)
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                sw      $zero, 8($v0)
                sw      $zero, 0($v0)
                sw      $zero, 4($v0)
                addiu   $a1, (aSslLibC - 0x40000)  # "ssl_lib.c"
                li      $a0, 0xC
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x72B
                move    $v1, $v0
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_34A68
                sw      $v0, 0x150($s0)
                lw      $v0, 0xA4($s0)
                sw      $zero, 8($v1)
                ori     $v0, 4
                sw      $v0, 0xA4($s0)
                sw      $zero, 0($v1)
                b       loc_34944
                sw      $zero, 4($v1)
 # ---------------------------------------------------------------------------

loc_348F8:                               # CODE XREF: SSL_CTX_new+3C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xA9
                li      $a2, 0x10D
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $zero

loc_3491C:                               # CODE XREF: SSL_CTX_new+60↑j
                                         # SSL_CTX_new+134↑j ...
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xA9
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)

loc_3493C:                               # CODE XREF: SSL_CTX_new+434↓j
                                         # SSL_CTX_new+458↓j ...
                bnez    $s0, loc_34970
                la      $t9, SSL_CTX_free

loc_34944:                               # CODE XREF: SSL_CTX_new+368↑j
                                         # SSL_CTX_new+480↓j
                move    $v0, $s0
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_34964:                               # CODE XREF: SSL_CTX_new+190↑j
                la      $v0, loc_40000
                b       loc_34728
                addiu   $a3, $v0, (aSslv2 - 0x40000)  # "SSLv2"
 # ---------------------------------------------------------------------------

loc_34970:                               # CODE XREF: SSL_CTX_new:loc_3493C↑j
                move    $a0, $s0
                jalr    $t9 ; SSL_CTX_free
                move    $s0, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_349A0:                               # CODE XREF: SSL_CTX_new+1B4↑j
                                         # SSL_CTX_new+1C8↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xA9
                li      $a2, 0xA1
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3493C
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_349C4:                               # CODE XREF: SSL_CTX_new+218↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xA9
                li      $a2, 0xF2
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3493C
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_349E8:                               # CODE XREF: SSL_CTX_new+28↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xA9
                li      $a2, 0xC4
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_34944
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_34A10:                               # CODE XREF: SSL_CTX_new+2A0↑j
                                         # SSL_CTX_new+2B8↑j ...
                lw      $v0, 0xA4($s0)
                ori     $v0, 0x4000
                b       loc_34860
                sw      $v0, 0xA4($s0)
 # ---------------------------------------------------------------------------

loc_34A20:                               # CODE XREF: SSL_CTX_new+1FC↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xA9
                li      $a2, 0xF1
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3493C
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_34A44:                               # CODE XREF: SSL_CTX_new+234↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xA9
                li      $a2, 0xF3
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3493C
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_34A68:                               # CODE XREF: SSL_CTX_new+34C↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x154($s0)
                b       loc_3491C
                lw      $gp, 0x38+var_20($sp)
 # End of function SSL_CTX_new


 # =============== S U B R O U T I N E =======================================


                .globl SSL_free
SSL_free:                                # CODE XREF: SSL_dup+1B4↓p
                                         # sub_40DCC+9C↓p ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_free)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                beqz    $a0, loc_34ACC
                move    $s0, $a0
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x200
                sw      $v0, 0x28+var_18($sp)
                addiu   $a3, (aSslLibC - 0x40000)  # "ssl_lib.c"
                addiu   $a0, 0xF4
                li      $a1, 0xFFFFFFFF
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0x10
                blez    $v0, loc_34ADC
                lw      $gp, 0x28+var_10($sp)

loc_34ACC:                               # CODE XREF: SSL_free+1C↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_34ADC:                               # CODE XREF: SSL_free+48↑j
                lw      $a0, 0x70($s0)
                beqz    $a0, loc_34AF4
                la      $t9, X509_VERIFY_PARAM_free
                jalr    $t9 ; X509_VERIFY_PARAM_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34AF4:                               # CODE XREF: SSL_free+64↑j
                la      $t9, CRYPTO_free_ex_data
                li      $a0, 1
                move    $a1, $s0
                jalr    $t9 ; CRYPTO_free_ex_data
                addiu   $a2, $s0, 0xE8
                lw      $a0, 0x14($s0)
                beqz    $a0, loc_34B34
                lw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x10($s0)
                beq     $a0, $v0, loc_34D5C
                la      $t9, BIO_pop

loc_34B20:                               # CODE XREF: SSL_free+2F0↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                nop
                lw      $gp, 0x28+var_10($sp)
                sw      $zero, 0x14($s0)

loc_34B34:                               # CODE XREF: SSL_free+90↑j
                lw      $a0, 0xC($s0)
                beqz    $a0, loc_34B4C
                la      $t9, BIO_free_all
                jalr    $t9 ; BIO_free_all
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34B4C:                               # CODE XREF: SSL_free+BC↑j
                lw      $a0, 0x10($s0)
                beqz    $a0, loc_34B70
                nop
                lw      $v0, 0xC($s0)
                beq     $a0, $v0, loc_34B70
                la      $t9, BIO_free_all
                jalr    $t9 ; BIO_free_all
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34B70:                               # CODE XREF: SSL_free+D4↑j
                                         # SSL_free+E0↑j
                lw      $a0, 0x3C($s0)
                beqz    $a0, loc_34B88
                la      $t9, BUF_MEM_free
                jalr    $t9 ; BUF_MEM_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34B88:                               # CODE XREF: SSL_free+F8↑j
                lw      $a0, 0x74($s0)
                beqz    $a0, loc_34BA0
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34BA0:                               # CODE XREF: SSL_free+110↑j
                lw      $a0, 0x78($s0)
                beqz    $a0, loc_34BB8
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34BB8:                               # CODE XREF: SSL_free+128↑j
                lw      $v0, 0xC0($s0)
                beqz    $v0, loc_34BE0
                la      $t9, ssl_clear_bad_session
                jalr    $t9 ; ssl_clear_bad_session
                move    $a0, $s0
                lw      $gp, 0x28+var_10($sp)
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                lw      $a0, 0xC0($s0)
                lw      $gp, 0x28+var_10($sp)

loc_34BE0:                               # CODE XREF: SSL_free+140↑j
                la      $t9, ssl_clear_cipher_ctx
                jalr    $t9 ; ssl_clear_cipher_ctx
                move    $a0, $s0
                lw      $gp, 0x28+var_10($sp)
                la      $t9, ssl_clear_hash_ctx
                jalr    $t9 ; ssl_clear_hash_ctx
                addiu   $a0, $s0, 0x84
                lw      $gp, 0x28+var_10($sp)
                la      $t9, ssl_clear_hash_ctx
                jalr    $t9 ; ssl_clear_hash_ctx
                addiu   $a0, $s0, 0x90
                lw      $a0, 0x98($s0)
                beqz    $a0, loc_34C28
                lw      $gp, 0x28+var_10($sp)
                la      $t9, ssl_cert_free
                jalr    $t9 ; ssl_cert_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34C28:                               # CODE XREF: SSL_free+194↑j
                lw      $a0, 0x118($s0)
                beqz    $a0, loc_34C40
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34C40:                               # CODE XREF: SSL_free+1B0↑j
                lw      $a0, 0x158($s0)
                beqz    $a0, loc_34C58
                la      $t9, SSL_CTX_free
                jalr    $t9 ; SSL_CTX_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34C58:                               # CODE XREF: SSL_free+1C8↑j
                lw      $a0, 0x13C($s0)
                beqz    $a0, loc_34C70
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34C70:                               # CODE XREF: SSL_free+1E0↑j
                lw      $a0, 0x12C($s0)
                beqz    $a0, loc_34C8C
                la      $t9, sk_pop_free
                la      $a1, X509_EXTENSION_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34C8C:                               # CODE XREF: SSL_free+1F8↑j
                lw      $a0, 0x128($s0)
                beqz    $a0, loc_34CA8
                la      $t9, sk_pop_free
                la      $a1, OCSP_RESPID_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34CA8:                               # CODE XREF: SSL_free+214↑j
                lw      $a0, 0x130($s0)
                beqz    $a0, loc_34CC0
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34CC0:                               # CODE XREF: SSL_free+230↑j
                lw      $a0, 0xF0($s0)
                beqz    $a0, loc_34CDC
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34CDC:                               # CODE XREF: SSL_free+248↑j
                lw      $v0, 8($s0)
                beqz    $v0, loc_34CF8
                nop
                lw      $t9, 0xC($v0)
                jalr    $t9
                move    $a0, $s0
                lw      $gp, 0x28+var_10($sp)

loc_34CF8:                               # CODE XREF: SSL_free+264↑j
                lw      $a0, 0xDC($s0)
                beqz    $a0, loc_34D10
                la      $t9, SSL_CTX_free
                jalr    $t9 ; SSL_CTX_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34D10:                               # CODE XREF: SSL_free+280↑j
                lw      $a0, 0x15C($s0)
                beqz    $a0, loc_34D28
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34D28:                               # CODE XREF: SSL_free+298↑j
                lw      $a0, 0x164($s0)
                beqz    $a0, loc_34D44
                nop
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_34D44:                               # CODE XREF: SSL_free+2B0↑j
                la      $t9, CRYPTO_free
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $t9 ; CRYPTO_free
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_34D5C:                               # CODE XREF: SSL_free+9C↑j
                jalr    $t9 ; BIO_pop
                nop
                lw      $gp, 0x28+var_10($sp)
                lw      $a0, 0x14($s0)
                b       loc_34B20
                sw      $v0, 0x10($s0)
 # End of function SSL_free


 # =============== S U B R O U T I N E =======================================


                .globl SSL_new
SSL_new:                                 # CODE XREF: SSL_dup+3C↓p
                                         # BIO_new_ssl+54↓p
                                         # DATA XREF: ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_new)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s4, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                beqz    $a0, loc_350E4
                move    $s2, $a0
                lw      $v0, 0($a0)
                beqz    $v0, loc_350CC
                la      $s4, loc_40000
                la      $t9, CRYPTO_malloc
                li      $a0, 0x1BC
                addiu   $a1, $s4, (aSslLibC - 0x40000)  # "ssl_lib.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x122
                move    $s1, $v0
                beqz    $v0, loc_34FC4
                lw      $gp, 0x38+var_20($sp)
                la      $t9, memset
                move    $a0, $v0
                move    $a1, $zero
                li      $a2, 0x1BC
                jalr    $t9 ; memset
                move    $s3, $v0
                lw      $v1, 0xA4($s2)
                lw      $gp, 0x38+var_20($sp)
                sw      $v1, 0xF8($s1)
                lw      $a0, 0xA8($s2)
                lw      $a1, 0xB0($s2)
                sw      $a0, 0xFC($s1)
                lw      $v0, 0xAC($s2)
                beqz    $a1, loc_3500C
                sw      $v0, 0x100($s1)
                la      $t9, ssl_cert_dup
                jalr    $t9 ; ssl_cert_dup
                move    $a0, $a1
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_34F9C
                sw      $v0, 0x98($s1)
                lw      $v0, 0xB4($s2)
                lw      $a1, 0xB8($s2)
                sw      $v0, 0x60($s1)
                lw      $v1, 0xC0($s2)
                lw      $a0, 0xBC($s2)
                sw      $v1, 0xC8($s1)
                lw      $v0, 0xC4($s2)
                sw      $a1, 0x64($s1)
                sltiu   $v1, $v0, 0x21  # '!'
                sw      $a0, 0x68($s1)
                beqz    $v1, loc_35040
                sw      $v0, 0x9C($s1)

loc_34E58:                               # CODE XREF: SSL_new+2C4↓j
                                         # SSL_new+2E4↓j
                addiu   $v0, $s2, 0xC8
                lw      $t3, 0x1C($v0)
                lw      $a1, 4($v0)
                lw      $a2, 8($v0)
                lw      $a3, 0xC($v0)
                lw      $t0, 0x10($v0)
                lw      $t1, 0x14($v0)
                lw      $t2, 0x18($v0)
                lw      $a0, 0xC8($s2)
                addiu   $v1, $s1, 0xA0
                sw      $a0, 0xA0($s1)
                sw      $t3, 0x1C($v1)
                sw      $a1, 4($v1)
                sw      $a2, 8($v1)
                sw      $a3, 0xC($v1)
                sw      $t0, 0x10($v1)
                sw      $t1, 0x14($v1)
                sw      $t2, 0x18($v1)
                lw      $v0, 0xE8($s2)
                lw      $v1, 0xEC($s2)
                la      $t9, X509_VERIFY_PARAM_new
                sw      $v0, 0xCC($s1)
                jalr    $t9 ; X509_VERIFY_PARAM_new
                sw      $v1, 0xC4($s1)
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_34F84
                sw      $v0, 0x70($s1)
                la      $t9, X509_VERIFY_PARAM_inherit
                lw      $a1, 0xF0($s2)
                jalr    $t9 ; X509_VERIFY_PARAM_inherit
                move    $a0, $v0
                lw      $v1, 0xF4($s2)
                lw      $gp, 0x38+var_20($sp)
                sw      $v1, 0x2C($s1)
                lw      $a0, 0xF8($s2)
                addiu   $s0, $s2, 0x60  # '`'
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x159
                sw      $a0, 0x10C($s1)
                li      $a1, 1
                move    $a0, $s0
                li      $a2, 0xC
                addiu   $a3, $s4, (aSslLibC - 0x40000)  # "ssl_lib.c"
                jalr    $t9 ; CRYPTO_add_lock
                sw      $v0, 0x38+var_28($sp)
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 0xFFFFFFFF
                sw      $v0, 0x134($s1)
                la      $t9, CRYPTO_add_lock
                sw      $v0, 0x120($s1)
                li      $v0, 0x165
                sw      $s2, 0xDC($s1)
                sw      $zero, 0x110($s1)
                sw      $zero, 0x114($s1)
                sw      $zero, 0x138($s1)
                sw      $zero, 0x124($s1)
                sw      $zero, 0x128($s1)
                sw      $zero, 0x12C($s1)
                sw      $zero, 0x130($s1)
                move    $a0, $s0
                addiu   $a3, $s4, 0x54D8
                li      $a1, 1
                li      $a2, 0xC
                jalr    $t9 ; CRYPTO_add_lock
                sw      $v0, 0x38+var_28($sp)
                lw      $v1, 0($s2)
                sw      $s2, 0x158($s1)
                lw      $t9, 4($v1)
                sw      $zero, 0x15C($s1)
                sw      $zero, 0xE4($s1)
                sw      $v1, 8($s1)
                jalr    $t9
                move    $a0, $s1
                bnez    $v0, loc_35060
                lw      $gp, 0x38+var_20($sp)

loc_34F84:                               # CODE XREF: SSL_new+148↑j
                lw      $a0, 0x98($s1)
                beqz    $a0, loc_34F9C
                la      $t9, ssl_cert_free
                jalr    $t9 ; ssl_cert_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_34F9C:                               # CODE XREF: SSL_new+AC↑j
                                         # SSL_new+214↑j
                lw      $a0, 0xDC($s1)
                beqz    $a0, loc_34FB4
                la      $t9, SSL_CTX_free
                jalr    $t9 ; SSL_CTX_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_34FB4:                               # CODE XREF: SSL_new+22C↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                lw      $gp, 0x38+var_20($sp)

loc_34FC4:                               # CODE XREF: SSL_new+58↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xBA
                li      $a2, 0x41  # 'A'

loc_34FD8:                               # CODE XREF: SSL_new+368↓j
                                         # SSL_new+380↓j
                move    $s3, $zero
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s3
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3500C:                               # CODE XREF: SSL_new+94↑j
                lw      $v0, 0xB4($s2)
                lw      $a1, 0xB8($s2)
                sw      $v0, 0x60($s1)
                lw      $v1, 0xC0($s2)
                lw      $a0, 0xBC($s2)
                sw      $v1, 0xC8($s1)
                lw      $v0, 0xC4($s2)
                sw      $zero, 0x98($s1)
                sltiu   $v1, $v0, 0x21  # '!'
                sw      $a1, 0x64($s1)
                sw      $a0, 0x68($s1)
                bnez    $v1, loc_34E58
                sw      $v0, 0x9C($s1)

loc_35040:                               # CODE XREF: SSL_new+DC↑j
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a2, (aSSidCtxLengthS - 0x40000)  # "s->sid_ctx_length <= sizeof s->sid_ctx"
                addiu   $a0, $s4, (aSslLibC - 0x40000)  # "ssl_lib.c"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x149
                b       loc_34E58
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_35060:                               # CODE XREF: SSL_new+208↑j
                lw      $v0, 0($s2)
                la      $t9, SSL_clear
                lw      $v1, 0x10($v0)
                la      $v0, ssl_undefined_function
                move    $a0, $s1
                subu    $v1, $v0
                sltu    $v1, $zero, $v1
                li      $v0, 1
                sw      $v1, 0x24($s1)
                jalr    $t9 ; SSL_clear
                sw      $v0, 0xF4($s1)
                lw      $gp, 0x38+var_20($sp)
                la      $t9, CRYPTO_new_ex_data
                move    $a1, $s1
                addiu   $a2, $s1, 0xE8
                jalr    $t9 ; CRYPTO_new_ex_data
                li      $a0, 1
                move    $v0, $s3
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_350CC:                               # CODE XREF: SSL_new+38↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xBA
                li      $a2, 0xE4
                b       loc_34FD8
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_350E4:                               # CODE XREF: SSL_new+2C↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xBA
                li      $a2, 0xC3
                b       loc_34FD8
                sw      $zero, 0x38+var_28($sp)
 # End of function SSL_new


 # =============== S U B R O U T I N E =======================================


                .globl SSL_dup
SSL_dup:                                 # CODE XREF: sub_41404+30C↓p
                                         # DATA XREF: LOAD:00003B98↑o ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_dup)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_get_SSL_CTX
                jalr    $t9 ; SSL_get_SSL_CTX
                move    $s2, $a0
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_new
                jalr    $t9 ; SSL_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_352C0
                lw      $gp, 0x30+var_20($sp)
                lw      $v0, 0($s2)
                lw      $v1, 4($s2)
                lw      $a1, 8($s2)
                lw      $a0, 0xC0($s2)
                sw      $v0, 0($s1)
                sw      $v1, 4($s1)
                beqz    $a0, loc_35494
                sw      $a1, 8($s1)
                la      $t9, SSL_copy_session_id
                move    $a0, $s1
                jalr    $t9 ; SSL_copy_session_id
                move    $a1, $s2
                lw      $gp, 0x30+var_20($sp)

loc_35180:                               # CODE XREF: SSL_dup+40C↓j
                lw      $v1, 0xFC($s2)
                lw      $v0, 0xF8($s2)
                la      $t9, SSL_ctrl
                sw      $v1, 0xFC($s1)
                move    $a0, $s2
                li      $a1, 0x32  # '2'
                move    $a2, $zero
                move    $a3, $zero
                jalr    $t9 ; SSL_ctrl
                sw      $v0, 0xF8($s1)
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_ctrl
                move    $a3, $zero
                move    $a2, $v0
                li      $a1, 0x33  # '3'
                jalr    $t9 ; SSL_ctrl
                move    $a0, $s1
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_get_read_ahead
                jalr    $t9 ; SSL_get_read_ahead
                move    $a0, $s2
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_set_read_ahead
                move    $a1, $v0
                jalr    $t9 ; SSL_set_read_ahead
                move    $a0, $s1
                lw      $gp, 0x30+var_20($sp)
                lw      $v1, 0x68($s2)
                lw      $v0, 0x64($s2)
                la      $t9, SSL_get_verify_mode
                sw      $v1, 0x68($s1)
                move    $a0, $s2
                jalr    $t9 ; SSL_get_verify_mode
                sw      $v0, 0x64($s1)
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_get_verify_callback
                move    $a0, $s2
                jalr    $t9 ; SSL_get_verify_callback
                move    $s0, $v0
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_set_verify
                move    $a2, $v0
                move    $a1, $s0
                jalr    $t9 ; SSL_set_verify
                move    $a0, $s1
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_get_verify_depth
                jalr    $t9 ; SSL_get_verify_depth
                move    $a0, $s2
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_set_verify_depth
                move    $a1, $v0
                jalr    $t9 ; SSL_set_verify_depth
                move    $a0, $s1
                lw      $gp, 0x30+var_20($sp)
                lw      $v0, 0xC4($s2)
                la      $t9, SSL_get_info_callback
                move    $a0, $s2
                jalr    $t9 ; SSL_get_info_callback
                sw      $v0, 0xC4($s1)
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_set_info_callback
                move    $a1, $v0
                jalr    $t9 ; SSL_set_info_callback
                move    $a0, $s1
                lw      $gp, 0x30+var_20($sp)
                lw      $v0, 0xE0($s2)
                la      $t9, CRYPTO_dup_ex_data
                sw      $v0, 0xE0($s1)
                li      $a0, 1
                addiu   $a1, $s1, 0xE8
                jalr    $t9 ; CRYPTO_dup_ex_data
                addiu   $a2, $s2, 0xE8
                bnez    $v0, loc_352E0
                lw      $gp, 0x30+var_20($sp)

loc_352AC:                               # CODE XREF: SSL_dup+200↓j
                                         # SSL_dup+230↓j ...
                la      $t9, SSL_free
                jalr    $t9 ; SSL_free
                move    $a0, $s1
                lw      $gp, 0x30+var_20($sp)
                move    $s1, $zero

loc_352C0:                               # CODE XREF: SSL_dup+48↑j
                                         # SSL_dup+2EC↓j ...
                move    $v0, $s1
                lw      $ra, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_352E0:                               # CODE XREF: SSL_dup+1A8↑j
                lw      $a0, 0xC($s2)
                beqz    $a0, loc_35304
                la      $t9, BIO_ctrl
                li      $a1, 0xC
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                addiu   $a3, $s1, 0xC
                beqz    $v0, loc_352AC
                lw      $gp, 0x30+var_20($sp)

loc_35304:                               # CODE XREF: SSL_dup+1E8↑j
                lw      $a0, 0x10($s2)
                beqz    $a0, loc_35334
                nop
                lw      $v0, 0xC($s2)
                beq     $a0, $v0, loc_35488
                la      $t9, BIO_ctrl
                li      $a1, 0xC
                move    $a2, $zero
                jalr    $t9 ; BIO_ctrl
                addiu   $a3, $s1, 0x10
                beqz    $v0, loc_352AC
                lw      $gp, 0x30+var_20($sp)

loc_35334:                               # CODE XREF: SSL_dup+20C↑j
                                         # SSL_dup+390↓j
                lw      $v0, 0x18($s2)
                lw      $v1, 0x1C($s2)
                lw      $a2, 0x20($s2)
                lw      $a3, 0x24($s2)
                lw      $t0, 0x178($s2)
                lw      $t1, 0x28($s2)
                lw      $t2, 0x2C($s2)
                lw      $t3, 0x30($s2)
                lw      $t4, 0x34($s2)
                lw      $t5, 0x38($s2)
                lw      $t6, 0x6C($s2)
                la      $t9, X509_VERIFY_PARAM_inherit
                lw      $a0, 0x70($s1)
                lw      $a1, 0x70($s2)
                sw      $v0, 0x18($s1)
                sw      $v1, 0x1C($s1)
                sw      $a2, 0x20($s1)
                sw      $a3, 0x24($s1)
                sw      $t0, 0x178($s1)
                sw      $t1, 0x28($s1)
                sw      $t2, 0x2C($s1)
                sw      $t3, 0x30($s1)
                sw      $t4, 0x34($s1)
                sw      $t5, 0x38($s1)
                sw      $t6, 0x6C($s1)
                jalr    $t9 ; X509_VERIFY_PARAM_inherit
                sw      $zero, 0x44($s1)
                lw      $a0, 0x74($s2)
                beqz    $a0, loc_353C4
                lw      $gp, 0x30+var_20($sp)
                la      $t9, sk_dup
                jalr    $t9 ; sk_dup
                nop
                lw      $gp, 0x30+var_20($sp)
                beqz    $v0, loc_352AC
                sw      $v0, 0x74($s1)

loc_353C4:                               # CODE XREF: SSL_dup+2A8↑j
                lw      $a0, 0x78($s2)
                beqz    $a0, loc_353E4
                la      $t9, sk_dup
                jalr    $t9 ; sk_dup
                nop
                lw      $gp, 0x30+var_20($sp)
                beqz    $v0, loc_352AC
                sw      $v0, 0x78($s1)

loc_353E4:                               # CODE XREF: SSL_dup+2CC↑j
                lw      $a0, 0xF0($s2)
                beqz    $a0, loc_352C0
                la      $t9, sk_dup
                jalr    $t9 ; sk_dup
                nop
                move    $s0, $v0
                beqz    $v0, loc_352AC
                lw      $gp, 0x30+var_20($sp)
                move    $s2, $zero
                b       loc_35414
                sw      $v0, 0xF0($s1)
 # ---------------------------------------------------------------------------

loc_35410:                               # CODE XREF: SSL_dup+370↓j
                addiu   $s2, 1

loc_35414:                               # CODE XREF: SSL_dup+30C↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s0
                lw      $gp, 0x30+var_20($sp)
                slt     $v0, $s2, $v0
                move    $a1, $s2
                move    $a0, $s0
                beqz    $v0, loc_352C0
                la      $t9, sk_value
                jalr    $t9 ; sk_value
                nop
                lw      $gp, 0x30+var_20($sp)
                la      $t9, X509_NAME_dup
                move    $a0, $v0
                jalr    $t9 ; X509_NAME_dup
                move    $s3, $v0
                lw      $gp, 0x30+var_20($sp)
                la      $t9, sk_set
                move    $a2, $v0
                move    $a1, $s2
                jalr    $t9 ; sk_set
                move    $a0, $s0
                bnez    $v0, loc_35410
                lw      $gp, 0x30+var_20($sp)
                la      $t9, X509_NAME_free
                jalr    $t9 ; X509_NAME_free
                move    $a0, $s3
                b       loc_352AC
                lw      $gp, 0x30+var_20($sp)
 # ---------------------------------------------------------------------------

loc_35488:                               # CODE XREF: SSL_dup+218↑j
                lw      $v0, 0xC($s1)
                b       loc_35334
                sw      $v0, 0x10($s1)
 # ---------------------------------------------------------------------------

loc_35494:                               # CODE XREF: SSL_dup+68↑j
                lw      $t9, 0xC($a1)
                jalr    $t9
                move    $a0, $s1
                lw      $v0, 8($s2)
                move    $a0, $s1
                lw      $t9, 4($v0)
                jalr    $t9
                sw      $v0, 8($s1)
                lw      $a0, 0x98($s2)
                beqz    $a0, loc_354F4
                lw      $gp, 0x30+var_20($sp)
                lw      $v0, 0x98($s1)
                beqz    $v0, loc_354DC
                la      $t9, ssl_cert_free
                jalr    $t9 ; ssl_cert_free
                move    $a0, $v0
                lw      $gp, 0x30+var_20($sp)
                lw      $a0, 0x98($s2)

loc_354DC:                               # CODE XREF: SSL_dup+3C8↑j
                la      $t9, ssl_cert_dup
                jalr    $t9 ; ssl_cert_dup
                nop
                lw      $gp, 0x30+var_20($sp)
                beqz    $v0, loc_352AC
                sw      $v0, 0x98($s1)

loc_354F4:                               # CODE XREF: SSL_dup+3BC↑j
                la      $t9, SSL_set_session_id_context
                lw      $a2, 0x9C($s2)
                move    $a0, $s1
                jalr    $t9 ; SSL_set_session_id_context
                addiu   $a1, $s2, 0xA0
                b       loc_35180
                lw      $gp, 0x30+var_20($sp)
 # End of function SSL_dup


 # =============== S U B R O U T I N E =======================================


                .globl SSL_load_error_strings
SSL_load_error_strings:                  # DATA XREF: LOAD:00001998↑o
                jr      $ra
                nop
 # End of function SSL_load_error_strings


 # =============== S U B R O U T I N E =======================================


                .globl ssl_set_peer_cert_type
ssl_set_peer_cert_type:                  # CODE XREF: ssl2_set_certificate+208↑p
                                         # DATA XREF: LOAD:000030B8↑o ...
                li      $v0, 1
                jr      $ra
                sw      $a1, 4($a0)
 # End of function ssl_set_peer_cert_type


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_client_CA_list
SSL_CTX_get_client_CA_list:              # DATA XREF: LOAD:00002038↑o
                jr      $ra
                lw      $v0, 0xA0($a0)
 # End of function SSL_CTX_get_client_CA_list


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_client_CA_list
SSL_get_client_CA_list:                  # CODE XREF: ssl3_send_certificate_request+E8↑p
                                         # dtls1_send_certificate_request+D4↑p
                                         # DATA XREF: ...
                lw      $v1, 4($a0)
                li      $v0, 0x1000
                beq     $v1, $v0, loc_3555C
                nop
                lw      $v0, 0xF0($a0)
                beqz    $v0, loc_35550
                nop
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_35550:                               # CODE XREF: SSL_get_client_CA_list+14↑j
                lw      $v0, 0xDC($a0)
                jr      $ra
                lw      $v0, 0xA0($v0)
 # ---------------------------------------------------------------------------

loc_3555C:                               # CODE XREF: SSL_get_client_CA_list+8↑j
                lw      $v0, 0($a0)
                li      $v1, 3
                sra     $v0, 8
                beq     $v0, $v1, loc_35578
                nop

locret_35570:                            # CODE XREF: SSL_get_client_CA_list+50↓j
                jr      $ra
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_35578:                               # CODE XREF: SSL_get_client_CA_list+3C↑j
                lw      $v0, 0x58($a0)
                beqz    $v0, locret_35570
                nop
                jr      $ra
                lw      $v0, 0x364($v0)
 # End of function SSL_get_client_CA_list


 # =============== S U B R O U T I N E =======================================


                .globl SSL_add_file_cert_subjects_to_stack
SSL_add_file_cert_subjects_to_stack:     # CODE XREF: SSL_add_dir_cert_subjects_to_stack+FC↓p
                                         # DATA XREF: LOAD:00003578↑o ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_add_file_cert_subjects_to_stack)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_4($sp)
                sw      $s4, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_28($sp)
                move    $s0, $a1
                la      $a1, loc_30000
                la      $t9, sk_set_cmp_func
                addiu   $a1, (sub_359A0 - 0x30000)
                sw      $zero, 0x40+var_20($sp)
                jalr    $t9 ; sk_set_cmp_func
                move    $s2, $a0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BIO_s_file
                jalr    $t9 ; BIO_s_file
                move    $s4, $v0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_35758
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $v0
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 3
                bnez    $v0, loc_35684
                lw      $gp, 0x40+var_28($sp)

loc_35620:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+130↓j
                                         # SSL_add_file_cert_subjects_to_stack+150↓j
                move    $s0, $zero

loc_35624:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+1AC↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                lw      $gp, 0x40+var_28($sp)

loc_35634:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+1EC↓j
                lw      $a0, 0x40+var_20($sp)
                beqz    $a0, loc_3564C
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x40+var_28($sp)

loc_3564C:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+AC↑j
                la      $t9, sk_set_cmp_func
                move    $a0, $s2
                jalr    $t9 ; sk_set_cmp_func
                move    $a1, $s4
                move    $v0, $s0
                lw      $gp, 0x40+var_28($sp)
                lw      $ra, 0x40+var_4($sp)
                lw      $s4, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_35684:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+8C↑j
                addiu   $s3, $sp, 0x40+var_20

loc_35688:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+1C4↓j
                la      $t9, PEM_read_bio_X509
                move    $a2, $zero
                move    $a3, $zero
                move    $a1, $s3
                jalr    $t9 ; PEM_read_bio_X509
                move    $a0, $s1
                lw      $gp, 0x40+var_28($sp)
                beqz    $v0, loc_3572C
                la      $t9, X509_get_subject_name

loc_356AC:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+198↓j
                jalr    $t9 ; X509_get_subject_name
                lw      $a0, 0x40+var_20($sp)
                lw      $gp, 0x40+var_28($sp)
                move    $a0, $v0
                beqz    $v0, loc_35620
                la      $t9, X509_NAME_dup
                jalr    $t9 ; X509_NAME_dup
                nop
                lw      $gp, 0x40+var_28($sp)
                move    $a0, $s2
                move    $s0, $v0
                move    $a1, $v0
                beqz    $v0, loc_35620
                la      $t9, sk_find
                jalr    $t9 ; sk_find
                nop
                lw      $gp, 0x40+var_28($sp)
                move    $a0, $s0
                bltz    $v0, loc_35740
                la      $t9, X509_NAME_free
                jalr    $t9 ; X509_NAME_free
                nop
                lw      $gp, 0x40+var_28($sp)
                la      $t9, PEM_read_bio_X509
                move    $a2, $zero
                move    $a3, $zero
                move    $a1, $s3
                jalr    $t9 ; PEM_read_bio_X509
                move    $a0, $s1
                lw      $gp, 0x40+var_28($sp)
                bnez    $v0, loc_356AC
                la      $t9, X509_get_subject_name

loc_3572C:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+118↑j
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                li      $s0, 1
                b       loc_35624
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_35740:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+168↑j
                la      $t9, sk_push
                move    $a1, $s0
                jalr    $t9 ; sk_push
                move    $a0, $s2
                b       loc_35688
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_35758:                               # CODE XREF: SSL_add_file_cert_subjects_to_stack+6C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0xD8
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                b       loc_35634
                move    $s0, $zero
 # End of function SSL_add_file_cert_subjects_to_stack


 # =============== S U B R O U T I N E =======================================


                .globl SSL_add_dir_cert_subjects_to_stack
SSL_add_dir_cert_subjects_to_stack:      # DATA XREF: LOAD:00001858↑o

var_440         = -0x440
var_438         = -0x438
var_430         = -0x430
var_42C         = -0x42C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_add_dir_cert_subjects_to_stack)
                addu    $gp, $t9
                addiu   $sp, -0x450
                sw      $ra, 0x450+var_8($sp)
                sw      $s7, 0x450+var_C($sp)
                sw      $s6, 0x450+var_10($sp)
                sw      $s5, 0x450+var_14($sp)
                sw      $s4, 0x450+var_18($sp)
                sw      $s3, 0x450+var_1C($sp)
                sw      $s2, 0x450+var_20($sp)
                sw      $s1, 0x450+var_24($sp)
                sw      $s0, 0x450+var_28($sp)
                sw      $gp, 0x450+var_438($sp)
                la      $s7, loc_40000
                la      $t9, CRYPTO_lock
                move    $s5, $a0
                move    $s2, $a1
                sw      $zero, 0x450+var_430($sp)
                li      $a0, 9
                li      $a1, 0x18
                addiu   $a2, $s7, (aSslCertC - 0x40000)  # "ssl_cert.c"
                la      $s4, loc_40000
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x32C
                lw      $gp, 0x450+var_438($sp)
                addiu   $s6, $sp, 0x450+var_430
                addiu   $s3, $sp, 0x450+var_42C

loc_357F0:                               # CODE XREF: SSL_add_dir_cert_subjects_to_stack+104↓j
                la      $t9, OPENSSL_DIR_read
                move    $a0, $s6
                jalr    $t9 ; OPENSSL_DIR_read
                move    $a1, $s2
                lw      $gp, 0x450+var_438($sp)
                move    $a0, $s2
                move    $s1, $v0
                beqz    $v0, loc_358F4
                la      $t9, strlen
                jalr    $t9 ; strlen
                nop
                lw      $gp, 0x450+var_438($sp)
                la      $t9, strlen
                move    $a0, $s1
                jalr    $t9 ; strlen
                move    $s0, $v0
                addu    $s0, $v0
                lw      $gp, 0x450+var_438($sp)
                addiu   $s0, 2
                sltiu   $s0, 0x401
                move    $a0, $s3
                li      $a1, 0x400
                addiu   $a2, $s4, 0x576C
                move    $a3, $s2
                beqz    $s0, loc_35914
                la      $t9, BIO_snprintf
                jalr    $t9 ; BIO_snprintf
                sw      $s1, 0x450+var_440($sp)
                addiu   $v0, -1
                lw      $gp, 0x450+var_438($sp)
                sltiu   $v0, 0x3FF
                move    $a0, $s5
                move    $a1, $s3
                beqz    $v0, loc_3588C
                la      $t9, SSL_add_file_cert_subjects_to_stack
                jalr    $t9 ; SSL_add_file_cert_subjects_to_stack
                nop
                bnez    $v0, loc_357F0
                lw      $gp, 0x450+var_438($sp)

loc_3588C:                               # CODE XREF: SSL_add_dir_cert_subjects_to_stack+F4↑j
                move    $s0, $zero

loc_35890:                               # CODE XREF: SSL_add_dir_cert_subjects_to_stack+18C↓j
                                         # SSL_add_dir_cert_subjects_to_stack+1B0↓j ...
                lw      $v0, 0x450+var_430($sp)
                beqz    $v0, loc_358A8
                la      $t9, OPENSSL_DIR_end
                jalr    $t9 ; OPENSSL_DIR_end
                move    $a0, $s6
                lw      $gp, 0x450+var_438($sp)

loc_358A8:                               # CODE XREF: SSL_add_dir_cert_subjects_to_stack+114↑j
                la      $t9, CRYPTO_lock
                addiu   $a2, $s7, 0x5760
                li      $a0, 0xA
                li      $a1, 0x18
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x352
                move    $v0, $s0
                lw      $gp, 0x450+var_438($sp)
                lw      $ra, 0x450+var_8($sp)
                lw      $s7, 0x450+var_C($sp)
                lw      $s6, 0x450+var_10($sp)
                lw      $s5, 0x450+var_14($sp)
                lw      $s4, 0x450+var_18($sp)
                lw      $s3, 0x450+var_1C($sp)
                lw      $s2, 0x450+var_20($sp)
                lw      $s1, 0x450+var_24($sp)
                lw      $s0, 0x450+var_28($sp)
                jr      $ra
                addiu   $sp, 0x450
 # ---------------------------------------------------------------------------

loc_358F4:                               # CODE XREF: SSL_add_dir_cert_subjects_to_stack+8C↑j
                la      $t9, __errno_location
                jalr    $t9 ; __errno_location
                nop
                lw      $a2, 0($v0)
                bnez    $a2, loc_35938
                lw      $gp, 0x450+var_438($sp)
                b       loc_35890
                li      $s0, 1
 # ---------------------------------------------------------------------------

loc_35914:                               # CODE XREF: SSL_add_dir_cert_subjects_to_stack+D0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x450+var_440($sp)
                li      $a0, 0x14
                li      $a1, 0xD7
                li      $a2, 0x10E
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_35890
                lw      $gp, 0x450+var_438($sp)
 # ---------------------------------------------------------------------------

loc_35938:                               # CODE XREF: SSL_add_dir_cert_subjects_to_stack+184↑j
                la      $t9, ERR_put_error
                li      $a0, 2
                li      $a1, 0xA
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x450+var_440($sp)
                lw      $gp, 0x450+var_438($sp)
                la      $a1, loc_40000
                la      $a3, loc_40000
                la      $t9, ERR_add_error_data
                addiu   $a1, (aOpensslDirRead_0 - 0x40000)  # "OPENSSL_DIR_read(&ctx, '"
                move    $a2, $s2
                addiu   $a3, (asc_45790 - 0x40000)  # "')"
                jalr    $t9 ; ERR_add_error_data
                li      $a0, 3
                lw      $gp, 0x450+var_438($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x450+var_440($sp)
                li      $a0, 0x14
                li      $a1, 0xD7
                li      $a2, 2
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x450+var_438($sp)
                b       loc_35890
                move    $s0, $zero
 # End of function SSL_add_dir_cert_subjects_to_stack


 # =============== S U B R O U T I N E =======================================


sub_359A0:                               # DATA XREF: SSL_add_file_cert_subjects_to_stack+38↑o
                                         # SSL_load_client_CA_file+38↓o
                la      $gp, (off_5A360+0x7FF0 - sub_359A0)
                addu    $gp, $t9
                lw      $a0, 0($a0)
                la      $t9, X509_NAME_cmp
                jr      $t9 ; X509_NAME_cmp
                lw      $a1, 0($a1)
 # End of function sub_359A0


 # =============== S U B R O U T I N E =======================================


sub_359BC:                               # CODE XREF: SSL_CTX_add_client_CA+14↓j
                                         # SSL_add_client_CA+14↓j
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_359BC)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                move    $s0, $a1
                beqz    $a1, loc_35A88
                move    $s1, $a0
                lw      $v0, 0($a0)
                beqz    $v0, loc_35A74
                la      $t9, sk_new_null

loc_359F4:                               # CODE XREF: sub_359BC+C4↓j
                la      $t9, X509_get_subject_name
                jalr    $t9 ; X509_get_subject_name
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, X509_NAME_dup
                jalr    $t9 ; X509_NAME_dup
                move    $a0, $v0
                move    $s0, $v0
                beqz    $v0, loc_35A88
                lw      $gp, 0x28+var_18($sp)
                la      $t9, sk_push
                lw      $a0, 0($s1)
                jalr    $t9 ; sk_push
                move    $a1, $v0
                beqz    $v0, loc_35A4C
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_35A4C:                               # CODE XREF: sub_359BC+70↑j
                la      $t9, X509_NAME_free
                jalr    $t9 ; X509_NAME_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_35A74:                               # CODE XREF: sub_359BC+30↑j
                jalr    $t9 ; sk_new_null
                nop
                lw      $gp, 0x28+var_18($sp)
                bnez    $v0, loc_359F4
                sw      $v0, 0($s1)

loc_35A88:                               # CODE XREF: sub_359BC+24↑j
                                         # sub_359BC+58↑j
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function sub_359BC


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_add_client_CA
SSL_CTX_add_client_CA:                   # DATA XREF: LOAD:00001B08↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_add_client_CA)
                addu    $gp, $t9
                la      $t9, loc_30000
                addiu   $t9, (sub_359BC - 0x30000)
                jr      $t9 ; sub_359BC
                addiu   $a0, 0xA0
 # End of function SSL_CTX_add_client_CA


 # =============== S U B R O U T I N E =======================================


                .globl SSL_add_client_CA
SSL_add_client_CA:                       # DATA XREF: LOAD:00001EB8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_add_client_CA)
                addu    $gp, $t9
                la      $t9, loc_30000
                addiu   $t9, (sub_359BC - 0x30000)
                jr      $t9 ; sub_359BC
                addiu   $a0, 0xF0
 # End of function SSL_add_client_CA


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_client_CA_list
SSL_CTX_set_client_CA_list:              # DATA XREF: LOAD:00001808↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_client_CA_list)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                move    $s0, $a0
                lw      $a0, 0xA0($a0)
                beqz    $a0, loc_35B1C
                move    $s1, $a1
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_35B1C:                               # CODE XREF: SSL_CTX_set_client_CA_list+28↑j
                sw      $s1, 0xA0($s0)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_CTX_set_client_CA_list


 # =============== S U B R O U T I N E =======================================


                .globl SSL_load_client_CA_file
SSL_load_client_CA_file:                 # DATA XREF: LOAD:00001CA8↑o

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_load_client_CA_file)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_4($sp)
                sw      $s4, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_28($sp)
                move    $s0, $a0
                la      $a0, loc_30000
                la      $t9, sk_new
                addiu   $a0, (sub_359A0 - 0x30000)
                jalr    $t9 ; sk_new
                sw      $zero, 0x40+var_20($sp)
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BIO_s_file
                jalr    $t9 ; BIO_s_file
                move    $s2, $v0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $s2, loc_35C40
                lw      $gp, 0x40+var_28($sp)
                beqz    $v0, loc_35C40
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $v0
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 3
                bnez    $v0, loc_35C6C
                lw      $gp, 0x40+var_28($sp)

loc_35BC8:                               # CODE XREF: SSL_load_client_CA_file+128↓j
                                         # SSL_load_client_CA_file+224↓j ...
                move    $s3, $zero

loc_35BCC:                               # CODE XREF: SSL_load_client_CA_file+158↓j
                                         # SSL_load_client_CA_file+1E0↓j
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                move    $a0, $s2
                lw      $gp, 0x40+var_28($sp)

loc_35BDC:                               # CODE XREF: SSL_load_client_CA_file+130↓j
                beqz    $s1, loc_35BF0
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                lw      $gp, 0x40+var_28($sp)

loc_35BF0:                               # CODE XREF: SSL_load_client_CA_file:loc_35BDC↑j
                lw      $a0, 0x40+var_20($sp)
                beqz    $a0, loc_35C08
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x40+var_28($sp)

loc_35C08:                               # CODE XREF: SSL_load_client_CA_file+C0↑j
                beqz    $s3, loc_35C1C
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $gp, 0x40+var_28($sp)

loc_35C1C:                               # CODE XREF: SSL_load_client_CA_file:loc_35C08↑j
                move    $v0, $s3
                lw      $ra, 0x40+var_4($sp)
                lw      $s4, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_35C40:                               # CODE XREF: SSL_load_client_CA_file+68↑j
                                         # SSL_load_client_CA_file+70↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0xB9
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                bnez    $s2, loc_35BC8
                lw      $gp, 0x40+var_28($sp)
                b       loc_35BDC
                move    $s3, $zero
 # ---------------------------------------------------------------------------

loc_35C6C:                               # CODE XREF: SSL_load_client_CA_file+8C↑j
                move    $s3, $zero
                addiu   $s4, $sp, 0x40+var_20

loc_35C74:                               # CODE XREF: SSL_load_client_CA_file+250↓j
                la      $t9, PEM_read_bio_X509
                move    $a2, $zero
                move    $a3, $zero
                move    $a1, $s4
                jalr    $t9 ; PEM_read_bio_X509
                move    $a0, $s1
                beqz    $v0, loc_35BCC
                lw      $gp, 0x40+var_28($sp)
                beqz    $s3, loc_35D24
                nop

loc_35C9C:                               # CODE XREF: SSL_load_client_CA_file+200↓j
                la      $t9, X509_get_subject_name

loc_35CA0:                               # CODE XREF: SSL_load_client_CA_file+1E8↓j
                jalr    $t9 ; X509_get_subject_name
                lw      $a0, 0x40+var_20($sp)
                lw      $gp, 0x40+var_28($sp)
                move    $a0, $v0
                beqz    $v0, loc_35D8C
                la      $t9, X509_NAME_dup
                jalr    $t9 ; X509_NAME_dup
                nop
                lw      $gp, 0x40+var_28($sp)
                move    $a0, $s2
                move    $s0, $v0
                move    $a1, $v0
                beqz    $v0, loc_35D8C
                la      $t9, sk_find
                jalr    $t9 ; sk_find
                nop
                lw      $gp, 0x40+var_28($sp)
                move    $a0, $s0
                bltz    $v0, loc_35D60
                la      $t9, X509_NAME_free
                jalr    $t9 ; X509_NAME_free
                nop
                lw      $gp, 0x40+var_28($sp)
                la      $t9, PEM_read_bio_X509
                move    $a2, $zero
                move    $a3, $zero
                move    $a1, $s4
                jalr    $t9 ; PEM_read_bio_X509
                move    $a0, $s1
                beqz    $v0, loc_35BCC
                lw      $gp, 0x40+var_28($sp)
                bnez    $s3, loc_35CA0
                la      $t9, X509_get_subject_name

loc_35D24:                               # CODE XREF: SSL_load_client_CA_file+160↑j
                la      $t9, sk_new_null
                jalr    $t9 ; sk_new_null
                nop
                move    $s3, $v0
                bnez    $v0, loc_35C9C
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0xB9
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_35BC8
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_35D60:                               # CODE XREF: SSL_load_client_CA_file+1B4↑j
                la      $t9, sk_push
                move    $a0, $s2
                jalr    $t9 ; sk_push
                move    $a1, $s0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, sk_push
                move    $a1, $s0
                jalr    $t9 ; sk_push
                move    $a0, $s3
                b       loc_35C74
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_35D8C:                               # CODE XREF: SSL_load_client_CA_file+17C↑j
                                         # SSL_load_client_CA_file+19C↑j
                beqz    $s3, loc_35BC8
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                move    $a0, $s3
                b       loc_35BC8
                lw      $gp, 0x40+var_28($sp)
 # End of function SSL_load_client_CA_file


 # =============== S U B R O U T I N E =======================================


                .globl SSL_dup_CA_list
SSL_dup_CA_list:                         # DATA XREF: LOAD:00001B28↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_dup_CA_list)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, sk_new_null
                jalr    $t9 ; sk_new_null
                move    $s2, $a0
                lw      $gp, 0x28+var_18($sp)
                move    $s1, $v0
                b       loc_35E24
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_35DE8:                               # CODE XREF: SSL_dup_CA_list+9C↓j
                jalr    $t9 ; sk_value
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, X509_NAME_dup
                jalr    $t9 ; X509_NAME_dup
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                move    $a0, $s1
                move    $a1, $v0
                beqz    $v0, loc_35E68
                la      $t9, sk_push
                jalr    $t9 ; sk_push
                nop
                beqz    $v0, loc_35E68
                lw      $gp, 0x28+var_18($sp)

loc_35E24:                               # CODE XREF: SSL_dup_CA_list+38↑j
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $s2
                lw      $gp, 0x28+var_18($sp)
                slt     $v0, $s0, $v0
                move    $a1, $s0
                move    $a0, $s2
                addiu   $s0, 1
                bnez    $v0, loc_35DE8
                la      $t9, sk_value
                move    $v0, $s1
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_35E68:                               # CODE XREF: SSL_dup_CA_list+64↑j
                                         # SSL_dup_CA_list+74↑j
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_dup_CA_list


 # =============== S U B R O U T I N E =======================================


                .globl ssl_sess_cert_free
ssl_sess_cert_free:                      # CODE XREF: ssl2_accept+C5C↑p
                                         # ssl2_set_certificate+15C↑p ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_sess_cert_free)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                beqz    $a0, loc_35EE8
                move    $s0, $a0
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x1CA
                sw      $v0, 0x28+var_18($sp)
                addiu   $a3, (aSslCertC - 0x40000)  # "ssl_cert.c"
                addiu   $a0, 0x70  # 'p'
                li      $a1, 0xFFFFFFFF
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0xF
                blez    $v0, loc_35EF8
                lw      $gp, 0x28+var_10($sp)

loc_35EE8:                               # CODE XREF: ssl_sess_cert_free+1C↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_35EF8:                               # CODE XREF: ssl_sess_cert_free+48↑j
                lw      $a0, 0($s0)
                beqz    $a0, loc_35F14
                la      $t9, sk_pop_free
                la      $a1, X509_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35F14:                               # CODE XREF: ssl_sess_cert_free+64↑j
                lw      $a0, 0xC($s0)
                beqz    $a0, loc_35F2C
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35F2C:                               # CODE XREF: ssl_sess_cert_free+80↑j
                lw      $a0, 0x18($s0)
                beqz    $a0, loc_35F44
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35F44:                               # CODE XREF: ssl_sess_cert_free+98↑j
                lw      $a0, 0x24($s0)
                beqz    $a0, loc_35F5C
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35F5C:                               # CODE XREF: ssl_sess_cert_free+B0↑j
                lw      $a0, 0x30($s0)
                beqz    $a0, loc_35F74
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35F74:                               # CODE XREF: ssl_sess_cert_free+C8↑j
                lw      $a0, 0x3C($s0)
                beqz    $a0, loc_35F8C
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35F8C:                               # CODE XREF: ssl_sess_cert_free+E0↑j
                lw      $a0, 0x48($s0)
                beqz    $a0, loc_35FA4
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35FA4:                               # CODE XREF: ssl_sess_cert_free+F8↑j
                lw      $a0, 0x54($s0)
                beqz    $a0, loc_35FBC
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35FBC:                               # CODE XREF: ssl_sess_cert_free+110↑j
                lw      $a0, 0x60($s0)
                beqz    $a0, loc_35FD4
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35FD4:                               # CODE XREF: ssl_sess_cert_free+128↑j
                lw      $a0, 0x6C($s0)
                beqz    $a0, loc_35FEC
                la      $t9, RSA_free
                jalr    $t9 ; RSA_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_35FEC:                               # CODE XREF: ssl_sess_cert_free+140↑j
                la      $t9, CRYPTO_free
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $t9 ; CRYPTO_free
                addiu   $sp, 0x28
 # End of function ssl_sess_cert_free


 # =============== S U B R O U T I N E =======================================


                .globl ssl_sess_cert_new
ssl_sess_cert_new:                       # CODE XREF: ssl2_accept+C70↑p
                                         # ssl2_set_certificate+138↑p ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_sess_cert_new)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aSslCertC - 0x40000)  # "ssl_cert.c"
                li      $a0, 0x74  # 't'
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x1B5
                beqz    $v0, loc_36080
                lw      $gp, 0x28+var_10($sp)
                la      $t9, memset
                move    $s0, $v0
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; memset
                li      $a2, 0x74  # 't'
                addiu   $v1, $s0, 0xC
                li      $v0, 1
                lw      $gp, 0x28+var_10($sp)
                sw      $v1, 8($s0)
                sw      $v0, 0x70($s0)

loc_3606C:                               # CODE XREF: ssl_sess_cert_new+9C↓j
                move    $v0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_36080:                               # CODE XREF: ssl_sess_cert_new+34↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xE1
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                b       loc_3606C
                move    $s0, $zero
 # End of function ssl_sess_cert_new


 # =============== S U B R O U T I N E =======================================


                .globl ssl_cert_free
ssl_cert_free:                           # CODE XREF: SSL_copy_session_id+C4↑p
                                         # SSL_CTX_free+128↑p ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_cert_free)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                beqz    $a0, loc_360F8
                move    $s0, $a0
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x16F
                sw      $v0, 0x28+var_18($sp)
                addiu   $a3, (aSslCertC - 0x40000)  # "ssl_cert.c"
                addiu   $a0, 0x80
                li      $a1, 0xFFFFFFFF
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0xD
                blez    $v0, loc_36108
                lw      $gp, 0x28+var_10($sp)

loc_360F8:                               # CODE XREF: ssl_cert_free+1C↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_36108:                               # CODE XREF: ssl_cert_free+48↑j
                lw      $a0, 0x18($s0)
                beqz    $a0, loc_36120
                la      $t9, RSA_free
                jalr    $t9 ; RSA_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36120:                               # CODE XREF: ssl_cert_free+64↑j
                lw      $a0, 0x20($s0)
                beqz    $a0, loc_36138
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36138:                               # CODE XREF: ssl_cert_free+7C↑j
                lw      $a0, 0x24($s0)
                beqz    $a0, loc_36150
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36150:                               # CODE XREF: ssl_cert_free+94↑j
                lw      $a0, 0x2C($s0)
                beqz    $a0, loc_36168
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36168:                               # CODE XREF: ssl_cert_free+AC↑j
                lw      $a0, 0x30($s0)
                beqz    $a0, loc_36180
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36180:                               # CODE XREF: ssl_cert_free+C4↑j
                lw      $a0, 0x38($s0)
                beqz    $a0, loc_36198
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36198:                               # CODE XREF: ssl_cert_free+DC↑j
                lw      $a0, 0x3C($s0)
                beqz    $a0, loc_361B0
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_361B0:                               # CODE XREF: ssl_cert_free+F4↑j
                lw      $a0, 0x44($s0)
                beqz    $a0, loc_361C8
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_361C8:                               # CODE XREF: ssl_cert_free+10C↑j
                lw      $a0, 0x48($s0)
                beqz    $a0, loc_361E0
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_361E0:                               # CODE XREF: ssl_cert_free+124↑j
                lw      $a0, 0x50($s0)
                beqz    $a0, loc_361F8
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_361F8:                               # CODE XREF: ssl_cert_free+13C↑j
                lw      $a0, 0x54($s0)
                beqz    $a0, loc_36210
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36210:                               # CODE XREF: ssl_cert_free+154↑j
                lw      $a0, 0x5C($s0)
                beqz    $a0, loc_36228
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36228:                               # CODE XREF: ssl_cert_free+16C↑j
                lw      $a0, 0x60($s0)
                beqz    $a0, loc_36240
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36240:                               # CODE XREF: ssl_cert_free+184↑j
                lw      $a0, 0x68($s0)
                beqz    $a0, loc_36258
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36258:                               # CODE XREF: ssl_cert_free+19C↑j
                lw      $a0, 0x6C($s0)
                beqz    $a0, loc_36270
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36270:                               # CODE XREF: ssl_cert_free+1B4↑j
                lw      $a0, 0x74($s0)
                beqz    $a0, loc_36288
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36288:                               # CODE XREF: ssl_cert_free+1CC↑j
                lw      $a0, 0x78($s0)
                beqz    $a0, loc_362A0
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_362A0:                               # CODE XREF: ssl_cert_free+1E4↑j
                la      $t9, CRYPTO_free
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $t9 ; CRYPTO_free
                addiu   $sp, 0x28
 # End of function ssl_cert_free


 # =============== S U B R O U T I N E =======================================


                .globl ssl_cert_new
ssl_cert_new:                            # CODE XREF: SSL_CTX_new+128↑p
                                         # ssl_cert_inst:loc_363D0↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_cert_new)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aSslCertC - 0x40000)  # "ssl_cert.c"
                li      $a0, 0x84
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xB6
                beqz    $v0, loc_36364
                lw      $gp, 0x28+var_10($sp)
                la      $t9, memset
                move    $a0, $v0
                move    $a1, $zero
                li      $a2, 0x84
                jalr    $t9 ; memset
                move    $s0, $v0
                lw      $gp, 0x28+var_10($sp)
                addiu   $v1, $s0, 0x20  # ' '
                li      $v0, 1
                la      $t9, EVP_dss1
                sw      $v1, 0($s0)
                jalr    $t9 ; EVP_dss1
                sw      $v0, 0x80($s0)
                lw      $gp, 0x28+var_10($sp)
                la      $t9, EVP_sha1
                jalr    $t9 ; EVP_sha1
                sw      $v0, 0x40($s0)
                lw      $gp, 0x28+var_10($sp)
                la      $t9, EVP_sha1
                jalr    $t9 ; EVP_sha1
                sw      $v0, 0x34($s0)
                lw      $gp, 0x28+var_10($sp)
                sw      $v0, 0x28($s0)

loc_36350:                               # CODE XREF: ssl_cert_new+CC↓j
                move    $v0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_36364:                               # CODE XREF: ssl_cert_new+34↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xA2
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                b       loc_36350
                move    $s0, $zero
 # End of function ssl_cert_new


 # =============== S U B R O U T I N E =======================================


                .globl ssl_cert_inst
ssl_cert_inst:                           # CODE XREF: ssl3_callback_ctrl+B0↑p
                                         # ssl3_ctrl:loc_19234↑p ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_cert_inst)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                beqz    $a0, loc_363FC
                move    $s0, $a0
                lw      $v0, 0($a0)
                beqz    $v0, loc_363D0
                la      $t9, ssl_cert_new

loc_363BC:                               # CODE XREF: ssl_cert_inst+50↓j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_363D0:                               # CODE XREF: ssl_cert_inst+28↑j
                jalr    $t9 ; ssl_cert_new
                nop
                lw      $gp, 0x28+var_10($sp)
                bnez    $v0, loc_363BC
                sw      $v0, 0($s0)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xDE
                li      $a2, 0x41  # 'A'
                b       loc_36410
                sw      $zero, 0x28+var_18($sp)
 # ---------------------------------------------------------------------------

loc_363FC:                               # CODE XREF: ssl_cert_inst+1C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xDE
                li      $a2, 0x43  # 'C'

loc_36410:                               # CODE XREF: ssl_cert_inst+68↑j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function ssl_cert_inst


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_ex_data_X509_STORE_CTX_idx
SSL_get_ex_data_X509_STORE_CTX_idx:      # CODE XREF: SSL_CTX_new+34↑p
                                         # ssl_verify_cert_chain+A4↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_get_ex_data_X509_STORE_CTX_idx)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $s0, loc_40000
                la      $t9, CRYPTO_lock
                li      $s1, 0x60000
                li      $a0, 5
                li      $a1, 0xC
                addiu   $a2, $s0, (aSslCertC - 0x40000)  # "ssl_cert.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x8C
                lw      $v0, (dword_5A314 - 0x60000)($s1)
                bltz    $v0, loc_364B0
                lw      $gp, 0x30+var_18($sp)
                la      $t9, CRYPTO_lock
                addiu   $a2, $s0, (aSslCertC - 0x40000)  # "ssl_cert.c"
                li      $a0, 6
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x9E
                lw      $v0, (dword_5A314 - 0x60000)($s1)
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_364B0:                               # CODE XREF: SSL_get_ex_data_X509_STORE_CTX_idx+44↑j
                la      $t9, CRYPTO_lock
                li      $a0, 6
                li      $a1, 0xC
                addiu   $a2, $s0, (aSslCertC - 0x40000)  # "ssl_cert.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x90
                lw      $gp, 0x30+var_18($sp)
                la      $t9, CRYPTO_lock
                li      $a0, 9
                li      $a1, 0xC
                addiu   $a2, $s0, (aSslCertC - 0x40000)  # "ssl_cert.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x91
                lw      $v0, (dword_5A314 - 0x60000)($s1)
                bltz    $v0, loc_36524
                lw      $gp, 0x30+var_18($sp)
                la      $t9, CRYPTO_lock

loc_364F4:                               # CODE XREF: SSL_get_ex_data_X509_STORE_CTX_idx+11C↓j
                addiu   $a2, $s0, (aSslCertC - 0x40000)  # "ssl_cert.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x9C
                lw      $v0, (dword_5A314 - 0x60000)($s1)
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_36524:                               # CODE XREF: SSL_get_ex_data_X509_STORE_CTX_idx+B8↑j
                la      $a1, loc_40000
                la      $t9, X509_STORE_CTX_get_ex_new_index
                sw      $zero, 0x30+var_20($sp)
                addiu   $a1, (aSslForVerifyCa - 0x40000)  # "SSL for verify callback"
                move    $a0, $zero
                move    $a2, $zero
                jalr    $t9 ; X509_STORE_CTX_get_ex_new_index
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                sw      $v0, (dword_5A314 - 0x60000)($s1)
                b       loc_364F4
                la      $t9, CRYPTO_lock
 # End of function SSL_get_ex_data_X509_STORE_CTX_idx


 # =============== S U B R O U T I N E =======================================


                .globl ssl_verify_cert_chain
ssl_verify_cert_chain:                   # CODE XREF: sub_A24C+3A0↑p
                                         # ssl2_set_certificate+100↑p ...

var_A8          = -0xA8
var_A0          = -0xA0
var_98          = -0x98
var_34          = -0x34
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_verify_cert_chain)
                addu    $gp, $t9
                addiu   $sp, -0xB8
                sw      $ra, 0xB8+var_4($sp)
                sw      $s2, 0xB8+var_8($sp)
                sw      $s1, 0xB8+var_C($sp)
                sw      $s0, 0xB8+var_10($sp)
                sw      $gp, 0xB8+var_A0($sp)
                move    $s0, $a1
                beqz    $a1, loc_36598
                move    $s1, $a0
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                move    $a0, $a1
                bnez    $v0, loc_365B8
                lw      $gp, 0xB8+var_A0($sp)

loc_36598:                               # CODE XREF: ssl_verify_cert_chain+28↑j
                move    $s0, $zero
                move    $v0, $s0
                lw      $ra, 0xB8+var_4($sp)
                lw      $s2, 0xB8+var_8($sp)
                lw      $s1, 0xB8+var_C($sp)
                lw      $s0, 0xB8+var_10($sp)
                jr      $ra
                addiu   $sp, 0xB8
 # ---------------------------------------------------------------------------

loc_365B8:                               # CODE XREF: ssl_verify_cert_chain+3C↑j
                la      $t9, sk_value
                move    $a0, $s0
                jalr    $t9 ; sk_value
                move    $a1, $zero
                lw      $gp, 0xB8+var_A0($sp)
                lw      $v1, 0xDC($s1)
                lw      $a1, 0xC($v1)
                la      $t9, X509_STORE_CTX_init
                addiu   $s2, $sp, 0xB8+var_98
                move    $a2, $v0
                move    $a3, $s0
                jalr    $t9 ; X509_STORE_CTX_init
                move    $a0, $s2
                beqz    $v0, loc_366D0
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, SSL_get_ex_data_X509_STORE_CTX_idx
                jalr    $t9 ; SSL_get_ex_data_X509_STORE_CTX_idx
                nop
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, X509_STORE_CTX_set_ex_data
                move    $a1, $v0
                move    $a0, $s2
                jalr    $t9 ; X509_STORE_CTX_set_ex_data
                move    $a2, $s1
                lw      $v1, 0x24($s1)
                beqz    $v1, loc_36710
                lw      $gp, 0xB8+var_A0($sp)
                la      $v0, loc_40000
                addiu   $a1, $v0, (aSslClient - 0x40000)  # "ssl_client"

loc_3662C:                               # CODE XREF: ssl_verify_cert_chain+1C0↓j
                la      $t9, X509_STORE_CTX_set_default
                jalr    $t9 ; X509_STORE_CTX_set_default
                move    $a0, $s2
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, X509_STORE_CTX_get0_param
                jalr    $t9 ; X509_STORE_CTX_get0_param
                move    $a0, $s2
                lw      $gp, 0xB8+var_A0($sp)
                lw      $a1, 0x70($s1)
                la      $t9, X509_VERIFY_PARAM_set1
                jalr    $t9 ; X509_VERIFY_PARAM_set1
                move    $a0, $v0
                lw      $a1, 0xCC($s1)
                beqz    $a1, loc_36678
                lw      $gp, 0xB8+var_A0($sp)
                la      $t9, X509_STORE_CTX_set_verify_cb
                jalr    $t9 ; X509_STORE_CTX_set_verify_cb
                move    $a0, $s2
                lw      $gp, 0xB8+var_A0($sp)

loc_36678:                               # CODE XREF: ssl_verify_cert_chain+10C↑j
                lw      $v0, 0xDC($s1)
                lw      $t9, 0x64($v0)
                beqz    $t9, loc_3671C
                nop
                lw      $a1, 0x68($v0)
                jalr    $t9
                move    $a0, $s2
                lw      $gp, 0xB8+var_A0($sp)
                move    $s0, $v0

loc_3669C:                               # CODE XREF: ssl_verify_cert_chain+1D8↓j
                lw      $v0, 0xB8+var_34($sp)
                la      $t9, X509_STORE_CTX_cleanup
                sw      $v0, 0xE4($s1)
                jalr    $t9 ; X509_STORE_CTX_cleanup
                move    $a0, $s2
                move    $v0, $s0
                lw      $gp, 0xB8+var_A0($sp)
                lw      $ra, 0xB8+var_4($sp)
                lw      $s2, 0xB8+var_8($sp)
                lw      $s1, 0xB8+var_C($sp)
                lw      $s0, 0xB8+var_10($sp)
                jr      $ra
                addiu   $sp, 0xB8
 # ---------------------------------------------------------------------------

loc_366D0:                               # CODE XREF: ssl_verify_cert_chain+98↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xB8+var_A8($sp)
                move    $s0, $zero
                li      $a0, 0x14
                li      $a1, 0xCF
                li      $a2, 0xB
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0xB8+var_A0($sp)
                lw      $ra, 0xB8+var_4($sp)
                lw      $s2, 0xB8+var_8($sp)
                lw      $s1, 0xB8+var_C($sp)
                lw      $s0, 0xB8+var_10($sp)
                jr      $ra
                addiu   $sp, 0xB8
 # ---------------------------------------------------------------------------

loc_36710:                               # CODE XREF: ssl_verify_cert_chain+C8↑j
                la      $v0, loc_40000
                b       loc_3662C
                addiu   $a1, $v0, (aSslServer - 0x40000)  # "ssl_server"
 # ---------------------------------------------------------------------------

loc_3671C:                               # CODE XREF: ssl_verify_cert_chain+12C↑j
                la      $t9, X509_verify_cert
                jalr    $t9 ; X509_verify_cert
                move    $a0, $s2
                lw      $gp, 0xB8+var_A0($sp)
                b       loc_3669C
                move    $s0, $v0
 # End of function ssl_verify_cert_chain


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_client_CA_list
SSL_set_client_CA_list:                  # DATA XREF: LOAD:00001F18↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_set_client_CA_list)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                move    $s0, $a0
                lw      $a0, 0xF0($a0)
                beqz    $a0, loc_36778
                move    $s1, $a1
                la      $t9, sk_pop_free
                la      $a1, X509_NAME_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_36778:                               # CODE XREF: SSL_set_client_CA_list+28↑j
                sw      $s1, 0xF0($s0)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_set_client_CA_list


 # =============== S U B R O U T I N E =======================================


                .globl ssl_cert_dup
ssl_cert_dup:                            # CODE XREF: SSL_set_SSL_CTX+54↑p
                                         # SSL_new+A0↑p ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_cert_dup)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                la      $s3, loc_40000
                la      $t9, CRYPTO_malloc
                move    $s0, $a0
                addiu   $a1, $s3, (aSslCertC - 0x40000)  # "ssl_cert.c"
                li      $a0, 0x84
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xC9
                move    $s5, $v0
                beqz    $v0, loc_36970
                lw      $gp, 0x40+var_28($sp)
                la      $t9, memset
                move    $a0, $v0
                move    $a1, $zero
                li      $a2, 0x84
                jalr    $t9 ; memset
                move    $s4, $v0
                lw      $a0, 0($s0)
                addiu   $v0, $s0, 0x20  # ' '
                subu    $a0, $v0
                addiu   $v1, $s5, 0x20  # ' '
                lw      $v0, 4($s0)
                lw      $a1, 8($s0)
                lw      $a2, 0xC($s0)
                lw      $a3, 0x10($s0)
                lw      $t0, 0x14($s0)
                lw      $t1, 0x18($s0)
                addu    $v1, $a0
                lw      $gp, 0x40+var_28($sp)
                sw      $v1, 0($s5)
                sw      $v0, 4($s5)
                sw      $a1, 8($s5)
                sw      $a2, 0xC($s5)
                sw      $a3, 0x10($s5)
                beqz    $t1, loc_36864
                sw      $t0, 0x14($s5)
                la      $t9, RSA_up_ref
                jalr    $t9 ; RSA_up_ref
                move    $a0, $t1
                lw      $v1, 0x18($s0)
                lw      $gp, 0x40+var_28($sp)
                sw      $v1, 0x18($s5)

loc_36864:                               # CODE XREF: ssl_cert_dup+B4↑j
                lw      $v0, 0x1C($s0)
                move    $s1, $s4
                sw      $v0, 0x1C($s4)
                move    $s2, $zero

loc_36874:                               # CODE XREF: ssl_cert_dup+178↓j
                lw      $v0, 0x20($s0)
                la      $t9, CRYPTO_add_lock
                addiu   $a0, $v0, 0x10
                li      $a1, 1
                li      $a2, 3
                beqz    $v0, loc_368A4
                addiu   $a3, $s3, 0x5760
                sw      $v0, 0x20($s1)
                li      $v0, 0x119
                jalr    $t9 ; CRYPTO_add_lock
                sw      $v0, 0x40+var_30($sp)
                lw      $gp, 0x40+var_28($sp)

loc_368A4:                               # CODE XREF: ssl_cert_dup+F8↑j
                lw      $v0, 0x24($s0)
                la      $t9, CRYPTO_add_lock
                li      $a1, 1
                addiu   $a0, $v0, 8
                li      $a2, 0xA
                addiu   $a3, $s3, 0x5760
                beqz    $v0, loc_36900
                addiu   $s0, 0xC
                sw      $v0, 0x24($s1)
                li      $v0, 0x120
                jalr    $t9 ; CRYPTO_add_lock
                sw      $v0, 0x40+var_30($sp)
                lw      $gp, 0x40+var_28($sp)
                sltiu   $v1, $s2, 6
                li      $a0, 0x14
                li      $a1, 0xDD
                li      $a2, 0x112
                move    $a3, $zero
                bnez    $v1, loc_36900
                la      $t9, ERR_put_error
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                lw      $gp, 0x40+var_28($sp)

loc_36900:                               # CODE XREF: ssl_cert_dup+12C↑j
                                         # ssl_cert_dup+15C↑j
                addiu   $s2, 1
                li      $v0, 8
                bne     $s2, $v0, loc_36874
                addiu   $s1, 0xC
                la      $t9, EVP_dss1
                li      $v0, 1
                jalr    $t9 ; EVP_dss1
                sw      $v0, 0x80($s5)
                lw      $gp, 0x40+var_28($sp)
                la      $t9, EVP_sha1
                jalr    $t9 ; EVP_sha1
                sw      $v0, 0x40($s5)
                lw      $gp, 0x40+var_28($sp)
                la      $t9, EVP_sha1
                jalr    $t9 ; EVP_sha1
                sw      $v0, 0x34($s5)
                lw      $gp, 0x40+var_28($sp)
                sw      $v0, 0x28($s5)

loc_36948:                               # CODE XREF: ssl_cert_dup+200↓j
                move    $v0, $s4
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_36970:                               # CODE XREF: ssl_cert_dup+50↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0xDD
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                b       loc_36948
                move    $s4, $zero
 # End of function ssl_cert_dup


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_session
SSL_get_session:                         # CODE XREF: SSL_copy_session_id+30↑p
                                         # DATA XREF: LOAD:00004548↑o ...
                jr      $ra
                lw      $v0, 0xC0($a0)
 # End of function SSL_get_session


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_get_id
SSL_SESSION_get_id:                      # DATA XREF: LOAD:00001AA8↑o
                beqz    $a1, locret_369B0
                nop
                lw      $v0, 0x44($a0)
                sw      $v0, 0($a1)

locret_369B0:                            # CODE XREF: SSL_SESSION_get_id↑j
                jr      $ra
                addiu   $v0, $a0, 0x48  # 'H'
 # End of function SSL_SESSION_get_id


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_get_compress_id
SSL_SESSION_get_compress_id:             # DATA XREF: LOAD:00001898↑o
                jr      $ra
                lw      $v0, 0xA8($a0)
 # End of function SSL_SESSION_get_compress_id


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_set_timeout
SSL_SESSION_set_timeout:                 # DATA XREF: LOAD:00001908↑o
                beqz    $a0, locret_369D4
                nop
                li      $v0, 1
                jr      $ra
                sw      $a1, 0xA0($a0)
 # ---------------------------------------------------------------------------

locret_369D4:                            # CODE XREF: SSL_SESSION_set_timeout↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_SESSION_set_timeout


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_get_timeout
SSL_SESSION_get_timeout:                 # DATA XREF: LOAD:00001C08↑o
                beqz    $a0, locret_369EC
                nop
                jr      $ra
                lw      $v0, 0xA0($a0)
 # ---------------------------------------------------------------------------

locret_369EC:                            # CODE XREF: SSL_SESSION_get_timeout↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_SESSION_get_timeout


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_get_time
SSL_SESSION_get_time:                    # DATA XREF: LOAD:000017C8↑o
                beqz    $a0, locret_36A04
                nop
                jr      $ra
                lw      $v0, 0xA4($a0)
 # ---------------------------------------------------------------------------

locret_36A04:                            # CODE XREF: SSL_SESSION_get_time↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_SESSION_get_time


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_set_time
SSL_SESSION_set_time:                    # DATA XREF: LOAD:000022B8↑o
                beqz    $a0, locret_36A1C
                move    $v0, $a1
                jr      $ra
                sw      $a1, 0xA4($a0)
 # ---------------------------------------------------------------------------

locret_36A1C:                            # CODE XREF: SSL_SESSION_set_time↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_SESSION_set_time


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_get0_peer
SSL_SESSION_get0_peer:                   # DATA XREF: LOAD:00002248↑o
                jr      $ra
                lw      $v0, 0x94($a0)
 # End of function SSL_SESSION_get0_peer


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_timeout
SSL_CTX_set_timeout:                     # DATA XREF: LOAD:00001E18↑o
                beqz    $a0, locret_36A40
                nop
                lw      $v0, 0x24($a0)
                jr      $ra
                sw      $a1, 0x24($a0)
 # ---------------------------------------------------------------------------

locret_36A40:                            # CODE XREF: SSL_CTX_set_timeout↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_CTX_set_timeout


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_timeout
SSL_CTX_get_timeout:                     # DATA XREF: LOAD:00001F78↑o
                beqz    $a0, locret_36A58
                nop
                jr      $ra
                lw      $v0, 0x24($a0)
 # ---------------------------------------------------------------------------

locret_36A58:                            # CODE XREF: SSL_CTX_get_timeout↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_CTX_get_timeout


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_session_secret_cb
SSL_set_session_secret_cb:               # DATA XREF: LOAD:00001FB8↑o
                beqz    $a0, locret_36A78
                nop
                li      $v0, 1
                sw      $a2, 0x154($a0)
                jr      $ra
                sw      $a1, 0x150($a0)
 # ---------------------------------------------------------------------------

locret_36A78:                            # CODE XREF: SSL_set_session_secret_cb↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_set_session_secret_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_session_ticket_ext_cb
SSL_set_session_ticket_ext_cb:           # DATA XREF: LOAD:00001E38↑o
                beqz    $a0, locret_36A98
                nop
                li      $v0, 1
                sw      $a2, 0x14C($a0)
                jr      $ra
                sw      $a1, 0x148($a0)
 # ---------------------------------------------------------------------------

locret_36A98:                            # CODE XREF: SSL_set_session_ticket_ext_cb↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_set_session_ticket_ext_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_sess_set_new_cb
SSL_CTX_sess_set_new_cb:                 # DATA XREF: LOAD:00001F38↑o
                jr      $ra
                sw      $a1, 0x28($a0)
 # End of function SSL_CTX_sess_set_new_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_sess_get_new_cb
SSL_CTX_sess_get_new_cb:                 # DATA XREF: LOAD:00002088↑o
                jr      $ra
                lw      $v0, 0x28($a0)
 # End of function SSL_CTX_sess_get_new_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_sess_set_remove_cb
SSL_CTX_sess_set_remove_cb:              # DATA XREF: LOAD:00001DF8↑o
                jr      $ra
                sw      $a1, 0x2C($a0)
 # End of function SSL_CTX_sess_set_remove_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_sess_get_remove_cb
SSL_CTX_sess_get_remove_cb:              # DATA XREF: LOAD:00001918↑o
                jr      $ra
                lw      $v0, 0x2C($a0)
 # End of function SSL_CTX_sess_get_remove_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_sess_set_get_cb
SSL_CTX_sess_set_get_cb:                 # DATA XREF: LOAD:00001C88↑o
                jr      $ra
                sw      $a1, 0x30($a0)
 # End of function SSL_CTX_sess_set_get_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_sess_get_get_cb
SSL_CTX_sess_get_get_cb:                 # DATA XREF: LOAD:000020A8↑o
                jr      $ra
                lw      $v0, 0x30($a0)
 # End of function SSL_CTX_sess_get_get_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_info_callback
SSL_CTX_set_info_callback:               # DATA XREF: LOAD:00002118↑o
                jr      $ra
                sw      $a1, 0x9C($a0)
 # End of function SSL_CTX_set_info_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_info_callback
SSL_CTX_get_info_callback:               # DATA XREF: LOAD:00001AE8↑o
                jr      $ra
                lw      $v0, 0x9C($a0)
 # End of function SSL_CTX_get_info_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_client_cert_cb
SSL_CTX_set_client_cert_cb:              # DATA XREF: LOAD:00001C68↑o
                jr      $ra
                sw      $a1, 0x74($a0)
 # End of function SSL_CTX_set_client_cert_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_get_client_cert_cb
SSL_CTX_get_client_cert_cb:              # DATA XREF: LOAD:00001F48↑o
                jr      $ra
                lw      $v0, 0x74($a0)
 # End of function SSL_CTX_get_client_cert_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_cookie_generate_cb
SSL_CTX_set_cookie_generate_cb:          # DATA XREF: LOAD:00001C78↑o
                jr      $ra
                sw      $a1, 0x78($a0)
 # End of function SSL_CTX_set_cookie_generate_cb


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_cookie_verify_cb
SSL_CTX_set_cookie_verify_cb:            # DATA XREF: LOAD:00002018↑o
                jr      $ra
                sw      $a1, 0x7C($a0)
 # End of function SSL_CTX_set_cookie_verify_cb


 # =============== S U B R O U T I N E =======================================


                .globl PEM_write_SSL_SESSION
PEM_write_SSL_SESSION:                   # DATA XREF: LOAD:00001E58↑o

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - PEM_write_SSL_SESSION)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $gp, 0x38+var_10($sp)
                move    $a3, $a1
                la      $a1, loc_40000
                la      $t9, PEM_ASN1_write
                move    $a2, $a0
                la      $a0, i2d_SSL_SESSION
                sw      $zero, 0x38+var_28($sp)
                sw      $zero, 0x38+var_24($sp)
                sw      $zero, 0x38+var_20($sp)
                sw      $zero, 0x38+var_1C($sp)
                sw      $zero, 0x38+var_18($sp)
                jalr    $t9 ; PEM_ASN1_write
                addiu   $a1, (aSslSessionPara - 0x40000)  # "SSL SESSION PARAMETERS"
                lw      $gp, 0x38+var_10($sp)
                lw      $ra, 0x38+var_8($sp)
                jr      $ra
                addiu   $sp, 0x38
 # End of function PEM_write_SSL_SESSION


 # =============== S U B R O U T I N E =======================================


                .globl PEM_write_bio_SSL_SESSION
PEM_write_bio_SSL_SESSION:               # DATA XREF: LOAD:00001CF8↑o

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - PEM_write_bio_SSL_SESSION)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $gp, 0x38+var_10($sp)
                move    $a3, $a1
                la      $a1, loc_40000
                la      $t9, PEM_ASN1_write_bio
                move    $a2, $a0
                la      $a0, i2d_SSL_SESSION
                sw      $zero, 0x38+var_28($sp)
                sw      $zero, 0x38+var_24($sp)
                sw      $zero, 0x38+var_20($sp)
                sw      $zero, 0x38+var_1C($sp)
                sw      $zero, 0x38+var_18($sp)
                jalr    $t9 ; PEM_ASN1_write_bio
                addiu   $a1, (aSslSessionPara - 0x40000)  # "SSL SESSION PARAMETERS"
                lw      $gp, 0x38+var_10($sp)
                lw      $ra, 0x38+var_8($sp)
                jr      $ra
                addiu   $sp, 0x38
 # End of function PEM_write_bio_SSL_SESSION


 # =============== S U B R O U T I N E =======================================


                .globl PEM_read_SSL_SESSION
PEM_read_SSL_SESSION:                    # DATA XREF: LOAD:00001F88↑o

var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - PEM_read_SSL_SESSION)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                move    $v1, $a1
                la      $a1, loc_40000
                move    $v0, $a0
                la      $t9, PEM_ASN1_read
                la      $a0, d2i_SSL_SESSION
                sw      $a2, 0x28+var_18($sp)
                sw      $a3, 0x28+var_14($sp)
                addiu   $a1, (aSslSessionPara - 0x40000)  # "SSL SESSION PARAMETERS"
                move    $a2, $v0
                jalr    $t9 ; PEM_ASN1_read
                move    $a3, $v1
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function PEM_read_SSL_SESSION


 # =============== S U B R O U T I N E =======================================


                .globl PEM_read_bio_SSL_SESSION
PEM_read_bio_SSL_SESSION:                # DATA XREF: LOAD:00001E28↑o

var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - PEM_read_bio_SSL_SESSION)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                move    $v1, $a1
                la      $a1, loc_40000
                move    $v0, $a0
                la      $t9, PEM_ASN1_read_bio
                la      $a0, d2i_SSL_SESSION
                sw      $a2, 0x28+var_18($sp)
                sw      $a3, 0x28+var_14($sp)
                addiu   $a1, (aSslSessionPara - 0x40000)  # "SSL SESSION PARAMETERS"
                move    $a2, $v0
                jalr    $t9 ; PEM_ASN1_read_bio
                move    $a3, $v1
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function PEM_read_bio_SSL_SESSION


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get1_session
SSL_get1_session:                        # DATA XREF: LOAD:000018D8↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_get1_session)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $s1, loc_40000
                la      $t9, CRYPTO_lock
                move    $s0, $a0
                li      $a1, 0xE
                li      $a0, 9
                addiu   $a2, $s1, (aSslSessC - 0x40000)  # "ssl_sess.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0xA3
                lw      $s0, 0xC0($s0)
                beqz    $s0, loc_36CB0
                lw      $gp, 0x28+var_18($sp)
                lw      $v0, 0x9C($s0)
                addiu   $v0, 1
                sw      $v0, 0x9C($s0)

loc_36CB0:                               # CODE XREF: SSL_get1_session+44↑j
                la      $t9, CRYPTO_lock
                addiu   $a2, $s1, (aSslSessC - 0x40000)  # "ssl_sess.c"
                li      $a0, 0xA
                li      $a1, 0xE
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0xA7
                move    $v0, $s0
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_get1_session


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_flush_sessions
SSL_CTX_flush_sessions:                  # CODE XREF: ssl_update_cache+118↑j
                                         # SSL_CTX_free+98↑p
                                         # DATA XREF: ...

var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_flush_sessions)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_28($sp)
                lw      $v0, 0x10($a0)
                beqz    $v0, loc_36D84
                sw      $a0, 0x38+var_20($sp)
                la      $s1, loc_40000
                la      $t9, CRYPTO_lock
                li      $a3, 0x3E2
                sw      $a1, 0x38+var_1C($sp)
                sw      $v0, 0x38+var_18($sp)
                li      $a0, 9
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                addiu   $a2, $s1, (aSslSessC - 0x40000)  # "ssl_sess.c"
                lw      $gp, 0x38+var_28($sp)
                lw      $v0, 0x38+var_18($sp)
                la      $a1, loc_30000
                la      $t9, lh_doall_arg
                lw      $s0, 0x20($v0)
                move    $a0, $v0
                addiu   $a1, (sub_379B4 - 0x30000)
                sw      $zero, 0x20($v0)
                jalr    $t9 ; lh_doall_arg
                addiu   $a2, $sp, 0x38+var_20
                lw      $gp, 0x38+var_28($sp)
                lw      $v0, 0x38+var_18($sp)
                la      $t9, CRYPTO_lock
                sw      $s0, 0x20($v0)
                addiu   $a2, $s1, (aSslSessC - 0x40000)  # "ssl_sess.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x3E8
                lw      $gp, 0x38+var_28($sp)

loc_36D84:                               # CODE XREF: SSL_CTX_flush_sessions+24↑j
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # End of function SSL_CTX_flush_sessions


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_session_ticket_ext
SSL_set_session_ticket_ext:              # DATA XREF: LOAD:00002288↑o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_set_session_ticket_ext)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                lw      $v0, 0($a0)
                move    $s0, $a0
                slti    $v0, 0x301
                move    $s2, $a1
                bnez    $v0, loc_36E78
                move    $s1, $a2
                lw      $a0, 0x144($a0)
                beqz    $a0, loc_36DF0
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x30+var_18($sp)
                sw      $zero, 0x144($s0)

loc_36DF0:                               # CODE XREF: SSL_set_session_ticket_ext+40↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aSslSessC - 0x40000)  # "ssl_sess.c"
                addiu   $a0, $s1, 8
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x3A7
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_36E94
                sw      $v0, 0x144($s0)
                beqz    $s2, loc_36E54
                la      $t9, memcpy
                addiu   $a0, $v0, 8
                sw      $a0, 4($v0)
                sh      $s1, 0($v0)
                move    $a1, $s2
                jalr    $t9 ; memcpy
                move    $a2, $s1
                lw      $gp, 0x30+var_18($sp)
                li      $v0, 1

loc_36E3C:                               # CODE XREF: SSL_set_session_ticket_ext+11C↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_36E54:                               # CODE XREF: SSL_set_session_ticket_ext+7C↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                sw      $zero, 4($v0)
                sh      $zero, 0($v0)
                addiu   $sp, 0x30
                jr      $ra
                li      $v0, 1
 # ---------------------------------------------------------------------------

loc_36E78:                               # CODE XREF: SSL_set_session_ticket_ext+34↑j
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_36E94:                               # CODE XREF: SSL_set_session_ticket_ext+74↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x126
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_36E3C
                move    $v0, $zero
 # End of function SSL_set_session_ticket_ext


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_set1_id_context
SSL_SESSION_set1_id_context:             # DATA XREF: LOAD:00001AF8↑o

var_18          = -0x18
var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_SESSION_set1_id_context)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                sltiu   $v0, $a2, 0x21  # '!'
                bnez    $v0, loc_36F10
                la      $t9, memcpy
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0x138
                li      $a2, 0x111
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_36F10:                               # CODE XREF: SSL_SESSION_set1_id_context+1C↑j
                sw      $a2, 0x68($a0)
                jalr    $t9 ; memcpy
                addiu   $a0, 0x6C  # 'l'
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_SESSION_set1_id_context


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_free
SSL_SESSION_free:                        # CODE XREF: ssl3_send_newsession_ticket+164↑p
                                         # ssl_update_cache+16C↑p ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_SESSION_free)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                beqz    $a0, loc_36F80
                move    $s0, $a0
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x2E4
                sw      $v0, 0x28+var_18($sp)
                addiu   $a3, (aSslSessC - 0x40000)  # "ssl_sess.c"
                addiu   $a0, 0x9C
                li      $a1, 0xFFFFFFFF
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0xE
                blez    $v0, loc_36F90
                lw      $gp, 0x28+var_10($sp)

loc_36F80:                               # CODE XREF: SSL_SESSION_free+1C↑j
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_36F90:                               # CODE XREF: SSL_SESSION_free+48↑j
                la      $t9, CRYPTO_free_ex_data
                addiu   $a2, $s0, 0xB8
                li      $a0, 3
                jalr    $t9 ; CRYPTO_free_ex_data
                move    $a1, $s0
                lw      $gp, 0x28+var_10($sp)
                la      $t9, OPENSSL_cleanse
                addiu   $a0, $s0, 8
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 8
                lw      $gp, 0x28+var_10($sp)
                la      $t9, OPENSSL_cleanse
                addiu   $a0, $s0, 0x14
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x30  # '0'
                lw      $gp, 0x28+var_10($sp)
                la      $t9, OPENSSL_cleanse
                addiu   $a0, $s0, 0x48  # 'H'
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x20  # ' '
                lw      $a0, 0x90($s0)
                beqz    $a0, loc_36FFC
                lw      $gp, 0x28+var_10($sp)
                la      $t9, ssl_sess_cert_free
                jalr    $t9 ; ssl_sess_cert_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_36FFC:                               # CODE XREF: SSL_SESSION_free+B4↑j
                lw      $a0, 0x94($s0)
                beqz    $a0, loc_37014
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_37014:                               # CODE XREF: SSL_SESSION_free+D0↑j
                lw      $a0, 0xB4($s0)
                beqz    $a0, loc_3702C
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_3702C:                               # CODE XREF: SSL_SESSION_free+E8↑j
                lw      $a0, 0xC8($s0)
                beqz    $a0, loc_37044
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_37044:                               # CODE XREF: SSL_SESSION_free+100↑j
                lw      $a0, 0xCC($s0)
                beqz    $a0, loc_3705C
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_3705C:                               # CODE XREF: SSL_SESSION_free+118↑j
                lw      $a0, 0xD8($s0)
                beqz    $a0, loc_37074
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_10($sp)

loc_37074:                               # CODE XREF: SSL_SESSION_free+130↑j
                la      $t9, OPENSSL_cleanse
                move    $a0, $s0
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0xDC
                lw      $gp, 0x28+var_10($sp)
                la      $t9, CRYPTO_free
                move    $a0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $t9 ; CRYPTO_free
                addiu   $sp, 0x28
 # End of function SSL_SESSION_free


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_session
SSL_set_session:                         # CODE XREF: SSL_copy_session_id+44↑p
                                         # DATA XREF: LOAD:00004228↑o ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_set_session)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s1, $a1
                beqz    $a1, loc_37170
                move    $s0, $a0
                lw      $v0, 0xDC($a0)
                lw      $v1, 0($v0)
                lw      $t9, 0x5C($v1)
                jalr    $t9
                lw      $a0, 0($a1)
                move    $a1, $v0
                beqz    $v0, loc_371EC
                lw      $gp, 0x30+var_18($sp)

loc_370EC:                               # CODE XREF: SSL_set_session+160↓j
                lw      $v0, 8($s0)
                beq     $v0, $a1, loc_37108
                la      $t9, SSL_set_ssl_method
                jalr    $t9 ; SSL_set_ssl_method
                move    $a0, $s0
                beqz    $v0, loc_371C8
                lw      $gp, 0x30+var_18($sp)

loc_37108:                               # CODE XREF: SSL_set_session+50↑j
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x333
                addiu   $a0, $s1, 0x9C
                sw      $v0, 0x30+var_20($sp)
                addiu   $a3, (aSslSessC - 0x40000)  # "ssl_sess.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0xE
                lw      $a0, 0xC0($s0)
                beqz    $a0, loc_37148
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                nop
                lw      $gp, 0x30+var_18($sp)

loc_37148:                               # CODE XREF: SSL_set_session+90↑j
                lw      $v0, 0x98($s1)
                li      $v1, 1
                sw      $v0, 0xE4($s0)
                sw      $s1, 0xC0($s0)

loc_37158:                               # CODE XREF: SSL_set_session:loc_371E4↓j
                                         # SSL_set_session+188↓j
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_37170:                               # CODE XREF: SSL_set_session+24↑j
                lw      $a0, 0xC0($a0)
                beqz    $a0, loc_3718C
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                nop
                lw      $gp, 0x30+var_18($sp)
                sw      $zero, 0xC0($s0)

loc_3718C:                               # CODE XREF: SSL_set_session+D4↑j
                lw      $v0, 0xDC($s0)
                lw      $v1, 8($s0)
                lw      $a1, 0($v0)
                beq     $v1, $a1, loc_371E4
                la      $t9, SSL_set_ssl_method
                jalr    $t9 ; SSL_set_ssl_method
                move    $a0, $s0
                sltu    $v1, $zero, $v0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_371C8:                               # CODE XREF: SSL_set_session+60↑j
                move    $v1, $zero
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_371E4:                               # CODE XREF: SSL_set_session+F8↑j
                b       loc_37158
                li      $v1, 1
 # ---------------------------------------------------------------------------

loc_371EC:                               # CODE XREF: SSL_set_session+44↑j
                lw      $v0, 8($s0)
                lw      $t9, 0x5C($v0)
                jalr    $t9
                lw      $a0, 0($s1)
                move    $a1, $v0
                bnez    $v0, loc_370EC
                lw      $gp, 0x30+var_18($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xC3
                li      $a2, 0xF0
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                b       loc_37158
                move    $v1, $zero
 # End of function SSL_set_session


 # =============== S U B R O U T I N E =======================================


sub_37230:                               # DATA XREF: ssl_get_new_session+340↓o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - sub_37230)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                move    $s1, $a1
                lw      $a1, 0($a2)
                move    $s2, $a0
                move    $a0, $s1
                jalr    $t9 ; RAND_pseudo_bytes
                move    $s0, $a2
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_37488
                lw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                lw      $a1, 0($s0)
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a0, $s1
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_374A4
                lw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                lw      $a1, 0($s0)
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a0, $s1
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_374B0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                lw      $a1, 0($s0)
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a0, $s1
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_374BC
                lw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                lw      $a1, 0($s0)
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a0, $s1
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_374C8
                lw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                lw      $a1, 0($s0)
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a0, $s1
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_374D4
                lw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                lw      $a1, 0($s0)
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a0, $s1
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_374E0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                lw      $a1, 0($s0)
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a0, $s1
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_374EC
                lw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                lw      $a1, 0($s0)
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a0, $s1
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_374F8
                lw      $gp, 0x28+var_18($sp)
                la      $t9, RAND_pseudo_bytes
                lw      $a1, 0($s0)
                jalr    $t9 ; RAND_pseudo_bytes
                move    $a0, $s1
                blez    $v0, loc_37468
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_has_matching_session_id
                lw      $a2, 0($s0)
                move    $a0, $s2
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a1, $s1
                beqz    $v0, loc_37484
                lw      $gp, 0x28+var_18($sp)

loc_37468:                               # CODE XREF: sub_37230+40↑j
                                         # sub_37230+74↑j ...
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_37484:                               # CODE XREF: sub_37230+230↑j
                li      $v0, 9

loc_37488:                               # CODE XREF: sub_37230+5C↑j
                sltiu   $v0, 0xA

loc_3748C:                               # CODE XREF: sub_37230+278↓j
                                         # sub_37230+284↓j ...
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_374A4:                               # CODE XREF: sub_37230+90↑j
                li      $v0, 1
                b       loc_3748C
                sltiu   $v0, 0xA
 # ---------------------------------------------------------------------------

loc_374B0:                               # CODE XREF: sub_37230+C4↑j
                li      $v0, 2
                b       loc_3748C
                sltiu   $v0, 0xA
 # ---------------------------------------------------------------------------

loc_374BC:                               # CODE XREF: sub_37230+F8↑j
                li      $v0, 3
                b       loc_3748C
                sltiu   $v0, 0xA
 # ---------------------------------------------------------------------------

loc_374C8:                               # CODE XREF: sub_37230+12C↑j
                li      $v0, 4
                b       loc_3748C
                sltiu   $v0, 0xA
 # ---------------------------------------------------------------------------

loc_374D4:                               # CODE XREF: sub_37230+160↑j
                li      $v0, 5
                b       loc_3748C
                sltiu   $v0, 0xA
 # ---------------------------------------------------------------------------

loc_374E0:                               # CODE XREF: sub_37230+194↑j
                li      $v0, 6
                b       loc_3748C
                sltiu   $v0, 0xA
 # ---------------------------------------------------------------------------

loc_374EC:                               # CODE XREF: sub_37230+1C8↑j
                li      $v0, 7
                b       loc_3748C
                sltiu   $v0, 0xA
 # ---------------------------------------------------------------------------

loc_374F8:                               # CODE XREF: sub_37230+1FC↑j
                li      $v0, 8
                b       loc_3748C
                sltiu   $v0, 0xA
 # End of function sub_37230


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_new
SSL_SESSION_new:                         # CODE XREF: ssl_get_new_session+30↓p
                                         # d2i_SSL_SESSION:loc_3E4A8↓p
                                         # DATA XREF: ...

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_SESSION_new)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aSslSessC - 0x40000)  # "ssl_sess.c"
                li      $a0, 0xDC
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0xC0
                beqz    $v0, loc_375C4
                lw      $gp, 0x28+var_10($sp)
                la      $t9, memset
                move    $a1, $zero
                li      $a2, 0xDC
                move    $a0, $v0
                jalr    $t9 ; memset
                move    $s0, $v0
                lw      $gp, 0x28+var_10($sp)
                li      $v1, 1
                li      $v0, 0x130
                la      $t9, time
                sw      $v1, 0x9C($s0)
                sw      $v1, 0x98($s0)
                move    $a0, $zero
                jalr    $t9 ; time
                sw      $v0, 0xA0($s0)
                lw      $gp, 0x28+var_10($sp)
                la      $t9, CRYPTO_new_ex_data
                sw      $v0, 0xA4($s0)
                sw      $zero, 0xC0($s0)
                sw      $zero, 0xC4($s0)
                sw      $zero, 0xA8($s0)
                sw      $zero, 0xC8($s0)
                li      $a0, 3
                move    $a1, $s0
                jalr    $t9 ; CRYPTO_new_ex_data
                addiu   $a2, $s0, 0xB8
                lw      $gp, 0x28+var_10($sp)
                sw      $zero, 0xD8($s0)

loc_375B0:                               # CODE XREF: SSL_SESSION_new+E0↓j
                move    $v0, $s0
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_375C4:                               # CODE XREF: SSL_SESSION_new+34↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x14
                li      $a1, 0xBD
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                b       loc_375B0
                move    $s0, $zero
 # End of function SSL_SESSION_new


 # =============== S U B R O U T I N E =======================================


                .globl ssl_get_new_session
ssl_get_new_session:                     # CODE XREF: ssl2_accept+ADC↑p
                                         # ssl2_connect+2D8↑p ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_get_new_session)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_28($sp)
                la      $t9, SSL_SESSION_new
                move    $s1, $a0
                jalr    $t9 ; SSL_SESSION_new
                move    $s2, $a1
                move    $s0, $v0
                beqz    $v0, loc_378C0
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x158($s1)
                lw      $v0, 0x24($v0)
                beqz    $v0, loc_377B4
                la      $t9, SSL_get_default_timeout
                sw      $v0, 0xA0($s0)

loc_37644:                               # CODE XREF: ssl_get_new_session+1D4↓j
                lw      $a0, 0xC0($s1)
                beqz    $a0, loc_37660
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                nop
                lw      $gp, 0x40+var_28($sp)
                sw      $zero, 0xC0($s1)

loc_37660:                               # CODE XREF: ssl_get_new_session+5C↑j
                bnez    $s2, loc_376CC
                li      $v0, 2
                sw      $zero, 0x44($s0)

loc_3766C:                               # CODE XREF: ssl_get_new_session+150↓j
                lw      $a2, 0x9C($s1)
                sltiu   $v0, $a2, 0x21  # '!'
                bnez    $v0, loc_3776C
                la      $t9, memcpy

loc_3767C:                               # CODE XREF: ssl_get_new_session+164↓j
                la      $t9, ERR_put_error

loc_37680:                               # CODE XREF: ssl_get_new_session+174↓j
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0xB5
                li      $a2, 0x44  # 'D'

loc_37690:                               # CODE XREF: ssl_get_new_session+128↓j
                                         # ssl_get_new_session+2B8↓j ...
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                move    $a0, $s0
                lw      $gp, 0x40+var_28($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_376CC:                               # CODE XREF: ssl_get_new_session:loc_37660↑j
                lw      $v1, 0($s1)
                beq     $v1, $v0, loc_377C8
                li      $v0, 0x300
                beq     $v1, $v0, loc_3771C
                li      $v0, 0x301
                beq     $v1, $v0, loc_3771C
                li      $v0, 0x302
                beq     $v1, $v0, loc_3771C
                li      $v0, 0x303
                beq     $v1, $v0, loc_3771C
                li      $v0, 0x100
                beq     $v1, $v0, loc_3771C
                li      $v0, 0xFEFF
                beq     $v1, $v0, loc_3771C
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xB5
                li      $a2, 0x103
                b       loc_37690
                sw      $zero, 0x40+var_30($sp)
 # ---------------------------------------------------------------------------

loc_3771C:                               # CODE XREF: ssl_get_new_session+EC↑j
                                         # ssl_get_new_session+F4↑j ...
                li      $v0, 0x20  # ' '
                sw      $v1, 0($s0)
                sw      $v0, 0x44($s0)
                lw      $v0, 0x138($s1)
                beqz    $v0, loc_377E0
                la      $s3, loc_40000

loc_37734:                               # CODE XREF: ssl_get_new_session+1EC↓j
                sw      $zero, 0x44($s0)

loc_37738:                               # CODE XREF: ssl_get_new_session+2A0↓j
                lw      $a0, 0x118($s1)
                beqz    $a0, loc_3766C
                la      $t9, BUF_strdup
                jalr    $t9 ; BUF_strdup
                nop
                lw      $gp, 0x40+var_28($sp)
                beqz    $v0, loc_3767C
                sw      $v0, 0xC8($s0)
                lw      $a2, 0x9C($s1)
                sltiu   $v0, $a2, 0x21  # '!'
                beqz    $v0, loc_37680
                la      $t9, ERR_put_error
                la      $t9, memcpy

loc_3776C:                               # CODE XREF: ssl_get_new_session+88↑j
                addiu   $a0, $s0, 0x6C  # 'l'
                jalr    $t9 ; memcpy
                addiu   $a1, $s1, 0xA0
                lw      $v1, 0x9C($s1)
                lw      $gp, 0x40+var_28($sp)
                sw      $v1, 0x68($s0)
                lw      $v0, 0($s1)
                sw      $s0, 0xC0($s1)
                sw      $v0, 0($s0)
                sw      $zero, 0x98($s0)
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_377B4:                               # CODE XREF: ssl_get_new_session+4C↑j
                jalr    $t9 ; SSL_get_default_timeout
                move    $a0, $s1
                lw      $gp, 0x40+var_28($sp)
                b       loc_37644
                sw      $v0, 0xA0($s0)
 # ---------------------------------------------------------------------------

loc_377C8:                               # CODE XREF: ssl_get_new_session+E4↑j
                li      $v0, 0x10
                sw      $v1, 0($s0)
                sw      $v0, 0x44($s0)
                lw      $v0, 0x138($s1)
                bnez    $v0, loc_37734
                la      $s3, loc_40000

loc_377E0:                               # CODE XREF: ssl_get_new_session+140↑j
                la      $t9, CRYPTO_lock
                li      $a0, 5
                li      $a1, 0xC
                addiu   $a2, $s3, (aSslSessC - 0x40000)  # "ssl_sess.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x15A
                lw      $s2, 0xC4($s1)
                beqz    $s2, loc_37914
                lw      $gp, 0x40+var_28($sp)
                la      $t9, CRYPTO_lock

loc_37808:                               # CODE XREF: ssl_get_new_session+330↓j
                                         # ssl_get_new_session+33C↓j
                addiu   $a2, $s3, (aSslSessC - 0x40000)  # "ssl_sess.c"
                li      $a0, 6
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x15F
                lw      $v0, 0x44($s0)
                addiu   $s3, $s0, 0x48  # 'H'
                sw      $v0, 0x40+var_20($sp)
                move    $a0, $s1
                move    $a1, $s3
                move    $t9, $s2
                jalr    $t9
                addiu   $a2, $sp, 0x40+var_20
                beqz    $v0, loc_378FC
                lw      $gp, 0x40+var_28($sp)
                lw      $a0, 0x40+var_20($sp)
                beqz    $a0, loc_378AC
                la      $t9, ERR_put_error
                lw      $a2, 0x44($s0)
                sltu    $v0, $a2, $a0
                bnez    $v0, loc_378AC
                sltu    $v0, $a0, $a2
                beqz    $v0, loc_37874
                li      $v0, 2
                lw      $v1, 0($s1)
                beq     $v1, $v0, loc_378E0
                la      $t9, memset

loc_37874:                               # CODE XREF: ssl_get_new_session+274↑j
                sw      $a0, 0x44($s0)
                move    $a2, $a0

loc_3787C:                               # CODE XREF: ssl_get_new_session+308↓j
                la      $t9, SSL_has_matching_session_id
                move    $a1, $s3
                jalr    $t9 ; SSL_has_matching_session_id
                move    $a0, $s1
                beqz    $v0, loc_37738
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xB5
                li      $a2, 0x12E
                b       loc_37690
                sw      $zero, 0x40+var_30($sp)
 # ---------------------------------------------------------------------------

loc_378AC:                               # CODE XREF: ssl_get_new_session+25C↑j
                                         # ssl_get_new_session+26C↑j
                li      $a0, 0x14
                li      $a1, 0xB5
                li      $a2, 0x12F
                b       loc_37690
                sw      $zero, 0x40+var_30($sp)
 # ---------------------------------------------------------------------------

loc_378C0:                               # CODE XREF: ssl_get_new_session+3C↑j
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_378E0:                               # CODE XREF: ssl_get_new_session+280↑j
                subu    $a2, $a0
                move    $a1, $zero
                jalr    $t9 ; memset
                addu    $a0, $s3, $a0
                lw      $gp, 0x40+var_28($sp)
                b       loc_3787C
                lw      $a2, 0x44($s0)
 # ---------------------------------------------------------------------------

loc_378FC:                               # CODE XREF: ssl_get_new_session+250↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xB5
                li      $a2, 0x12D
                b       loc_37690
                sw      $zero, 0x40+var_30($sp)
 # ---------------------------------------------------------------------------

loc_37914:                               # CODE XREF: ssl_get_new_session+210↑j
                lw      $v0, 0x158($s1)
                lw      $s2, 0xEC($v0)
                bnez    $s2, loc_37808
                la      $t9, CRYPTO_lock
                la      $v0, loc_30000
                b       loc_37808
                addiu   $s2, $v0, (sub_37230 - 0x30000)
 # End of function ssl_get_new_session


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_get_ex_data
SSL_SESSION_get_ex_data:                 # DATA XREF: LOAD:00001C98↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_SESSION_get_ex_data)
                addu    $gp, $t9
                la      $t9, CRYPTO_get_ex_data
                jr      $t9 ; CRYPTO_get_ex_data
                addiu   $a0, 0xB8
 # End of function SSL_SESSION_get_ex_data


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_set_ex_data
SSL_SESSION_set_ex_data:                 # DATA XREF: LOAD:00001928↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_SESSION_set_ex_data)
                addu    $gp, $t9
                la      $t9, CRYPTO_set_ex_data
                jr      $t9 ; CRYPTO_set_ex_data
                addiu   $a0, 0xB8
 # End of function SSL_SESSION_set_ex_data


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_get_ex_new_index
SSL_SESSION_get_ex_new_index:            # DATA XREF: LOAD:00001D38↑o

var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_8           = -8
arg_10          =  0x10

                la      $gp, (off_5A360+0x7FF0 - SSL_SESSION_get_ex_new_index)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                lw      $v0, 0x28+arg_10($sp)
                move    $v1, $a1
                move    $t0, $a2
                la      $t9, CRYPTO_get_ex_new_index
                sw      $a3, 0x28+var_18($sp)
                sw      $v0, 0x28+var_14($sp)
                move    $a1, $a0
                move    $a2, $v1
                move    $a3, $t0
                jalr    $t9 ; CRYPTO_get_ex_new_index
                li      $a0, 3
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_8($sp)
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_SESSION_get_ex_new_index


 # =============== S U B R O U T I N E =======================================


sub_379B4:                               # DATA XREF: SSL_CTX_flush_sessions+68↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_379B4)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                move    $s1, $a1
                lw      $a1, 4($a1)
                beqz    $a1, loc_379FC
                move    $s0, $a0
                lw      $v0, 0xA0($a0)
                lw      $v1, 0xA4($a0)
                addu    $v0, $v1
                slt     $v0, $a1
                beqz    $v0, loc_37A84
                lw      $ra, 0x28+var_8($sp)

loc_379FC:                               # CODE XREF: sub_379B4+28↑j
                la      $t9, lh_delete
                lw      $a0, 8($s1)
                jalr    $t9 ; lh_delete
                move    $a1, $s0
                lw      $a1, 0xC4($s0)
                lw      $gp, 0x28+var_18($sp)
                beqz    $a1, loc_37A4C
                lw      $a0, 0($s1)
                lw      $v1, 0xC0($s0)
                beqz    $v1, loc_37A4C
                addiu   $v0, $a0, 0x1C
                beq     $a1, $v0, loc_37A94
                addiu   $v0, $a0, 0x18
                beq     $v1, $v0, loc_37AB4
                nop
                sw      $v1, 0xC0($a1)
                lw      $v0, 0xC0($s0)
                sw      $zero, 0xC0($s0)
                sw      $a1, 0xC4($v0)
                sw      $zero, 0xC4($s0)

loc_37A4C:                               # CODE XREF: sub_379B4+60↑j
                                         # sub_379B4+6C↑j ...
                lw      $t9, 0x2C($a0)
                li      $v0, 1
                beqz    $t9, loc_37A68
                sw      $v0, 0x8C($s0)
                jalr    $t9
                move    $a1, $s0
                lw      $gp, 0x28+var_18($sp)

loc_37A68:                               # CODE XREF: sub_379B4+A0↑j
                la      $t9, SSL_SESSION_free
                move    $a0, $s0
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $t9 ; SSL_SESSION_free
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_37A84:                               # CODE XREF: sub_379B4+40↑j
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_37A94:                               # CODE XREF: sub_379B4+74↑j
                beq     $v1, $v0, loc_37ACC
                nop
                sw      $v1, 0x1C($a0)
                lw      $v0, 0xC0($s0)
                sw      $zero, 0xC0($s0)
                sw      $a1, 0xC4($v0)
                b       loc_37A4C
                sw      $zero, 0xC4($s0)
 # ---------------------------------------------------------------------------

loc_37AB4:                               # CODE XREF: sub_379B4+7C↑j
                sw      $a1, 0x18($a0)
                lw      $v0, 0xC4($s0)
                sw      $zero, 0xC4($s0)
                sw      $v1, 0xC0($v0)
                b       loc_37A4C
                sw      $zero, 0xC0($s0)
 # ---------------------------------------------------------------------------

loc_37ACC:                               # CODE XREF: sub_379B4:loc_37A94↑j
                sw      $zero, 0x18($a0)
                sw      $zero, 0x1C($a0)
                sw      $zero, 0xC4($s0)
                b       loc_37A4C
                sw      $zero, 0xC0($s0)
 # End of function sub_379B4


 # =============== S U B R O U T I N E =======================================


sub_37AE0:                               # CODE XREF: SSL_CTX_remove_session+14↓j
                                         # DATA XREF: SSL_CTX_remove_session+10↓o ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - sub_37AE0)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s4, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                move    $s0, $a1
                move    $s3, $a0
                beqz    $a1, loc_37BB4
                move    $s4, $a2
                lw      $v0, 0x44($a1)
                beqz    $v0, loc_37BB4
                nop
                bnez    $a2, loc_37C08
                la      $a2, loc_40000

loc_37B30:                               # CODE XREF: sub_37AE0+140↓j
                la      $t9, lh_retrieve
                lw      $a0, 0x10($s3)
                jalr    $t9 ; lh_retrieve
                move    $a1, $s0
                move    $s1, $v0
                beq     $v0, $s0, loc_37C28
                lw      $gp, 0x30+var_20($sp)
                move    $s2, $v0
                bnez    $s4, loc_37BDC
                move    $s0, $zero

loc_37B58:                               # CODE XREF: sub_37AE0+198↓j
                                         # sub_37AE0:loc_37C88↓j
                beqz    $s0, loc_37B94
                move    $v0, $s0

loc_37B60:                               # CODE XREF: sub_37AE0+118↓j
                lw      $t9, 0x2C($s3)
                li      $v0, 1
                beqz    $t9, loc_37B80
                sw      $v0, 0x8C($s2)
                move    $a0, $s3
                jalr    $t9
                move    $a1, $s2
                lw      $gp, 0x30+var_20($sp)

loc_37B80:                               # CODE XREF: sub_37AE0+88↑j
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                move    $a0, $s2
                lw      $gp, 0x30+var_20($sp)
                move    $v0, $s0

loc_37B94:                               # CODE XREF: sub_37AE0:loc_37B58↑j
                                         # sub_37AE0+120↓j
                lw      $ra, 0x30+var_4($sp)
                lw      $s4, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_37BB4:                               # CODE XREF: sub_37AE0+34↑j
                                         # sub_37AE0+40↑j
                move    $s0, $zero
                move    $v0, $s0
                lw      $ra, 0x30+var_4($sp)
                lw      $s4, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_37BDC:                               # CODE XREF: sub_37AE0+70↑j
                la      $a2, loc_40000

loc_37BE0:                               # CODE XREF: sub_37AE0+1A0↓j
                                         # sub_37AE0+1B0↓j
                la      $t9, CRYPTO_lock
                addiu   $a2, (aSslSessC - 0x40000)  # "ssl_sess.c"
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2CE
                bnez    $s0, loc_37B60
                lw      $gp, 0x30+var_20($sp)
                b       loc_37B94
                move    $v0, $s0
 # ---------------------------------------------------------------------------

loc_37C08:                               # CODE XREF: sub_37AE0+48↑j
                la      $t9, CRYPTO_lock
                addiu   $a2, (aSslSessC - 0x40000)  # "ssl_sess.c"
                li      $a0, 9
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2C6
                b       loc_37B30
                lw      $gp, 0x30+var_20($sp)
 # ---------------------------------------------------------------------------

loc_37C28:                               # CODE XREF: sub_37AE0+64↑j
                la      $t9, lh_delete
                lw      $a0, 0x10($s3)
                jalr    $t9 ; lh_delete
                move    $a1, $v0
                lw      $a0, 0xC4($s1)
                lw      $gp, 0x30+var_20($sp)
                beqz    $a0, loc_37C88
                move    $s2, $v0
                lw      $v1, 0xC0($s1)
                beqz    $v1, loc_37C88
                addiu   $v0, $s3, 0x1C
                beq     $a0, $v0, loc_37C98
                addiu   $v0, $s3, 0x18
                beq     $v1, $v0, loc_37CB0
                nop
                sw      $v1, 0xC0($a0)
                lw      $v0, 0xC0($s1)
                sw      $a0, 0xC4($v0)

loc_37C70:                               # CODE XREF: sub_37AE0+1C8↓j
                                         # sub_37AE0+1D8↓j ...
                li      $s0, 1
                sw      $zero, 0xC0($s1)
                beqz    $s4, loc_37B58
                sw      $zero, 0xC4($s1)
                b       loc_37BE0
                la      $a2, loc_40000
 # ---------------------------------------------------------------------------

loc_37C88:                               # CODE XREF: sub_37AE0+160↑j
                                         # sub_37AE0+16C↑j
                beqz    $s4, loc_37B58
                li      $s0, 1
                b       loc_37BE0
                la      $a2, loc_40000
 # ---------------------------------------------------------------------------

loc_37C98:                               # CODE XREF: sub_37AE0+174↑j
                beq     $v1, $v0, loc_37CC0
                nop
                sw      $v1, 0x1C($s3)
                lw      $v0, 0xC0($s1)
                b       loc_37C70
                sw      $a0, 0xC4($v0)
 # ---------------------------------------------------------------------------

loc_37CB0:                               # CODE XREF: sub_37AE0+17C↑j
                sw      $a0, 0x18($s3)
                lw      $v0, 0xC4($s1)
                b       loc_37C70
                sw      $v1, 0xC0($v0)
 # ---------------------------------------------------------------------------

loc_37CC0:                               # CODE XREF: sub_37AE0:loc_37C98↑j
                sw      $zero, 0x18($s3)
                b       loc_37C70
                sw      $zero, 0x1C($s3)
 # End of function sub_37AE0


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_remove_session
SSL_CTX_remove_session:                  # CODE XREF: ssl3_send_alert+E8↑p
                                         # ssl3_read_bytes+F08↑p ...
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_remove_session)
                addu    $gp, $t9
                la      $t9, loc_30000
                addiu   $t9, (sub_37AE0 - 0x30000)
                jr      $t9 ; sub_37AE0
                li      $a2, 1
 # End of function SSL_CTX_remove_session


 # =============== S U B R O U T I N E =======================================


                .globl ssl_clear_bad_session
ssl_clear_bad_session:                   # CODE XREF: SSL_clear+2C↑p
                                         # SSL_free+148↑p
                                         # DATA XREF: ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_clear_bad_session)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v0, 0xC0($a0)
                beqz    $v0, loc_37D20
                move    $s0, $a0
                lw      $v0, 0x30($a0)
                andi    $v0, 1
                beqz    $v0, loc_37D34
                la      $t9, SSL_state

loc_37D20:                               # CODE XREF: ssl_clear_bad_session+20↑j
                                         # ssl_clear_bad_session+58↓j ...
                move    $v0, $zero

loc_37D24:                               # CODE XREF: ssl_clear_bad_session+8C↓j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_37D34:                               # CODE XREF: ssl_clear_bad_session+30↑j
                jalr    $t9 ; SSL_state
                nop
                andi    $v0, 0x3000
                bnez    $v0, loc_37D20
                lw      $gp, 0x20+var_10($sp)
                la      $t9, SSL_state
                jalr    $t9 ; SSL_state
                move    $a0, $s0
                andi    $v0, 0x4000
                bnez    $v0, loc_37D20
                lw      $gp, 0x20+var_10($sp)
                la      $t9, SSL_CTX_remove_session
                lw      $a1, 0xC0($s0)
                jalr    $t9 ; SSL_CTX_remove_session
                lw      $a0, 0xDC($s0)
                lw      $gp, 0x20+var_10($sp)
                b       loc_37D24
                li      $v0, 1
 # End of function ssl_clear_bad_session


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_add_session
SSL_CTX_add_session:                     # CODE XREF: ssl_update_cache:loc_32620↑p
                                         # ssl_get_prev_session+260↓p
                                         # DATA XREF: ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_add_session)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $s3, loc_40000
                la      $t9, CRYPTO_add_lock
                move    $s0, $a1
                li      $v0, 0x281
                move    $s1, $a0
                li      $a1, 1
                addiu   $a0, $s0, 0x9C
                li      $a2, 0xE
                addiu   $a3, $s3, (aSslSessC - 0x40000)  # "ssl_sess.c"
                jalr    $t9 ; CRYPTO_add_lock
                sw      $v0, 0x38+var_28($sp)
                lw      $gp, 0x38+var_20($sp)
                la      $t9, CRYPTO_lock
                li      $a0, 9
                li      $a1, 0xC
                addiu   $a2, $s3, (aSslSessC - 0x40000)  # "ssl_sess.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x284
                lw      $gp, 0x38+var_20($sp)
                lw      $a0, 0x10($s1)
                la      $t9, lh_insert
                jalr    $t9 ; lh_insert
                move    $a1, $s0
                move    $a0, $v0
                beqz    $v0, loc_37FA8
                lw      $gp, 0x38+var_20($sp)
                beq     $v0, $s0, loc_37F98
                la      $t9, SSL_SESSION_free
                lw      $a1, 0xC4($v0)
                beqz    $a1, loc_37F90
                nop
                lw      $v1, 0xC0($v0)
                beqz    $v1, loc_37F90
                addiu   $v0, $s1, 0x1C
                beq     $a1, $v0, loc_37FE0
                addiu   $s2, $s1, 0x18
                beq     $v1, $s2, loc_38008
                nop
                sw      $v1, 0xC0($a1)
                lw      $v0, 0xC0($a0)
                sw      $a1, 0xC4($v0)

loc_37E48:                               # CODE XREF: SSL_CTX_add_session+274↓j
                                         # SSL_CTX_add_session+294↓j ...
                sw      $zero, 0xC4($a0)
                sw      $zero, 0xC0($a0)

loc_37E50:                               # CODE XREF: SSL_CTX_add_session:loc_37F90↓j
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                nop
                lw      $gp, 0x38+var_20($sp)

loc_37E60:                               # CODE XREF: SSL_CTX_add_session:loc_37FA8↓j
                lw      $a0, 0xC4($s0)
                beqz    $a0, loc_37E9C
                nop
                lw      $v1, 0xC0($s0)
                beqz    $v1, loc_37E9C
                addiu   $v0, $s1, 0x1C
                beq     $a0, $v0, loc_37FC8
                nop
                beq     $v1, $s2, loc_37FF8
                nop
                sw      $v1, 0xC0($a0)
                lw      $v0, 0xC0($s0)
                sw      $a0, 0xC4($v0)

loc_37E94:                               # CODE XREF: SSL_CTX_add_session+25C↓j
                                         # SSL_CTX_add_session+284↓j ...
                sw      $zero, 0xC4($s0)
                sw      $zero, 0xC0($s0)

loc_37E9C:                               # CODE XREF: SSL_CTX_add_session+E8↑j
                                         # SSL_CTX_add_session+F4↑j
                lw      $v0, 0x18($s1)
                beqz    $v0, loc_37FB0
                nop
                sw      $s0, 0xC0($v0)
                sw      $v0, 0xC4($s0)
                sw      $s2, 0xC0($s0)
                sw      $s0, 0x18($s1)

loc_37EB8:                               # CODE XREF: SSL_CTX_add_session+244↓j
                la      $t9, SSL_CTX_ctrl
                move    $a0, $s1
                li      $a1, 0x2B  # '+'
                move    $a2, $zero
                jalr    $t9 ; SSL_CTX_ctrl
                move    $a3, $zero
                blez    $v0, loc_37F50
                lw      $gp, 0x38+var_20($sp)
                la      $v0, loc_30000
                b       loc_37F04
                addiu   $s2, $v0, (sub_37AE0 - 0x30000)
 # ---------------------------------------------------------------------------

loc_37EE4:                               # CODE XREF: SSL_CTX_add_session+1CC↓j
                move    $t9, $s2
                jalr    $t9
                lw      $a1, 0x1C($s1)
                beqz    $v0, loc_37F50
                lw      $gp, 0x38+var_20($sp)
                lw      $v0, 0x54($s1)
                addiu   $v0, 1
                sw      $v0, 0x54($s1)

loc_37F04:                               # CODE XREF: SSL_CTX_add_session+160↑j
                la      $t9, SSL_CTX_ctrl
                move    $a0, $s1
                li      $a1, 0x14
                move    $a2, $zero
                jalr    $t9 ; SSL_CTX_ctrl
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_CTX_ctrl
                move    $a0, $s1
                move    $a2, $zero
                move    $a3, $zero
                li      $a1, 0x2B  # '+'
                jalr    $t9 ; SSL_CTX_ctrl
                move    $s0, $v0
                slt     $s0, $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                move    $a0, $s1
                bnez    $s0, loc_37EE4
                move    $a2, $zero

loc_37F50:                               # CODE XREF: SSL_CTX_add_session+154↑j
                                         # SSL_CTX_add_session+174↑j
                li      $s0, 1

loc_37F54:                               # CODE XREF: SSL_CTX_add_session+224↓j
                la      $t9, CRYPTO_lock
                addiu   $a2, $s3, 0x57DC
                li      $a0, 0xA
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x2B6
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_37F90:                               # CODE XREF: SSL_CTX_add_session+9C↑j
                                         # SSL_CTX_add_session+A8↑j
                b       loc_37E50
                addiu   $s2, $s1, 0x18
 # ---------------------------------------------------------------------------

loc_37F98:                               # CODE XREF: SSL_CTX_add_session+90↑j
                jalr    $t9 ; SSL_SESSION_free
                move    $s0, $zero
                b       loc_37F54
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_37FA8:                               # CODE XREF: SSL_CTX_add_session+88↑j
                b       loc_37E60
                addiu   $s2, $s1, 0x18
 # ---------------------------------------------------------------------------

loc_37FB0:                               # CODE XREF: SSL_CTX_add_session+124↑j
                addiu   $v0, $s1, 0x1C
                sw      $s0, 0x18($s1)
                sw      $s0, 0x1C($s1)
                sw      $v0, 0xC4($s0)
                b       loc_37EB8
                sw      $s2, 0xC0($s0)
 # ---------------------------------------------------------------------------

loc_37FC8:                               # CODE XREF: SSL_CTX_add_session+FC↑j
                beq     $v1, $s2, loc_38018
                nop
                sw      $v1, 0x1C($s1)
                lw      $v0, 0xC0($s0)
                b       loc_37E94
                sw      $a0, 0xC4($v0)
 # ---------------------------------------------------------------------------

loc_37FE0:                               # CODE XREF: SSL_CTX_add_session+B0↑j
                beq     $v1, $s2, loc_38024
                nop
                sw      $v1, 0x1C($s1)
                lw      $v0, 0xC0($a0)
                b       loc_37E48
                sw      $a1, 0xC4($v0)
 # ---------------------------------------------------------------------------

loc_37FF8:                               # CODE XREF: SSL_CTX_add_session+104↑j
                sw      $a0, 0x18($s1)
                lw      $v0, 0xC4($s0)
                b       loc_37E94
                sw      $s2, 0xC0($v0)
 # ---------------------------------------------------------------------------

loc_38008:                               # CODE XREF: SSL_CTX_add_session+B8↑j
                sw      $a1, 0x18($s1)
                lw      $v0, 0xC4($a0)
                b       loc_37E48
                sw      $s2, 0xC0($v0)
 # ---------------------------------------------------------------------------

loc_38018:                               # CODE XREF: SSL_CTX_add_session:loc_37FC8↑j
                sw      $zero, 0x18($s1)
                b       loc_37E94
                sw      $zero, 0x1C($s1)
 # ---------------------------------------------------------------------------

loc_38024:                               # CODE XREF: SSL_CTX_add_session:loc_37FE0↑j
                sw      $zero, 0x18($s1)
                b       loc_37E48
                sw      $zero, 0x1C($s1)
 # End of function SSL_CTX_add_session


 # =============== S U B R O U T I N E =======================================


                .globl ssl_get_prev_session
ssl_get_prev_session:                    # CODE XREF: ssl2_accept+AA4↑p
                                         # ssl3_get_client_hello+394↑p
                                         # DATA XREF: ...

var_120         = -0x120
var_118         = -0x118
var_110         = -0x110
var_10C         = -0x10C
var_108         = -0x108
var_107         = -0x107
var_106         = -0x106
var_105         = -0x105
var_100         = -0x100
var_BC          = -0xBC
var_B8          = -0xB8
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_get_prev_session)
                addu    $gp, $t9
                addiu   $sp, -0x130
                sw      $ra, 0x130+var_8($sp)
                sw      $s5, 0x130+var_C($sp)
                sw      $s4, 0x130+var_10($sp)
                sw      $s3, 0x130+var_14($sp)
                sw      $s2, 0x130+var_18($sp)
                sw      $s1, 0x130+var_1C($sp)
                sw      $s0, 0x130+var_20($sp)
                sw      $gp, 0x130+var_118($sp)
                slti    $v0, $a2, 0x21  # '!'
                move    $s0, $a2
                move    $s2, $a0
                bnez    $v0, loc_380A0
                move    $s3, $a1

loc_38074:                               # CODE XREF: ssl_get_prev_session:loc_38138↓j
                                         # ssl_get_prev_session:loc_382AC↓j
                move    $v1, $zero

loc_38078:                               # CODE XREF: ssl_get_prev_session:loc_38100↓j
                                         # ssl_get_prev_session+370↓j
                lw      $ra, 0x130+var_8($sp)

loc_3807C:                               # CODE XREF: ssl_get_prev_session+110↓j
                                         # ssl_get_prev_session+284↓j
                lw      $s5, 0x130+var_C($sp)
                lw      $s4, 0x130+var_10($sp)
                lw      $s3, 0x130+var_14($sp)
                lw      $s2, 0x130+var_18($sp)
                lw      $s1, 0x130+var_1C($sp)
                lw      $s0, 0x130+var_20($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x130
 # ---------------------------------------------------------------------------

loc_380A0:                               # CODE XREF: ssl_get_prev_session+3C↑j
                la      $t9, tls1_process_ticket
                addiu   $v0, $sp, 0x130+var_110
                sw      $v0, 0x130+var_120($sp)
                jalr    $t9 ; tls1_process_ticket
                sw      $zero, 0x130+var_110($sp)
                addiu   $v1, $v0, 1      # switch 5 cases
                sltiu   $a1, $s0, 1
                sltiu   $v0, $v1, 5
                lw      $gp, 0x130+var_118($sp)
                bnez    $v0, loc_380D8

def_380F0:                               # jumptable 000380F0 default case
                xori    $s4, $a1, 1
                la      $t9, abort
                jalr    $t9 ; abort
                nop

loc_380D8:                               # CODE XREF: ssl_get_prev_session+94↑j
                sll     $v0, $v1, 2
                la      $v1, loc_40000
                addiu   $v1, (jpt_380F0 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_380F8:                               # CODE XREF: ssl_get_prev_session+C0↑j
                                         # DATA XREF: .rodata:jpt_380F0↓o
                move    $s4, $zero       # jumptable 000380F0 cases 2,3

loc_380FC:                               # CODE XREF: ssl_get_prev_session+268↓j
                lw      $s1, 0x130+var_110($sp)

loc_38100:                               # CODE XREF: ssl_get_prev_session:loc_38148↓j
                                         # ssl_get_prev_session+254↓j
                beqz    $s1, loc_38078
                move    $v1, $zero

loc_38108:                               # CODE XREF: ssl_get_prev_session+120↓j
                                         # ssl_get_prev_session+1E0↓j
                lw      $s0, 0x68($s1)
                lw      $v0, 0x9C($s2)
                beq     $s0, $v0, loc_382BC
                la      $t9, memcmp

loc_38118:                               # CODE XREF: ssl_get_prev_session+29C↓j
                move    $s0, $zero

loc_3811C:                               # CODE XREF: ssl_get_prev_session+274↓j
                                         # ssl_get_prev_session+328↓j ...
                la      $t9, SSL_SESSION_free

loc_38120:                               # CODE XREF: ssl_get_prev_session:loc_38334↓j
                jalr    $t9 ; SSL_SESSION_free
                move    $a0, $s1
                bnez    $s4, loc_38138
                lw      $gp, 0x130+var_118($sp)
                li      $v0, 1
                sw      $v0, 0x138($s2)

loc_38138:                               # CODE XREF: ssl_get_prev_session+F8↑j
                beqz    $s0, loc_38074
                li      $v1, 0xFFFFFFFF
                b       loc_3807C
                lw      $ra, 0x130+var_8($sp)
 # ---------------------------------------------------------------------------

loc_38148:                               # CODE XREF: ssl_get_prev_session+C0↑j
                                         # DATA XREF: .rodata:jpt_380F0↓o
                bnez    $a1, loc_38100   # jumptable 000380F0 cases 0,1
                lw      $s1, 0x130+var_110($sp)
                bnez    $s1, loc_38108
                nop
                lw      $a0, 0x158($s2)
                lw      $v0, 0x20($a0)
                andi    $v0, 0x100
                bnez    $v0, loc_3822C
                la      $t9, memcpy
                lw      $v0, 0($s2)
                addiu   $a0, $sp, 0x130+var_B8
                move    $a1, $s3
                move    $a2, $s0
                sw      $v0, 0x130+var_100($sp)
                la      $s5, loc_40000
                jalr    $t9 ; memcpy
                sw      $s0, 0x130+var_BC($sp)
                lw      $gp, 0x130+var_118($sp)
                la      $t9, CRYPTO_lock
                li      $a0, 5
                li      $a1, 0xC
                addiu   $a2, $s5, (aSslSessC - 0x40000)  # "ssl_sess.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x1FE
                lw      $gp, 0x130+var_118($sp)
                lw      $v0, 0x158($s2)
                lw      $a0, 0x10($v0)
                la      $t9, lh_retrieve
                jalr    $t9 ; lh_retrieve
                addiu   $a1, $sp, 0x130+var_100
                move    $s1, $v0
                lw      $gp, 0x130+var_118($sp)
                beqz    $v0, loc_381F4
                sw      $v0, 0x130+var_110($sp)
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x203
                sw      $v0, 0x130+var_120($sp)
                addiu   $a0, $s1, 0x9C
                li      $a1, 1
                li      $a2, 0xE
                jalr    $t9 ; CRYPTO_add_lock
                addiu   $a3, $s5, (aSslSessC - 0x40000)  # "ssl_sess.c"
                lw      $gp, 0x130+var_118($sp)

loc_381F4:                               # CODE XREF: ssl_get_prev_session+198↑j
                la      $t9, CRYPTO_lock
                addiu   $a2, $s5, (aSslSessC - 0x40000)  # "ssl_sess.c"
                li      $a0, 6
                li      $a1, 0xC
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x205
                lw      $s1, 0x130+var_110($sp)
                bnez    $s1, loc_38108
                lw      $gp, 0x130+var_118($sp)
                lw      $v1, 0x158($s2)
                lw      $v0, 0x4C($v1)
                move    $a0, $v1
                addiu   $v0, 1
                sw      $v0, 0x4C($v1)

loc_3822C:                               # CODE XREF: ssl_get_prev_session+134↑j
                lw      $t9, 0x30($a0)
                beqz    $t9, loc_38330
                move    $a1, $s3
                li      $v0, 1
                sw      $v0, 0x130+var_10C($sp)
                move    $a2, $s0
                move    $a0, $s2
                jalr    $t9
                addiu   $a3, $sp, 0x130+var_10C
                move    $s1, $v0
                lw      $gp, 0x130+var_118($sp)
                beqz    $v0, loc_38330
                sw      $v0, 0x130+var_110($sp)
                lw      $a0, 0x158($s2)
                lw      $v0, 0x5C($a0)
                addiu   $v0, 1
                sw      $v0, 0x5C($a0)
                lw      $v1, 0x130+var_10C($sp)
                bnez    $v1, loc_3844C
                la      $t9, CRYPTO_add_lock

loc_3827C:                               # CODE XREF: ssl_get_prev_session+440↓j
                lw      $v0, 0x20($a0)
                andi    $v0, 0x200
                bnez    $v0, loc_38100
                lw      $s1, 0x130+var_110($sp)
                la      $t9, SSL_CTX_add_session
                jalr    $t9 ; SSL_CTX_add_session
                lw      $a1, 0x130+var_110($sp)
                b       loc_380FC
                lw      $gp, 0x130+var_118($sp)
 # ---------------------------------------------------------------------------

loc_382A0:                               # CODE XREF: ssl_get_prev_session+C0↑j
                                         # DATA XREF: .rodata:jpt_380F0↓o
                lw      $s1, 0x130+var_110($sp)  # jumptable 000380F0 case -1
                bnez    $s1, loc_3811C
                li      $s0, 1

loc_382AC:                               # CODE XREF: ssl_get_prev_session+30C↓j
                                         # ssl_get_prev_session+330↓j ...
                beqz    $s0, loc_38074
                li      $v1, 0xFFFFFFFF
                b       loc_3807C
                lw      $ra, 0x130+var_8($sp)
 # ---------------------------------------------------------------------------

loc_382BC:                               # CODE XREF: ssl_get_prev_session+E0↑j
                addiu   $a0, $s1, 0x6C  # 'l'
                addiu   $a1, $s2, 0xA0
                jalr    $t9 ; memcmp
                move    $a2, $s0
                bnez    $v0, loc_38118
                lw      $gp, 0x130+var_118($sp)
                lw      $v0, 0xC8($s2)
                andi    $v0, 1
                beqz    $v0, loc_382EC
                nop
                beqz    $s0, loc_38410
                la      $t9, ERR_put_error

loc_382EC:                               # CODE XREF: ssl_get_prev_session+2AC↑j
                lw      $v0, 0xAC($s1)
                beqz    $v0, loc_383A8
                la      $t9, time

loc_382F8:                               # CODE XREF: ssl_get_prev_session+3D0↓j
                move    $a0, $zero
                jalr    $t9 ; time
                lw      $s0, 0xA0($s1)
                lw      $s1, 0x130+var_110($sp)
                lw      $v1, 0xA4($s1)
                subu    $v0, $v1
                slt     $s0, $v0
                beqz    $s0, loc_38368
                lw      $gp, 0x130+var_118($sp)
                lw      $a0, 0x158($s2)
                lw      $v0, 0x50($a0)
                addiu   $v0, 1
                bnez    $s4, loc_38344
                sw      $v0, 0x50($a0)

loc_38330:                               # CODE XREF: ssl_get_prev_session+200↑j
                                         # ssl_get_prev_session+228↑j
                move    $s0, $zero

loc_38334:                               # CODE XREF: ssl_get_prev_session+3D8↓j
                bnez    $s1, loc_38120
                la      $t9, SSL_SESSION_free
                b       loc_382AC
                nop
 # ---------------------------------------------------------------------------

loc_38344:                               # CODE XREF: ssl_get_prev_session+2F8↑j
                la      $t9, SSL_CTX_remove_session
                jalr    $t9 ; SSL_CTX_remove_session
                move    $a1, $s1
                lw      $s1, 0x130+var_110($sp)
                lw      $gp, 0x130+var_118($sp)
                bnez    $s1, loc_3811C
                move    $s0, $zero
                b       loc_382AC
                nop
 # ---------------------------------------------------------------------------

loc_38368:                               # CODE XREF: ssl_get_prev_session+2E4↑j
                lw      $v1, 0x158($s2)
                lw      $a0, 0xC0($s2)
                lw      $v0, 0x58($v1)
                addiu   $v0, 1
                beqz    $a0, loc_38394
                sw      $v0, 0x58($v1)
                la      $t9, SSL_SESSION_free
                jalr    $t9 ; SSL_SESSION_free
                nop
                lw      $gp, 0x130+var_118($sp)
                lw      $s1, 0x130+var_110($sp)

loc_38394:                               # CODE XREF: ssl_get_prev_session+348↑j
                lw      $v0, 0x98($s1)
                li      $v1, 1
                sw      $v0, 0xE4($s2)
                b       loc_38078
                sw      $s1, 0xC0($s2)
 # ---------------------------------------------------------------------------

loc_383A8:                               # CODE XREF: ssl_get_prev_session+2C0↑j
                lw      $v1, 0xB0($s1)
                srl     $v0, $v1, 24
                srl     $a0, $v1, 16
                srl     $a1, $v1, 8
                sb      $v0, 0x130+var_108($sp)
                sb      $a0, 0x130+var_107($sp)
                sb      $a1, 0x130+var_106($sp)
                sb      $v1, 0x130+var_105($sp)
                lw      $v0, 0($s1)
                sra     $v0, 8
                slti    $v0, 3
                bnez    $v0, loc_38440
                nop
                lw      $v0, 8($s2)
                addiu   $a0, $sp, 0x130+var_106

loc_383E4:                               # CODE XREF: ssl_get_prev_session+414↓j
                lw      $t9, 0x48($v0)
                jalr    $t9
                nop
                lw      $gp, 0x130+var_118($sp)
                sw      $v0, 0xAC($s1)
                lw      $s1, 0x130+var_110($sp)
                lw      $v0, 0xAC($s1)
                bnez    $v0, loc_382F8
                la      $t9, time
                b       loc_38334
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_38410:                               # CODE XREF: ssl_get_prev_session+2B4↑j
                sw      $zero, 0x130+var_120($sp)
                li      $a0, 0x14
                li      $a1, 0xD9
                li      $a2, 0x115
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $s1, 0x130+var_110($sp)
                lw      $gp, 0x130+var_118($sp)
                bnez    $s1, loc_3811C
                li      $s0, 1
                b       loc_382AC
                nop
 # ---------------------------------------------------------------------------

loc_38440:                               # CODE XREF: ssl_get_prev_session+3A4↑j
                lw      $v0, 8($s2)
                b       loc_383E4
                addiu   $a0, $sp, 0x130+var_107
 # ---------------------------------------------------------------------------

loc_3844C:                               # CODE XREF: ssl_get_prev_session+244↑j
                la      $a3, loc_40000
                li      $v0, 0x21A
                addiu   $a0, $s1, 0x9C
                sw      $v0, 0x130+var_120($sp)
                addiu   $a3, (aSslSessC - 0x40000)  # "ssl_sess.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0xE
                lw      $gp, 0x130+var_118($sp)
                b       loc_3827C
                lw      $a0, 0x158($s2)
 # End of function ssl_get_prev_session


 # =============== S U B R O U T I N E =======================================


sub_38478:                               # DATA XREF: sub_388FC+104↓o
                lw      $v0, 0($a0)
                lw      $v1, 0($a1)
                lw      $a0, 0($v0)
                lw      $v0, 0($v1)
                jr      $ra
                subu    $v0, $a0, $v0
 # End of function sub_38478


 # =============== S U B R O U T I N E =======================================


                .globl ssl_get_handshake_digest
ssl_get_handshake_digest:                # CODE XREF: ssl3_digest_cached_records+C8↑p
                                         # ssl3_digest_cached_records+17C↑p ...
                la      $gp, (off_5A360+0x7FF0 - ssl_get_handshake_digest)
                addu    $gp, $t9
                sltiu   $v0, $a0, 6
                beqz    $v0, loc_384F0
                sll     $a0, 2
                la      $v0, loc_40000
                addiu   $v0, (dword_45DAC - 0x40000)
                addu    $v0, $a0, $v0
                lw      $v1, 0($v0)
                bnez    $v1, loc_384D0
                sw      $v1, 0($a1)
                li      $a1, 1
                move    $v0, $a1
                jr      $ra
                sw      $zero, 0($a2)
 # ---------------------------------------------------------------------------

loc_384D0:                               # CODE XREF: ssl_get_handshake_digest+28↑j
                li      $v0, 0x60000
                li      $a1, 1
                addiu   $v0, (dword_5ADFC - 0x60000)
                addu    $v0, $a0, $v0
                lw      $v1, 0($v0)
                move    $v0, $a1
                jr      $ra
                sw      $v1, 0($a2)
 # ---------------------------------------------------------------------------

loc_384F0:                               # CODE XREF: ssl_get_handshake_digest+10↑j
                move    $a1, $zero
                jr      $ra
                move    $v0, $a1
 # End of function ssl_get_handshake_digest


 # =============== S U B R O U T I N E =======================================


sub_384FC:                               # CODE XREF: sub_395B4+3CC↓p
                                         # ssl_create_cipher_list+4B0↓p ...

var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_10          =  0x10
arg_14          =  0x14
arg_18          =  0x18
arg_1C          =  0x1C
arg_20          =  0x20
arg_24          =  0x24
arg_28          =  0x28

                addiu   $sp, -0x10
                lw      $t6, 0x10+arg_1C($sp)
                li      $v0, 3
                sw      $s3, 0x10+var_4($sp)
                sw      $s2, 0x10+var_8($sp)
                sw      $s1, 0x10+var_C($sp)
                sw      $s0, 0x10+var_10($sp)
                move    $s1, $a2
                move    $s0, $a1
                move    $s2, $a3
                lw      $s3, 0x10+arg_10($sp)
                lw      $t8, 0x10+arg_18($sp)
                lw      $t5, 0x10+arg_20($sp)
                lw      $t9, 0x10+arg_24($sp)
                beq     $t6, $v0, loc_387D4
                lw      $a1, 0x10+arg_28($sp)
                lw      $t4, 0($t9)
                lw      $t2, 0($a1)
                move    $v0, $t4
                move    $t1, $t2
                move    $t7, $zero

loc_38550:                               # CODE XREF: sub_384FC+2E8↓j
                beqz    $v0, loc_38694
                nop
                beq     $v0, $t1, loc_38694
                move    $a0, $v0
                andi    $a2, $t8, 3
                beqz    $t7, loc_38594
                andi    $a3, $t8, 0x1FC

loc_3856C:                               # CODE XREF: sub_384FC:loc_3858C↓j
                lw      $t3, 0x10($a0)
                bltz    $t5, loc_385A0
                lw      $v1, 0($a0)

loc_38578:                               # CODE XREF: sub_384FC+9C↓j
                lw      $v0, 0x28($v1)
                beq     $v0, $t5, loc_3862C
                li      $v0, 1

loc_38584:                               # CODE XREF: sub_384FC+B4↓j
                                         # sub_384FC+CC↓j ...
                beq     $t1, $a0, loc_38694
                nop

loc_3858C:                               # CODE XREF: sub_384FC+190↓j
                bnez    $t7, loc_3856C
                move    $a0, $t3

loc_38594:                               # CODE XREF: sub_384FC+68↑j
                lw      $t3, 0xC($a0)
                bgez    $t5, loc_38578
                lw      $v1, 0($a0)

loc_385A0:                               # CODE XREF: sub_384FC+74↑j
                beqz    $s0, loc_385B8
                nop
                lw      $v0, 0xC($v1)
                and     $v0, $s0, $v0
                beqz    $v0, loc_38584
                nop

loc_385B8:                               # CODE XREF: sub_384FC:loc_385A0↑j
                beqz    $s1, loc_385D0
                nop
                lw      $v0, 0x10($v1)
                and     $v0, $s1, $v0
                beqz    $v0, loc_38584
                nop

loc_385D0:                               # CODE XREF: sub_384FC:loc_385B8↑j
                beqz    $s2, loc_385E8
                nop
                lw      $v0, 0x14($v1)
                and     $v0, $s2, $v0
                beqz    $v0, loc_38584
                nop

loc_385E8:                               # CODE XREF: sub_384FC:loc_385D0↑j
                beqz    $s3, loc_38600
                lw      $v0, 0x10+arg_14($sp)
                lw      $v0, 0x18($v1)
                and     $v0, $s3, $v0
                beqz    $v0, loc_38584
                lw      $v0, 0x10+arg_14($sp)

loc_38600:                               # CODE XREF: sub_384FC:loc_385E8↑j
                bnez    $v0, loc_38710
                move    $t0, $v0

loc_38608:                               # CODE XREF: sub_384FC+224↓j
                beqz    $a2, loc_38624
                nop
                lw      $v0, 0x20($v1)
                andi    $v0, 3
                and     $v0, $t8
                beqz    $v0, loc_38584
                nop

loc_38624:                               # CODE XREF: sub_384FC:loc_38608↑j
                bnez    $a3, loc_387EC
                li      $v0, 1

loc_3862C:                               # CODE XREF: sub_384FC+80↑j
                                         # sub_384FC+304↓j
                beq     $t6, $v0, loc_386B4
                li      $v0, 4
                beq     $t6, $v0, loc_38728
                li      $v0, 3
                beq     $t6, $v0, loc_3877C
                li      $v0, 2
                bne     $t6, $v0, loc_38584
                nop
                beq     $t4, $a0, loc_38818
                nop
                lw      $v1, 0x10($a0)
                lw      $v0, 0xC($a0)
                sw      $v0, 0xC($v1)

loc_38660:                               # CODE XREF: sub_384FC+320↓j
                beq     $t2, $a0, loc_38810
                nop

loc_38668:                               # CODE XREF: sub_384FC:loc_38810↓j
                lw      $t0, 0xC($a0)
                beqz    $t0, loc_3867C
                sw      $zero, 4($a0)
                sw      $v1, 0x10($t0)
                lw      $v1, 0x10($a0)

loc_3867C:                               # CODE XREF: sub_384FC+170↑j
                beqz    $v1, loc_38688
                nop
                sw      $t0, 0xC($v1)

loc_38688:                               # CODE XREF: sub_384FC:loc_3867C↑j
                sw      $zero, 0xC($a0)
                bne     $t1, $a0, loc_3858C
                sw      $zero, 0x10($a0)

loc_38694:                               # CODE XREF: sub_384FC:loc_38550↑j
                                         # sub_384FC+5C↑j ...
                lw      $s3, 0x10+var_4($sp)
                lw      $s2, 0x10+var_8($sp)
                lw      $s1, 0x10+var_C($sp)
                lw      $s0, 0x10+var_10($sp)
                addiu   $sp, 0x10
                sw      $t4, 0($t9)
                jr      $ra
                sw      $t2, 0($a1)
 # ---------------------------------------------------------------------------

loc_386B4:                               # CODE XREF: sub_384FC:loc_3862C↑j
                lw      $v0, 4($a0)
                bnez    $v0, loc_38584
                nop
                beq     $t2, $a0, loc_38704
                nop
                beq     $t4, $a0, loc_38808
                nop

loc_386D0:                               # CODE XREF: sub_384FC:loc_38808↓j
                lw      $v1, 0x10($a0)
                beqz    $v1, loc_386E4
                nop
                lw      $v0, 0xC($a0)
                sw      $v0, 0xC($v1)

loc_386E4:                               # CODE XREF: sub_384FC+1D8↑j
                lw      $v0, 0xC($a0)
                beqz    $v0, loc_386F4
                nop
                sw      $v1, 0x10($v0)

loc_386F4:                               # CODE XREF: sub_384FC+1EC↑j
                sw      $a0, 0xC($t2)
                sw      $t2, 0x10($a0)
                sw      $zero, 0xC($a0)
                move    $t2, $a0

loc_38704:                               # CODE XREF: sub_384FC+1C4↑j
                li      $v0, 1
                b       loc_38584
                sw      $v0, 4($a0)
 # ---------------------------------------------------------------------------

loc_38710:                               # CODE XREF: sub_384FC:loc_38600↑j
                lw      $v0, 0x1C($v1)
                and     $v0, $t0, $v0
                beqz    $v0, loc_38584
                nop
                b       loc_38608
                nop
 # ---------------------------------------------------------------------------

loc_38728:                               # CODE XREF: sub_384FC+138↑j
                lw      $v0, 4($a0)
                beqz    $v0, loc_38584
                nop
                beq     $t2, $a0, loc_38584
                nop
                beq     $t4, $a0, loc_38824
                nop

loc_38744:                               # CODE XREF: sub_384FC:loc_38824↓j
                lw      $v1, 0x10($a0)
                beqz    $v1, loc_38758
                nop
                lw      $v0, 0xC($a0)
                sw      $v0, 0xC($v1)

loc_38758:                               # CODE XREF: sub_384FC+24C↑j
                lw      $v0, 0xC($a0)
                beqz    $v0, loc_38768
                nop
                sw      $v1, 0x10($v0)

loc_38768:                               # CODE XREF: sub_384FC+260↑j
                sw      $a0, 0xC($t2)
                sw      $t2, 0x10($a0)
                move    $t2, $a0
                b       loc_38584
                sw      $zero, 0xC($a0)
 # ---------------------------------------------------------------------------

loc_3877C:                               # CODE XREF: sub_384FC+140↑j
                lw      $v0, 4($a0)
                beqz    $v0, loc_38584
                nop
                beq     $t4, $a0, loc_387CC
                nop
                beq     $t2, $a0, loc_3882C
                nop

loc_38798:                               # CODE XREF: sub_384FC:loc_3882C↓j
                lw      $t0, 0xC($a0)
                beqz    $t0, loc_387AC
                nop
                lw      $v0, 0x10($a0)
                sw      $v0, 0x10($t0)

loc_387AC:                               # CODE XREF: sub_384FC+2A0↑j
                lw      $v0, 0x10($a0)
                beqz    $v0, loc_387BC
                nop
                sw      $t0, 0xC($v0)

loc_387BC:                               # CODE XREF: sub_384FC+2B4↑j
                sw      $a0, 0x10($t4)
                sw      $t4, 0xC($a0)
                sw      $zero, 0x10($a0)
                move    $t4, $a0

loc_387CC:                               # CODE XREF: sub_384FC+28C↑j
                b       loc_38584
                sw      $zero, 4($a0)
 # ---------------------------------------------------------------------------

loc_387D4:                               # CODE XREF: sub_384FC+38↑j
                lw      $t4, 0($t9)
                lw      $t2, 0($a1)
                move    $t1, $t4
                move    $v0, $t2
                b       loc_38550
                li      $t7, 1
 # ---------------------------------------------------------------------------

loc_387EC:                               # CODE XREF: sub_384FC:loc_38624↑j
                lw      $v0, 0x20($v1)
                andi    $v0, 0x1FC
                and     $v0, $t8
                beqz    $v0, loc_38584
                li      $v0, 1
                b       loc_3862C
                nop
 # ---------------------------------------------------------------------------

loc_38808:                               # CODE XREF: sub_384FC+1CC↑j
                b       loc_386D0
                lw      $t4, 0xC($t4)
 # ---------------------------------------------------------------------------

loc_38810:                               # CODE XREF: sub_384FC:loc_38660↑j
                b       loc_38668
                lw      $t2, 0x10($t2)
 # ---------------------------------------------------------------------------

loc_38818:                               # CODE XREF: sub_384FC+150↑j
                lw      $t4, 0xC($t4)
                b       loc_38660
                lw      $v1, 0x10($a0)
 # ---------------------------------------------------------------------------

loc_38824:                               # CODE XREF: sub_384FC+240↑j
                b       loc_38744
                lw      $t4, 0xC($t4)
 # ---------------------------------------------------------------------------

loc_3882C:                               # CODE XREF: sub_384FC+294↑j
                b       loc_38798
                lw      $t2, 0x10($t2)
 # End of function sub_384FC


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CIPHER_get_version
SSL_CIPHER_get_version:                  # DATA XREF: LOAD:00001AC8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CIPHER_get_version)
                addu    $gp, $t9
                beqz    $a0, locret_38884
                la      $v0, loc_40000
                lbu     $a0, 0xB($a0)
                li      $v0, 3
                beq     $a0, $v0, locret_3887C
                la      $v0, loc_40000
                li      $v0, 2
                beq     $a0, $v0, loc_38870
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aUnknown - 0x40000)  # "unknown"
 # ---------------------------------------------------------------------------

loc_38870:                               # CODE XREF: SSL_CIPHER_get_version+28↑j
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2 - 0x40000)  # "SSLv2"
 # ---------------------------------------------------------------------------

locret_3887C:                            # CODE XREF: SSL_CIPHER_get_version+1C↑j
                jr      $ra
                addiu   $v0, (aTlsv1Sslv3 - 0x40000)  # "TLSv1/SSLv3"
 # ---------------------------------------------------------------------------

locret_38884:                            # CODE XREF: SSL_CIPHER_get_version+C↑j
                jr      $ra
                addiu   $v0, (aNone - 0x40000)  # "(NONE)"
 # End of function SSL_CIPHER_get_version


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CIPHER_get_name
SSL_CIPHER_get_name:                     # DATA XREF: LOAD:00001D18↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CIPHER_get_name)
                addu    $gp, $t9
                beqz    $a0, loc_388A8
                nop
                jr      $ra
                lw      $v0, 4($a0)
 # ---------------------------------------------------------------------------

loc_388A8:                               # CODE XREF: SSL_CIPHER_get_name+C↑j
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aNone - 0x40000)  # "(NONE)"
 # End of function SSL_CIPHER_get_name


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CIPHER_get_bits
SSL_CIPHER_get_bits:                     # DATA XREF: LOAD:000019A8↑o
                beqz    $a0, locret_388D4
                nop
                beqz    $a1, locret_388CC
                nop
                lw      $v0, 0x2C($a0)
                sw      $v0, 0($a1)

locret_388CC:                            # CODE XREF: SSL_CIPHER_get_bits+8↑j
                jr      $ra
                lw      $v0, 0x28($a0)
 # ---------------------------------------------------------------------------

locret_388D4:                            # CODE XREF: SSL_CIPHER_get_bits↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_CIPHER_get_bits


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CIPHER_get_id
SSL_CIPHER_get_id:                       # DATA XREF: LOAD:000021E8↑o
                jr      $ra
                lw      $v0, 8($a0)
 # End of function SSL_CIPHER_get_id


 # =============== S U B R O U T I N E =======================================


                .globl SSL_COMP_get_name
SSL_COMP_get_name:                       # DATA XREF: LOAD:00001EA8↑o
                beqz    $a0, locret_388F4
                nop
                jr      $ra
                lw      $v0, 4($a0)
 # ---------------------------------------------------------------------------

locret_388F4:                            # CODE XREF: SSL_COMP_get_name↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_COMP_get_name


 # =============== S U B R O U T I N E =======================================


sub_388FC:                               # CODE XREF: SSL_COMP_add_compression_method+C8↓p
                                         # SSL_COMP_get_compression_methods+20↓p ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - sub_388FC)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $s0, loc_40000
                la      $t9, CRYPTO_lock
                li      $s1, 0x60000
                li      $a0, 5
                li      $a1, 0x10
                addiu   $a2, $s0, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x1BC
                lw      $v0, (dword_5ADC0 - 0x60000)($s1)
                beqz    $v0, loc_38978
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_lock
                addiu   $a2, $s0, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $a0, 6
                li      $a1, 0x10
                li      $a3, 0x1E2
                jr      $t9 ; CRYPTO_lock
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_38978:                               # CODE XREF: sub_388FC+48↑j
                la      $t9, CRYPTO_lock
                li      $a0, 6
                li      $a1, 0x10
                addiu   $a2, $s0, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x1BF
                lw      $gp, 0x28+var_18($sp)
                la      $t9, CRYPTO_lock
                li      $a0, 9
                li      $a1, 0x10
                addiu   $a2, $s0, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                jalr    $t9 ; CRYPTO_lock
                li      $a3, 0x1C0
                lw      $v0, (dword_5ADC0 - 0x60000)($s1)
                beqz    $v0, loc_389E4
                lw      $gp, 0x28+var_18($sp)

loc_389B8:                               # CODE XREF: sub_388FC+19C↓j
                la      $t9, CRYPTO_lock
                addiu   $a2, $s0, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $a0, 0xA
                li      $a1, 0x10
                li      $a3, 0x1E0
                jr      $t9 ; CRYPTO_lock
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_389E4:                               # CODE XREF: sub_388FC+B4↑j
                la      $t9, CRYPTO_mem_ctrl
                jalr    $t9 ; CRYPTO_mem_ctrl
                li      $a0, 3
                lw      $gp, 0x28+var_18($sp)
                la      $a0, loc_40000
                la      $t9, sk_new
                jalr    $t9 ; sk_new
                addiu   $a0, (sub_38478 - 0x40000)
                lw      $gp, 0x28+var_18($sp)
                beqz    $v0, loc_38A8C
                sw      $v0, (dword_5ADC0 - 0x60000)($s1)
                la      $t9, CRYPTO_malloc
                li      $a0, 0xC
                addiu   $a1, $s0, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x1CB
                move    $s2, $v0
                beqz    $v0, loc_38A7C
                lw      $gp, 0x28+var_18($sp)
                la      $t9, COMP_zlib
                jalr    $t9 ; COMP_zlib
                nop
                lw      $gp, 0x28+var_18($sp)
                beqz    $v0, loc_38A54
                sw      $v0, 8($s2)
                lw      $v0, 0($v0)
                beqz    $v0, loc_38AA0
                la      $t9, CRYPTO_free

loc_38A54:                               # CODE XREF: sub_388FC+144↑j
                lw      $v0, 8($s2)
                la      $t9, sk_push
                lw      $v1, 4($v0)
                lw      $a0, (dword_5ADC0 - 0x60000)($s1)
                li      $v0, 1
                sw      $v0, 0($s2)
                sw      $v1, 4($s2)
                jalr    $t9 ; sk_push
                move    $a1, $s2
                lw      $gp, 0x28+var_18($sp)

loc_38A7C:                               # CODE XREF: sub_388FC+12C↑j
                                         # sub_388FC+1AC↓j
                la      $t9, sk_sort
                jalr    $t9 ; sk_sort
                lw      $a0, (dword_5ADC0 - 0x60000)($s1)
                lw      $gp, 0x28+var_18($sp)

loc_38A8C:                               # CODE XREF: sub_388FC+10C↑j
                la      $t9, CRYPTO_mem_ctrl
                jalr    $t9 ; CRYPTO_mem_ctrl
                li      $a0, 2
                b       loc_389B8
                lw      $gp, 0x28+var_18($sp)
 # ---------------------------------------------------------------------------

loc_38AA0:                               # CODE XREF: sub_388FC+150↑j
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s2
                b       loc_38A7C
                lw      $gp, 0x28+var_18($sp)
 # End of function sub_388FC


 # =============== S U B R O U T I N E =======================================


                .globl SSL_COMP_add_compression_method
SSL_COMP_add_compression_method:         # DATA XREF: LOAD:00002178↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_COMP_add_compression_method)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                move    $s0, $a1
                beqz    $a1, loc_38C00
                move    $s2, $a0
                lw      $v0, 0($a1)
                beqz    $v0, loc_38C00
                addiu   $v0, $a0, -0xC1
                sltiu   $v0, 0x3F  # '?'
                bnez    $v0, loc_38B3C
                la      $t9, CRYPTO_mem_ctrl
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xA5
                li      $a2, 0x133
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $v0, $zero

loc_38B20:                               # CODE XREF: SSL_COMP_add_compression_method+1D8↓j
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_38B3C:                               # CODE XREF: SSL_COMP_add_compression_method+44↑j
                jalr    $t9 ; CRYPTO_mem_ctrl
                li      $a0, 3
                lw      $gp, 0x38+var_20($sp)
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                li      $a0, 0xC
                addiu   $a1, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x71A
                lw      $gp, 0x38+var_20($sp)
                sw      $s2, 0($v0)
                la      $t9, loc_40000
                li      $s3, 0x60000
                sw      $s0, 8($v0)
                addiu   $t9, (sub_388FC - 0x40000)
                jalr    $t9 ; sub_388FC
                move    $s1, $v0
                lw      $a0, (dword_5ADC0 - 0x60000)($s3)
                beqz    $a0, loc_38C2C
                lw      $gp, 0x38+var_20($sp)
                la      $t9, sk_find
                jalr    $t9 ; sk_find
                move    $a1, $s1
                bltz    $v0, loc_38C20
                lw      $gp, 0x38+var_20($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                lw      $gp, 0x38+var_20($sp)
                la      $t9, CRYPTO_mem_ctrl
                jalr    $t9 ; CRYPTO_mem_ctrl
                li      $a0, 2
                lw      $gp, 0x38+var_20($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xA5
                li      $a2, 0x135

loc_38BD4:                               # CODE XREF: SSL_COMP_add_compression_method+1AC↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_38C00:                               # CODE XREF: SSL_COMP_add_compression_method+2C↑j
                                         # SSL_COMP_add_compression_method+38↑j
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_38C20:                               # CODE XREF: SSL_COMP_add_compression_method+E8↑j
                lw      $a0, (dword_5ADC0 - 0x60000)($s3)
                bnez    $a0, loc_38C64
                nop

loc_38C2C:                               # CODE XREF: SSL_COMP_add_compression_method+D4↑j
                                         # SSL_COMP_add_compression_method+1C0↓j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                lw      $gp, 0x38+var_20($sp)
                la      $t9, CRYPTO_mem_ctrl
                jalr    $t9 ; CRYPTO_mem_ctrl
                li      $a0, 2
                lw      $gp, 0x38+var_20($sp)
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xA5
                li      $a2, 0x41  # 'A'
                b       loc_38BD4
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_38C64:                               # CODE XREF: SSL_COMP_add_compression_method+174↑j
                la      $t9, sk_push
                jalr    $t9 ; sk_push
                move    $a1, $s1
                beqz    $v0, loc_38C2C
                lw      $gp, 0x38+var_20($sp)
                la      $t9, CRYPTO_mem_ctrl
                jalr    $t9 ; CRYPTO_mem_ctrl
                li      $a0, 2
                lw      $gp, 0x38+var_20($sp)
                b       loc_38B20
                move    $v0, $zero
 # End of function SSL_COMP_add_compression_method


 # =============== S U B R O U T I N E =======================================


                .globl SSL_COMP_get_compression_methods
SSL_COMP_get_compression_methods:        # CODE XREF: SSL_CTX_new+270↑p
                                         # SSL_library_init+318↓p
                                         # DATA XREF: ...

var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_COMP_get_compression_methods)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, loc_40000
                addiu   $t9, (sub_388FC - 0x40000)
                jalr    $t9 ; sub_388FC
                nop
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_8($sp)
                li      $v1, 0x60000
                addiu   $sp, 0x20
                jr      $ra
                lw      $v0, (dword_5ADC0 - 0x60000)($v1)
 # End of function SSL_COMP_get_compression_methods


 # =============== S U B R O U T I N E =======================================


                .globl ssl3_comp_find
ssl3_comp_find:                          # CODE XREF: ssl3_get_server_hello+664↑p
                                         # DATA XREF: LOAD:00002AA8↑o ...

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl3_comp_find)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                move    $s1, $a1
                bnez    $a1, loc_38D28
                move    $s2, $a0

loc_38D04:                               # CODE XREF: ssl3_comp_find+70↓j
                move    $v1, $zero

loc_38D08:                               # CODE XREF: ssl3_comp_find:loc_38D28↓j
                                         # ssl3_comp_find+98↓j ...
                lw      $ra, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_38D28:                               # CODE XREF: ssl3_comp_find+2C↑j
                beqz    $a0, loc_38D08
                move    $v1, $zero
                la      $t9, sk_num
                jalr    $t9 ; sk_num
                nop
                move    $s3, $v0
                blez    $v0, loc_38D04
                lw      $gp, 0x30+var_20($sp)
                move    $s0, $zero
                la      $t9, sk_value

loc_38D50:                               # CODE XREF: ssl3_comp_find+A0↓j
                move    $a1, $s0
                jalr    $t9 ; sk_value
                move    $a0, $s2
                move    $v1, $v0
                lw      $v0, 0($v0)
                lw      $gp, 0x30+var_20($sp)
                beq     $v0, $s1, loc_38D08
                addiu   $s0, 1
                bne     $s0, $s3, loc_38D50
                la      $t9, sk_value
                b       loc_38D08
                move    $v1, $zero
 # End of function ssl3_comp_find


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CIPHER_description
SSL_CIPHER_description:                  # DATA XREF: LOAD:00001838↑o

var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CIPHER_description)
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_8($sp)
                sw      $s7, 0x58+var_C($sp)
                sw      $s6, 0x58+var_10($sp)
                sw      $s5, 0x58+var_14($sp)
                sw      $s4, 0x58+var_18($sp)
                sw      $s3, 0x58+var_1C($sp)
                sw      $s2, 0x58+var_20($sp)
                sw      $s1, 0x58+var_24($sp)
                sw      $s0, 0x58+var_28($sp)
                sw      $gp, 0x58+var_30($sp)
                lw      $v0, 0x20($a0)
                move    $s2, $a0
                andi    $v1, $v0, 8
                move    $s3, $a1
                lw      $a3, 0xC($a0)
                lw      $t1, 0x10($a0)
                lw      $t0, 0x14($a0)
                lw      $t2, 0x18($a0)
                move    $a1, $a2
                lw      $a0, 0x1C($a0)
                lw      $t4, 0x24($s2)
                beqz    $v1, loc_38F84
                andi    $t3, $v0, 2
                li      $t5, 5
                beqz    $t3, loc_38FA0
                li      $v1, 0x200
                la      $v0, loc_40000

loc_38DFC:                               # CODE XREF: SSL_CIPHER_description:loc_38F98↓j
                addiu   $s7, $v0, (aExport - 0x40000)  # " export"
                andi    $v0, $a0, 1
                beqz    $v0, loc_38FB8
                andi    $v0, $a0, 2
                la      $v0, loc_40000

loc_38E10:                               # CODE XREF: SSL_CIPHER_description+22C↓j
                addiu   $s6, $v0, (aSslv2 - 0x40000)  # "SSLv2"

loc_38E14:                               # CODE XREF: SSL_CIPHER_description+2D8↓j
                                         # SSL_CIPHER_description:loc_390AC↓j
                li      $v0, 0x10
                beq     $a3, $v0, loc_38FD8
                la      $v0, loc_40000
                sltiu   $v0, $a3, 0x11

loc_38E24:                               # CODE XREF: SSL_CIPHER_description+24C↓j
                bnez    $v0, loc_38FE0
                li      $v0, 2
                li      $v0, 0x80
                beq     $a3, $v0, loc_39280
                sltiu   $v0, $a3, 0x81
                bnez    $v0, loc_39068
                li      $v0, 0x20  # ' '
                li      $v0, 0x100
                beq     $a3, $v0, loc_39298
                li      $v0, 0x400
                beq     $a3, $v0, loc_390C4
                la      $v0, loc_40000
                la      $v0, loc_40000

loc_38E58:                               # CODE XREF: SSL_CIPHER_description+27C↓j
                                         # SSL_CIPHER_description+2F0↓j ...
                addiu   $s5, $v0, (aUnknown - 0x40000)  # "unknown"

loc_38E5C:                               # CODE XREF: SSL_CIPHER_description:loc_38FD8↓j
                                         # SSL_CIPHER_description+2FC↓j ...
                li      $v0, 8
                beq     $t1, $v0, loc_39030
                la      $v0, loc_40000
                sltiu   $v0, $t1, 9

loc_38E6C:                               # CODE XREF: SSL_CIPHER_description+2A4↓j
                beqz    $v0, loc_39104
                li      $v0, 0x20  # ' '
                li      $v0, 2
                beq     $t1, $v0, loc_3923C
                li      $v0, 4
                beq     $t1, $v0, loc_39230
                li      $v0, 1
                beq     $t1, $v0, loc_390BC
                la      $v0, loc_40000
                la      $v0, loc_40000

loc_38E94:                               # CODE XREF: SSL_CIPHER_description+398↓j
                                         # SSL_CIPHER_description+484↓j
                addiu   $s4, $v0, (aUnknown - 0x40000)  # "unknown"

loc_38E98:                               # CODE XREF: SSL_CIPHER_description:loc_390BC↓j
                                         # SSL_CIPHER_description+3A4↓j ...
                li      $v0, 0x40  # '@'
                beq     $t0, $v0, loc_39044
                la      $v0, loc_40000
                sltiu   $v0, $t0, 0x41  # 'A'

loc_38EA8:                               # CODE XREF: SSL_CIPHER_description+2B8↓j
                beqz    $v0, loc_390D4
                li      $v0, 0x200
                li      $v0, 4
                beq     $t0, $v0, loc_39310
                sltiu   $v0, $t0, 5
                beqz    $v0, loc_391A0
                li      $v0, 0x10
                li      $v0, 1
                beq     $t0, $v0, loc_392B0
                li      $v0, 2
                beq     $t0, $v0, loc_390CC
                la      $v0, loc_40000
                la      $v0, loc_40000

loc_38EDC:                               # CODE XREF: SSL_CIPHER_description+370↓j
                                         # SSL_CIPHER_description+430↓j ...
                addiu   $s1, $v0, (aUnknown - 0x40000)  # "unknown"

loc_38EE0:                               # CODE XREF: SSL_CIPHER_description:loc_39044↓j
                                         # SSL_CIPHER_description:loc_390CC↓j ...
                li      $v0, 0x10
                beq     $t2, $v0, loc_39188
                sltiu   $v0, $t2, 0x11
                beqz    $v0, loc_3912C
                li      $v0, 0x20  # ' '
                li      $v0, 1
                beq     $t2, $v0, loc_3917C
                li      $v0, 2
                beq     $t2, $v0, loc_390B4
                la      $v0, loc_40000
                la      $v0, loc_40000

loc_38F0C:                               # CODE XREF: SSL_CIPHER_description+3B4↓j
                addiu   $s0, $v0, (aUnknown - 0x40000)  # "unknown"

loc_38F10:                               # CODE XREF: SSL_CIPHER_description:loc_390B4↓j
                                         # SSL_CIPHER_description+3C0↓j ...
                beqz    $s3, loc_39248
                slti    $v0, $a1, 0x80
                bnez    $v0, loc_39148
                la      $v0, loc_40000

loc_38F20:                               # CODE XREF: SSL_CIPHER_description+4EC↓j
                li      $v0, 0x50000
                lw      $a3, 4($s2)
                la      $t9, BIO_snprintf
                lw      $a2, (off_57BE8 - 0x50000)($v0)  # "%-23s %s Kx=%-8s Au=%-4s Enc=%-9s Mac=%"...
                sw      $s6, 0x58+var_48($sp)
                sw      $s5, 0x58+var_44($sp)
                sw      $s4, 0x58+var_40($sp)
                sw      $s1, 0x58+var_3C($sp)
                sw      $s0, 0x58+var_38($sp)
                sw      $s7, 0x58+var_34($sp)
                jalr    $t9 ; BIO_snprintf
                move    $a0, $s3
                lw      $gp, 0x58+var_30($sp)

loc_38F54:                               # CODE XREF: SSL_CIPHER_description+654↓j
                move    $v0, $s3
                lw      $ra, 0x58+var_8($sp)
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_38F84:                               # CODE XREF: SSL_CIPHER_description+64↑j
                li      $v0, 1
                beq     $t0, $v0, loc_39060
                li      $t5, 8
                li      $t5, 7
                li      $v1, 0x400

loc_38F98:                               # CODE XREF: SSL_CIPHER_description:loc_39060↓j
                bnez    $t3, loc_38DFC
                la      $v0, loc_40000

loc_38FA0:                               # CODE XREF: SSL_CIPHER_description+70↑j
                la      $v0, loc_40000
                addiu   $s7, $v0, (aSessionId+0x10 - 0x40000)  # ""
                andi    $v0, $a0, 1
                bnez    $v0, loc_38E10
                la      $v0, loc_40000
                andi    $v0, $a0, 2

loc_38FB8:                               # CODE XREF: SSL_CIPHER_description+84↑j
                beqz    $v0, loc_3904C
                andi    $v0, $a0, 4
                la      $v0, loc_40000
                addiu   $s6, $v0, (aSslv3 - 0x40000)  # "SSLv3"
                li      $v0, 0x10
                bne     $a3, $v0, loc_38E24
                sltiu   $v0, $a3, 0x11
                la      $v0, loc_40000

loc_38FD8:                               # CODE XREF: SSL_CIPHER_description+98↑j
                b       loc_38E5C
                addiu   $s5, $v0, (aKrb5 - 0x40000)  # "KRB5"
 # ---------------------------------------------------------------------------

loc_38FE0:                               # CODE XREF: SSL_CIPHER_description:loc_38E24↑j
                beq     $a3, $v0, loc_392A4
                sltiu   $v0, $a3, 3
                bnez    $v0, loc_39084
                li      $v0, 1
                li      $v0, 4
                beq     $a3, $v0, loc_39274
                li      $v0, 8
                bne     $a3, $v0, loc_38E58
                la      $v0, loc_40000
                beqz    $t3, loc_39348
                la      $v0, loc_40000
                li      $v0, 0x200
                beq     $v1, $v0, loc_39390
                la      $v0, loc_40000
                addiu   $v0, (aDh1024 - 0x40000)  # "DH(1024)"
                move    $s5, $v0

loc_39020:                               # CODE XREF: SSL_CIPHER_description+324↓j
                                         # SSL_CIPHER_description+5CC↓j ...
                li      $v0, 8
                bne     $t1, $v0, loc_38E6C
                sltiu   $v0, $t1, 9
                la      $v0, loc_40000

loc_39030:                               # CODE XREF: SSL_CIPHER_description+E0↑j
                addiu   $s4, $v0, (aKeecdh+4 - 0x40000)  # "DH"
                li      $v0, 0x40  # '@'
                bne     $t0, $v0, loc_38EA8
                sltiu   $v0, $t0, 0x41  # 'A'
                la      $v0, loc_40000

loc_39044:                               # CODE XREF: SSL_CIPHER_description+11C↑j
                b       loc_38EE0
                addiu   $s1, $v0, (aAes128 - 0x40000)  # "AES(128)"
 # ---------------------------------------------------------------------------

loc_3904C:                               # CODE XREF: SSL_CIPHER_description:loc_38FB8↑j
                beqz    $v0, loc_390AC
                la      $v0, loc_40000
                la      $v0, loc_40000
                b       loc_38E14
                addiu   $s6, $v0, (aTlsv12 - 0x40000)  # "TLSv1.2"
 # ---------------------------------------------------------------------------

loc_39060:                               # CODE XREF: SSL_CIPHER_description+208↑j
                b       loc_38F98
                li      $v1, 0x400
 # ---------------------------------------------------------------------------

loc_39068:                               # CODE XREF: SSL_CIPHER_description+B8↑j
                beq     $a3, $v0, loc_3928C
                li      $v0, 0x40  # '@'
                bne     $a3, $v0, loc_38E58
                la      $v0, loc_40000
                la      $v0, loc_40000
                b       loc_38E5C
                addiu   $s5, $v0, (aEcdhEcdsa - 0x40000)  # "ECDH/ECDSA"
 # ---------------------------------------------------------------------------

loc_39084:                               # CODE XREF: SSL_CIPHER_description+268↑j
                bne     $a3, $v0, loc_38E58
                la      $v0, loc_40000
                beqz    $t3, loc_39354
                la      $v0, loc_40000
                li      $v0, 0x200
                beq     $v1, $v0, loc_393A0
                la      $v0, loc_40000
                addiu   $v0, (aRsa1024 - 0x40000)  # "RSA(1024)"
                b       loc_39020
                move    $s5, $v0
 # ---------------------------------------------------------------------------

loc_390AC:                               # CODE XREF: SSL_CIPHER_description:loc_3904C↑j
                b       loc_38E14
                addiu   $s6, $v0, (aUnknown - 0x40000)  # "unknown"
 # ---------------------------------------------------------------------------

loc_390B4:                               # CODE XREF: SSL_CIPHER_description+180↑j
                b       loc_38F10
                addiu   $s0, $v0, (aSha1 - 0x40000)  # "SHA1"
 # ---------------------------------------------------------------------------

loc_390BC:                               # CODE XREF: SSL_CIPHER_description+108↑j
                b       loc_38E98
                addiu   $s4, $v0, (aRsa - 0x40000)  # "RSA"
 # ---------------------------------------------------------------------------

loc_390C4:                               # CODE XREF: SSL_CIPHER_description+CC↑j
                b       loc_38E5C
                addiu   $s5, $v0, (aSrp - 0x40000)  # "SRP"
 # ---------------------------------------------------------------------------

loc_390CC:                               # CODE XREF: SSL_CIPHER_description+150↑j
                b       loc_38EE0
                addiu   $s1, $v0, (a3des168 - 0x40000)  # "3DES(168)"
 # ---------------------------------------------------------------------------

loc_390D4:                               # CODE XREF: SSL_CIPHER_description:loc_38EA8↑j
                beq     $t0, $v0, loc_39304
                sltiu   $v0, $t0, 0x201
                beqz    $v0, loc_391D8
                li      $v0, 0x1000
                li      $v0, 0x80
                beq     $t0, $v0, loc_3933C
                li      $v0, 0x100
                bne     $t0, $v0, loc_38EDC
                la      $v0, loc_40000
                la      $v0, loc_40000
                b       loc_38EE0
                addiu   $s1, $v0, (aCamellia128 - 0x40000)  # "Camellia(128)"
 # ---------------------------------------------------------------------------

loc_39104:                               # CODE XREF: SSL_CIPHER_description:loc_38E6C↑j
                beq     $t1, $v0, loc_39224
                sltiu   $v0, $t1, 0x21  # '!'
                beqz    $v0, loc_391FC
                li      $v0, 0x40  # '@'
                li      $v0, 0x10
                bne     $t1, $v0, loc_38E94
                la      $v0, loc_40000
                la      $v0, loc_40000
                b       loc_38E98
                addiu   $s4, $v0, (aEcdh - 0x40000)  # "ECDH"
 # ---------------------------------------------------------------------------

loc_3912C:                               # CODE XREF: SSL_CIPHER_description+16C↑j
                beq     $t2, $v0, loc_39194
                li      $v0, 0x40  # '@'
                bne     $t2, $v0, loc_38F0C
                la      $v0, loc_40000
                la      $v0, loc_40000
                b       loc_38F10
                addiu   $s0, $v0, (aAead - 0x40000)  # "AEAD"
 # ---------------------------------------------------------------------------

loc_39148:                               # CODE XREF: SSL_CIPHER_description+198↑j
                lw      $ra, 0x58+var_8($sp)
                addiu   $s3, $v0, (aBufferTooSmall - 0x40000)  # "Buffer too small"
                move    $v0, $s3
                lw      $s7, 0x58+var_C($sp)
                lw      $s6, 0x58+var_10($sp)
                lw      $s5, 0x58+var_14($sp)
                lw      $s4, 0x58+var_18($sp)
                lw      $s3, 0x58+var_1C($sp)
                lw      $s2, 0x58+var_20($sp)
                lw      $s1, 0x58+var_24($sp)
                lw      $s0, 0x58+var_28($sp)
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_3917C:                               # CODE XREF: SSL_CIPHER_description+178↑j
                la      $v0, loc_40000
                b       loc_38F10
                addiu   $s0, $v0, (aExpAdhRc4Md5+0xC - 0x40000)  # "MD5"
 # ---------------------------------------------------------------------------

loc_39188:                               # CODE XREF: SSL_CIPHER_description+164↑j
                la      $v0, loc_40000
                b       loc_38F10
                addiu   $s0, $v0, (aSha256 - 0x40000)  # "SHA256"
 # ---------------------------------------------------------------------------

loc_39194:                               # CODE XREF: SSL_CIPHER_description:loc_3912C↑j
                la      $v0, loc_40000
                b       loc_38F10
                addiu   $s0, $v0, (aSha384 - 0x40000)  # "SHA384"
 # ---------------------------------------------------------------------------

loc_391A0:                               # CODE XREF: SSL_CIPHER_description+13C↑j
                beq     $t0, $v0, loc_392F8
                li      $v0, 0x20  # ' '
                beq     $t0, $v0, loc_392EC
                li      $v0, 8
                bne     $t0, $v0, loc_38EDC
                la      $v0, loc_40000
                beqz    $t3, loc_39378
                la      $v0, loc_40000
                li      $v0, 5
                beq     $t5, $v0, loc_393B0
                la      $v0, loc_40000
                addiu   $v0, (aRc256 - 0x40000)  # "RC2(56)"
                b       loc_38EE0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_391D8:                               # CODE XREF: SSL_CIPHER_description+35C↑j
                beq     $t0, $v0, loc_39330
                li      $v0, 0x2000
                beq     $t0, $v0, loc_392E0
                li      $v0, 0x800
                bne     $t0, $v0, loc_38EDC
                la      $v0, loc_40000
                la      $v0, loc_40000
                b       loc_38EE0
                addiu   $s1, $v0, (aSeed128 - 0x40000)  # "SEED(128)"
 # ---------------------------------------------------------------------------

loc_391FC:                               # CODE XREF: SSL_CIPHER_description+38C↑j
                beq     $t1, $v0, loc_39218
                li      $v0, 0x80
                bne     $t1, $v0, loc_38E94
                la      $v0, loc_40000
                la      $v0, loc_40000
                b       loc_38E98
                addiu   $s4, $v0, (aPsk - 0x40000)  # "PSK"
 # ---------------------------------------------------------------------------

loc_39218:                               # CODE XREF: SSL_CIPHER_description:loc_391FC↑j
                la      $v0, loc_40000
                b       loc_38E98
                addiu   $s4, $v0, (aEcdsa - 0x40000)  # "ECDSA"
 # ---------------------------------------------------------------------------

loc_39224:                               # CODE XREF: SSL_CIPHER_description:loc_39104↑j
                la      $v0, loc_40000
                b       loc_38E98
                addiu   $s4, $v0, (aKrb5 - 0x40000)  # "KRB5"
 # ---------------------------------------------------------------------------

loc_39230:                               # CODE XREF: SSL_CIPHER_description+100↑j
                la      $v0, loc_40000
                b       loc_38E98
                addiu   $s4, $v0, (aNone_0 - 0x40000)  # "None"
 # ---------------------------------------------------------------------------

loc_3923C:                               # CODE XREF: SSL_CIPHER_description+F8↑j
                la      $v0, loc_40000
                b       loc_38E98
                addiu   $s4, $v0, (aDss - 0x40000)  # "DSS"
 # ---------------------------------------------------------------------------

loc_39248:                               # CODE XREF: SSL_CIPHER_description:loc_38F10↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                li      $a0, 0x80
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x6AB
                beqz    $v0, loc_393D0
                lw      $gp, 0x58+var_30($sp)
                move    $s3, $v0
                b       loc_38F20
                li      $a1, 0x80
 # ---------------------------------------------------------------------------

loc_39274:                               # CODE XREF: SSL_CIPHER_description+274↑j
                la      $v0, loc_40000
                b       loc_38E5C
                addiu   $s5, $v0, (aDhDss - 0x40000)  # "DH/DSS"
 # ---------------------------------------------------------------------------

loc_39280:                               # CODE XREF: SSL_CIPHER_description+B0↑j
                la      $v0, loc_40000
                b       loc_38E5C
                addiu   $s5, $v0, (aEcdh - 0x40000)  # "ECDH"
 # ---------------------------------------------------------------------------

loc_3928C:                               # CODE XREF: SSL_CIPHER_description:loc_39068↑j
                la      $v0, loc_40000
                b       loc_38E5C
                addiu   $s5, $v0, (aEcdhRsa - 0x40000)  # "ECDH/RSA"
 # ---------------------------------------------------------------------------

loc_39298:                               # CODE XREF: SSL_CIPHER_description+C4↑j
                la      $v0, loc_40000
                b       loc_38E5C
                addiu   $s5, $v0, (aPsk - 0x40000)  # "PSK"
 # ---------------------------------------------------------------------------

loc_392A4:                               # CODE XREF: SSL_CIPHER_description:loc_38FE0↑j
                la      $v0, loc_40000
                b       loc_38E5C
                addiu   $s5, $v0, (aDhRsa - 0x40000)  # "DH/RSA"
 # ---------------------------------------------------------------------------

loc_392B0:                               # CODE XREF: SSL_CIPHER_description+148↑j
                beqz    $t3, loc_392D4
                la      $v0, loc_40000
                li      $v0, 5
                bne     $t5, $v0, loc_392D4
                la      $v0, loc_40000
                la      $v0, loc_40000
                addiu   $v0, (aDes40 - 0x40000)  # "DES(40)"
                b       loc_38EE0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_392D4:                               # CODE XREF: SSL_CIPHER_description:loc_392B0↑j
                                         # SSL_CIPHER_description+53C↑j
                addiu   $v0, (aDes56 - 0x40000)  # "DES(56)"
                b       loc_38EE0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_392E0:                               # CODE XREF: SSL_CIPHER_description+460↑j
                la      $v0, loc_40000
                b       loc_38EE0
                addiu   $s1, $v0, (aAesgcm256 - 0x40000)  # "AESGCM(256)"
 # ---------------------------------------------------------------------------

loc_392EC:                               # CODE XREF: SSL_CIPHER_description+428↑j
                la      $v0, loc_40000
                b       loc_38EE0
                addiu   $s1, $v0, (aNone_0 - 0x40000)  # "None"
 # ---------------------------------------------------------------------------

loc_392F8:                               # CODE XREF: SSL_CIPHER_description:loc_391A0↑j
                la      $v0, loc_40000
                b       loc_38EE0
                addiu   $s1, $v0, (aIdea128 - 0x40000)  # "IDEA(128)"
 # ---------------------------------------------------------------------------

loc_39304:                               # CODE XREF: SSL_CIPHER_description:loc_390D4↑j
                la      $v0, loc_40000
                b       loc_38EE0
                addiu   $s1, $v0, (aCamellia256 - 0x40000)  # "Camellia(256)"
 # ---------------------------------------------------------------------------

loc_39310:                               # CODE XREF: SSL_CIPHER_description+134↑j
                beqz    $t3, loc_39360
                andi    $v0, $t4, 2
                li      $v0, 5
                beq     $t5, $v0, loc_393C0
                la      $v0, loc_40000
                addiu   $v0, (aRc456 - 0x40000)  # "RC4(56)"
                b       loc_38EE0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_39330:                               # CODE XREF: SSL_CIPHER_description:loc_391D8↑j
                la      $v0, loc_40000
                b       loc_38EE0
                addiu   $s1, $v0, (aAesgcm128 - 0x40000)  # "AESGCM(128)"
 # ---------------------------------------------------------------------------

loc_3933C:                               # CODE XREF: SSL_CIPHER_description+368↑j
                la      $v0, loc_40000
                b       loc_38EE0
                addiu   $s1, $v0, (aAes256 - 0x40000)  # "AES(256)"
 # ---------------------------------------------------------------------------

loc_39348:                               # CODE XREF: SSL_CIPHER_description+284↑j
                addiu   $v0, (aKeecdh+4 - 0x40000)  # "DH"
                b       loc_39020
                move    $s5, $v0
 # ---------------------------------------------------------------------------

loc_39354:                               # CODE XREF: SSL_CIPHER_description+30C↑j
                addiu   $v0, (aRsa - 0x40000)  # "RSA"
                b       loc_39020
                move    $s5, $v0
 # ---------------------------------------------------------------------------

loc_39360:                               # CODE XREF: SSL_CIPHER_description:loc_39310↑j
                beqz    $v0, loc_39384
                la      $v0, loc_40000
                la      $v0, loc_40000
                addiu   $v0, (aRc464 - 0x40000)  # "RC4(64)"
                b       loc_38EE0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_39378:                               # CODE XREF: SSL_CIPHER_description+438↑j
                addiu   $v0, (aRc2128 - 0x40000)  # "RC2(128)"
                b       loc_38EE0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_39384:                               # CODE XREF: SSL_CIPHER_description:loc_39360↑j
                addiu   $v0, (aRc4128 - 0x40000)  # "RC4(128)"
                b       loc_38EE0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_39390:                               # CODE XREF: SSL_CIPHER_description+290↑j
                la      $v0, loc_40000
                addiu   $v0, (aDh512 - 0x40000)  # "DH(512)"
                b       loc_39020
                move    $s5, $v0
 # ---------------------------------------------------------------------------

loc_393A0:                               # CODE XREF: SSL_CIPHER_description+318↑j
                la      $v0, loc_40000
                addiu   $v0, (aRsa512 - 0x40000)  # "RSA(512)"
                b       loc_39020
                move    $s5, $v0
 # ---------------------------------------------------------------------------

loc_393B0:                               # CODE XREF: SSL_CIPHER_description+444↑j
                la      $v0, loc_40000
                addiu   $v0, (aRc240 - 0x40000)  # "RC2(40)"
                b       loc_38EE0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_393C0:                               # CODE XREF: SSL_CIPHER_description+59C↑j
                la      $v0, loc_40000
                addiu   $v0, (aRc440 - 0x40000)  # "RC4(40)"
                b       loc_38EE0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_393D0:                               # CODE XREF: SSL_CIPHER_description+4E0↑j
                la      $v0, loc_40000
                b       loc_38F54
                addiu   $s3, $v0, (aOpensslMallocE - 0x40000)  # "OPENSSL_malloc Error"
 # End of function SSL_CIPHER_description


 # =============== S U B R O U T I N E =======================================


sub_393DC:                               # CODE XREF: sub_395B4+564↓p
                                         # ssl_create_cipher_list+6D8↓p
                                         # DATA XREF: ...

var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_393DC)
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_8($sp)
                sw      $s5, 0x58+var_C($sp)
                sw      $s4, 0x58+var_10($sp)
                sw      $s3, 0x58+var_14($sp)
                sw      $s2, 0x58+var_18($sp)
                sw      $s1, 0x58+var_1C($sp)
                sw      $s0, 0x58+var_20($sp)
                sw      $gp, 0x58+var_28($sp)
                lw      $a2, 0($a0)
                move    $s4, $a0
                beqz    $a2, loc_395A8
                move    $s5, $a1
                move    $s0, $zero

loc_39420:                               # CODE XREF: sub_393DC+64↓j
                lw      $v0, 4($a2)
                beqz    $v0, loc_3943C
                nop
                lw      $v0, 0($a2)
                lw      $a0, 0x28($v0)
                slt     $v1, $s0, $a0
                movn    $s0, $a0, $v1

loc_3943C:                               # CODE XREF: sub_393DC+48↑j
                lw      $a2, 0xC($a2)
                bnez    $a2, loc_39420
                addiu   $v0, $s0, 1
                sll     $s1, $v0, 2

loc_3944C:                               # CODE XREF: sub_393DC+1D0↓j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                move    $a0, $s1
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x430
                move    $s2, $v0
                beqz    $v0, loc_39560
                lw      $gp, 0x58+var_28($sp)
                la      $t9, memset
                move    $a0, $v0
                move    $a2, $s1
                jalr    $t9 ; memset
                move    $a1, $zero
                lw      $a0, 0($s4)
                beqz    $a0, loc_394C4
                lw      $gp, 0x58+var_28($sp)

loc_39490:                               # CODE XREF: sub_393DC+E0↓j
                lw      $v0, 4($a0)
                beqz    $v0, loc_394B8
                nop
                lw      $v0, 0($a0)
                lw      $v1, 0x28($v0)
                sll     $v1, 2
                addu    $v1, $s2
                lw      $v0, 0($v1)
                addiu   $v0, 1
                sw      $v0, 0($v1)

loc_394B8:                               # CODE XREF: sub_393DC+B8↑j
                lw      $a0, 0xC($a0)
                bnez    $a0, loc_39490
                nop

loc_394C4:                               # CODE XREF: sub_393DC+AC↑j
                sll     $v0, $s0, 2
                addu    $s1, $s2, $v0
                la      $v0, loc_40000
                addiu   $s3, $v0, (sub_384FC - 0x40000)

loc_394D4:                               # CODE XREF: sub_393DC+148↓j
                lw      $v0, 0($s1)
                move    $a0, $zero
                addiu   $s1, -4
                move    $a1, $zero
                move    $a2, $zero
                blez    $v0, loc_3951C
                move    $a3, $zero
                li      $v0, 4
                sw      $v0, 0x58+var_3C($sp)
                sw      $s0, 0x58+var_38($sp)
                sw      $zero, 0x58+var_48($sp)
                sw      $zero, 0x58+var_44($sp)
                sw      $zero, 0x58+var_40($sp)
                sw      $s4, 0x58+var_34($sp)
                move    $t9, $s3
                jalr    $t9
                sw      $s5, 0x58+var_30($sp)
                lw      $gp, 0x58+var_28($sp)

loc_3951C:                               # CODE XREF: sub_393DC+10C↑j
                addiu   $s0, -1
                li      $v0, 0xFFFFFFFF
                bne     $s0, $v0, loc_394D4
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s2
                lw      $gp, 0x58+var_28($sp)
                lw      $ra, 0x58+var_8($sp)
                lw      $s5, 0x58+var_C($sp)
                lw      $s4, 0x58+var_10($sp)
                lw      $s3, 0x58+var_14($sp)
                lw      $s2, 0x58+var_18($sp)
                lw      $s1, 0x58+var_1C($sp)
                lw      $s0, 0x58+var_20($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_39560:                               # CODE XREF: sub_393DC+8C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x58+var_48($sp)
                li      $a0, 0x14
                li      $a1, 0xE7
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x58+var_28($sp)
                lw      $ra, 0x58+var_8($sp)
                lw      $s5, 0x58+var_C($sp)
                lw      $s4, 0x58+var_10($sp)
                lw      $s3, 0x58+var_14($sp)
                lw      $s2, 0x58+var_18($sp)
                lw      $s1, 0x58+var_1C($sp)
                lw      $s0, 0x58+var_20($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_395A8:                               # CODE XREF: sub_393DC+38↑j
                move    $s0, $zero
                b       loc_3944C
                li      $s1, 4
 # End of function sub_393DC


 # =============== S U B R O U T I N E =======================================


sub_395B4:                               # CODE XREF: ssl_create_cipher_list+83C↓p
                                         # ssl_create_cipher_list+99C↓p
                                         # DATA XREF: ...

var_68          = -0x68
var_64          = -0x64
var_60          = -0x60
var_5C          = -0x5C
var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_48          = -0x48
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4           =  4
arg_8           =  8
arg_C           =  0xC

                la      $gp, (off_5A360+0x7FF0 - sub_395B4)
                addu    $gp, $t9
                addiu   $sp, -0x78
                sw      $ra, 0x78+var_4($sp)
                sw      $fp, 0x78+var_8($sp)
                sw      $s7, 0x78+var_C($sp)
                sw      $s6, 0x78+var_10($sp)
                sw      $s5, 0x78+var_14($sp)
                sw      $s4, 0x78+var_18($sp)
                sw      $s3, 0x78+var_1C($sp)
                sw      $s2, 0x78+var_20($sp)
                sw      $s1, 0x78+var_24($sp)
                sw      $s0, 0x78+var_28($sp)
                sw      $gp, 0x78+var_48($sp)
                li      $v0, 1
                lb      $t0, 0($a0)
                move    $s5, $a0
                sw      $a1, 0x78+arg_4($sp)
                sw      $a2, 0x78+arg_8($sp)
                sw      $a3, 0x78+arg_C($sp)
                sw      $v0, 0x78+var_40($sp)

loc_3960C:                               # CODE XREF: sub_395B4+1D4↓j
                                         # sub_395B4:loc_397F8↓j ...
                beqz    $t0, loc_397C0
                li      $v0, 0x2D  # '-'
                beq     $t0, $v0, loc_39810
                li      $v0, 0x2B  # '+'
                beq     $t0, $v0, loc_3981C
                li      $v0, 0x21  # '!'
                beq     $t0, $v0, loc_39828
                li      $v0, 0x40  # '@'
                beq     $t0, $v0, loc_39918
                li      $v0, 0x3A  # ':'
                beq     $t0, $v0, loc_39800
                li      $s6, 1

loc_3963C:                               # CODE XREF: sub_395B4+260↓j
                                         # sub_395B4+26C↓j ...
                li      $v0, 0x20  # ' '
                beq     $t0, $v0, loc_39800
                li      $v0, 0x3B  # ';'
                beq     $t0, $v0, loc_39800
                li      $v0, 0x2C  # ','
                beq     $t0, $v0, loc_39800
                move    $t2, $zero
                move    $t1, $zero
                move    $a3, $zero
                move    $t0, $zero
                move    $fp, $zero
                move    $s7, $zero

loc_3966C:                               # CODE XREF: sub_395B4:loc_39904↓j
                lb      $a1, 0($s5)
                move    $s1, $s5
                b       loc_39688
                move    $s3, $zero
 # ---------------------------------------------------------------------------

loc_3967C:                               # CODE XREF: sub_395B4+EC↓j
                                         # sub_395B4+FC↓j ...
                addiu   $s1, 1

loc_39680:                               # CODE XREF: sub_395B4+10C↓j
                lb      $a1, 0($s1)
                addiu   $s3, 1

loc_39688:                               # CODE XREF: sub_395B4+C0↑j
                andi    $a0, $a1, 0xFF
                addiu   $v0, $a0, -0x41
                addiu   $v1, $a0, -0x30
                andi    $v0, 0xFF
                andi    $v1, 0xFF
                sltiu   $v0, 0x1A
                bnez    $v0, loc_3967C
                sltiu   $v1, 0xA
                addiu   $v0, $a0, -0x61
                andi    $v0, 0xFF
                bnez    $v1, loc_3967C
                sltiu   $v0, 0x1A
                bnez    $v0, loc_3967C
                li      $v0, 0x2D  # '-'
                beq     $a1, $v0, loc_39680
                addiu   $s1, 1
                addiu   $s1, -1
                beqz    $s3, loc_39ABC
                li      $v0, 5
                beq     $s6, $v0, loc_39A18
                li      $v0, 0x2B  # '+'
                beq     $a1, $v0, loc_3990C
                li      $t9, 1
                sw      $zero, 0x78+var_3C($sp)

loc_396E8:                               # CODE XREF: sub_395B4+35C↓j
                lw      $v0, 0x78+arg_C($sp)
                lw      $s4, 0($v0)
                beqz    $s4, loc_39758
                nop
                move    $s2, $v0

loc_396FC:                               # CODE XREF: sub_395B4+19C↓j
                lw      $s0, 4($s4)
                la      $t9, strncmp
                move    $a1, $s0
                sw      $a3, 0x78+var_38($sp)
                sw      $t0, 0x78+var_34($sp)
                sw      $t1, 0x78+var_30($sp)
                sw      $t2, 0x78+var_2C($sp)
                move    $a0, $s5
                jalr    $t9 ; strncmp
                move    $a2, $s3
                addu    $s0, $s3
                lw      $gp, 0x78+var_48($sp)
                lw      $a3, 0x78+var_38($sp)
                lw      $t0, 0x78+var_34($sp)
                lw      $t1, 0x78+var_30($sp)
                bnez    $v0, loc_3974C
                lw      $t2, 0x78+var_2C($sp)
                lb      $v0, 0($s0)
                beqz    $v0, loc_39834
                nop

loc_3974C:                               # CODE XREF: sub_395B4+184↑j
                lw      $s4, 4($s2)
                bnez    $s4, loc_396FC
                addiu   $s2, 4

loc_39758:                               # CODE XREF: sub_395B4+13C↑j
                                         # sub_395B4+304↓j ...
                lb      $t0, 0($s1)

loc_3975C:                               # CODE XREF: sub_395B4+410↓j
                                         # sub_395B4+420↓j ...
                beqz    $t0, loc_397C0
                li      $v0, 0x3A  # ':'
                beq     $t0, $v0, loc_397F8
                li      $v0, 0x20  # ' '
                beq     $t0, $v0, loc_397F8
                li      $v0, 0x3B  # ';'
                beq     $t0, $v0, loc_397F8
                li      $v0, 0x2C  # ','
                bne     $t0, $v0, loc_397B4
                addiu   $s1, 1
                addiu   $s1, -1
                b       loc_3960C
                move    $s5, $s1
 # ---------------------------------------------------------------------------

loc_39790:                               # CODE XREF: sub_395B4+204↓j
                beq     $v1, $v0, loc_399A4
                li      $v0, 0x20  # ' '
                beq     $v1, $v0, loc_399B0
                li      $v0, 0x3B  # ';'
                beq     $v1, $v0, loc_397F4
                li      $v0, 0x2C  # ','
                beq     $v1, $v0, loc_3999C
                li      $t0, 0x2C  # ','
                addiu   $s1, 1

loc_397B4:                               # CODE XREF: sub_395B4+1C8↑j
                lb      $v1, 0($s1)
                bnez    $v1, loc_39790
                li      $v0, 0x3A  # ':'

loc_397C0:                               # CODE XREF: sub_395B4:loc_3960C↑j
                                         # sub_395B4:loc_3975C↑j ...
                lw      $v0, 0x78+var_40($sp)
                lw      $ra, 0x78+var_4($sp)

loc_397C8:                               # CODE XREF: sub_395B4+500↓j
                lw      $fp, 0x78+var_8($sp)
                lw      $s7, 0x78+var_C($sp)
                lw      $s6, 0x78+var_10($sp)
                lw      $s5, 0x78+var_14($sp)
                lw      $s4, 0x78+var_18($sp)
                lw      $s3, 0x78+var_1C($sp)
                lw      $s2, 0x78+var_20($sp)
                lw      $s1, 0x78+var_24($sp)
                lw      $s0, 0x78+var_28($sp)
                jr      $ra
                addiu   $sp, 0x78
 # ---------------------------------------------------------------------------

loc_397F4:                               # CODE XREF: sub_395B4+1EC↑j
                                         # sub_395B4+4E0↓j
                li      $t0, 0x3B  # ';'

loc_397F8:                               # CODE XREF: sub_395B4+1B0↑j
                                         # sub_395B4+1B8↑j ...
                b       loc_3960C
                move    $s5, $s1
 # ---------------------------------------------------------------------------

loc_39800:                               # CODE XREF: sub_395B4+80↑j
                                         # sub_395B4+8C↑j ...
                lb      $t0, 1($s5)
                addiu   $s1, $s5, 1
                b       loc_3960C
                move    $s5, $s1
 # ---------------------------------------------------------------------------

loc_39810:                               # CODE XREF: sub_395B4+60↑j
                addiu   $s5, 1
                b       loc_3963C
                li      $s6, 3
 # ---------------------------------------------------------------------------

loc_3981C:                               # CODE XREF: sub_395B4+68↑j
                addiu   $s5, 1
                b       loc_3963C
                li      $s6, 4
 # ---------------------------------------------------------------------------

loc_39828:                               # CODE XREF: sub_395B4+70↑j
                addiu   $s5, 1
                b       loc_3963C
                li      $s6, 2
 # ---------------------------------------------------------------------------

loc_39834:                               # CODE XREF: sub_395B4+190↑j
                lw      $v0, 0xC($s4)
                beqz    $v0, loc_3984C
                nop
                bnez    $t2, loc_399BC
                and     $t2, $v0
                move    $t2, $v0

loc_3984C:                               # CODE XREF: sub_395B4+284↑j
                                         # sub_395B4:loc_399BC↓j
                lw      $v0, 0x10($s4)
                beqz    $v0, loc_39864
                nop
                bnez    $t1, loc_399CC
                and     $t1, $v0
                move    $t1, $v0

loc_39864:                               # CODE XREF: sub_395B4+29C↑j
                                         # sub_395B4:loc_399CC↓j
                lw      $v0, 0x14($s4)
                beqz    $v0, loc_3987C
                nop
                bnez    $a3, loc_399DC
                and     $a3, $v0
                move    $a3, $v0

loc_3987C:                               # CODE XREF: sub_395B4+2B4↑j
                                         # sub_395B4:loc_399DC↓j
                lw      $v0, 0x18($s4)
                beqz    $v0, loc_39894
                nop
                bnez    $t0, loc_399EC
                and     $t0, $v0
                move    $t0, $v0

loc_39894:                               # CODE XREF: sub_395B4+2CC↑j
                                         # sub_395B4:loc_399EC↓j
                lw      $a0, 0x20($s4)
                andi    $v1, $a0, 3
                beqz    $v1, loc_398C0
                andi    $v0, $s7, 3
                beqz    $v0, loc_39A10
                li      $v0, 0xFFFFFFFC
                or      $v0, $a0, $v0
                and     $s7, $v0
                andi    $v1, $s7, 3
                beqz    $v1, loc_39758
                nop

loc_398C0:                               # CODE XREF: sub_395B4+2E8↑j
                                         # sub_395B4:loc_39A10↓j
                andi    $v1, $a0, 0x1FC
                beqz    $v1, loc_398E8
                andi    $v0, $s7, 0x1FC
                beqz    $v0, loc_39A08
                li      $v0, 0xFFFFFE03
                or      $v0, $a0, $v0
                and     $s7, $v0
                andi    $v1, $s7, 0x1FC
                beqz    $v1, loc_39758
                nop

loc_398E8:                               # CODE XREF: sub_395B4+310↑j
                                         # sub_395B4:loc_39A08↓j
                lw      $v0, 0($s4)
                beqz    $v0, loc_39924
                nop
                lw      $a0, 8($s4)

loc_398F8:                               # CODE XREF: sub_395B4+44C↓j
                lw      $t9, 0x78+var_3C($sp)
                beqz    $t9, loc_39950
                lw      $t9, 0x78+arg_8($sp)

loc_39904:                               # CODE XREF: sub_395B4:loc_39944↓j
                b       loc_3966C
                move    $s5, $s1
 # ---------------------------------------------------------------------------

loc_3990C:                               # CODE XREF: sub_395B4+128↑j
                addiu   $s1, 1
                b       loc_396E8
                sw      $t9, 0x78+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_39918:                               # CODE XREF: sub_395B4+78↑j
                addiu   $s5, 1
                b       loc_3963C
                li      $s6, 5
 # ---------------------------------------------------------------------------

loc_39924:                               # CODE XREF: sub_395B4+338↑j
                lw      $v0, 0x1C($s4)
                beqz    $v0, loc_39944
                lw      $t9, 0x78+var_3C($sp)
                beqz    $fp, loc_399FC
                nop
                and     $fp, $v0
                beqz    $fp, loc_39758
                nop

loc_39944:                               # CODE XREF: sub_395B4+374↑j
                bnez    $t9, loc_39904
                move    $a0, $zero
                lw      $t9, 0x78+arg_8($sp)

loc_39950:                               # CODE XREF: sub_395B4+348↑j
                li      $v0, 0xFFFFFFFF
                sw      $v0, 0x78+var_58($sp)
                sw      $t9, 0x78+var_50($sp)
                lw      $v0, 0x78+arg_4($sp)
                la      $t9, loc_40000
                sw      $t0, 0x78+var_68($sp)
                move    $a1, $t2
                move    $a2, $t1
                sw      $fp, 0x78+var_64($sp)
                sw      $s7, 0x78+var_60($sp)
                sw      $s6, 0x78+var_5C($sp)
                addiu   $t9, (sub_384FC - 0x40000)
                jalr    $t9 ; sub_384FC
                sw      $v0, 0x78+var_54($sp)
                lb      $t0, 0($s1)
                beqz    $t0, loc_397C0
                lw      $gp, 0x78+var_48($sp)
                b       loc_3960C
                move    $s5, $s1
 # ---------------------------------------------------------------------------

loc_3999C:                               # CODE XREF: sub_395B4+1F4↑j
                                         # sub_395B4+4E8↓j
                b       loc_3960C
                move    $s5, $s1
 # ---------------------------------------------------------------------------

loc_399A4:                               # CODE XREF: sub_395B4:loc_39790↑j
                                         # sub_395B4+4D0↓j
                li      $t0, 0x3A  # ':'
                b       loc_3960C
                move    $s5, $s1
 # ---------------------------------------------------------------------------

loc_399B0:                               # CODE XREF: sub_395B4+1E4↑j
                                         # sub_395B4+4D8↓j
                li      $t0, 0x20  # ' '
                b       loc_3960C
                move    $s5, $s1
 # ---------------------------------------------------------------------------

loc_399BC:                               # CODE XREF: sub_395B4+28C↑j
                bnez    $t2, loc_3984C
                nop
                b       loc_3975C
                lb      $t0, 0($s1)
 # ---------------------------------------------------------------------------

loc_399CC:                               # CODE XREF: sub_395B4+2A4↑j
                bnez    $t1, loc_39864
                nop
                b       loc_3975C
                lb      $t0, 0($s1)
 # ---------------------------------------------------------------------------

loc_399DC:                               # CODE XREF: sub_395B4+2BC↑j
                bnez    $a3, loc_3987C
                nop
                b       loc_3975C
                lb      $t0, 0($s1)
 # ---------------------------------------------------------------------------

loc_399EC:                               # CODE XREF: sub_395B4+2D4↑j
                bnez    $t0, loc_39894
                nop
                b       loc_3975C
                lb      $t0, 0($s1)
 # ---------------------------------------------------------------------------

loc_399FC:                               # CODE XREF: sub_395B4+37C↑j
                move    $fp, $v0
                b       loc_398F8
                move    $a0, $zero
 # ---------------------------------------------------------------------------

loc_39A08:                               # CODE XREF: sub_395B4+318↑j
                b       loc_398E8
                or      $s7, $v1
 # ---------------------------------------------------------------------------

loc_39A10:                               # CODE XREF: sub_395B4+2F0↑j
                b       loc_398C0
                or      $s7, $v1
 # ---------------------------------------------------------------------------

loc_39A18:                               # CODE XREF: sub_395B4+120↑j
                li      $v0, 8
                beq     $s3, $v0, loc_39AF0
                la      $v0, loc_40000

loc_39A24:                               # CODE XREF: sub_395B4+52C↓j
                                         # sub_395B4+550↓j
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0xE6
                li      $a2, 0x118
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x78+var_48($sp)

loc_39A44:                               # CODE XREF: sub_395B4+56C↓j
                sw      $zero, 0x78+var_40($sp)
                lb      $t0, 0($s1)

loc_39A4C:                               # CODE XREF: sub_395B4+574↓j
                beqz    $t0, loc_397C0
                li      $v0, 0x3A  # ':'
                beq     $t0, $v0, loc_397F8
                li      $v0, 0x20  # ' '
                beq     $t0, $v0, loc_397F8
                li      $v0, 0x3B  # ';'
                beq     $t0, $v0, loc_397F8
                li      $v0, 0x2C  # ','
                bne     $t0, $v0, loc_39AA8
                addiu   $s1, 1
                addiu   $s1, -1
                b       loc_3960C
                move    $s5, $s1
 # ---------------------------------------------------------------------------

loc_39A80:                               # CODE XREF: sub_395B4+4F8↓j
                li      $v0, 0x3A  # ':'
                beq     $v1, $v0, loc_399A4
                li      $v0, 0x20  # ' '
                beq     $v1, $v0, loc_399B0
                li      $v0, 0x3B  # ';'
                beq     $v1, $v0, loc_397F4
                li      $v0, 0x2C  # ','
                beq     $v1, $v0, loc_3999C
                li      $t0, 0x2C  # ','
                addiu   $s1, 1

loc_39AA8:                               # CODE XREF: sub_395B4+4B8↑j
                lb      $v1, 0($s1)
                bnez    $v1, loc_39A80
                lw      $v0, 0x78+var_40($sp)
                b       loc_397C8
                lw      $ra, 0x78+var_4($sp)
 # ---------------------------------------------------------------------------

loc_39ABC:                               # CODE XREF: sub_395B4+118↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x78+var_68($sp)
                li      $a0, 0x14
                li      $a1, 0xE6
                li      $a2, 0x118
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                li      $v0, 5
                lw      $gp, 0x78+var_48($sp)
                beq     $s6, $v0, loc_39A24
                addiu   $s1, 1
                b       loc_39758
                sw      $zero, 0x78+var_40($sp)
 # ---------------------------------------------------------------------------

loc_39AF0:                               # CODE XREF: sub_395B4+468↑j
                la      $t9, strncmp
                move    $a0, $s5
                addiu   $a1, $v0, (aStrength - 0x40000)  # "STRENGTH"
                jalr    $t9 ; strncmp
                li      $a2, 8
                bnez    $v0, loc_39A24
                lw      $gp, 0x78+var_48($sp)
                la      $t9, loc_40000
                lw      $a0, 0x78+arg_4($sp)
                addiu   $t9, (sub_393DC - 0x40000)
                jalr    $t9 ; sub_393DC
                lw      $a1, 0x78+arg_8($sp)
                beqz    $v0, loc_39A44
                lw      $gp, 0x78+var_48($sp)
                b       loc_39A4C
                lb      $t0, 0($s1)
 # End of function sub_395B4


 # =============== S U B R O U T I N E =======================================


                .globl ssl_cipher_get_evp
ssl_cipher_get_evp:                      # CODE XREF: ssl2_accept+518↑p
                                         # ssl2_connect+B58↑p ...

var_40          = -0x40
var_38          = -0x38
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_10          =  0x10
arg_14          =  0x14

                la      $gp, (off_5A360+0x7FF0 - ssl_cipher_get_evp)
                addu    $gp, $t9
                addiu   $sp, -0x50
                sw      $ra, 0x50+var_8($sp)
                sw      $s7, 0x50+var_C($sp)
                sw      $s6, 0x50+var_10($sp)
                sw      $s5, 0x50+var_14($sp)
                sw      $s4, 0x50+var_18($sp)
                sw      $s3, 0x50+var_1C($sp)
                sw      $s2, 0x50+var_20($sp)
                sw      $s1, 0x50+var_24($sp)
                sw      $s0, 0x50+var_28($sp)
                sw      $gp, 0x50+var_40($sp)
                lw      $s2, 0xAC($a0)
                move    $s6, $a0
                move    $s4, $a1
                move    $s5, $a2
                move    $s1, $a3
                lw      $s7, 0x50+arg_10($sp)
                beqz    $s2, loc_39CC8
                lw      $s0, 0x50+arg_14($sp)
                beqz    $s0, loc_39BE4
                la      $t9, loc_40000
                li      $s3, 0x60000
                addiu   $t9, (sub_388FC - 0x40000)
                jalr    $t9 ; sub_388FC
                nop
                lw      $v0, 0xA8($s6)
                lw      $a0, (dword_5ADC0 - 0x60000)($s3)
                lw      $gp, 0x50+var_40($sp)
                sw      $v0, 0x50+var_38($sp)
                beqz    $a0, loc_39BE4
                sw      $zero, 0($s0)
                la      $t9, sk_find
                jalr    $t9 ; sk_find
                addiu   $a1, $sp, 0x50+var_38
                bltz    $v0, loc_39D2C
                lw      $gp, 0x50+var_40($sp)
                la      $t9, sk_value
                lw      $a0, (dword_5ADC0 - 0x60000)($s3)
                jalr    $t9 ; sk_value
                move    $a1, $v0
                lw      $gp, 0x50+var_40($sp)
                sw      $v0, 0($s0)

loc_39BE4:                               # CODE XREF: ssl_cipher_get_evp+58↑j
                                         # ssl_cipher_get_evp+80↑j ...
                beqz    $s4, loc_39CCC
                move    $v0, $zero
                beqz    $s5, loc_39CC8
                li      $v0, 0x40  # '@'
                lw      $v1, 0x14($s2)
                beq     $v1, $v0, loc_39C50
                li      $v0, 6
                sltiu   $v0, $v1, 0x41  # 'A'
                bnez    $v0, loc_39CF8
                li      $v0, 4
                li      $v0, 0x400
                beq     $v1, $v0, loc_39C4C
                sltiu   $v0, $v1, 0x401
                beqz    $v0, loc_39D58
                li      $v0, 0x1000
                li      $v0, 0x100
                beq     $v1, $v0, loc_39C50
                li      $v0, 8
                li      $v0, 0x200
                beq     $v1, $v0, loc_39C50
                li      $v0, 9
                li      $v0, 0x80
                bne     $v1, $v0, loc_39D24
                li      $v0, 7
                b       loc_39C54
                li      $v1, 0x60000
 # ---------------------------------------------------------------------------

loc_39C4C:                               # CODE XREF: ssl_cipher_get_evp+E0↑j
                li      $v0, 0xA

loc_39C50:                               # CODE XREF: ssl_cipher_get_evp+C8↑j
                                         # ssl_cipher_get_evp+F4↑j ...
                li      $v1, 0x60000

loc_39C54:                               # CODE XREF: ssl_cipher_get_evp+114↑j
                                         # ssl_cipher_get_evp+220↓j ...
                sll     $v0, 2
                addiu   $v1, (dword_5ADC4 - 0x60000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                sw      $a0, 0($s4)

loc_39C68:                               # CODE XREF: ssl_cipher_get_evp:loc_39D24↓j
                                         # ssl_cipher_get_evp+31C↓j
                lw      $a1, 0x18($s2)
                sltiu   $v0, $a1, 0x21   # switch 33 cases
                bnez    $v0, loc_39E54

def_39E68:                               # jumptable 00039E68 default case
                la      $v1, loc_40000

loc_39C78:                               # CODE XREF: ssl_cipher_get_evp+338↓j
                                         # DATA XREF: .rodata:jpt_39E68↓o
                beqz    $s1, loc_39C84   # jumptable 00039E68 cases 0,3,5-7,9-15,17-31
                sw      $zero, 0($s5)
                sw      $zero, 0($s1)

loc_39C84:                               # CODE XREF: ssl_cipher_get_evp:loc_39C78↑j
                beqz    $s7, loc_39C90
                li      $v0, 0x40  # '@'
                sw      $zero, 0($s7)

loc_39C90:                               # CODE XREF: ssl_cipher_get_evp:loc_39C84↑j
                beq     $a1, $v0, loc_39F18
                nop

loc_39C98:                               # CODE XREF: ssl_cipher_get_evp:loc_39EA4↓j
                                         # ssl_cipher_get_evp+388↓j ...
                lw      $a0, 0($s4)
                beqz    $a0, loc_39CCC
                move    $v0, $zero
                lw      $v0, 0($s5)
                bnez    $v0, loc_39D80
                la      $t9, EVP_CIPHER_flags
                jalr    $t9 ; EVP_CIPHER_flags
                nop
                lui     $v1, 0x20  # ' '
                and     $v0, $v1
                bnez    $v0, loc_39D80
                lw      $gp, 0x50+var_40($sp)

loc_39CC8:                               # CODE XREF: ssl_cipher_get_evp+50↑j
                                         # ssl_cipher_get_evp+BC↑j
                move    $v0, $zero

loc_39CCC:                               # CODE XREF: ssl_cipher_get_evp:loc_39BE4↑j
                                         # ssl_cipher_get_evp+16C↑j ...
                lw      $ra, 0x50+var_8($sp)
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_39CF8:                               # CODE XREF: ssl_cipher_get_evp+D4↑j
                beq     $v1, $v0, loc_39C50
                li      $v0, 2
                sltiu   $v0, $v1, 5
                beqz    $v0, loc_39D34
                li      $v0, 0x10
                li      $v0, 1
                beq     $v1, $v0, loc_39C50
                move    $v0, $zero
                li      $v0, 2
                beq     $v1, $v0, loc_39C50
                li      $v0, 1

loc_39D24:                               # CODE XREF: ssl_cipher_get_evp+10C↑j
                                         # ssl_cipher_get_evp+218↓j ...
                b       loc_39C68
                sw      $zero, 0($s4)
 # ---------------------------------------------------------------------------

loc_39D2C:                               # CODE XREF: ssl_cipher_get_evp+94↑j
                b       loc_39BE4
                sw      $zero, 0($s0)
 # ---------------------------------------------------------------------------

loc_39D34:                               # CODE XREF: ssl_cipher_get_evp+1D4↑j
                beq     $v1, $v0, loc_39C50
                li      $v0, 4
                li      $v0, 0x20  # ' '
                beq     $v1, $v0, loc_39E3C
                li      $v0, 8
                bne     $v1, $v0, loc_39D24
                li      $v0, 3
                b       loc_39C54
                li      $v1, 0x60000
 # ---------------------------------------------------------------------------

loc_39D58:                               # CODE XREF: ssl_cipher_get_evp+E8↑j
                beq     $v1, $v0, loc_39C50
                li      $v0, 0xC
                li      $v0, 0x2000
                beq     $v1, $v0, loc_39C50
                li      $v0, 0xD
                li      $v0, 0x800
                bne     $v1, $v0, loc_39D24
                li      $v0, 0xB
                b       loc_39C54
                li      $v1, 0x60000
 # ---------------------------------------------------------------------------

loc_39D80:                               # CODE XREF: ssl_cipher_get_evp+178↑j
                                         # ssl_cipher_get_evp+190↑j
                beqz    $s1, loc_39D94
                nop
                lw      $v0, 0($s1)
                beqz    $v0, loc_39CCC
                move    $v0, $zero

loc_39D94:                               # CODE XREF: ssl_cipher_get_evp:loc_39D80↑j
                lw      $a0, 0($s6)
                li      $v0, 3
                sra     $v1, $a0, 8
                beq     $v1, $v0, loc_39DD8
                slti    $v0, $a0, 0x301

loc_39DA8:                               # CODE XREF: ssl_cipher_get_evp:loc_39DD8↓j
                                         # ssl_cipher_get_evp+2CC↓j ...
                lw      $ra, 0x50+var_8($sp)

loc_39DAC:                               # CODE XREF: ssl_cipher_get_evp+2D8↓j
                                         # ssl_cipher_get_evp+3BC↓j ...
                lw      $s7, 0x50+var_C($sp)
                lw      $s6, 0x50+var_10($sp)
                lw      $s5, 0x50+var_14($sp)
                lw      $s4, 0x50+var_18($sp)
                lw      $s3, 0x50+var_1C($sp)
                lw      $s2, 0x50+var_20($sp)
                lw      $s1, 0x50+var_24($sp)
                lw      $s0, 0x50+var_28($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x50
 # ---------------------------------------------------------------------------

loc_39DD8:                               # CODE XREF: ssl_cipher_get_evp+270↑j
                bnez    $v0, loc_39DA8
                li      $v0, 4
                lw      $v1, 0x14($s2)
                beq     $v1, $v0, loc_39EE8
                li      $v0, 1

loc_39DEC:                               # CODE XREF: ssl_cipher_get_evp+3E0↓j
                li      $v0, 0x40  # '@'
                beq     $v1, $v0, loc_39F20
                li      $v0, 2

loc_39DF8:                               # CODE XREF: ssl_cipher_get_evp+418↓j
                li      $v0, 0x80
                bne     $v1, $v0, loc_39DA8
                li      $v0, 2
                lw      $v1, 0x18($s2)
                bne     $v1, $v0, loc_39DAC
                lw      $ra, 0x50+var_8($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aAes256CbcHmacS - 0x40000)  # "AES-256-CBC-HMAC-SHA1"
                move    $v1, $v0
                beqz    $v0, loc_39DA8
                lw      $gp, 0x50+var_40($sp)

loc_39E2C:                               # CODE XREF: ssl_cipher_get_evp+3D8↓j
                                         # ssl_cipher_get_evp+410↓j
                li      $v0, 1
                sw      $v1, 0($s4)
                b       loc_39CCC
                sw      $zero, 0($s5)
 # ---------------------------------------------------------------------------

loc_39E3C:                               # CODE XREF: ssl_cipher_get_evp+210↑j
                la      $t9, EVP_enc_null
                jalr    $t9 ; EVP_enc_null
                nop
                lw      $gp, 0x50+var_40($sp)
                b       loc_39C68
                sw      $v0, 0($s4)
 # ---------------------------------------------------------------------------

loc_39E54:                               # CODE XREF: ssl_cipher_get_evp+140↑j
                sll     $v0, $a1, 2
                addiu   $v1, (jpt_39E68 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_39E70:                               # CODE XREF: ssl_cipher_get_evp+338↑j
                                         # DATA XREF: .rodata:jpt_39E68↓o
                li      $v0, 5           # jumptable 00039E68 case 32

loc_39E74:                               # CODE XREF: ssl_cipher_get_evp:loc_39EC0↓j
                                         # ssl_cipher_get_evp:loc_39EC8↓j ...
                sll     $a0, $v0, 2
                li      $v0, 0x60000
                addiu   $v0, (dword_5ADFC - 0x60000)
                addu    $v0, $a0, $v0
                lw      $v1, 0($v0)
                beqz    $s1, loc_39EA4
                sw      $v1, 0($s5)
                li      $v0, 0x60000
                addiu   $v0, (dword_5A318 - 0x60000)
                addu    $v0, $a0, $v0
                lw      $v1, 0($v0)
                sw      $v1, 0($s1)

loc_39EA4:                               # CODE XREF: ssl_cipher_get_evp+358↑j
                beqz    $s7, loc_39C98
                li      $v0, 0x60000
                addiu   $v0, (dword_5AE14 - 0x60000)
                addu    $v0, $a0, $v0
                lw      $v1, 0($v0)
                b       loc_39C98
                sw      $v1, 0($s7)
 # ---------------------------------------------------------------------------

loc_39EC0:                               # CODE XREF: ssl_cipher_get_evp+338↑j
                                         # DATA XREF: .rodata:jpt_39E68↓o
                b       loc_39E74        # jumptable 00039E68 case 16
                li      $v0, 4
 # ---------------------------------------------------------------------------

loc_39EC8:                               # CODE XREF: ssl_cipher_get_evp+338↑j
                                         # DATA XREF: .rodata:jpt_39E68↓o
                b       loc_39E74        # jumptable 00039E68 case 8
                li      $v0, 3
 # ---------------------------------------------------------------------------

loc_39ED0:                               # CODE XREF: ssl_cipher_get_evp+338↑j
                                         # DATA XREF: .rodata:jpt_39E68↓o
                b       loc_39E74        # jumptable 00039E68 case 4
                li      $v0, 2
 # ---------------------------------------------------------------------------

loc_39ED8:                               # CODE XREF: ssl_cipher_get_evp+338↑j
                                         # DATA XREF: .rodata:jpt_39E68↓o
                b       loc_39E74        # jumptable 00039E68 case 2
                li      $v0, 1
 # ---------------------------------------------------------------------------

loc_39EE0:                               # CODE XREF: ssl_cipher_get_evp+338↑j
                                         # DATA XREF: .rodata:jpt_39E68↓o
                b       loc_39E74        # jumptable 00039E68 case 1
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_39EE8:                               # CODE XREF: ssl_cipher_get_evp+2B4↑j
                lw      $v1, 0x18($s2)
                bne     $v1, $v0, loc_39DAC
                lw      $ra, 0x50+var_8($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aRc4HmacMd5 - 0x40000)  # "RC4-HMAC-MD5"
                move    $v1, $v0
                bnez    $v0, loc_39E2C
                lw      $gp, 0x50+var_40($sp)
                b       loc_39DEC
                lw      $v1, 0x14($s2)
 # ---------------------------------------------------------------------------

loc_39F18:                               # CODE XREF: ssl_cipher_get_evp:loc_39C90↑j
                b       loc_39C98
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_39F20:                               # CODE XREF: ssl_cipher_get_evp+2C0↑j
                lw      $v1, 0x18($s2)
                bne     $v1, $v0, loc_39DAC
                lw      $ra, 0x50+var_8($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aAes128CbcHmacS - 0x40000)  # "AES-128-CBC-HMAC-SHA1"
                move    $v1, $v0
                bnez    $v0, loc_39E2C
                lw      $gp, 0x50+var_40($sp)
                b       loc_39DF8
                lw      $v1, 0x14($s2)
 # End of function ssl_cipher_get_evp


 # =============== S U B R O U T I N E =======================================


                .globl ssl_load_ciphers
ssl_load_ciphers:                        # CODE XREF: SSL_library_init+328↓p
                                         # DATA XREF: LOAD:000046F8↑o ...

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_load_ciphers)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s2, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aDesCbc - 0x40000)  # "DES-CBC"
                lw      $gp, 0x38+var_20($sp)
                li      $s0, 0x60000
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADC4 - 0x60000)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aDesEde3Cbc - 0x40000)  # "DES-EDE3-CBC"
                lw      $gp, 0x38+var_20($sp)
                addiu   $s0, (dword_5ADC4 - 0x60000)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADC8 - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aRc4 - 0x40000)  # "RC4"
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADCC - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aRc2Cbc - 0x40000)  # "RC2-CBC"
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADD0 - 0x5ADC4)($s0)
                addiu   $a0, (aAes128Cbc - 0x40000)  # "AES-128-CBC"
                jalr    $t9 ; EVP_get_cipherbyname
                sw      $zero, (dword_5ADD4 - 0x5ADC4)($s0)
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADDC - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aAes256Cbc - 0x40000)  # "AES-256-CBC"
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADE0 - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aCamellia128Cbc - 0x40000)  # "CAMELLIA-128-CBC"
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADE4 - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aCamellia256Cbc - 0x40000)  # "CAMELLIA-256-CBC"
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADE8 - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aGost89Cnt - 0x40000)  # "gost89-cnt"
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADEC - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aSeedCbc - 0x40000)  # "SEED-CBC"
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADF0 - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aIdAes128Gcm - 0x40000)  # "id-aes128-GCM"
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_cipherbyname
                sw      $v0, (dword_5ADF4 - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_cipherbyname
                addiu   $a0, (aIdAes256Gcm - 0x40000)  # "id-aes256-GCM"
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_digestbyname
                sw      $v0, (dword_5ADF8 - 0x5ADC4)($s0)
                jalr    $t9 ; EVP_get_digestbyname
                addiu   $a0, (aExpAdhRc4Md5+0xC - 0x40000)  # "MD5"
                lw      $gp, 0x38+var_20($sp)
                li      $s1, 0x60000
                la      $t9, EVP_MD_size
                sw      $v0, (dword_5ADFC - 0x60000)($s1)
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                lw      $gp, 0x38+var_20($sp)
                li      $s0, 0x60000
                bltz    $v0, loc_3A228
                sw      $v0, (dword_5AE14 - 0x60000)($s0)

loc_3A0D8:                               # CODE XREF: ssl_load_ciphers+2F4↓j
                la      $a0, loc_40000
                la      $t9, EVP_get_digestbyname
                jalr    $t9 ; EVP_get_digestbyname
                addiu   $a0, (aSha1 - 0x40000)  # "SHA1"
                lw      $gp, 0x38+var_20($sp)
                addiu   $s1, (dword_5ADFC - 0x60000)
                la      $t9, EVP_MD_size
                sw      $v0, (dword_5AE00 - 0x5ADFC)($s1)
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                addiu   $s2, $s0, (dword_5AE14 - 0x60000)
                lw      $gp, 0x38+var_20($sp)
                bltz    $v0, loc_3A24C
                sw      $v0, (dword_5AE18 - 0x5AE14)($s2)

loc_3A110:                               # CODE XREF: ssl_load_ciphers+318↓j
                la      $a0, loc_40000
                la      $t9, EVP_get_digestbyname
                jalr    $t9 ; EVP_get_digestbyname
                addiu   $a0, (aMdGost94 - 0x40000)  # "md_gost94"
                lw      $gp, 0x38+var_20($sp)
                beqz    $v0, loc_3A144
                sw      $v0, (dword_5AE04 - 0x5ADFC)($s1)
                la      $t9, EVP_MD_size
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                sw      $v0, (dword_5AE1C - 0x5AE14)($s2)
                bltz    $v0, loc_3A270
                lw      $gp, 0x38+var_20($sp)

loc_3A144:                               # CODE XREF: ssl_load_ciphers+1D4↑j
                                         # ssl_load_ciphers+33C↓j
                la      $s0, loc_40000
                la      $t9, EVP_get_digestbyname
                jalr    $t9 ; EVP_get_digestbyname
                addiu   $a0, $s0, (aGostMac - 0x40000)  # "gost-mac"
                lw      $gp, 0x38+var_20($sp)
                la      $t9, EVP_PKEY_asn1_find_str
                sw      $v0, (dword_5AE08 - 0x5ADFC)($s1)
                sw      $zero, 0x38+var_18($sp)
                addiu   $a1, $s0, (aGostMac - 0x40000)  # "gost-mac"
                move    $a0, $zero
                jalr    $t9 ; EVP_PKEY_asn1_find_str
                li      $a2, 0xFFFFFFFF
                beqz    $v0, loc_3A1A0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, EVP_PKEY_asn1_get0_info
                sw      $v0, 0x38+var_24($sp)
                sw      $zero, 0x38+var_28($sp)
                addiu   $a0, $sp, 0x38+var_18
                move    $a1, $zero
                move    $a2, $zero
                jalr    $t9 ; EVP_PKEY_asn1_get0_info
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)

loc_3A1A0:                               # CODE XREF: ssl_load_ciphers+224↑j
                lw      $v1, 0x38+var_18($sp)
                li      $v0, 0x60000
                beqz    $v1, loc_3A1B8
                sw      $v1, (dword_5A324 - 0x60000)($v0)
                li      $v0, 0x20  # ' '
                sw      $v0, (dword_5AE20 - 0x5AE14)($s2)

loc_3A1B8:                               # CODE XREF: ssl_load_ciphers+258↑j
                la      $a0, loc_40000
                la      $t9, EVP_get_digestbyname
                jalr    $t9 ; EVP_get_digestbyname
                addiu   $a0, (aSha256 - 0x40000)  # "SHA256"
                lw      $gp, 0x38+var_20($sp)
                la      $t9, EVP_MD_size
                move    $a0, $v0
                jalr    $t9 ; EVP_MD_size
                sw      $v0, (dword_5AE0C - 0x5ADFC)($s1)
                lw      $gp, 0x38+var_20($sp)
                la      $a0, loc_40000
                la      $t9, EVP_get_digestbyname
                sw      $v0, (dword_5AE24 - 0x5AE14)($s2)
                jalr    $t9 ; EVP_get_digestbyname
                addiu   $a0, (aSha384 - 0x40000)  # "SHA384"
                lw      $gp, 0x38+var_20($sp)
                la      $t9, EVP_MD_size
                sw      $v0, (dword_5AE10 - 0x5ADFC)($s1)
                jalr    $t9 ; EVP_MD_size
                move    $a0, $v0
                sw      $v0, (dword_5AE28 - 0x5AE14)($s2)
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_4($sp)
                lw      $s2, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3A228:                               # CODE XREF: ssl_load_ciphers+180↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                addiu   $a2, (aSslMacSecretSi - 0x40000)  # "ssl_mac_secret_size[SSL_MD_MD5_IDX] >= "...
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x192
                b       loc_3A0D8
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3A24C:                               # CODE XREF: ssl_load_ciphers+1B8↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                addiu   $a2, (aSslMacSecretSi_0 - 0x40000)  # "ssl_mac_secret_size[SSL_MD_SHA1_IDX] >="...
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x197
                b       loc_3A110
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3A270:                               # CODE XREF: ssl_load_ciphers+1EC↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                addiu   $a2, (aSslMacSecretSi_1 - 0x40000)  # "ssl_mac_secret_size[SSL_MD_GOST94_IDX] "...
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x19E
                b       loc_3A144
                lw      $gp, 0x38+var_20($sp)
 # End of function ssl_load_ciphers


 # =============== S U B R O U T I N E =======================================


                .globl ssl_create_cipher_list
ssl_create_cipher_list:                  # CODE XREF: SSL_set_cipher_list+30↑p
                                         # SSL_CTX_set_cipher_list+2C↑p ...

var_A0          = -0xA0
var_9C          = -0x9C
var_98          = -0x98
var_94          = -0x94
var_90          = -0x90
var_8C          = -0x8C
var_88          = -0x88
var_80          = -0x80
var_78          = -0x78
var_74          = -0x74
var_70          = -0x70
var_68          = -0x68
var_64          = -0x64
var_60          = -0x60
var_5C          = -0x5C
var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_0           =  0
arg_4           =  4
arg_8           =  8
arg_C           =  0xC

                la      $gp, (off_5A360+0x7FF0 - ssl_create_cipher_list)
                addu    $gp, $t9
                addiu   $sp, -0xB0
                sw      $ra, 0xB0+var_4($sp)
                sw      $fp, 0xB0+var_8($sp)
                sw      $s7, 0xB0+var_C($sp)
                sw      $s6, 0xB0+var_10($sp)
                sw      $s5, 0xB0+var_14($sp)
                sw      $s4, 0xB0+var_18($sp)
                sw      $s3, 0xB0+var_1C($sp)
                sw      $s2, 0xB0+var_20($sp)
                sw      $s1, 0xB0+var_24($sp)
                sw      $s0, 0xB0+var_28($sp)
                sw      $gp, 0xB0+var_80($sp)
                sw      $a3, 0xB0+arg_C($sp)
                sw      $a0, 0xB0+arg_0($sp)
                sw      $a1, 0xB0+arg_4($sp)
                bnez    $a3, loc_3A31C
                sw      $a2, 0xB0+arg_8($sp)
                move    $s1, $zero

loc_3A2E8:                               # CODE XREF: ssl_create_cipher_list:loc_3A31C↓j
                                         # ssl_create_cipher_list+90↓j ...
                move    $v0, $s1
                lw      $ra, 0xB0+var_4($sp)
                lw      $fp, 0xB0+var_8($sp)
                lw      $s7, 0xB0+var_C($sp)
                lw      $s6, 0xB0+var_10($sp)
                lw      $s5, 0xB0+var_14($sp)
                lw      $s4, 0xB0+var_18($sp)
                lw      $s3, 0xB0+var_1C($sp)
                lw      $s2, 0xB0+var_20($sp)
                lw      $s1, 0xB0+var_24($sp)
                lw      $s0, 0xB0+var_28($sp)
                jr      $ra
                addiu   $sp, 0xB0
 # ---------------------------------------------------------------------------

loc_3A31C:                               # CODE XREF: ssl_create_cipher_list+48↑j
                beqz    $a1, loc_3A2E8
                move    $s1, $zero
                beqz    $a2, loc_3A2E8
                la      $t9, EVP_PKEY_asn1_find_str
                la      $a1, loc_40000
                sw      $zero, 0xB0+var_70($sp)
                sw      $zero, 0xB0+var_74($sp)
                sw      $zero, 0xB0+var_78($sp)
                addiu   $a1, (aGost94 - 0x40000)  # "gost94"
                move    $a0, $zero
                jalr    $t9 ; EVP_PKEY_asn1_find_str
                li      $a2, 0xFFFFFFFF
                beqz    $v0, loc_3A378
                lw      $gp, 0xB0+var_80($sp)
                la      $t9, EVP_PKEY_asn1_get0_info
                sw      $v0, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_A0($sp)
                addiu   $a0, $sp, 0xB0+var_70
                move    $a1, $zero
                move    $a2, $zero
                jalr    $t9 ; EVP_PKEY_asn1_get0_info
                move    $a3, $zero
                lw      $gp, 0xB0+var_80($sp)

loc_3A378:                               # CODE XREF: ssl_create_cipher_list+B8↑j
                lw      $v1, 0xB0+var_70($sp)
                la      $a1, loc_40000
                li      $v0, 0xF8
                li      $a3, 0x1F8
                la      $t9, EVP_PKEY_asn1_find_str
                movn    $a3, $v0, $v1
                sw      $zero, 0xB0+var_70($sp)
                addiu   $a1, (aGost2001 - 0x40000)  # "gost2001"
                move    $a0, $zero
                li      $a2, 0xFFFFFFFF
                jalr    $t9 ; EVP_PKEY_asn1_find_str
                sw      $a3, 0xB0+var_34($sp)
                beqz    $v0, loc_3A3D4
                lw      $gp, 0xB0+var_80($sp)
                la      $t9, EVP_PKEY_asn1_get0_info
                sw      $v0, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_A0($sp)
                addiu   $a0, $sp, 0xB0+var_70
                move    $a1, $zero
                move    $a2, $zero
                jalr    $t9 ; EVP_PKEY_asn1_get0_info
                move    $a3, $zero
                lw      $gp, 0xB0+var_80($sp)

loc_3A3D4:                               # CODE XREF: ssl_create_cipher_list+114↑j
                lw      $t9, 0xB0+var_34($sp)
                lw      $v1, 0xB0+var_70($sp)
                ori     $a0, $t9, 0x200
                movz    $t9, $a0, $v1
                sw      $t9, 0xB0+var_34($sp)
                li      $s3, 0x60000
                lw      $ra, 0xB0+var_34($sp)
                addiu   $v0, $s3, (dword_5ADC4 - 0x60000)
                andi    $a0, $ra, 0x300
                lw      $s5, (dword_5ADF0 - 0x5ADC4)($v0)
                lw      $a3, (dword_5ADD0 - 0x5ADC4)($v0)
                lw      $s6, (dword_5ADC8 - 0x5ADC4)($v0)
                lw      $s7, (dword_5ADCC - 0x5ADC4)($v0)
                lw      $t8, (dword_5ADD4 - 0x5ADC4)($v0)
                lw      $t0, (dword_5ADDC - 0x5ADC4)($v0)
                lw      $t1, (dword_5ADE0 - 0x5ADC4)($v0)
                lw      $t2, (dword_5ADF4 - 0x5ADC4)($v0)
                lw      $t3, (dword_5ADF8 - 0x5ADC4)($v0)
                lw      $t4, (dword_5ADE4 - 0x5ADC4)($v0)
                lw      $t5, (dword_5ADE8 - 0x5ADC4)($v0)
                lw      $t6, (dword_5ADEC - 0x5ADC4)($v0)
                xori    $a0, 0x300
                li      $v0, 0x17E
                li      $ra, 0x37E
                movn    $ra, $v0, $a0
                li      $fp, 8
                li      $s4, 0x60000
                sw      $ra, 0xB0+var_30($sp)
                movn    $fp, $zero, $a3
                li      $v0, 0x40  # '@'
                li      $a0, 0x80
                li      $a3, 0x1000
                li      $ra, 0x2000
                movn    $v0, $zero, $t0
                movn    $a0, $zero, $t1
                movn    $a3, $zero, $t2
                movn    $ra, $zero, $t3
                addiu   $v1, $s4, (dword_5ADFC - 0x60000)
                sw      $v0, 0xB0+var_68($sp)
                sw      $a0, 0xB0+var_64($sp)
                sw      $a3, 0xB0+var_60($sp)
                sw      $ra, 0xB0+var_5C($sp)
                li      $v0, 0x100
                li      $a0, 0x200
                li      $a3, 0x400
                li      $ra, 0x800
                lw      $s0, (dword_5AE0C - 0x5ADFC)($v1)
                lw      $s1, (dword_5AE10 - 0x5ADFC)($v1)
                lw      $s2, (dword_5AE04 - 0x5ADFC)($v1)
                lw      $t7, (dword_5AE00 - 0x5ADFC)($v1)
                movn    $ra, $zero, $s5
                lw      $t9, (dword_5AE08 - 0x5ADFC)($v1)
                li      $a1, 4
                li      $v1, 2
                li      $a2, 0x10
                movn    $v0, $zero, $t4
                movn    $a0, $zero, $t5
                movn    $a3, $zero, $t6
                sw      $v0, 0xB0+var_58($sp)
                sw      $a0, 0xB0+var_54($sp)
                sw      $a3, 0xB0+var_50($sp)
                sw      $ra, 0xB0+var_4C($sp)
                move    $v0, $v1
                move    $a0, $a2
                li      $a3, 0x20  # ' '
                move    $ra, $a1
                movn    $a0, $zero, $s0
                movn    $a3, $zero, $s1
                movn    $ra, $zero, $s2
                movn    $v0, $zero, $t7
                move    $s1, $v1
                move    $s2, $a1
                move    $s5, $a2
                sw      $v0, 0xB0+var_48($sp)
                sw      $a0, 0xB0+var_44($sp)
                sw      $a3, 0xB0+var_40($sp)
                movn    $s1, $zero, $s6
                sw      $ra, 0xB0+var_3C($sp)
                movn    $s2, $zero, $s7
                lw      $s0, (dword_5ADC4 - 0x60000)($s3)
                movn    $s5, $zero, $t8
                beqz    $t9, loc_3A530
                lw      $s3, (dword_5ADFC - 0x60000)($s4)
                li      $v0, 0x60000
                lw      $v1, (dword_5A324 - 0x60000)($v0)
                bnez    $v1, loc_3A534
                move    $s4, $zero

loc_3A530:                               # CODE XREF: ssl_create_cipher_list+284↑j
                li      $s4, 8

loc_3A534:                               # CODE XREF: ssl_create_cipher_list+294↑j
                lw      $v0, 0xB0+arg_0($sp)
                lw      $t9, 0x54($v0)
                jalr    $t9
                nop
                lw      $gp, 0xB0+var_80($sp)
                move    $s6, $v0
                la      $v1, loc_40000
                sll     $v0, 2
                la      $t9, CRYPTO_malloc
                sll     $a0, $s6, 4
                addu    $a0, $v0, $a0
                addiu   $a1, $v1, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x569
                move    $s7, $v0
                beqz    $v0, loc_3ACB8
                lw      $gp, 0xB0+var_80($sp)
                sltiu   $v0, $s0, 1
                or      $v0, $s1, $v0
                or      $v0, $s2
                or      $v0, $fp
                lw      $a0, 0xB0+var_68($sp)
                lw      $a1, 0xB0+var_64($sp)
                or      $v0, $s5
                or      $v0, $a0
                lw      $a3, 0xB0+var_60($sp)
                or      $v0, $a1
                lw      $t9, 0xB0+var_5C($sp)
                or      $v0, $a3
                lw      $ra, 0xB0+var_48($sp)
                lw      $a0, 0xB0+var_58($sp)
                or      $v0, $t9
                lw      $a1, 0xB0+var_44($sp)
                sltiu   $v1, $s3, 1
                lw      $a3, 0xB0+var_54($sp)
                or      $v1, $ra, $v1
                or      $v0, $a0
                lw      $t9, 0xB0+var_40($sp)
                lw      $ra, 0xB0+var_50($sp)
                or      $v1, $a1
                or      $v0, $a3
                lw      $a0, 0xB0+var_3C($sp)
                lw      $a1, 0xB0+var_4C($sp)
                or      $v1, $t9
                or      $v0, $ra
                or      $v1, $a0
                or      $v0, $a1
                sw      $v0, 0xB0+var_38($sp)
                blez    $s6, loc_3A700
                or      $fp, $v1, $s4
                move    $s0, $zero
                move    $s1, $zero
                lw      $a3, 0xB0+arg_0($sp)

loc_3A608:                               # CODE XREF: ssl_create_cipher_list:loc_3A68C↓j
                move    $a0, $s0
                lw      $t9, 0x58($a3)
                jalr    $t9
                addiu   $s0, 1
                move    $a1, $v0
                beqz    $v0, loc_3A68C
                lw      $gp, 0xB0+var_80($sp)
                lw      $v0, 0($v0)
                beqz    $v0, loc_3A68C
                lw      $t9, 0xB0+var_30($sp)
                lw      $v0, 0xC($a1)
                and     $v0, $t9, $v0
                bnez    $v0, loc_3A68C
                lw      $ra, 0xB0+var_34($sp)
                lw      $v0, 0x10($a1)
                and     $v0, $ra, $v0
                bnez    $v0, loc_3A68C
                lw      $v1, 0xB0+var_38($sp)
                lw      $v0, 0x14($a1)
                and     $v0, $v1, $v0
                bnez    $v0, loc_3A68C
                sll     $v1, $s1, 2
                lw      $v0, 0x18($a1)
                sll     $a0, $s1, 4
                addu    $v1, $a0
                and     $v0, $fp, $v0
                bnez    $v0, loc_3A68C
                addu    $v1, $s7, $v1
                addiu   $s1, 1
                sw      $a1, 0($v1)
                sw      $zero, 4($v1)
                sw      $zero, 0xC($v1)
                sw      $zero, 0x10($v1)

loc_3A68C:                               # CODE XREF: ssl_create_cipher_list+388↑j
                                         # ssl_create_cipher_list+394↑j ...
                bne     $s0, $s6, loc_3A608
                lw      $a3, 0xB0+arg_0($sp)
                blez    $s1, loc_3A700
                li      $v0, 1
                beq     $s1, $v0, loc_3AC6C
                sw      $zero, 0x10($s7)
                addiu   $v0, $s7, 0x14
                li      $v1, 2
                beq     $s1, $v1, loc_3AC7C
                sw      $v0, 0xC($s7)
                addiu   $a1, $s7, -0x14
                move    $v1, $s7
                li      $a0, 2

loc_3A6C0:                               # CODE XREF: ssl_create_cipher_list+43C↓j
                addiu   $v0, $v1, 0x28  # '('
                addiu   $a0, 1
                sw      $v0, 0x20($v1)
                sw      $v1, 0x24($v1)
                bne     $a0, $s1, loc_3A6C0
                addiu   $v1, 0x14

loc_3A6D8:                               # CODE XREF: ssl_create_cipher_list:loc_3AC7C↓j
                sll     $a0, $s1, 4
                sll     $v1, $s1, 2
                addu    $v1, $a0
                addiu   $v0, $s7, -0x28
                addu    $v0, $v1, $v0
                addu    $v1, $a1, $v1
                sw      $v0, 0x10($v1)

loc_3A6F4:                               # CODE XREF: ssl_create_cipher_list:loc_3AC6C↓j
                sw      $zero, 0xC($v1)
                sw      $v1, 0xB0+var_74($sp)
                sw      $s7, 0xB0+var_78($sp)

loc_3A700:                               # CODE XREF: ssl_create_cipher_list+360↑j
                                         # ssl_create_cipher_list+400↑j
                la      $v0, loc_40000
                addiu   $s4, $sp, 0xB0+var_78
                addiu   $s3, $v0, (sub_384FC - 0x40000)
                addiu   $s5, $sp, 0xB0+var_74
                li      $s2, 0xFFFFFFFF
                li      $s1, 1
                move    $a0, $zero
                li      $a1, 0x80
                move    $a2, $zero
                move    $a3, $zero
                move    $t9, $s3
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s1, 0xB0+var_94($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9 ; sub_384FC
                sw      $s5, 0xB0+var_88($sp)
                li      $ra, 3
                sw      $ra, 0xB0+var_94($sp)
                move    $a0, $zero
                li      $a1, 0x80
                move    $a2, $zero
                move    $a3, $zero
                move    $t9, $s3
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9 ; sub_384FC
                sw      $s5, 0xB0+var_88($sp)
                move    $a0, $zero
                move    $a1, $zero
                move    $a2, $zero
                li      $a3, 0x30C0
                move    $t9, $s3
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s1, 0xB0+var_94($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                sw      $s5, 0xB0+var_88($sp)
                jalr    $t9 ; sub_384FC
                li      $s0, 4
                move    $a0, $zero
                move    $a1, $zero
                move    $a2, $zero
                move    $a3, $zero
                move    $t9, $s3
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s1, 0xB0+var_94($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9 ; sub_384FC
                sw      $s5, 0xB0+var_88($sp)
                move    $a0, $zero
                move    $a1, $zero
                move    $a2, $zero
                move    $a3, $zero
                move    $t9, $s3
                sw      $s1, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s0, 0xB0+var_94($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9 ; sub_384FC
                sw      $s5, 0xB0+var_88($sp)
                move    $a0, $zero
                move    $a1, $zero
                li      $a2, 4
                move    $a3, $zero
                move    $t9, $s3
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s0, 0xB0+var_94($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9 ; sub_384FC
                sw      $s5, 0xB0+var_88($sp)
                move    $a0, $zero
                move    $a1, $zero
                li      $a2, 0x10
                move    $a3, $zero
                move    $t9, $s3
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s0, 0xB0+var_94($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9 ; sub_384FC
                sw      $s5, 0xB0+var_88($sp)
                move    $a0, $zero
                li      $a1, 1
                move    $a2, $zero
                move    $a3, $zero
                move    $t9, $s3
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s0, 0xB0+var_94($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9
                sw      $s5, 0xB0+var_88($sp)
                move    $a0, $zero
                li      $a1, 0x100
                move    $a2, $zero
                move    $a3, $zero
                move    $t9, $s3
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s0, 0xB0+var_94($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9
                sw      $s5, 0xB0+var_88($sp)
                move    $a0, $zero
                li      $a1, 0x10
                move    $a2, $zero
                move    $a3, $zero
                move    $t9, $s3
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s0, 0xB0+var_94($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9
                sw      $s5, 0xB0+var_88($sp)
                move    $a0, $zero
                move    $a1, $zero
                move    $a2, $zero
                li      $a3, 4
                move    $t9, $s3
                sw      $s0, 0xB0+var_94($sp)
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s2, 0xB0+var_90($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9
                sw      $s5, 0xB0+var_88($sp)
                lw      $gp, 0xB0+var_80($sp)
                move    $a0, $s4
                la      $t9, loc_40000
                addiu   $t9, (sub_393DC - 0x40000)
                jalr    $t9 ; sub_393DC
                move    $a1, $s5
                beqz    $v0, loc_3AAF4
                lw      $gp, 0xB0+var_80($sp)
                li      $ra, 3
                move    $a0, $zero
                move    $a1, $zero
                move    $a2, $zero
                move    $a3, $zero
                sw      $ra, 0xB0+var_94($sp)
                move    $t9, $s3
                sw      $s2, 0xB0+var_90($sp)
                sw      $zero, 0xB0+var_A0($sp)
                sw      $zero, 0xB0+var_9C($sp)
                sw      $zero, 0xB0+var_98($sp)
                sw      $s4, 0xB0+var_8C($sp)
                jalr    $t9
                sw      $s5, 0xB0+var_88($sp)
                lw      $gp, 0xB0+var_80($sp)
                la      $ra, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a0, $s6, 0x49  # 'I'
                sll     $a0, 2
                addiu   $a1, $ra, (aSslCiphC - 0x40000)  # "ssl_ciph.c"
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x5A9
                move    $s1, $v0
                beqz    $v0, loc_3AC84
                lw      $gp, 0xB0+var_80($sp)
                lw      $v0, 0xB0+var_30($sp)
                lw      $a1, 0xB0+var_34($sp)
                lw      $a3, 0xB0+var_38($sp)
                lw      $v1, 0xB0+var_78($sp)
                nor     $t3, $zero, $v0
                nor     $a0, $zero, $a1
                nor     $t4, $zero, $a3
                beqz    $v1, loc_3AC74
                nor     $t5, $zero, $fp
                move    $t2, $s1

loc_3AA08:                               # CODE XREF: ssl_create_cipher_list+780↓j
                lw      $v0, 0($v1)
                lw      $v1, 0xC($v1)
                sw      $v0, 0($t2)
                bnez    $v1, loc_3AA08
                addiu   $t2, 4

loc_3AA1C:                               # CODE XREF: ssl_create_cipher_list:loc_3AC74↓j
                li      $v0, 0x50000
                li      $v1, 0x60000
                addiu   $a1, $v0, (dword_57BEC - 0x50000)
                addiu   $v1, (dword_5896C - 0x60000)

loc_3AA2C:                               # CODE XREF: ssl_create_cipher_list+7EC↓j
                lw      $v0, 0xC($a1)
                lw      $a2, 0x10($a1)
                and     $a3, $t3, $v0
                lw      $t0, 0x14($a1)
                beqz    $v0, loc_3AA4C
                lw      $t1, 0x18($a1)
                beqz    $a3, loc_3AA7C
                nop

loc_3AA4C:                               # CODE XREF: ssl_create_cipher_list+7A8↑j
                beqz    $a2, loc_3AA5C
                and     $v0, $a0, $a2
                beqz    $v0, loc_3AA7C
                nop

loc_3AA5C:                               # CODE XREF: ssl_create_cipher_list:loc_3AA4C↑j
                beqz    $t0, loc_3AA6C
                and     $v0, $t4, $t0
                beqz    $v0, loc_3AA7C
                nop

loc_3AA6C:                               # CODE XREF: ssl_create_cipher_list:loc_3AA5C↑j
                beqz    $t1, loc_3AB0C
                and     $v0, $t5, $t1
                bnez    $v0, loc_3AB0C
                nop

loc_3AA7C:                               # CODE XREF: ssl_create_cipher_list+7B0↑j
                                         # ssl_create_cipher_list+7C0↑j ...
                addiu   $a1, 0x30  # '0'
                bne     $a1, $v1, loc_3AA2C
                nop
                la      $a1, loc_40000
                la      $t9, strncmp
                lw      $a0, 0xB0+arg_C($sp)
                sw      $zero, 0($t2)
                addiu   $a1, (aDefault - 0x40000)  # "DEFAULT"
                jalr    $t9 ; strncmp
                li      $a2, 7
                beqz    $v0, loc_3AC18
                lw      $gp, 0xB0+var_80($sp)
                lw      $a3, 0xB0+arg_C($sp)

loc_3AAB0:                               # CODE XREF: ssl_create_cipher_list+9BC↓j
                lb      $v0, 0($a3)
                beqz    $v0, loc_3AB18
                la      $t9, CRYPTO_free
                la      $t9, loc_40000
                move    $a0, $a3
                move    $a1, $s4
                move    $a2, $s5
                addiu   $t9, (sub_395B4 - 0x40000)
                jalr    $t9 ; sub_395B4
                move    $a3, $s1
                lw      $gp, 0xB0+var_80($sp)
                la      $t9, CRYPTO_free
                move    $s0, $v0
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                bnez    $s0, loc_3AB24
                lw      $gp, 0xB0+var_80($sp)

loc_3AAF4:                               # CODE XREF: ssl_create_cipher_list+6E0↑j
                                         # ssl_create_cipher_list+9D0↓j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s7
                lw      $gp, 0xB0+var_80($sp)
                b       loc_3A2E8
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_3AB0C:                               # CODE XREF: ssl_create_cipher_list:loc_3AA6C↑j
                                         # ssl_create_cipher_list+7E0↑j
                sw      $a1, 0($t2)
                b       loc_3AA7C
                addiu   $t2, 4
 # ---------------------------------------------------------------------------

loc_3AB18:                               # CODE XREF: ssl_create_cipher_list+820↑j
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                lw      $gp, 0xB0+var_80($sp)

loc_3AB24:                               # CODE XREF: ssl_create_cipher_list+858↑j
                la      $t9, sk_new_null
                jalr    $t9 ; sk_new_null
                nop
                move    $s1, $v0
                beqz    $v0, loc_3ACF8
                lw      $gp, 0xB0+var_80($sp)
                lw      $s0, 0xB0+var_78($sp)
                bnez    $s0, loc_3AB5C
                la      $t9, CRYPTO_free
                b       loc_3AB7C
                nop
 # ---------------------------------------------------------------------------

loc_3AB50:                               # CODE XREF: ssl_create_cipher_list+8CC↓j
                                         # ssl_create_cipher_list+8E0↓j
                lw      $s0, 0xC($s0)
                beqz    $s0, loc_3AB7C
                la      $t9, CRYPTO_free

loc_3AB5C:                               # CODE XREF: ssl_create_cipher_list+8AC↑j
                lw      $v0, 4($s0)
                beqz    $v0, loc_3AB50
                la      $t9, sk_push
                lw      $a1, 0($s0)
                jalr    $t9 ; sk_push
                move    $a0, $s1
                b       loc_3AB50
                lw      $gp, 0xB0+var_80($sp)
 # ---------------------------------------------------------------------------

loc_3AB7C:                               # CODE XREF: ssl_create_cipher_list+8B4↑j
                                         # ssl_create_cipher_list+8C0↑j
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s7
                lw      $gp, 0xB0+var_80($sp)
                la      $t9, sk_dup
                jalr    $t9 ; sk_dup
                move    $a0, $s1
                move    $s0, $v0
                beqz    $v0, loc_3ACE0
                lw      $gp, 0xB0+var_80($sp)
                lw      $ra, 0xB0+arg_4($sp)
                lw      $a0, 0($ra)
                beqz    $a0, loc_3ABBC
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0xB0+var_80($sp)

loc_3ABBC:                               # CODE XREF: ssl_create_cipher_list+914↑j
                lw      $v0, 0xB0+arg_4($sp)
                lw      $v1, 0xB0+arg_8($sp)
                sw      $s1, 0($v0)
                lw      $a0, 0($v1)
                beqz    $a0, loc_3ABE0
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                nop
                lw      $gp, 0xB0+var_80($sp)

loc_3ABE0:                               # CODE XREF: ssl_create_cipher_list+938↑j
                lw      $a3, 0xB0+arg_8($sp)
                la      $t9, sk_set_cmp_func
                la      $a1, ssl_cipher_ptr_id_cmp
                move    $a0, $s0
                jalr    $t9 ; sk_set_cmp_func
                sw      $s0, 0($a3)
                lw      $gp, 0xB0+var_80($sp)
                lw      $t9, 0xB0+arg_8($sp)
                lw      $a0, 0($t9)
                la      $t9, sk_sort
                jalr    $t9 ; sk_sort
                nop
                b       loc_3A2E8
                lw      $gp, 0xB0+var_80($sp)
 # ---------------------------------------------------------------------------

loc_3AC18:                               # CODE XREF: ssl_create_cipher_list+810↑j
                la      $a0, loc_40000
                la      $t9, loc_40000
                addiu   $a0, (aAllAnullEnullS - 0x40000)  # "ALL:!aNULL:!eNULL:!SSLv2"
                move    $a3, $s1
                addiu   $t9, (sub_395B4 - 0x40000)
                move    $a1, $s4
                jalr    $t9 ; sub_395B4
                move    $a2, $s5
                lw      $t9, 0xB0+arg_C($sp)
                lw      $gp, 0xB0+var_80($sp)
                lb      $v1, 7($t9)
                addiu   $a0, $t9, 8
                xori    $v1, 0x3A
                addiu   $a3, $t9, 7
                bnez    $v0, loc_3AAB0
                movz    $a3, $a0, $v1
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                b       loc_3AAF4
                lw      $gp, 0xB0+var_80($sp)
 # ---------------------------------------------------------------------------

loc_3AC6C:                               # CODE XREF: ssl_create_cipher_list+408↑j
                b       loc_3A6F4
                move    $v1, $s7
 # ---------------------------------------------------------------------------

loc_3AC74:                               # CODE XREF: ssl_create_cipher_list+768↑j
                b       loc_3AA1C
                move    $t2, $s1
 # ---------------------------------------------------------------------------

loc_3AC7C:                               # CODE XREF: ssl_create_cipher_list+418↑j
                b       loc_3A6D8
                addiu   $a1, $s7, -0x14
 # ---------------------------------------------------------------------------

loc_3AC84:                               # CODE XREF: ssl_create_cipher_list+744↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s7
                lw      $gp, 0xB0+var_80($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0xA6
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3A2E8
                lw      $gp, 0xB0+var_80($sp)
 # ---------------------------------------------------------------------------

loc_3ACB8:                               # CODE XREF: ssl_create_cipher_list+2DC↑j
                la      $t9, ERR_put_error
                sw      $zero, 0xB0+var_A0($sp)
                li      $a0, 0x14
                li      $a1, 0xA6
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0xB0+var_80($sp)
                b       loc_3A2E8
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_3ACE0:                               # CODE XREF: ssl_create_cipher_list+904↑j
                la      $t9, sk_free
                jalr    $t9 ; sk_free
                move    $a0, $s1
                lw      $gp, 0xB0+var_80($sp)
                b       loc_3A2E8
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_3ACF8:                               # CODE XREF: ssl_create_cipher_list+8A0↑j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s7
                b       loc_3A2E8
                lw      $gp, 0xB0+var_80($sp)
 # End of function ssl_create_cipher_list


 # =============== S U B R O U T I N E =======================================


                .globl SSL_state_string_long
SSL_state_string_long:                   # DATA XREF: LOAD:00001DD8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_state_string_long)
                addu    $gp, $t9
                lw      $v1, 0x34($a0)
                li      $v0, 0x2010
                beq     $v1, $v0, locret_3B3E4
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2011
                bnez    $v0, loc_3ADC4
                li      $v0, 0x1131
                li      $v0, 0x2131
                beq     $v1, $v0, locret_3B3F4
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2132
                bnez    $v0, loc_3AE50
                li      $v0, 0x2071
                li      $v0, 0x21B0
                beq     $v1, $v0, locret_3B3A4
                la      $v0, loc_40000
                slti    $v0, $v1, 0x21B1
                bnez    $v0, loc_3AFC0
                li      $v0, 0x2170
                li      $v0, 0x21F0
                beq     $v1, $v0, locret_3B2E8
                la      $v0, loc_40000
                slti    $v0, $v1, 0x21F1
                beqz    $v0, loc_3B060
                li      $v0, 0x3004
                li      $v0, 0x21D0
                beq     $v1, $v0, locret_3B2B0
                la      $v0, loc_40000
                slti    $v0, $v1, 0x21D1
                beqz    $v0, loc_3B680
                li      $v0, 0x21E0
                li      $v0, 0x21C0
                beq     $v1, $v0, locret_3B2E0
                la      $v0, loc_40000
                li      $v0, 0x21C1
                beq     $v1, $v0, locret_3B374
                la      $v0, loc_40000
                li      $v0, 0x21B1
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000

locret_3ADBC:                            # CODE XREF: SSL_state_string_long+8C0↓j
                jr      $ra
                addiu   $v0, (aSslv3ReadChang - 0x40000)  # "SSLv3 read change cipher spec B"
 # ---------------------------------------------------------------------------

loc_3ADC4:                               # CODE XREF: SSL_state_string_long+20↑j
                beq     $v1, $v0, locret_3B3EC
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1132
                bnez    $v0, loc_3AEB8
                li      $v0, 0x1053
                li      $v0, 0x11A0
                beq     $v1, $v0, locret_3B2B0
                la      $v0, loc_40000
                slti    $v0, $v1, 0x11A1
                bnez    $v0, loc_3AF20
                li      $v0, 0x1170
                li      $v0, 0x11E0
                beq     $v1, $v0, locret_3B34C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x11E1
                beqz    $v0, loc_3B1B4
                li      $v0, 0x1220
                li      $v0, 0x11C0
                beq     $v1, $v0, locret_3B3A4
                la      $v0, loc_40000
                slti    $v0, $v1, 0x11C1
                beqz    $v0, loc_3B5AC
                li      $v0, 0x11D0
                li      $v0, 0x11B0
                beq     $v1, $v0, locret_3B354
                la      $v0, loc_40000
                li      $v0, 0x11B1
                beq     $v1, $v0, locret_3B37C
                la      $v0, loc_40000
                li      $v0, 0x11A1
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000

locret_3AE48:                            # CODE XREF: SSL_state_string_long+994↓j
                jr      $ra
                addiu   $v0, (aSslv3WriteChan - 0x40000)  # "SSLv3 write change cipher spec B"
 # ---------------------------------------------------------------------------

loc_3AE50:                               # CODE XREF: SSL_state_string_long+38↑j
                beq     $v1, $v0, locret_3B3DC
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2072
                bnez    $v0, loc_3B010
                li      $v0, 0x2040
                li      $v0, 0x2111
                beq     $v1, $v0, locret_3B32C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2112
                beqz    $v0, loc_3B0E8
                li      $v0, 0x2120
                li      $v0, 0x2080
                beq     $v1, $v0, locret_3B324
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2081
                beqz    $v0, loc_3B610
                li      $v0, 0x2100
                li      $v0, 0x2072
                beq     $v1, $v0, locret_3B2F0
                la      $v0, loc_40000
                li      $v0, 0x2073
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2WriteRequ - 0x40000)  # "SSLv2 write request certificate D"
 # ---------------------------------------------------------------------------

loc_3AEB8:                               # CODE XREF: SSL_state_string_long+C4↑j
                beq     $v1, $v0, locret_3B36C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1054
                bnez    $v0, loc_3AF70
                li      $v0, 0x1021
                li      $v0, 0x1100
                beq     $v1, $v0, locret_3B280
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1101
                beqz    $v0, loc_3B1F8
                li      $v0, 0x1121
                li      $v0, 0x1070
                beq     $v1, $v0, locret_3B364
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1071
                beqz    $v0, loc_3B534
                li      $v0, 0x1080
                li      $v0, 0x1060
                beq     $v1, $v0, locret_3B3BC
                la      $v0, loc_40000
                li      $v0, 0x1061
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2ReadServe - 0x40000)  # "SSLv2 read server verify B"
 # ---------------------------------------------------------------------------

loc_3AF20:                               # CODE XREF: SSL_state_string_long+DC↑j
                beq     $v1, $v0, locret_3B334
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1171
                beqz    $v0, loc_3B12C
                li      $v0, 0x1180
                li      $v0, 0x1150
                beq     $v1, $v0, locret_3B33C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1151
                beqz    $v0, loc_3B644
                li      $v0, 0x1160
                li      $v0, 0x1140
                beq     $v1, $v0, locret_3B31C
                la      $v0, loc_40000
                li      $v0, 0x1141
                beq     $v1, $v0, loc_3B310
                nop

loc_3AF64:                               # CODE XREF: SSL_state_string_long+A4↑j
                                         # SSL_state_string_long+130↑j ...
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aUnknownState - 0x40000)  # "unknown state"
 # ---------------------------------------------------------------------------

loc_3AF70:                               # CODE XREF: SSL_state_string_long+1B8↑j
                beq     $v1, $v0, locret_3B288
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1022
                beqz    $v0, loc_3B23C
                li      $v0, 0x1041
                li      $v0, 0x1003
                beq     $v1, $v0, locret_3B290
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1004
                beqz    $v0, loc_3B75C
                li      $v0, 0x1011
                li      $v0, 3
                beq     $v1, $v0, locret_3B3AC
                la      $v0, loc_40000
                li      $v0, 0x1000
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aBeforeConnectI - 0x40000)  # "before connect initialization"
 # ---------------------------------------------------------------------------

loc_3AFC0:                               # CODE XREF: SSL_state_string_long+50↑j
                beq     $v1, $v0, locret_3B2B8
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2171
                beqz    $v0, loc_3B0A4
                li      $v0, 0x2190
                li      $v0, 0x2150
                beq     $v1, $v0, locret_3B2C0
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2151
                beqz    $v0, loc_3B6E4
                li      $v0, 0x2160
                li      $v0, 0x2140
                beq     $v1, $v0, locret_3B3B4
                la      $v0, loc_40000
                li      $v0, 0x2141
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3WriteCert - 0x40000)  # "SSLv3 write certificate B"
 # ---------------------------------------------------------------------------

loc_3B010:                               # CODE XREF: SSL_state_string_long+150↑j
                beq     $v1, $v0, locret_3B344
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2041
                beqz    $v0, loc_3B170
                li      $v0, 0x2051
                li      $v0, 0x2020
                beq     $v1, $v0, locret_3B35C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2021
                beqz    $v0, loc_3B5D4
                li      $v0, 0x2030
                li      $v0, 0x2011
                beq     $v1, $v0, locret_3B384
                la      $v0, loc_40000
                li      $v0, 0x2012
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2ReadClien - 0x40000)  # "SSLv2 read client hello C"
 # ---------------------------------------------------------------------------

loc_3B060:                               # CODE XREF: SSL_state_string_long+68↑j
                beq     $v1, $v0, locret_3B2D8
                la      $v0, loc_40000
                slti    $v0, $v1, 0x3005
                beqz    $v0, loc_3B720
                li      $v0, 0x5000
                li      $v0, 0x2210
                beq     $v1, $v0, locret_3B2D0
                la      $v0, loc_40000
                li      $v0, 0x2211
                beq     $v1, $v0, locret_3B2C8
                la      $v0, loc_40000
                li      $v0, 0x21F1
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3WriteSess - 0x40000)  # "SSLv3 write session ticket B"
 # ---------------------------------------------------------------------------

loc_3B0A4:                               # CODE XREF: SSL_state_string_long+2C0↑j
                beq     $v1, $v0, locret_3B308
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2191
                beqz    $v0, loc_3B6A8
                li      $v0, 0x21A0
                li      $v0, 0x2180
                beq     $v1, $v0, locret_3B300
                la      $v0, loc_40000
                li      $v0, 0x2181
                beq     $v1, $v0, locret_3B2F8
                la      $v0, loc_40000
                li      $v0, 0x2171
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3WriteServ - 0x40000)  # "SSLv3 write server done B"
 # ---------------------------------------------------------------------------

loc_3B0E8:                               # CODE XREF: SSL_state_string_long+168↑j
                beq     $v1, $v0, locret_3B40C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2121
                beqz    $v0, loc_3B4F8
                li      $v0, 0x2122
                li      $v0, 0x2113
                beq     $v1, $v0, locret_3B404
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2113
                bnez    $v0, locret_3B3FC
                la      $v0, loc_40000
                li      $v0, 0x2114
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aDtls1WriteHell - 0x40000)  # "DTLS1 write hello verify request B"
 # ---------------------------------------------------------------------------

loc_3B12C:                               # CODE XREF: SSL_state_string_long+220↑j
                beq     $v1, $v0, locret_3B39C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1181
                beqz    $v0, loc_3B570
                li      $v0, 0x1190
                li      $v0, 0x1172
                beq     $v1, $v0, locret_3B394
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1172
                bnez    $v0, locret_3B38C
                la      $v0, loc_40000
                li      $v0, 0x1173
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3WriteClie - 0x40000)  # "SSLv3 write client certificate D"
 # ---------------------------------------------------------------------------

loc_3B170:                               # CODE XREF: SSL_state_string_long+310↑j
                beq     $v1, $v0, locret_3B424
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2052
                beqz    $v0, loc_3B444
                li      $v0, 0x2061
                li      $v0, 0x2042
                beq     $v1, $v0, locret_3B41C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2042
                bnez    $v0, locret_3B414
                la      $v0, loc_40000
                li      $v0, 0x2050
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2ReadClien_0 - 0x40000)  # "SSLv2 read client finished A"
 # ---------------------------------------------------------------------------

loc_3B1B4:                               # CODE XREF: SSL_state_string_long+F4↑j
                beq     $v1, $v0, locret_3B3D4
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1221
                beqz    $v0, loc_3B4BC
                li      $v0, 0x2000
                li      $v0, 0x1210
                beq     $v1, $v0, locret_3B3CC
                la      $v0, loc_40000
                li      $v0, 0x1211
                beq     $v1, $v0, locret_3B3C4
                la      $v0, loc_40000
                li      $v0, 0x11E1
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3ReadServe - 0x40000)  # "SSLv3 read server session ticket B"
 # ---------------------------------------------------------------------------

loc_3B1F8:                               # CODE XREF: SSL_state_string_long+1D0↑j
                beq     $v1, $v0, locret_3B43C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1122
                beqz    $v0, loc_3B480
                li      $v0, 0x1127
                li      $v0, 0x1111
                beq     $v1, $v0, locret_3B434
                la      $v0, loc_40000
                li      $v0, 0x1120
                beq     $v1, $v0, locret_3B42C
                la      $v0, loc_40000
                li      $v0, 0x1110
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3WriteClie_0 - 0x40000)  # "SSLv3 write client hello A"
 # ---------------------------------------------------------------------------

loc_3B23C:                               # CODE XREF: SSL_state_string_long+270↑j
                beq     $v1, $v0, locret_3B2A8
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1042
                beqz    $v0, loc_3B798
                li      $v0, 0x1051
                li      $v0, 0x1031
                beq     $v1, $v0, locret_3B2A0
                la      $v0, loc_40000
                li      $v0, 0x1040
                beq     $v1, $v0, locret_3B298
                la      $v0, loc_40000
                li      $v0, 0x1030
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2WriteClie - 0x40000)  # "SSLv2 write client master key A"
 # ---------------------------------------------------------------------------

locret_3B280:                            # CODE XREF: SSL_state_string_long+1C4↑j
                                         # SSL_state_string_long:loc_3B610↓j
                jr      $ra
                addiu   $v0, (aSslv3FlushData - 0x40000)  # "SSLv3 flush data"
 # ---------------------------------------------------------------------------

locret_3B288:                            # CODE XREF: SSL_state_string_long:loc_3AF70↑j
                jr      $ra
                addiu   $v0, (aSslv2ReadServe_0 - 0x40000)  # "SSLv2 read server hello B"
 # ---------------------------------------------------------------------------

locret_3B290:                            # CODE XREF: SSL_state_string_long+27C↑j
                jr      $ra
                addiu   $v0, (aOkConnectSslIn - 0x40000)  # "ok/connect SSL initialization"
 # ---------------------------------------------------------------------------

locret_3B298:                            # CODE XREF: SSL_state_string_long+554↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteClie_0 - 0x40000)  # "SSLv2 write client finished A"
 # ---------------------------------------------------------------------------

locret_3B2A0:                            # CODE XREF: SSL_state_string_long+548↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteClie_1 - 0x40000)  # "SSLv2 write client master key B"
 # ---------------------------------------------------------------------------

locret_3B2A8:                            # CODE XREF: SSL_state_string_long:loc_3B23C↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteClie_2 - 0x40000)  # "SSLv2 write client finished B"
 # ---------------------------------------------------------------------------

locret_3B2B0:                            # CODE XREF: SSL_state_string_long+74↑j
                                         # SSL_state_string_long+D0↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteChan_0 - 0x40000)  # "SSLv3 write change cipher spec A"
 # ---------------------------------------------------------------------------

locret_3B2B8:                            # CODE XREF: SSL_state_string_long:loc_3AFC0↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteServ_0 - 0x40000)  # "SSLv3 write server done A"
 # ---------------------------------------------------------------------------

locret_3B2C0:                            # CODE XREF: SSL_state_string_long+2CC↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteKeyE - 0x40000)  # "SSLv3 write key exchange A"
 # ---------------------------------------------------------------------------

locret_3B2C8:                            # CODE XREF: SSL_state_string_long+378↑j
                jr      $ra
                addiu   $v0, (aSslv2V3ReadCli - 0x40000)  # "SSLv2/v3 read client hello B"
 # ---------------------------------------------------------------------------

locret_3B2D0:                            # CODE XREF: SSL_state_string_long+36C↑j
                jr      $ra
                addiu   $v0, (aSslv2V3ReadCli_0 - 0x40000)  # "SSLv2/v3 read client hello A"
 # ---------------------------------------------------------------------------

locret_3B2D8:                            # CODE XREF: SSL_state_string_long:loc_3B060↑j
                jr      $ra
                addiu   $v0, (aSslRenegotiate_2 - 0x40000)  # "SSL renegotiate ciphers"
 # ---------------------------------------------------------------------------

locret_3B2E0:                            # CODE XREF: SSL_state_string_long+8C↑j
                                         # SSL_state_string_long:loc_3B5AC↓j
                jr      $ra
                addiu   $v0, (aSslv3ReadFinis - 0x40000)  # "SSLv3 read finished A"
 # ---------------------------------------------------------------------------

locret_3B2E8:                            # CODE XREF: SSL_state_string_long+5C↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteSess_0 - 0x40000)  # "SSLv3 write session ticket A"
 # ---------------------------------------------------------------------------

locret_3B2F0:                            # CODE XREF: SSL_state_string_long+18C↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteRequ_0 - 0x40000)  # "SSLv2 write request certificate C"
 # ---------------------------------------------------------------------------

locret_3B2F8:                            # CODE XREF: SSL_state_string_long+3BC↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadClien - 0x40000)  # "SSLv3 read client certificate B"
 # ---------------------------------------------------------------------------

locret_3B300:                            # CODE XREF: SSL_state_string_long+3B0↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadClien_0 - 0x40000)  # "SSLv3 read client certificate A"
 # ---------------------------------------------------------------------------

locret_3B308:                            # CODE XREF: SSL_state_string_long:loc_3B0A4↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadClien_1 - 0x40000)  # "SSLv3 read client key exchange A"
 # ---------------------------------------------------------------------------

loc_3B310:                               # CODE XREF: SSL_state_string_long+250↑j
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_0 - 0x40000)  # "SSLv3 read server key exchange B"
 # ---------------------------------------------------------------------------

locret_3B31C:                            # CODE XREF: SSL_state_string_long+244↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_1 - 0x40000)  # "SSLv3 read server key exchange A"
 # ---------------------------------------------------------------------------

locret_3B324:                            # CODE XREF: SSL_state_string_long+174↑j
                jr      $ra
                addiu   $v0, (aSslv2ServerSta - 0x40000)  # "SSLv2 server start encryption"
 # ---------------------------------------------------------------------------

locret_3B32C:                            # CODE XREF: SSL_state_string_long+15C↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadClien_2 - 0x40000)  # "SSLv3 read client hello B"
 # ---------------------------------------------------------------------------

locret_3B334:                            # CODE XREF: SSL_state_string_long:loc_3AF20↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteClie_1 - 0x40000)  # "SSLv3 write client certificate A"
 # ---------------------------------------------------------------------------

locret_3B33C:                            # CODE XREF: SSL_state_string_long+22C↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_2 - 0x40000)  # "SSLv3 read server certificate request A"
 # ---------------------------------------------------------------------------

locret_3B344:                            # CODE XREF: SSL_state_string_long:loc_3B010↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteServ - 0x40000)  # "SSLv2 write server verify A"
 # ---------------------------------------------------------------------------

locret_3B34C:                            # CODE XREF: SSL_state_string_long+E8↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_3 - 0x40000)  # "SSLv3 read server session ticket A"
 # ---------------------------------------------------------------------------

locret_3B354:                            # CODE XREF: SSL_state_string_long+118↑j
                                         # SSL_state_string_long:loc_3B680↓j
                jr      $ra
                addiu   $v0, (aSslv3WriteFini - 0x40000)  # "SSLv3 write finished A"
 # ---------------------------------------------------------------------------

locret_3B35C:                            # CODE XREF: SSL_state_string_long+31C↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteServ_0 - 0x40000)  # "SSLv2 write server hello A"
 # ---------------------------------------------------------------------------

locret_3B364:                            # CODE XREF: SSL_state_string_long+1DC↑j
                jr      $ra
                addiu   $v0, (aSslv2ReadServe_1 - 0x40000)  # "SSLv2 read server finished A"
 # ---------------------------------------------------------------------------

locret_3B36C:                            # CODE XREF: SSL_state_string_long:loc_3AEB8↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteClie_3 - 0x40000)  # "SSLv2 write client certificate D"
 # ---------------------------------------------------------------------------

locret_3B374:                            # CODE XREF: SSL_state_string_long+98↑j
                                         # SSL_state_string_long+8AC↓j
                jr      $ra
                addiu   $v0, (aSslv3ReadFinis_0 - 0x40000)  # "SSLv3 read finished B"
 # ---------------------------------------------------------------------------

locret_3B37C:                            # CODE XREF: SSL_state_string_long+124↑j
                                         # SSL_state_string_long+980↓j
                jr      $ra
                addiu   $v0, (aSslv3WriteFini_0 - 0x40000)  # "SSLv3 write finished B"
 # ---------------------------------------------------------------------------

locret_3B384:                            # CODE XREF: SSL_state_string_long+334↑j
                jr      $ra
                addiu   $v0, (aSslv2ReadClien_1 - 0x40000)  # "SSLv2 read client hello B"
 # ---------------------------------------------------------------------------

locret_3B38C:                            # CODE XREF: SSL_state_string_long+444↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteClie_2 - 0x40000)  # "SSLv3 write client certificate B"
 # ---------------------------------------------------------------------------

locret_3B394:                            # CODE XREF: SSL_state_string_long+438↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteClie_3 - 0x40000)  # "SSLv3 write client certificate C"
 # ---------------------------------------------------------------------------

locret_3B39C:                            # CODE XREF: SSL_state_string_long:loc_3B12C↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteClie_4 - 0x40000)  # "SSLv3 write client key exchange A"
 # ---------------------------------------------------------------------------

locret_3B3A4:                            # CODE XREF: SSL_state_string_long+44↑j
                                         # SSL_state_string_long+100↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadChang_0 - 0x40000)  # "SSLv3 read change cipher spec A"
 # ---------------------------------------------------------------------------

locret_3B3AC:                            # CODE XREF: SSL_state_string_long+294↑j
                jr      $ra
                addiu   $v0, (aSslNegotiation - 0x40000)  # "SSL negotiation finished successfully"
 # ---------------------------------------------------------------------------

locret_3B3B4:                            # CODE XREF: SSL_state_string_long+2E4↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteCert_0 - 0x40000)  # "SSLv3 write certificate A"
 # ---------------------------------------------------------------------------

locret_3B3BC:                            # CODE XREF: SSL_state_string_long+1F4↑j
                jr      $ra
                addiu   $v0, (aSslv2ReadServe_2 - 0x40000)  # "SSLv2 read server verify A"
 # ---------------------------------------------------------------------------

locret_3B3C4:                            # CODE XREF: SSL_state_string_long+4CC↑j
                jr      $ra
                addiu   $v0, (aSslv2V3WriteCl - 0x40000)  # "SSLv2/v3 write client hello B"
 # ---------------------------------------------------------------------------

locret_3B3CC:                            # CODE XREF: SSL_state_string_long+4C0↑j
                jr      $ra
                addiu   $v0, (aSslv2V3WriteCl_0 - 0x40000)  # "SSLv2/v3 write client hello A"
 # ---------------------------------------------------------------------------

locret_3B3D4:                            # CODE XREF: SSL_state_string_long:loc_3B1B4↑j
                jr      $ra
                addiu   $v0, (aSslv2V3ReadSer - 0x40000)  # "SSLv2/v3 read server hello A"
 # ---------------------------------------------------------------------------

locret_3B3DC:                            # CODE XREF: SSL_state_string_long:loc_3AE50↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteRequ_1 - 0x40000)  # "SSLv2 write request certificate B"
 # ---------------------------------------------------------------------------

locret_3B3E4:                            # CODE XREF: SSL_state_string_long+14↑j
                jr      $ra
                addiu   $v0, (aSslv2ReadClien_2 - 0x40000)  # "SSLv2 read client hello A"
 # ---------------------------------------------------------------------------

locret_3B3EC:                            # CODE XREF: SSL_state_string_long:loc_3ADC4↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_4 - 0x40000)  # "SSLv3 read server certificate B"
 # ---------------------------------------------------------------------------

locret_3B3F4:                            # CODE XREF: SSL_state_string_long+2C↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteServ_1 - 0x40000)  # "SSLv3 write server hello B"
 # ---------------------------------------------------------------------------

locret_3B3FC:                            # CODE XREF: SSL_state_string_long+400↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadClien_3 - 0x40000)  # "SSLv3 read client hello C"
 # ---------------------------------------------------------------------------

locret_3B404:                            # CODE XREF: SSL_state_string_long+3F4↑j
                jr      $ra
                addiu   $v0, (aDtls1WriteHell_0 - 0x40000)  # "DTLS1 write hello verify request A"
 # ---------------------------------------------------------------------------

locret_3B40C:                            # CODE XREF: SSL_state_string_long:loc_3B0E8↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteHell - 0x40000)  # "SSLv3 write hello request A"
 # ---------------------------------------------------------------------------

locret_3B414:                            # CODE XREF: SSL_state_string_long+488↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteServ_1 - 0x40000)  # "SSLv2 write server verify B"
 # ---------------------------------------------------------------------------

locret_3B41C:                            # CODE XREF: SSL_state_string_long+47C↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteServ_2 - 0x40000)  # "SSLv2 write server verify C"
 # ---------------------------------------------------------------------------

locret_3B424:                            # CODE XREF: SSL_state_string_long:loc_3B170↑j
                jr      $ra
                addiu   $v0, (aSslv2ReadClien_3 - 0x40000)  # "SSLv2 read client finished B"
 # ---------------------------------------------------------------------------

locret_3B42C:                            # CODE XREF: SSL_state_string_long+510↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_5 - 0x40000)  # "SSLv3 read server hello A"
 # ---------------------------------------------------------------------------

locret_3B434:                            # CODE XREF: SSL_state_string_long+504↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteClie_5 - 0x40000)  # "SSLv3 write client hello B"
 # ---------------------------------------------------------------------------

locret_3B43C:                            # CODE XREF: SSL_state_string_long:loc_3B1F8↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_6 - 0x40000)  # "SSLv3 read server hello B"
 # ---------------------------------------------------------------------------

loc_3B444:                               # CODE XREF: SSL_state_string_long+470↑j
                beq     $v1, $v0, locret_3B470
                la      $v0, loc_40000
                li      $v0, 0x2070
                beq     $v1, $v0, locret_3B478
                la      $v0, loc_40000
                li      $v0, 0x2060
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2WriteServ_3 - 0x40000)  # "SSLv2 write server finished A"
 # ---------------------------------------------------------------------------

locret_3B470:                            # CODE XREF: SSL_state_string_long:loc_3B444↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteServ_4 - 0x40000)  # "SSLv2 write server finished B"
 # ---------------------------------------------------------------------------

locret_3B478:                            # CODE XREF: SSL_state_string_long+744↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteRequ_2 - 0x40000)  # "SSLv2 write request certificate A"
 # ---------------------------------------------------------------------------

loc_3B480:                               # CODE XREF: SSL_state_string_long+4F8↑j
                beq     $v1, $v0, locret_3B4AC
                la      $v0, loc_40000
                li      $v0, 0x1130
                beq     $v1, $v0, locret_3B4B4
                la      $v0, loc_40000
                li      $v0, 0x1126
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aDtls1ReadHello - 0x40000)  # "DTLS1 read hello verify request A"
 # ---------------------------------------------------------------------------

locret_3B4AC:                            # CODE XREF: SSL_state_string_long:loc_3B480↑j
                jr      $ra
                addiu   $v0, (aDtls1ReadHello_0 - 0x40000)  # "DTLS1 read hello verify request B"
 # ---------------------------------------------------------------------------

locret_3B4B4:                            # CODE XREF: SSL_state_string_long+780↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_7 - 0x40000)  # "SSLv3 read server certificate A"
 # ---------------------------------------------------------------------------

loc_3B4BC:                               # CODE XREF: SSL_state_string_long+4B4↑j
                beq     $v1, $v0, locret_3B4E8
                la      $v0, loc_40000
                li      $v0, 0x2003
                beq     $v1, $v0, locret_3B4F0
                la      $v0, loc_40000
                li      $v0, 0x1221
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2V3ReadSer_0 - 0x40000)  # "SSLv2/v3 read server hello B"
 # ---------------------------------------------------------------------------

locret_3B4E8:                            # CODE XREF: SSL_state_string_long:loc_3B4BC↑j
                jr      $ra
                addiu   $v0, (aBeforeAcceptIn - 0x40000)  # "before accept initialization"
 # ---------------------------------------------------------------------------

locret_3B4F0:                            # CODE XREF: SSL_state_string_long+7BC↑j
                jr      $ra
                addiu   $v0, (aOkAcceptSslIni - 0x40000)  # "ok/accept SSL initialization"
 # ---------------------------------------------------------------------------

loc_3B4F8:                               # CODE XREF: SSL_state_string_long+3E8↑j
                beq     $v1, $v0, locret_3B524
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2122
                bnez    $v0, locret_3B52C
                la      $v0, loc_40000
                li      $v0, 0x2130
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3WriteServ_2 - 0x40000)  # "SSLv3 write server hello A"
 # ---------------------------------------------------------------------------

locret_3B524:                            # CODE XREF: SSL_state_string_long:loc_3B4F8↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteHell_0 - 0x40000)  # "SSLv3 write hello request C"
 # ---------------------------------------------------------------------------

locret_3B52C:                            # CODE XREF: SSL_state_string_long+7F8↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteHell_1 - 0x40000)  # "SSLv3 write hello request B"
 # ---------------------------------------------------------------------------

loc_3B534:                               # CODE XREF: SSL_state_string_long+1E8↑j
                beq     $v1, $v0, locret_3B560
                la      $v0, loc_40000
                li      $v0, 0x1090
                beq     $v1, $v0, locret_3B568
                la      $v0, loc_40000
                li      $v0, 0x1071
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2ReadServe_3 - 0x40000)  # "SSLv2 read server finished B"
 # ---------------------------------------------------------------------------

locret_3B560:                            # CODE XREF: SSL_state_string_long:loc_3B534↑j
                jr      $ra
                addiu   $v0, (aSslv2ClientSta - 0x40000)  # "SSLv2 client start encryption"
 # ---------------------------------------------------------------------------

locret_3B568:                            # CODE XREF: SSL_state_string_long+834↑j
                jr      $ra
                addiu   $v0, (aSslv2X509ReadC - 0x40000)  # "SSLv2 X509 read client certificate"
 # ---------------------------------------------------------------------------

loc_3B570:                               # CODE XREF: SSL_state_string_long+42C↑j
                beq     $v1, $v0, locret_3B59C
                la      $v0, loc_40000
                li      $v0, 0x1191
                beq     $v1, $v0, locret_3B5A4
                la      $v0, loc_40000
                li      $v0, 0x1181
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3WriteClie_6 - 0x40000)  # "SSLv3 write client key exchange B"
 # ---------------------------------------------------------------------------

locret_3B59C:                            # CODE XREF: SSL_state_string_long:loc_3B570↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteCert_1 - 0x40000)  # "SSLv3 write certificate verify A"
 # ---------------------------------------------------------------------------

locret_3B5A4:                            # CODE XREF: SSL_state_string_long+870↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteCert_2 - 0x40000)  # "SSLv3 write certificate verify B"
 # ---------------------------------------------------------------------------

loc_3B5AC:                               # CODE XREF: SSL_state_string_long+10C↑j
                beq     $v1, $v0, locret_3B2E0
                la      $v0, loc_40000
                li      $v0, 0x11D1
                beq     $v1, $v0, locret_3B374
                la      $v0, loc_40000
                li      $v0, 0x11C1
                bne     $v1, $v0, loc_3AF64
                nop
                b       locret_3ADBC
                la      $v0, loc_40000
 # ---------------------------------------------------------------------------

loc_3B5D4:                               # CODE XREF: SSL_state_string_long+328↑j
                beq     $v1, $v0, locret_3B600
                la      $v0, loc_40000
                li      $v0, 0x2031
                beq     $v1, $v0, locret_3B608
                la      $v0, loc_40000
                li      $v0, 0x2021
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2WriteServ_5 - 0x40000)  # "SSLv2 write server hello B"
 # ---------------------------------------------------------------------------

locret_3B600:                            # CODE XREF: SSL_state_string_long:loc_3B5D4↑j
                jr      $ra
                addiu   $v0, (aSslv2ReadClien_4 - 0x40000)  # "SSLv2 read client master key A"
 # ---------------------------------------------------------------------------

locret_3B608:                            # CODE XREF: SSL_state_string_long+8D4↑j
                jr      $ra
                addiu   $v0, (aSslv2ReadClien_5 - 0x40000)  # "SSLv2 read client master key B"
 # ---------------------------------------------------------------------------

loc_3B610:                               # CODE XREF: SSL_state_string_long+180↑j
                beq     $v1, $v0, locret_3B280
                la      $v0, loc_40000
                li      $v0, 0x2110
                beq     $v1, $v0, locret_3B63C
                la      $v0, loc_40000
                li      $v0, 0x2090
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2X509ReadS - 0x40000)  # "SSLv2 X509 read server certificate"
 # ---------------------------------------------------------------------------

locret_3B63C:                            # CODE XREF: SSL_state_string_long+910↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadClien_4 - 0x40000)  # "SSLv3 read client hello A"
 # ---------------------------------------------------------------------------

loc_3B644:                               # CODE XREF: SSL_state_string_long+238↑j
                beq     $v1, $v0, locret_3B670
                la      $v0, loc_40000
                li      $v0, 0x1161
                beq     $v1, $v0, locret_3B678
                la      $v0, loc_40000
                li      $v0, 0x1151
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_8 - 0x40000)  # "SSLv3 read server certificate request B"
 # ---------------------------------------------------------------------------

locret_3B670:                            # CODE XREF: SSL_state_string_long:loc_3B644↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_9 - 0x40000)  # "SSLv3 read server done A"
 # ---------------------------------------------------------------------------

locret_3B678:                            # CODE XREF: SSL_state_string_long+944↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadServe_10 - 0x40000)  # "SSLv3 read server done B"
 # ---------------------------------------------------------------------------

loc_3B680:                               # CODE XREF: SSL_state_string_long+80↑j
                beq     $v1, $v0, locret_3B354
                la      $v0, loc_40000
                li      $v0, 0x21E1
                beq     $v1, $v0, locret_3B37C
                la      $v0, loc_40000
                li      $v0, 0x21D1
                bne     $v1, $v0, loc_3AF64
                nop
                b       locret_3AE48
                la      $v0, loc_40000
 # ---------------------------------------------------------------------------

loc_3B6A8:                               # CODE XREF: SSL_state_string_long+3A4↑j
                beq     $v1, $v0, locret_3B6D4
                la      $v0, loc_40000
                li      $v0, 0x21A1
                beq     $v1, $v0, locret_3B6DC
                la      $v0, loc_40000
                li      $v0, 0x2191
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3ReadClien_5 - 0x40000)  # "SSLv3 read client key exchange B"
 # ---------------------------------------------------------------------------

locret_3B6D4:                            # CODE XREF: SSL_state_string_long:loc_3B6A8↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadCerti - 0x40000)  # "SSLv3 read certificate verify A"
 # ---------------------------------------------------------------------------

locret_3B6DC:                            # CODE XREF: SSL_state_string_long+9A8↑j
                jr      $ra
                addiu   $v0, (aSslv3ReadCerti_0 - 0x40000)  # "SSLv3 read certificate verify B"
 # ---------------------------------------------------------------------------

loc_3B6E4:                               # CODE XREF: SSL_state_string_long+2D8↑j
                beq     $v1, $v0, locret_3B710
                la      $v0, loc_40000
                li      $v0, 0x2161
                beq     $v1, $v0, locret_3B718
                la      $v0, loc_40000
                li      $v0, 0x2151
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv3WriteKeyE_0 - 0x40000)  # "SSLv3 write key exchange B"
 # ---------------------------------------------------------------------------

locret_3B710:                            # CODE XREF: SSL_state_string_long:loc_3B6E4↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteCert_3 - 0x40000)  # "SSLv3 write certificate request A"
 # ---------------------------------------------------------------------------

locret_3B718:                            # CODE XREF: SSL_state_string_long+9E4↑j
                jr      $ra
                addiu   $v0, (aSslv3WriteCert_4 - 0x40000)  # "SSLv3 write certificate request B"
 # ---------------------------------------------------------------------------

loc_3B720:                               # CODE XREF: SSL_state_string_long+360↑j
                beq     $v1, $v0, locret_3B74C
                la      $v0, loc_40000
                li      $v0, 0x6000
                beq     $v1, $v0, locret_3B754
                la      $v0, loc_40000
                li      $v0, 0x4000
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aBeforeSslIniti - 0x40000)  # "before SSL initialization"
 # ---------------------------------------------------------------------------

locret_3B74C:                            # CODE XREF: SSL_state_string_long:loc_3B720↑j
                jr      $ra
                addiu   $v0, (aBeforeConnectI_0 - 0x40000)  # "before/connect initialization"
 # ---------------------------------------------------------------------------

locret_3B754:                            # CODE XREF: SSL_state_string_long+A20↑j
                jr      $ra
                addiu   $v0, (aBeforeAcceptIn_0 - 0x40000)  # "before/accept initialization"
 # ---------------------------------------------------------------------------

loc_3B75C:                               # CODE XREF: SSL_state_string_long+288↑j
                beq     $v1, $v0, locret_3B788
                la      $v0, loc_40000
                li      $v0, 0x1020
                beq     $v1, $v0, locret_3B790
                la      $v0, loc_40000
                li      $v0, 0x1010
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2WriteClie_4 - 0x40000)  # "SSLv2 write client hello A"
 # ---------------------------------------------------------------------------

locret_3B788:                            # CODE XREF: SSL_state_string_long:loc_3B75C↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteClie_5 - 0x40000)  # "SSLv2 write client hello B"
 # ---------------------------------------------------------------------------

locret_3B790:                            # CODE XREF: SSL_state_string_long+A5C↑j
                jr      $ra
                addiu   $v0, (aSslv2ReadServe_4 - 0x40000)  # "SSLv2 read server hello A"
 # ---------------------------------------------------------------------------

loc_3B798:                               # CODE XREF: SSL_state_string_long+53C↑j
                beq     $v1, $v0, locret_3B7C4
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1052
                beqz    $v0, locret_3B7CC
                la      $v0, loc_40000
                li      $v0, 0x1050
                bne     $v1, $v0, loc_3AF64
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aSslv2WriteClie_6 - 0x40000)  # "SSLv2 write client certificate A"
 # ---------------------------------------------------------------------------

locret_3B7C4:                            # CODE XREF: SSL_state_string_long:loc_3B798↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteClie_7 - 0x40000)  # "SSLv2 write client certificate B"
 # ---------------------------------------------------------------------------

locret_3B7CC:                            # CODE XREF: SSL_state_string_long+A98↑j
                jr      $ra
                addiu   $v0, (aSslv2WriteClie_8 - 0x40000)  # "SSLv2 write client certificate C"
 # End of function SSL_state_string_long


 # =============== S U B R O U T I N E =======================================


                .globl SSL_rstate_string_long
SSL_rstate_string_long:                  # DATA XREF: LOAD:00001798↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_rstate_string_long)
                addu    $gp, $t9
                lw      $v1, 0x38($a0)
                li      $v0, 0xF1
                beq     $v1, $v0, locret_3B828
                la      $v0, loc_40000
                li      $v0, 0xF2
                beq     $v1, $v0, locret_3B820
                la      $v0, loc_40000
                li      $v0, 0xF0
                beq     $v1, $v0, loc_3B814
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aUnknown - 0x40000)  # "unknown"
 # ---------------------------------------------------------------------------

loc_3B814:                               # CODE XREF: SSL_rstate_string_long+2C↑j
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aReadHeader - 0x40000)  # "read header"
 # ---------------------------------------------------------------------------

locret_3B820:                            # CODE XREF: SSL_rstate_string_long+20↑j
                jr      $ra
                addiu   $v0, (aReadDone - 0x40000)  # "read done"
 # ---------------------------------------------------------------------------

locret_3B828:                            # CODE XREF: SSL_rstate_string_long+14↑j
                jr      $ra
                addiu   $v0, (aReadBody - 0x40000)  # "read body"
 # End of function SSL_rstate_string_long


 # =============== S U B R O U T I N E =======================================


                .globl SSL_state_string
SSL_state_string:                        # DATA XREF: LOAD:00001A18↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_state_string)
                addu    $gp, $t9
                lw      $v1, 0x34($a0)
                li      $v0, 0x2000
                beq     $v1, $v0, locret_3BE6C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2001
                bnez    $v0, loc_3B8DC
                li      $v0, 0x1130
                li      $v0, 0x2121
                beq     $v1, $v0, locret_3BE7C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2122
                bnez    $v0, loc_3B95C
                li      $v0, 0x2061
                li      $v0, 0x2190
                beq     $v1, $v0, locret_3BE0C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2191
                bnez    $v0, loc_3BACC
                li      $v0, 0x2151
                li      $v0, 0x21C1
                beq     $v1, $v0, locret_3BCBC
                la      $v0, loc_40000
                slti    $v0, $v1, 0x21C2
                beqz    $v0, loc_3BB6C
                li      $v0, 0x21E1
                li      $v0, 0x21A1
                beq     $v1, $v0, locret_3BD5C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x21A2
                beqz    $v0, loc_3C034
                li      $v0, 0x21B1
                li      $v0, 0x2191
                beq     $v1, $v0, locret_3BE34
                la      $v0, loc_40000
                li      $v0, 0x21A0
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3rcvA - 0x40000)  # "3RCV_A"
 # ---------------------------------------------------------------------------

loc_3B8DC:                               # CODE XREF: SSL_state_string+20↑j
                beq     $v1, $v0, locret_3BE74
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1131
                bnez    $v0, loc_3B9C4
                li      $v0, 0x1053
                li      $v0, 0x1190
                beq     $v1, $v0, locret_3BD54
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1191
                bnez    $v0, loc_3BA2C
                li      $v0, 0x1161
                li      $v0, 0x11C1
                beq     $v1, $v0, locret_3BE9C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x11C2
                beqz    $v0, loc_3BC8C
                li      $v0, 0x1210
                li      $v0, 0x11A1
                beq     $v1, $v0, locret_3BD98
                la      $v0, loc_40000
                slti    $v0, $v1, 0x11A2
                beqz    $v0, loc_3BDA8
                li      $v0, 0x11B1
                li      $v0, 0x1191
                beq     $v1, $v0, locret_3BE3C
                la      $v0, loc_40000
                li      $v0, 0x11A0
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000

locret_3B954:                            # CODE XREF: SSL_state_string+374↓j
                jr      $ra
                addiu   $v0, (a3wccsa - 0x40000)  # "3WCCSA"
 # ---------------------------------------------------------------------------

loc_3B95C:                               # CODE XREF: SSL_state_string+38↑j
                beq     $v1, $v0, locret_3BE64
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2062
                bnez    $v0, loc_3BB1C
                li      $v0, 0x2031
                li      $v0, 0x2100
                beq     $v1, $v0, locret_3BDFC
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2101
                beqz    $v0, loc_3BBE4
                li      $v0, 0x2112
                li      $v0, 0x2072
                beq     $v1, $v0, locret_3BDDC
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2073
                beqz    $v0, loc_3C0D8
                li      $v0, 0x2080
                li      $v0, 0x2070
                beq     $v1, $v0, locret_3BD80
                la      $v0, loc_40000
                li      $v0, 0x2071
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2srcB - 0x40000)  # "2SRC_B"
 # ---------------------------------------------------------------------------

loc_3B9C4:                               # CODE XREF: SSL_state_string+B8↑j
                beq     $v1, $v0, locret_3BE2C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1054
                bnez    $v0, loc_3BA7C
                li      $v0, 0x1030
                li      $v0, 0x1100
                beq     $v1, $v0, locret_3BDFC
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1101
                beqz    $v0, loc_3BCC4
                li      $v0, 0x1120
                li      $v0, 0x1070
                beq     $v1, $v0, locret_3BE04
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1071
                beqz    $v0, loc_3BFF8
                li      $v0, 0x1080
                li      $v0, 0x1060
                beq     $v1, $v0, locret_3BE24
                la      $v0, loc_40000
                li      $v0, 0x1061
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2gsvB - 0x40000)  # "2GSV_B"
 # ---------------------------------------------------------------------------

loc_3BA2C:                               # CODE XREF: SSL_state_string+D0↑j
                beq     $v1, $v0, locret_3BE84
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1162
                beqz    $v0, loc_3BC1C
                li      $v0, 0x1172
                li      $v0, 0x1141
                beq     $v1, $v0, locret_3BD88
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1142
                beqz    $v0, loc_3C114
                li      $v0, 0x1151
                li      $v0, 0x1131
                beq     $v1, $v0, locret_3BD70
                la      $v0, loc_40000
                li      $v0, 0x1140
                beq     $v1, $v0, loc_3BD64
                nop

loc_3BA70:                               # CODE XREF: SSL_state_string+98↑j
                                         # SSL_state_string+118↑j ...
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aUnkwn - 0x40000)  # "UNKWN "
 # ---------------------------------------------------------------------------

loc_3BA7C:                               # CODE XREF: SSL_state_string+1A0↑j
                beq     $v1, $v0, locret_3BEB4
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1031
                beqz    $v0, loc_3BCFC
                li      $v0, 0x1041
                li      $v0, 0x1010
                beq     $v1, $v0, locret_3BD3C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1011
                beqz    $v0, loc_3C1C8
                li      $v0, 0x1020
                li      $v0, 3
                beq     $v1, $v0, locret_3BE14
                la      $v0, loc_40000
                li      $v0, 0x1000
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aCinit - 0x40000)  # "CINIT "
 # ---------------------------------------------------------------------------

loc_3BACC:                               # CODE XREF: SSL_state_string+50↑j
                beq     $v1, $v0, locret_3BDA0
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2152
                beqz    $v0, loc_3BBAC
                li      $v0, 0x2170
                li      $v0, 0x2131
                beq     $v1, $v0, locret_3BD78
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2132
                beqz    $v0, loc_3C09C
                li      $v0, 0x2141
                li      $v0, 0x2122
                beq     $v1, $v0, locret_3BE1C
                la      $v0, loc_40000
                li      $v0, 0x2130
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3wshA - 0x40000)  # "3WSH_A"
 # ---------------------------------------------------------------------------

loc_3BB1C:                               # CODE XREF: SSL_state_string+138↑j
                beq     $v1, $v0, locret_3BE4C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2032
                beqz    $v0, loc_3BC54
                li      $v0, 0x2042
                li      $v0, 0x2012
                beq     $v1, $v0, locret_3BD90
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2013
                beqz    $v0, loc_3C150
                li      $v0, 0x2021
                li      $v0, 0x2010
                beq     $v1, $v0, locret_3BE44
                la      $v0, loc_40000
                li      $v0, 0x2011
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2gchB - 0x40000)  # "2GCH_B"
 # ---------------------------------------------------------------------------

loc_3BB6C:                               # CODE XREF: SSL_state_string+68↑j
                beq     $v1, $v0, locret_3BDD4
                la      $v0, loc_40000
                slti    $v0, $v1, 0x21E2
                beqz    $v0, loc_3C060
                li      $v0, 0x2211
                li      $v0, 0x21D1
                beq     $v1, $v0, locret_3BD98
                la      $v0, loc_40000
                li      $v0, 0x21E0
                beq     $v1, $v0, locret_3BDCC
                la      $v0, loc_40000
                li      $v0, 0x21D0
                bne     $v1, $v0, loc_3BA70
                nop
                b       locret_3B954
                la      $v0, loc_40000
 # ---------------------------------------------------------------------------

loc_3BBAC:                               # CODE XREF: SSL_state_string+2A8↑j
                beq     $v1, $v0, locret_3BDEC
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2171
                beqz    $v0, loc_3BFBC
                li      $v0, 0x2180
                li      $v0, 0x2160
                beq     $v1, $v0, locret_3BDE4
                la      $v0, loc_40000
                li      $v0, 0x2161
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3wcrB - 0x40000)  # "3WCR_B"
 # ---------------------------------------------------------------------------

loc_3BBE4:                               # CODE XREF: SSL_state_string+150↑j
                beq     $v1, $v0, locret_3BE94
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2113
                beqz    $v0, loc_3BF80
                li      $v0, 0x2114
                li      $v0, 0x2110
                beq     $v1, $v0, locret_3BE8C
                la      $v0, loc_40000
                li      $v0, 0x2111
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3rchB - 0x40000)  # "3RCH_B"
 # ---------------------------------------------------------------------------

loc_3BC1C:                               # CODE XREF: SSL_state_string+208↑j
                beq     $v1, $v0, locret_3BE5C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1173
                beqz    $v0, loc_3BF44
                li      $v0, 0x1180
                li      $v0, 0x1170
                beq     $v1, $v0, locret_3BE54
                la      $v0, loc_40000
                li      $v0, 0x1171
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3wccB - 0x40000)  # "3WCC_B"
 # ---------------------------------------------------------------------------

loc_3BC54:                               # CODE XREF: SSL_state_string+2F8↑j
                beq     $v1, $v0, locret_3BEAC
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2043
                beqz    $v0, loc_3BECC
                li      $v0, 0x2051
                li      $v0, 0x2040
                beq     $v1, $v0, locret_3BEA4
                la      $v0, loc_40000
                li      $v0, 0x2041
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2ssvB - 0x40000)  # "2SSV_B"
 # ---------------------------------------------------------------------------

loc_3BC8C:                               # CODE XREF: SSL_state_string+E8↑j
                beq     $v1, $v0, locret_3BD34
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1211
                beqz    $v0, loc_3C204
                li      $v0, 0x1220
                li      $v0, 0x11D0
                beq     $v1, $v0, locret_3BDF4
                la      $v0, loc_40000
                li      $v0, 0x11D1
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000

locret_3BCBC:                            # CODE XREF: SSL_state_string+5C↑j
                jr      $ra
                addiu   $v0, (a3rfinb - 0x40000)  # "3RFINB"
 # ---------------------------------------------------------------------------

loc_3BCC4:                               # CODE XREF: SSL_state_string+1B8↑j
                beq     $v1, $v0, locret_3BEC4
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1121
                beqz    $v0, loc_3BF08
                li      $v0, 0x1126
                li      $v0, 0x1110
                beq     $v1, $v0, locret_3BEBC
                la      $v0, loc_40000
                li      $v0, 0x1111
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3wchB - 0x40000)  # "3WCH_B"
 # ---------------------------------------------------------------------------

loc_3BCFC:                               # CODE XREF: SSL_state_string+258↑j
                beq     $v1, $v0, locret_3BD4C
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1042
                beqz    $v0, loc_3C18C
                li      $v0, 0x1051
                li      $v0, 0x1031
                beq     $v1, $v0, locret_3BD44
                la      $v0, loc_40000
                li      $v0, 0x1040
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2scfA - 0x40000)  # "2SCF_A"
 # ---------------------------------------------------------------------------

locret_3BD34:                            # CODE XREF: SSL_state_string:loc_3BC8C↑j
                jr      $ra
                addiu   $v0, (a23wcha - 0x40000)  # "23WCHA"
 # ---------------------------------------------------------------------------

locret_3BD3C:                            # CODE XREF: SSL_state_string+264↑j
                jr      $ra
                addiu   $v0, (a2schA - 0x40000)  # "2SCH_A"
 # ---------------------------------------------------------------------------

locret_3BD44:                            # CODE XREF: SSL_state_string+4E4↑j
                jr      $ra
                addiu   $v0, (a2scmkb - 0x40000)  # "2SCMKB"
 # ---------------------------------------------------------------------------

locret_3BD4C:                            # CODE XREF: SSL_state_string:loc_3BCFC↑j
                jr      $ra
                addiu   $v0, (a2scfB - 0x40000)  # "2SCF_B"
 # ---------------------------------------------------------------------------

locret_3BD54:                            # CODE XREF: SSL_state_string+C4↑j
                jr      $ra
                addiu   $v0, (a3wcvA - 0x40000)  # "3WCV_A"
 # ---------------------------------------------------------------------------

locret_3BD5C:                            # CODE XREF: SSL_state_string+74↑j
                jr      $ra
                addiu   $v0, (a3rcvB - 0x40000)  # "3RCV_B"
 # ---------------------------------------------------------------------------

loc_3BD64:                               # CODE XREF: SSL_state_string+238↑j
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3rskea - 0x40000)  # "3RSKEA"
 # ---------------------------------------------------------------------------

locret_3BD70:                            # CODE XREF: SSL_state_string+22C↑j
                jr      $ra
                addiu   $v0, (a3rscB - 0x40000)  # "3RSC_B"
 # ---------------------------------------------------------------------------

locret_3BD78:                            # CODE XREF: SSL_state_string+2B4↑j
                jr      $ra
                addiu   $v0, (a3wshB - 0x40000)  # "3WSH_B"
 # ---------------------------------------------------------------------------

locret_3BD80:                            # CODE XREF: SSL_state_string+174↑j
                jr      $ra
                addiu   $v0, (a2srcA - 0x40000)  # "2SRC_A"
 # ---------------------------------------------------------------------------

locret_3BD88:                            # CODE XREF: SSL_state_string+214↑j
                jr      $ra
                addiu   $v0, (a3rskeb - 0x40000)  # "3RSKEB"
 # ---------------------------------------------------------------------------

locret_3BD90:                            # CODE XREF: SSL_state_string+304↑j
                jr      $ra
                addiu   $v0, (a2gchC - 0x40000)  # "2GCH_C"
 # ---------------------------------------------------------------------------

locret_3BD98:                            # CODE XREF: SSL_state_string+F4↑j
                                         # SSL_state_string+354↑j
                jr      $ra
                addiu   $v0, (a3wccsb - 0x40000)  # "3WCCSB"
 # ---------------------------------------------------------------------------

locret_3BDA0:                            # CODE XREF: SSL_state_string:loc_3BACC↑j
                jr      $ra
                addiu   $v0, (a3wskeb - 0x40000)  # "3WSKEB"
 # ---------------------------------------------------------------------------

loc_3BDA8:                               # CODE XREF: SSL_state_string+100↑j
                beq     $v1, $v0, locret_3BDD4
                la      $v0, loc_40000
                li      $v0, 0x11C0
                beq     $v1, $v0, locret_3C058
                la      $v0, loc_40000
                li      $v0, 0x11B0
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000

locret_3BDCC:                            # CODE XREF: SSL_state_string+360↑j
                jr      $ra
                addiu   $v0, (a3wfina - 0x40000)  # "3WFINA"
 # ---------------------------------------------------------------------------

locret_3BDD4:                            # CODE XREF: SSL_state_string:loc_3BB6C↑j
                                         # SSL_state_string:loc_3BDA8↑j
                jr      $ra
                addiu   $v0, (a3wfinb - 0x40000)  # "3WFINB"
 # ---------------------------------------------------------------------------

locret_3BDDC:                            # CODE XREF: SSL_state_string+15C↑j
                jr      $ra
                addiu   $v0, (a2srcC - 0x40000)  # "2SRC_C"
 # ---------------------------------------------------------------------------

locret_3BDE4:                            # CODE XREF: SSL_state_string+394↑j
                jr      $ra
                addiu   $v0, (a3wcrA - 0x40000)  # "3WCR_A"
 # ---------------------------------------------------------------------------

locret_3BDEC:                            # CODE XREF: SSL_state_string:loc_3BBAC↑j
                jr      $ra
                addiu   $v0, (a3wsdA - 0x40000)  # "3WSD_A"
 # ---------------------------------------------------------------------------

locret_3BDF4:                            # CODE XREF: SSL_state_string+474↑j
                                         # SSL_state_string+810↓j
                jr      $ra
                addiu   $v0, (a3rfina - 0x40000)  # "3RFINA"
 # ---------------------------------------------------------------------------

locret_3BDFC:                            # CODE XREF: SSL_state_string+144↑j
                                         # SSL_state_string+1AC↑j
                jr      $ra
                addiu   $v0, (a3flush - 0x40000)  # "3FLUSH"
 # ---------------------------------------------------------------------------

locret_3BE04:                            # CODE XREF: SSL_state_string+1C4↑j
                jr      $ra
                addiu   $v0, (a2gsfA - 0x40000)  # "2GSF_A"
 # ---------------------------------------------------------------------------

locret_3BE0C:                            # CODE XREF: SSL_state_string+44↑j
                jr      $ra
                addiu   $v0, (a3rckea - 0x40000)  # "3RCKEA"
 # ---------------------------------------------------------------------------

locret_3BE14:                            # CODE XREF: SSL_state_string+27C↑j
                jr      $ra
                addiu   $v0, (aSslok - 0x40000)  # "SSLOK "
 # ---------------------------------------------------------------------------

locret_3BE1C:                            # CODE XREF: SSL_state_string+2CC↑j
                jr      $ra
                addiu   $v0, (a3whrC - 0x40000)  # "3WHR_C"
 # ---------------------------------------------------------------------------

locret_3BE24:                            # CODE XREF: SSL_state_string+1DC↑j
                jr      $ra
                addiu   $v0, (a2gsvA - 0x40000)  # "2GSV_A"
 # ---------------------------------------------------------------------------

locret_3BE2C:                            # CODE XREF: SSL_state_string:loc_3B9C4↑j
                jr      $ra
                addiu   $v0, (a2sccD - 0x40000)  # "2SCC_D"
 # ---------------------------------------------------------------------------

locret_3BE34:                            # CODE XREF: SSL_state_string+8C↑j
                jr      $ra
                addiu   $v0, (a3rckeb - 0x40000)  # "3RCKEB"
 # ---------------------------------------------------------------------------

locret_3BE3C:                            # CODE XREF: SSL_state_string+10C↑j
                jr      $ra
                addiu   $v0, (a3wcvB - 0x40000)  # "3WCV_B"
 # ---------------------------------------------------------------------------

locret_3BE44:                            # CODE XREF: SSL_state_string+31C↑j
                jr      $ra
                addiu   $v0, (a2gchA - 0x40000)  # "2GCH_A"
 # ---------------------------------------------------------------------------

locret_3BE4C:                            # CODE XREF: SSL_state_string:loc_3BB1C↑j
                jr      $ra
                addiu   $v0, (a2gcmka - 0x40000)  # "2GCMKA"
 # ---------------------------------------------------------------------------

locret_3BE54:                            # CODE XREF: SSL_state_string+404↑j
                jr      $ra
                addiu   $v0, (a3wccA - 0x40000)  # "3WCC_A"
 # ---------------------------------------------------------------------------

locret_3BE5C:                            # CODE XREF: SSL_state_string:loc_3BC1C↑j
                jr      $ra
                addiu   $v0, (a3wccC - 0x40000)  # "3WCC_C"
 # ---------------------------------------------------------------------------

locret_3BE64:                            # CODE XREF: SSL_state_string:loc_3B95C↑j
                jr      $ra
                addiu   $v0, (a2ssfB - 0x40000)  # "2SSF_B"
 # ---------------------------------------------------------------------------

locret_3BE6C:                            # CODE XREF: SSL_state_string+14↑j
                jr      $ra
                addiu   $v0, (aAinit - 0x40000)  # "AINIT "
 # ---------------------------------------------------------------------------

locret_3BE74:                            # CODE XREF: SSL_state_string:loc_3B8DC↑j
                jr      $ra
                addiu   $v0, (a3rscA - 0x40000)  # "3RSC_A"
 # ---------------------------------------------------------------------------

locret_3BE7C:                            # CODE XREF: SSL_state_string+2C↑j
                jr      $ra
                addiu   $v0, (a3whrB - 0x40000)  # "3WHR_B"
 # ---------------------------------------------------------------------------

locret_3BE84:                            # CODE XREF: SSL_state_string:loc_3BA2C↑j
                jr      $ra
                addiu   $v0, (a3rsdB - 0x40000)  # "3RSD_B"
 # ---------------------------------------------------------------------------

locret_3BE8C:                            # CODE XREF: SSL_state_string+3CC↑j
                jr      $ra
                addiu   $v0, (a3rchA - 0x40000)  # "3RCH_A"
 # ---------------------------------------------------------------------------

locret_3BE94:                            # CODE XREF: SSL_state_string:loc_3BBE4↑j
                jr      $ra
                addiu   $v0, (a3rchC - 0x40000)  # "3RCH_C"
 # ---------------------------------------------------------------------------

locret_3BE9C:                            # CODE XREF: SSL_state_string+DC↑j
                                         # SSL_state_string:loc_3C034↓j
                jr      $ra
                addiu   $v0, (a3rccsb - 0x40000)  # "3RCCSB"
 # ---------------------------------------------------------------------------

locret_3BEA4:                            # CODE XREF: SSL_state_string+43C↑j
                jr      $ra
                addiu   $v0, (a2ssvA - 0x40000)  # "2SSV_A"
 # ---------------------------------------------------------------------------

locret_3BEAC:                            # CODE XREF: SSL_state_string:loc_3BC54↑j
                jr      $ra
                addiu   $v0, (a2ssvC - 0x40000)  # "2SSV_C"
 # ---------------------------------------------------------------------------

locret_3BEB4:                            # CODE XREF: SSL_state_string:loc_3BA7C↑j
                jr      $ra
                addiu   $v0, (a2scmka - 0x40000)  # "2SCMKA"
 # ---------------------------------------------------------------------------

locret_3BEBC:                            # CODE XREF: SSL_state_string+4AC↑j
                jr      $ra
                addiu   $v0, (a3wchA - 0x40000)  # "3WCH_A"
 # ---------------------------------------------------------------------------

locret_3BEC4:                            # CODE XREF: SSL_state_string:loc_3BCC4↑j
                jr      $ra
                addiu   $v0, (a3rshA - 0x40000)  # "3RSH_A"
 # ---------------------------------------------------------------------------

loc_3BECC:                               # CODE XREF: SSL_state_string+430↑j
                beq     $v1, $v0, locret_3BEF8
                la      $v0, loc_40000
                li      $v0, 0x2060
                beq     $v1, $v0, locret_3BF00
                la      $v0, loc_40000
                li      $v0, 0x2050
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2gcfA - 0x40000)  # "2GCF_A"
 # ---------------------------------------------------------------------------

locret_3BEF8:                            # CODE XREF: SSL_state_string:loc_3BECC↑j
                jr      $ra
                addiu   $v0, (a2gcfB - 0x40000)  # "2GCF_B"
 # ---------------------------------------------------------------------------

locret_3BF00:                            # CODE XREF: SSL_state_string+6A8↑j
                jr      $ra
                addiu   $v0, (a2ssfA - 0x40000)  # "2SSF_A"
 # ---------------------------------------------------------------------------

loc_3BF08:                               # CODE XREF: SSL_state_string+4A0↑j
                beq     $v1, $v0, locret_3BF34
                la      $v0, loc_40000
                li      $v0, 0x1127
                beq     $v1, $v0, locret_3BF3C
                la      $v0, loc_40000
                li      $v0, 0x1121
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3rshB - 0x40000)  # "3RSH_B"
 # ---------------------------------------------------------------------------

locret_3BF34:                            # CODE XREF: SSL_state_string:loc_3BF08↑j
                jr      $ra
                addiu   $v0, (aDrchva - 0x40000)  # "DRCHVA"
 # ---------------------------------------------------------------------------

locret_3BF3C:                            # CODE XREF: SSL_state_string+6E4↑j
                jr      $ra
                addiu   $v0, (aDrchvb - 0x40000)  # "DRCHVB"
 # ---------------------------------------------------------------------------

loc_3BF44:                               # CODE XREF: SSL_state_string+3F8↑j
                beq     $v1, $v0, locret_3BF70
                la      $v0, loc_40000
                li      $v0, 0x1181
                beq     $v1, $v0, locret_3BF78
                la      $v0, loc_40000
                li      $v0, 0x1173
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3wccD - 0x40000)  # "3WCC_D"
 # ---------------------------------------------------------------------------

locret_3BF70:                            # CODE XREF: SSL_state_string:loc_3BF44↑j
                jr      $ra
                addiu   $v0, (a3wckea - 0x40000)  # "3WCKEA"
 # ---------------------------------------------------------------------------

locret_3BF78:                            # CODE XREF: SSL_state_string+720↑j
                jr      $ra
                addiu   $v0, (a3wckeb - 0x40000)  # "3WCKEB"
 # ---------------------------------------------------------------------------

loc_3BF80:                               # CODE XREF: SSL_state_string+3C0↑j
                beq     $v1, $v0, locret_3BFAC
                la      $v0, loc_40000
                slti    $v0, $v1, 0x2114
                bnez    $v0, locret_3BFB4
                la      $v0, loc_40000
                li      $v0, 0x2120
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3whrA - 0x40000)  # "3WHR_A"
 # ---------------------------------------------------------------------------

locret_3BFAC:                            # CODE XREF: SSL_state_string:loc_3BF80↑j
                jr      $ra
                addiu   $v0, (aDwchvb - 0x40000)  # "DWCHVB"
 # ---------------------------------------------------------------------------

locret_3BFB4:                            # CODE XREF: SSL_state_string+75C↑j
                jr      $ra
                addiu   $v0, (aDwchva - 0x40000)  # "DWCHVA"
 # ---------------------------------------------------------------------------

loc_3BFBC:                               # CODE XREF: SSL_state_string+388↑j
                beq     $v1, $v0, locret_3BFE8
                la      $v0, loc_40000
                li      $v0, 0x2181
                beq     $v1, $v0, locret_3BFF0
                la      $v0, loc_40000
                li      $v0, 0x2171
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3wsdB - 0x40000)  # "3WSD_B"
 # ---------------------------------------------------------------------------

locret_3BFE8:                            # CODE XREF: SSL_state_string:loc_3BFBC↑j
                jr      $ra
                addiu   $v0, (a3rccA - 0x40000)  # "3RCC_A"
 # ---------------------------------------------------------------------------

locret_3BFF0:                            # CODE XREF: SSL_state_string+798↑j
                jr      $ra
                addiu   $v0, (a3rccB - 0x40000)  # "3RCC_B"
 # ---------------------------------------------------------------------------

loc_3BFF8:                               # CODE XREF: SSL_state_string+1D0↑j
                beq     $v1, $v0, locret_3C024
                la      $v0, loc_40000
                li      $v0, 0x1090
                beq     $v1, $v0, locret_3C02C
                la      $v0, loc_40000
                li      $v0, 0x1071
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2gsfB - 0x40000)  # "2GSF_B"
 # ---------------------------------------------------------------------------

locret_3C024:                            # CODE XREF: SSL_state_string:loc_3BFF8↑j
                jr      $ra
                addiu   $v0, (a2csenc - 0x40000)  # "2CSENC"
 # ---------------------------------------------------------------------------

locret_3C02C:                            # CODE XREF: SSL_state_string+7D4↑j
                jr      $ra
                addiu   $v0, (a2x9gcc - 0x40000)  # "2X9GCC"
 # ---------------------------------------------------------------------------

loc_3C034:                               # CODE XREF: SSL_state_string+80↑j
                beq     $v1, $v0, locret_3BE9C
                la      $v0, loc_40000
                li      $v0, 0x21C0
                beq     $v1, $v0, locret_3BDF4
                la      $v0, loc_40000
                li      $v0, 0x21B0
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000

locret_3C058:                            # CODE XREF: SSL_state_string+584↑j
                jr      $ra
                addiu   $v0, (a3rccsa - 0x40000)  # "3RCCSA"
 # ---------------------------------------------------------------------------

loc_3C060:                               # CODE XREF: SSL_state_string+348↑j
                beq     $v1, $v0, locret_3C08C
                la      $v0, loc_40000
                li      $v0, 0x4000
                beq     $v1, $v0, locret_3C094
                la      $v0, loc_40000
                li      $v0, 0x2210
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a23rcha - 0x40000)  # "23RCHA"
 # ---------------------------------------------------------------------------

locret_3C08C:                            # CODE XREF: SSL_state_string:loc_3C060↑j
                jr      $ra
                addiu   $v0, (a23rchb - 0x40000)  # "23RCHB"
 # ---------------------------------------------------------------------------

locret_3C094:                            # CODE XREF: SSL_state_string+83C↑j
                jr      $ra
                addiu   $v0, (aPinit - 0x40000)  # "PINIT "
 # ---------------------------------------------------------------------------

loc_3C09C:                               # CODE XREF: SSL_state_string+2C0↑j
                beq     $v1, $v0, locret_3C0C8
                la      $v0, loc_40000
                li      $v0, 0x2150
                beq     $v1, $v0, locret_3C0D0
                la      $v0, loc_40000
                li      $v0, 0x2140
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3wscA - 0x40000)  # "3WSC_A"
 # ---------------------------------------------------------------------------

locret_3C0C8:                            # CODE XREF: SSL_state_string:loc_3C09C↑j
                jr      $ra
                addiu   $v0, (a3wscB - 0x40000)  # "3WSC_B"
 # ---------------------------------------------------------------------------

locret_3C0D0:                            # CODE XREF: SSL_state_string+878↑j
                jr      $ra
                addiu   $v0, (a3wskea - 0x40000)  # "3WSKEA"
 # ---------------------------------------------------------------------------

loc_3C0D8:                               # CODE XREF: SSL_state_string+168↑j
                beq     $v1, $v0, locret_3C104
                la      $v0, loc_40000
                li      $v0, 0x2090
                beq     $v1, $v0, locret_3C10C
                la      $v0, loc_40000
                li      $v0, 0x2073
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2srcD - 0x40000)  # "2SRC_D"
 # ---------------------------------------------------------------------------

locret_3C104:                            # CODE XREF: SSL_state_string:loc_3C0D8↑j
                jr      $ra
                addiu   $v0, (a2ssenc - 0x40000)  # "2SSENC"
 # ---------------------------------------------------------------------------

locret_3C10C:                            # CODE XREF: SSL_state_string+8B4↑j
                jr      $ra
                addiu   $v0, (a2x9gsc - 0x40000)  # "2X9GSC"
 # ---------------------------------------------------------------------------

loc_3C114:                               # CODE XREF: SSL_state_string+220↑j
                beq     $v1, $v0, locret_3C140
                la      $v0, loc_40000
                li      $v0, 0x1160
                beq     $v1, $v0, locret_3C148
                la      $v0, loc_40000
                li      $v0, 0x1150
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a3rcrA - 0x40000)  # "3RCR_A"
 # ---------------------------------------------------------------------------

locret_3C140:                            # CODE XREF: SSL_state_string:loc_3C114↑j
                jr      $ra
                addiu   $v0, (a3rcrB - 0x40000)  # "3RCR_B"
 # ---------------------------------------------------------------------------

locret_3C148:                            # CODE XREF: SSL_state_string+8F0↑j
                jr      $ra
                addiu   $v0, (a3rsdA - 0x40000)  # "3RSD_A"
 # ---------------------------------------------------------------------------

loc_3C150:                               # CODE XREF: SSL_state_string+310↑j
                beq     $v1, $v0, locret_3C17C
                la      $v0, loc_40000
                li      $v0, 0x2030
                beq     $v1, $v0, locret_3C184
                la      $v0, loc_40000
                li      $v0, 0x2020
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2sshA - 0x40000)  # "2SSH_A"
 # ---------------------------------------------------------------------------

locret_3C17C:                            # CODE XREF: SSL_state_string:loc_3C150↑j
                jr      $ra
                addiu   $v0, (a2sshB - 0x40000)  # "2SSH_B"
 # ---------------------------------------------------------------------------

locret_3C184:                            # CODE XREF: SSL_state_string+92C↑j
                jr      $ra
                addiu   $v0, (a2gcmka - 0x40000)  # "2GCMKA"
 # ---------------------------------------------------------------------------

loc_3C18C:                               # CODE XREF: SSL_state_string+4D8↑j
                beq     $v1, $v0, locret_3C1B8
                la      $v0, loc_40000
                slti    $v0, $v1, 0x1052
                beqz    $v0, locret_3C1C0
                la      $v0, loc_40000
                li      $v0, 0x1050
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2sccA - 0x40000)  # "2SCC_A"
 # ---------------------------------------------------------------------------

locret_3C1B8:                            # CODE XREF: SSL_state_string:loc_3C18C↑j
                jr      $ra
                addiu   $v0, (a2sccB - 0x40000)  # "2SCC_B"
 # ---------------------------------------------------------------------------

locret_3C1C0:                            # CODE XREF: SSL_state_string+968↑j
                jr      $ra
                addiu   $v0, (a2sccC - 0x40000)  # "2SCC_C"
 # ---------------------------------------------------------------------------

loc_3C1C8:                               # CODE XREF: SSL_state_string+270↑j
                beq     $v1, $v0, locret_3C1F4
                la      $v0, loc_40000
                li      $v0, 0x1021
                beq     $v1, $v0, locret_3C1FC
                la      $v0, loc_40000
                li      $v0, 0x1011
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a2schB - 0x40000)  # "2SCH_B"
 # ---------------------------------------------------------------------------

locret_3C1F4:                            # CODE XREF: SSL_state_string:loc_3C1C8↑j
                jr      $ra
                addiu   $v0, (a2gshA - 0x40000)  # "2GSH_A"
 # ---------------------------------------------------------------------------

locret_3C1FC:                            # CODE XREF: SSL_state_string+9A4↑j
                jr      $ra
                addiu   $v0, (a2gshB - 0x40000)  # "2GSH_B"
 # ---------------------------------------------------------------------------

loc_3C204:                               # CODE XREF: SSL_state_string+468↑j
                beq     $v1, $v0, locret_3C230
                la      $v0, loc_40000
                li      $v0, 0x1221
                beq     $v1, $v0, locret_3C238
                la      $v0, loc_40000
                li      $v0, 0x1211
                bne     $v1, $v0, loc_3BA70
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (a23wchb - 0x40000)  # "23WCHB"
 # ---------------------------------------------------------------------------

locret_3C230:                            # CODE XREF: SSL_state_string:loc_3C204↑j
                jr      $ra
                addiu   $v0, (a23rsha - 0x40000)  # "23RSHA"
 # ---------------------------------------------------------------------------

locret_3C238:                            # CODE XREF: SSL_state_string+9E0↑j
                jr      $ra
                addiu   $v0, (a23rsha - 0x40000)  # "23RSHA"
 # End of function SSL_state_string


 # =============== S U B R O U T I N E =======================================


                .globl SSL_alert_type_string_long
SSL_alert_type_string_long:              # DATA XREF: LOAD:00001E78↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_alert_type_string_long)
                addu    $gp, $t9
                sra     $a0, 8
                li      $v0, 1
                beq     $a0, $v0, locret_3C280
                la      $v0, loc_40000
                li      $v0, 2
                beq     $a0, $v0, loc_3C274
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aUnknown - 0x40000)  # "unknown"
 # ---------------------------------------------------------------------------

loc_3C274:                               # CODE XREF: SSL_alert_type_string_long+20↑j
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aFatal - 0x40000)  # "fatal"
 # ---------------------------------------------------------------------------

locret_3C280:                            # CODE XREF: SSL_alert_type_string_long+14↑j
                jr      $ra
                addiu   $v0, (aWarning - 0x40000)  # "warning"
 # End of function SSL_alert_type_string_long


 # =============== S U B R O U T I N E =======================================


                .globl SSL_alert_type_string
SSL_alert_type_string:                   # DATA XREF: LOAD:000021A8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_alert_type_string)
                addu    $gp, $t9
                sra     $a0, 8
                li      $v0, 1
                beq     $a0, $v0, locret_3C2C8
                la      $v0, loc_40000
                li      $v0, 2
                beq     $a0, $v0, loc_3C2BC
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aU - 0x40000)  # "U"
 # ---------------------------------------------------------------------------

loc_3C2BC:                               # CODE XREF: SSL_alert_type_string+20↑j
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aF - 0x40000)  # "F"
 # ---------------------------------------------------------------------------

locret_3C2C8:                            # CODE XREF: SSL_alert_type_string+14↑j
                jr      $ra
                addiu   $v0, (aW - 0x40000)  # "W"
 # End of function SSL_alert_type_string


 # =============== S U B R O U T I N E =======================================


                .globl SSL_alert_desc_string
SSL_alert_desc_string:                   # DATA XREF: LOAD:000021F8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_alert_desc_string)
                addu    $gp, $t9
                andi    $a0, 0xFF
                sltiu   $v0, $a0, 0x74   # switch 116 cases
                bnez    $v0, loc_3C2F8

def_3C30C:                               # jumptable 0003C30C default case
                la      $v1, loc_40000

loc_3C2EC:                               # CODE XREF: SSL_alert_desc_string+3C↓j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C cases 1-9,11-19,23-29,31-39,52-59,61-69,72-79,81-89,91-99,101-109
                jr      $ra
                addiu   $v0, (aUk - 0x40000)  # "UK"
 # ---------------------------------------------------------------------------

loc_3C2F8:                               # CODE XREF: SSL_alert_desc_string+14↑j
                sll     $v0, $a0, 2
                addiu   $v1, (jpt_3C30C - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_3C314:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 115
                jr      $ra
                addiu   $v0, (aUp - 0x40000)  # "UP"
 # ---------------------------------------------------------------------------

loc_3C320:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 114
                jr      $ra
                addiu   $v0, (aBh - 0x40000)  # "BH"
 # ---------------------------------------------------------------------------

loc_3C32C:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 113
                jr      $ra
                addiu   $v0, (aBr - 0x40000)  # "BR"
 # ---------------------------------------------------------------------------

loc_3C338:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 112
                jr      $ra
                addiu   $v0, (aUn - 0x40000)  # "UN"
 # ---------------------------------------------------------------------------

loc_3C344:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 111
                jr      $ra
                addiu   $v0, (aCo - 0x40000)  # "CO"
 # ---------------------------------------------------------------------------

loc_3C350:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 110
                jr      $ra
                addiu   $v0, (aUe - 0x40000)  # "UE"
 # ---------------------------------------------------------------------------

loc_3C35C:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 100
                jr      $ra
                addiu   $v0, (aNr - 0x40000)  # "NR"
 # ---------------------------------------------------------------------------

loc_3C368:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 90
                jr      $ra
                addiu   $v0, (aUs - 0x40000)  # "US"
 # ---------------------------------------------------------------------------

loc_3C374:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 80
                jr      $ra
                addiu   $v0, (aIe - 0x40000)  # "IE"
 # ---------------------------------------------------------------------------

loc_3C380:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 71
                jr      $ra
                addiu   $v0, (aIs - 0x40000)  # "IS"
 # ---------------------------------------------------------------------------

loc_3C38C:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 70
                jr      $ra
                addiu   $v0, (aPv - 0x40000)  # "PV"
 # ---------------------------------------------------------------------------

loc_3C398:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 60
                jr      $ra
                addiu   $v0, (aEr - 0x40000)  # "ER"
 # ---------------------------------------------------------------------------

loc_3C3A4:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 51
                jr      $ra
                addiu   $v0, (aCy - 0x40000)  # "CY"
 # ---------------------------------------------------------------------------

loc_3C3B0:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 50
                jr      $ra
                addiu   $v0, (aDe - 0x40000)  # "DE"
 # ---------------------------------------------------------------------------

loc_3C3BC:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 49
                jr      $ra
                addiu   $v0, (aAd - 0x40000)  # "AD"
 # ---------------------------------------------------------------------------

loc_3C3C8:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 48
                jr      $ra
                addiu   $v0, (aUnknownCa+8 - 0x40000)  # "CA"
 # ---------------------------------------------------------------------------

loc_3C3D4:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 47
                jr      $ra
                addiu   $v0, (aIp - 0x40000)  # "IP"
 # ---------------------------------------------------------------------------

loc_3C3E0:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 46
                jr      $ra
                addiu   $v0, (aCu - 0x40000)  # "CU"
 # ---------------------------------------------------------------------------

loc_3C3EC:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 45
                jr      $ra
                addiu   $v0, (aCe - 0x40000)  # "CE"
 # ---------------------------------------------------------------------------

loc_3C3F8:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 44
                jr      $ra
                addiu   $v0, (aCr - 0x40000)  # "CR"
 # ---------------------------------------------------------------------------

loc_3C404:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 43
                jr      $ra
                addiu   $v0, (aUc - 0x40000)  # "UC"
 # ---------------------------------------------------------------------------

loc_3C410:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 42
                jr      $ra
                addiu   $v0, (aBc - 0x40000)  # "BC"
 # ---------------------------------------------------------------------------

loc_3C41C:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 41
                jr      $ra
                addiu   $v0, (a2csenc+4 - 0x40000)  # "NC"
 # ---------------------------------------------------------------------------

loc_3C428:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 40
                jr      $ra
                addiu   $v0, (aHf - 0x40000)  # "HF"
 # ---------------------------------------------------------------------------

loc_3C434:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 30
                jr      $ra
                addiu   $v0, (aDf - 0x40000)  # "DF"
 # ---------------------------------------------------------------------------

loc_3C440:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 22
                jr      $ra
                addiu   $v0, (aRo - 0x40000)  # "RO"
 # ---------------------------------------------------------------------------

loc_3C44C:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 21
                jr      $ra
                addiu   $v0, (aDc - 0x40000)  # "DC"
 # ---------------------------------------------------------------------------

loc_3C458:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 20
                jr      $ra
                addiu   $v0, (aBm - 0x40000)  # "BM"
 # ---------------------------------------------------------------------------

loc_3C464:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 10
                jr      $ra
                addiu   $v0, (aMedium+4 - 0x40000)  # "UM"
 # ---------------------------------------------------------------------------

loc_3C470:                               # CODE XREF: SSL_alert_desc_string+3C↑j
                                         # DATA XREF: .rodata:jpt_3C30C↓o
                la      $v0, loc_40000   # jumptable 0003C30C case 0
                jr      $ra
                addiu   $v0, (aCn - 0x40000)  # "CN"
 # End of function SSL_alert_desc_string


 # =============== S U B R O U T I N E =======================================


                .globl SSL_alert_desc_string_long
SSL_alert_desc_string_long:              # DATA XREF: LOAD:00001D08↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_alert_desc_string_long)
                addu    $gp, $t9
                andi    $a0, 0xFF
                sltiu   $v0, $a0, 0x74   # switch 116 cases
                bnez    $v0, loc_3C4A4

def_3C4B8:                               # jumptable 0003C4B8 default case
                la      $v1, loc_40000

loc_3C498:                               # CODE XREF: SSL_alert_desc_string_long+3C↓j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 cases 1-9,11-19,23-29,31-39,52-59,61-69,72-79,81-89,91-99,101-109
                jr      $ra
                addiu   $v0, (aUnknown - 0x40000)  # "unknown"
 # ---------------------------------------------------------------------------

loc_3C4A4:                               # CODE XREF: SSL_alert_desc_string_long+14↑j
                sll     $v0, $a0, 2
                addiu   $v1, (jpt_3C4B8 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_3C4C0:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 115
                jr      $ra
                addiu   $v0, (aUnknownPskIden - 0x40000)  # "unknown PSK identity"
 # ---------------------------------------------------------------------------

loc_3C4CC:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 114
                jr      $ra
                addiu   $v0, (aBadCertificate - 0x40000)  # "bad certificate hash value"
 # ---------------------------------------------------------------------------

loc_3C4D8:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 113
                jr      $ra
                addiu   $v0, (aBadCertificate_0 - 0x40000)  # "bad certificate status response"
 # ---------------------------------------------------------------------------

loc_3C4E4:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 112
                jr      $ra
                addiu   $v0, (aUnrecognizedNa - 0x40000)  # "unrecognized name"
 # ---------------------------------------------------------------------------

loc_3C4F0:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 111
                jr      $ra
                addiu   $v0, (aCertificateUno - 0x40000)  # "certificate unobtainable"
 # ---------------------------------------------------------------------------

loc_3C4FC:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 110
                jr      $ra
                addiu   $v0, (aUnsupportedExt - 0x40000)  # "unsupported extension"
 # ---------------------------------------------------------------------------

loc_3C508:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 100
                jr      $ra
                addiu   $v0, (aNoRenegotiatio - 0x40000)  # "no renegotiation"
 # ---------------------------------------------------------------------------

loc_3C514:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 90
                jr      $ra
                addiu   $v0, (aUserCanceled - 0x40000)  # "user canceled"
 # ---------------------------------------------------------------------------

loc_3C520:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 80
                jr      $ra
                addiu   $v0, (aInternalError - 0x40000)  # "internal error"
 # ---------------------------------------------------------------------------

loc_3C52C:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 71
                jr      $ra
                addiu   $v0, (aInsufficientSe - 0x40000)  # "insufficient security"
 # ---------------------------------------------------------------------------

loc_3C538:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 70
                jr      $ra
                addiu   $v0, (aProtocolVersio - 0x40000)  # "protocol version"
 # ---------------------------------------------------------------------------

loc_3C544:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 60
                jr      $ra
                addiu   $v0, (aExportRestrict - 0x40000)  # "export restriction"
 # ---------------------------------------------------------------------------

loc_3C550:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 51
                jr      $ra
                addiu   $v0, (aDecryptError - 0x40000)  # "decrypt error"
 # ---------------------------------------------------------------------------

loc_3C55C:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 50
                jr      $ra
                addiu   $v0, (aDecodeError - 0x40000)  # "decode error"
 # ---------------------------------------------------------------------------

loc_3C568:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 49
                jr      $ra
                addiu   $v0, (aAccessDenied - 0x40000)  # "access denied"
 # ---------------------------------------------------------------------------

loc_3C574:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 48
                jr      $ra
                addiu   $v0, (aUnknownCa - 0x40000)  # "unknown CA"
 # ---------------------------------------------------------------------------

loc_3C580:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 47
                jr      $ra
                addiu   $v0, (aIllegalParamet - 0x40000)  # "illegal parameter"
 # ---------------------------------------------------------------------------

loc_3C58C:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 46
                jr      $ra
                addiu   $v0, (dword_47064 - 0x40000)
 # ---------------------------------------------------------------------------

loc_3C598:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 45
                jr      $ra
                addiu   $v0, (aCertificateExp - 0x40000)  # "certificate expired"
 # ---------------------------------------------------------------------------

loc_3C5A4:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 44
                jr      $ra
                addiu   $v0, (aCertificateRev - 0x40000)  # "certificate revoked"
 # ---------------------------------------------------------------------------

loc_3C5B0:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 43
                jr      $ra
                addiu   $v0, (aUnsupportedCer - 0x40000)  # "unsupported certificate"
 # ---------------------------------------------------------------------------

loc_3C5BC:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 42
                jr      $ra
                addiu   $v0, (aBadCertificate_1 - 0x40000)  # "bad certificate"
 # ---------------------------------------------------------------------------

loc_3C5C8:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 41
                jr      $ra
                addiu   $v0, (aNoCertificate - 0x40000)  # "no certificate"
 # ---------------------------------------------------------------------------

loc_3C5D4:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 40
                jr      $ra
                addiu   $v0, (aHandshakeFailu - 0x40000)  # "handshake failure"
 # ---------------------------------------------------------------------------

loc_3C5E0:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 30
                jr      $ra
                addiu   $v0, (aDecompressionF - 0x40000)  # "decompression failure"
 # ---------------------------------------------------------------------------

loc_3C5EC:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 22
                jr      $ra
                addiu   $v0, (aRecordOverflow - 0x40000)  # "record overflow"
 # ---------------------------------------------------------------------------

loc_3C5F8:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 21
                jr      $ra
                addiu   $v0, (aDecryptionFail - 0x40000)  # "decryption failed"
 # ---------------------------------------------------------------------------

loc_3C604:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 20
                jr      $ra
                addiu   $v0, (aBadRecordMac - 0x40000)  # "bad record mac"
 # ---------------------------------------------------------------------------

loc_3C610:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 10
                jr      $ra
                addiu   $v0, (aUnexpectedMess - 0x40000)  # "unexpected_message"
 # ---------------------------------------------------------------------------

loc_3C61C:                               # CODE XREF: SSL_alert_desc_string_long+3C↑j
                                         # DATA XREF: .rodata:jpt_3C4B8↓o
                la      $v0, loc_40000   # jumptable 0003C4B8 case 0
                jr      $ra
                addiu   $v0, (aCloseNotify - 0x40000)  # "close notify"
 # End of function SSL_alert_desc_string_long


 # =============== S U B R O U T I N E =======================================


                .globl SSL_rstate_string
SSL_rstate_string:                       # DATA XREF: LOAD:00001828↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_rstate_string)
                addu    $gp, $t9
                lw      $v1, 0x38($a0)
                li      $v0, 0xF1
                beq     $v1, $v0, locret_3C67C
                la      $v0, loc_40000
                li      $v0, 0xF2
                beq     $v1, $v0, locret_3C674
                la      $v0, loc_40000
                li      $v0, 0xF0
                beq     $v1, $v0, loc_3C668
                nop
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aUnknown - 0x40000)  # "unknown"
 # ---------------------------------------------------------------------------

loc_3C668:                               # CODE XREF: SSL_rstate_string+2C↑j
                la      $v0, loc_40000
                jr      $ra
                addiu   $v0, (aRh - 0x40000)  # "RH"
 # ---------------------------------------------------------------------------

locret_3C674:                            # CODE XREF: SSL_rstate_string+20↑j
                jr      $ra
                addiu   $v0, (aRd - 0x40000)  # "RD"
 # ---------------------------------------------------------------------------

locret_3C67C:                            # CODE XREF: SSL_rstate_string+14↑j
                jr      $ra
                addiu   $v0, (aRb - 0x40000)  # "RB"
 # End of function SSL_rstate_string


 # =============== S U B R O U T I N E =======================================


sub_3C684:                               # CODE XREF: SSL_CTX_use_certificate+94↓j
                                         # SSL_use_certificate+94↓j
                                         # DATA XREF: ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_3C684)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                la      $t9, X509_get_pubkey
                move    $s3, $a0
                move    $a0, $a1
                jalr    $t9 ; X509_get_pubkey
                move    $s2, $a1
                move    $s0, $v0
                beqz    $v0, loc_3C824
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ssl_cert_type
                move    $a0, $s2
                jalr    $t9 ; ssl_cert_type
                move    $a1, $v0
                bltz    $v0, loc_3C88C
                lw      $gp, 0x40+var_28($sp)
                sll     $s5, $v0, 4
                sll     $s4, $v0, 2
                subu    $v0, $s5, $s4
                addu    $s1, $v0, $s3
                lw      $a1, 0x24($s1)
                beqz    $a1, loc_3C748
                la      $t9, EVP_PKEY_copy_parameters
                jalr    $t9 ; EVP_PKEY_copy_parameters
                move    $a0, $s0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $a1, 0x24($s1)
                li      $v0, 6
                lw      $v1, 0($a1)
                beq     $v1, $v0, loc_3C86C
                lw      $gp, 0x40+var_28($sp)

loc_3C734:                               # CODE XREF: sub_3C684+200↓j
                la      $t9, X509_check_private_key
                jalr    $t9 ; X509_check_private_key
                move    $a0, $s2
                beqz    $v0, loc_3C7DC
                lw      $gp, 0x40+var_28($sp)

loc_3C748:                               # CODE XREF: sub_3C684+7C↑j
                                         # sub_3C684+1F8↓j
                la      $t9, EVP_PKEY_free
                subu    $s1, $s5, $s4
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_free
                addu    $s0, $s1, $s3
                lw      $a0, 0x20($s0)
                beqz    $a0, loc_3C778
                lw      $gp, 0x40+var_28($sp)

loc_3C768:                               # CODE XREF: sub_3C684+190↓j
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0x40+var_28($sp)

loc_3C778:                               # CODE XREF: sub_3C684+DC↑j
                la      $a3, loc_40000

loc_3C77C:                               # CODE XREF: sub_3C684+198↓j
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x1BD
                sw      $v0, 0x40+var_30($sp)
                addiu   $a3, (aSslRsaC - 0x40000)  # "ssl_rsa.c"
                addiu   $a0, $s2, 0x10
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 3
                addiu   $v1, $s1, 0x20  # ' '
                addu    $v1, $s3, $v1
                lw      $gp, 0x40+var_28($sp)
                li      $v0, 1
                sw      $s2, 0x20($s0)
                sw      $v1, 0($s3)
                sw      $zero, 4($s3)

loc_3C7B8:                               # CODE XREF: sub_3C684+238↓j
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_3C7DC:                               # CODE XREF: sub_3C684+BC↑j
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                lw      $a0, 0x24($s1)
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                sw      $zero, 0x24($s1)
                lw      $gp, 0x40+var_28($sp)
                subu    $s1, $s5, $s4
                la      $t9, EVP_PKEY_free
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_free
                addu    $s0, $s1, $s3
                lw      $a0, 0x20($s0)
                bnez    $a0, loc_3C768
                lw      $gp, 0x40+var_28($sp)
                b       loc_3C77C
                la      $a3, loc_40000
 # ---------------------------------------------------------------------------

loc_3C824:                               # CODE XREF: sub_3C684+48↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0xBF
                li      $a2, 0x10C
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_3C86C:                               # CODE XREF: sub_3C684+A8↑j
                la      $t9, RSA_flags
                jalr    $t9 ; RSA_flags
                lw      $a0, 0x14($a1)
                andi    $v0, 1
                bnez    $v0, loc_3C748
                lw      $gp, 0x40+var_28($sp)
                b       loc_3C734
                lw      $a1, 0x24($s1)
 # ---------------------------------------------------------------------------

loc_3C88C:                               # CODE XREF: sub_3C684+60↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xBF
                li      $a2, 0xF7
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                lw      $gp, 0x40+var_28($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s0
                lw      $gp, 0x40+var_28($sp)
                b       loc_3C7B8
                move    $v0, $zero
 # End of function sub_3C684


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_certificate
SSL_CTX_use_certificate:                 # CODE XREF: SSL_CTX_use_certificate_chain_file+B4↓p
                                         # SSL_CTX_use_certificate_ASN1+50↓p ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_certificate)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s1, $a1
                beqz    $a1, loc_3C960
                move    $s0, $a0
                la      $t9, ssl_cert_inst
                jalr    $t9 ; ssl_cert_inst
                addiu   $a0, 0xB0
                bnez    $v0, loc_3C93C
                lw      $gp, 0x30+var_18($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xAB
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3C93C:                               # CODE XREF: SSL_CTX_use_certificate+38↑j
                la      $t9, loc_40000
                lw      $a0, 0xB0($s0)
                move    $a1, $s1
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                addiu   $t9, (sub_3C684 - 0x40000)
                jr      $t9 ; sub_3C684
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3C960:                               # CODE XREF: SSL_CTX_use_certificate+24↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xAB
                li      $a2, 0x43  # 'C'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # End of function SSL_CTX_use_certificate


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_certificate_chain_file
SSL_CTX_use_certificate_chain_file:      # DATA XREF: LOAD:00001A48↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_certificate_chain_file)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s4, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, ERR_clear_error
                move    $s1, $a0
                jalr    $t9 ; ERR_clear_error
                move    $s0, $a1
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_s_file
                jalr    $t9 ; BIO_s_file
                nop
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s2, $v0
                beqz    $v0, loc_3CB3C
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $v0
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 3
                blez    $v0, loc_3CB84
                lw      $gp, 0x38+var_20($sp)
                la      $t9, PEM_read_bio_X509_AUX
                lw      $a2, 0x6C($s1)
                lw      $a3, 0x70($s1)
                move    $a0, $s2
                jalr    $t9 ; PEM_read_bio_X509_AUX
                move    $a1, $zero
                move    $s3, $v0
                beqz    $v0, loc_3CBAC
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_CTX_use_certificate
                move    $a0, $s1
                jalr    $t9 ; SSL_CTX_use_certificate
                move    $a1, $v0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, ERR_peek_error
                jalr    $t9 ; ERR_peek_error
                move    $s4, $v0
                beqz    $v0, loc_3CAB4
                lw      $gp, 0x38+var_20($sp)

loc_3CA6C:                               # CODE XREF: SSL_CTX_use_certificate_chain_file+254↓j
                                         # SSL_CTX_use_certificate_chain_file+264↓j
                move    $s4, $zero

loc_3CA70:                               # CODE XREF: SSL_CTX_use_certificate_chain_file+19C↓j
                                         # SSL_CTX_use_certificate_chain_file+274↓j
                la      $t9, X509_free

loc_3CA74:                               # CODE XREF: SSL_CTX_use_certificate_chain_file:loc_3CAB4↓j
                jalr    $t9 ; X509_free
                move    $a0, $s3
                lw      $gp, 0x38+var_20($sp)

loc_3CA80:                               # CODE XREF: SSL_CTX_use_certificate_chain_file+20C↓j
                                         # SSL_CTX_use_certificate_chain_file+234↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s2
                move    $v0, $s4
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3CAB4:                               # CODE XREF: SSL_CTX_use_certificate_chain_file+CC↑j
                beqz    $s4, loc_3CA74
                la      $t9, X509_free
                lw      $a0, 0x94($s1)
                beqz    $a0, loc_3CADC
                la      $a1, X509_free
                la      $t9, sk_pop_free
                jalr    $t9 ; sk_pop_free
                nop
                lw      $gp, 0x38+var_20($sp)
                sw      $zero, 0x94($s1)

loc_3CADC:                               # CODE XREF: SSL_CTX_use_certificate_chain_file+128↑j
                                         # SSL_CTX_use_certificate_chain_file+184↓j
                la      $t9, PEM_read_bio_X509
                lw      $a2, 0x6C($s1)
                lw      $a3, 0x70($s1)
                move    $a0, $s2
                jalr    $t9 ; PEM_read_bio_X509
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $a0, $s1
                li      $a1, 0xE
                move    $a2, $zero
                move    $s0, $v0
                move    $a3, $v0
                beqz    $v0, loc_3CBD4
                la      $t9, SSL_CTX_ctrl
                jalr    $t9 ; SSL_CTX_ctrl
                nop
                bnez    $v0, loc_3CADC
                lw      $gp, 0x38+var_20($sp)
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                move    $a0, $s0
                lw      $gp, 0x38+var_20($sp)
                b       loc_3CA70
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_3CB3C:                               # CODE XREF: SSL_CTX_use_certificate_chain_file+60↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                move    $s4, $zero
                li      $a0, 0x14
                li      $a1, 0xDC
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s4
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3CB84:                               # CODE XREF: SSL_CTX_use_certificate_chain_file+80↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xDC
                li      $a2, 2
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_3CA80
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_3CBAC:                               # CODE XREF: SSL_CTX_use_certificate_chain_file+A4↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xDC
                li      $a2, 9
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                b       loc_3CA80
                move    $s4, $zero
 # ---------------------------------------------------------------------------

loc_3CBD4:                               # CODE XREF: SSL_CTX_use_certificate_chain_file+174↑j
                la      $t9, ERR_peek_last_error
                jalr    $t9 ; ERR_peek_last_error
                nop
                move    $a0, $v0
                srl     $v1, $v0, 24
                li      $v0, 9
                bne     $v1, $v0, loc_3CA6C
                lw      $gp, 0x38+var_20($sp)
                andi    $v1, $a0, 0xFFF
                li      $v0, 0x6C  # 'l'
                bne     $v1, $v0, loc_3CA6C
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                b       loc_3CA70
                lw      $gp, 0x38+var_20($sp)
 # End of function SSL_CTX_use_certificate_chain_file


 # =============== S U B R O U T I N E =======================================


                .globl SSL_use_certificate
SSL_use_certificate:                     # CODE XREF: sub_C104+16C↑p
                                         # ssl3_send_client_certificate+1C0↑p ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_use_certificate)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s1, $a1
                beqz    $a1, loc_3CCB0
                move    $s0, $a0
                la      $t9, ssl_cert_inst
                jalr    $t9 ; ssl_cert_inst
                addiu   $a0, 0x98
                bnez    $v0, loc_3CC8C
                lw      $gp, 0x30+var_18($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xC6
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3CC8C:                               # CODE XREF: SSL_use_certificate+38↑j
                la      $t9, loc_40000
                lw      $a0, 0x98($s0)
                move    $a1, $s1
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                addiu   $t9, (sub_3C684 - 0x40000)
                jr      $t9 ; sub_3C684
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3CCB0:                               # CODE XREF: SSL_use_certificate+24↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xC6
                li      $a2, 0x43  # 'C'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # End of function SSL_use_certificate


 # =============== S U B R O U T I N E =======================================


sub_3CCE8:                               # CODE XREF: SSL_CTX_use_PrivateKey+94↓j
                                         # SSL_use_PrivateKey+94↓j ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_3CCE8)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                la      $t9, ssl_cert_type
                move    $s2, $a0
                move    $a0, $zero
                jalr    $t9 ; ssl_cert_type
                move    $s3, $a1
                bltz    $v0, loc_3CE98
                lw      $gp, 0x40+var_28($sp)
                sll     $s5, $v0, 4
                sll     $s4, $v0, 2
                subu    $v0, $s5, $s4
                addu    $s1, $v0, $s2
                lw      $a0, 0x20($s1)
                beqz    $a0, loc_3CDB8
                la      $t9, X509_get_pubkey
                jalr    $t9 ; X509_get_pubkey
                nop
                lw      $gp, 0x40+var_28($sp)
                la      $t9, EVP_PKEY_copy_parameters
                move    $a1, $s3
                move    $a0, $v0
                jalr    $t9 ; EVP_PKEY_copy_parameters
                move    $s0, $v0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                move    $a0, $s0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, ERR_clear_error
                jalr    $t9 ; ERR_clear_error
                nop
                lw      $v1, 0($s3)
                li      $v0, 6
                beq     $v1, $v0, loc_3CE3C
                lw      $gp, 0x40+var_28($sp)
                la      $t9, X509_check_private_key

loc_3CDA4:                               # CODE XREF: sub_3CCE8+16C↓j
                lw      $a0, 0x20($s1)
                jalr    $t9 ; X509_check_private_key
                move    $a1, $s3
                beqz    $v0, loc_3CE5C
                lw      $gp, 0x40+var_28($sp)

loc_3CDB8:                               # CODE XREF: sub_3CCE8+60↑j
                                         # sub_3CCE8+164↓j
                subu    $s0, $s5, $s4
                addu    $s1, $s0, $s2
                lw      $a0, 0x24($s1)
                beqz    $a0, loc_3CDD8
                la      $t9, EVP_PKEY_free
                jalr    $t9 ; EVP_PKEY_free
                nop
                lw      $gp, 0x40+var_28($sp)

loc_3CDD8:                               # CODE XREF: sub_3CCE8+DC↑j
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0xDB
                sw      $v0, 0x40+var_30($sp)
                addiu   $a0, $s3, 8
                addiu   $a3, (aSslRsaC - 0x40000)  # "ssl_rsa.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0xA
                addiu   $v1, $s0, 0x20  # ' '
                addu    $v1, $s2, $v1
                lw      $gp, 0x40+var_28($sp)
                lw      $ra, 0x40+var_8($sp)
                sw      $s3, 0x24($s1)
                sw      $v1, 0($s2)
                sw      $zero, 4($s2)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_3CE3C:                               # CODE XREF: sub_3CCE8+B0↑j
                la      $t9, RSA_flags
                jalr    $t9 ; RSA_flags
                lw      $a0, 0x14($s3)
                andi    $v0, 1
                bnez    $v0, loc_3CDB8
                lw      $gp, 0x40+var_28($sp)
                b       loc_3CDA4
                la      $t9, X509_check_private_key
 # ---------------------------------------------------------------------------

loc_3CE5C:                               # CODE XREF: sub_3CCE8+C8↑j
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                lw      $a0, 0x20($s1)
                lw      $gp, 0x40+var_28($sp)
                lw      $ra, 0x40+var_8($sp)
                sw      $zero, 0x20($s1)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_3CE98:                               # CODE XREF: sub_3CCE8+44↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x14
                li      $a1, 0xC1
                li      $a2, 0xF7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x40
 # End of function sub_3CCE8


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_PrivateKey
SSL_CTX_use_PrivateKey:                  # CODE XREF: SSL_CTX_use_PrivateKey_ASN1+4C↓p
                                         # SSL_CTX_use_PrivateKey_file+104↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_PrivateKey)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s1, $a1
                beqz    $a1, loc_3CF7C
                move    $s0, $a0
                la      $t9, ssl_cert_inst
                jalr    $t9 ; ssl_cert_inst
                addiu   $a0, 0xB0
                bnez    $v0, loc_3CF58
                lw      $gp, 0x30+var_18($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xAE
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3CF58:                               # CODE XREF: SSL_CTX_use_PrivateKey+38↑j
                la      $t9, loc_40000
                lw      $a0, 0xB0($s0)
                move    $a1, $s1
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                addiu   $t9, (sub_3CCE8 - 0x40000)
                jr      $t9 ; sub_3CCE8
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3CF7C:                               # CODE XREF: SSL_CTX_use_PrivateKey+24↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xAE
                li      $a2, 0x43  # 'C'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # End of function SSL_CTX_use_PrivateKey


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_PrivateKey_ASN1
SSL_CTX_use_PrivateKey_ASN1:             # DATA XREF: LOAD:000017D8↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_PrivateKey_ASN1)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, d2i_PrivateKey
                sw      $a2, 0x38+var_18($sp)
                move    $s1, $a1
                addiu   $a2, $sp, 0x38+var_18
                jalr    $t9 ; d2i_PrivateKey
                move    $a1, $zero
                move    $s0, $v0
                beqz    $v0, loc_3D038
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_CTX_use_PrivateKey
                move    $a0, $s1
                jalr    $t9 ; SSL_CTX_use_PrivateKey
                move    $a1, $v0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, EVP_PKEY_free
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_free
                move    $s0, $v0
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3D038:                               # CODE XREF: SSL_CTX_use_PrivateKey_ASN1+3C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xAF
                li      $a2, 0xD
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # End of function SSL_CTX_use_PrivateKey_ASN1


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_PrivateKey_file
SSL_CTX_use_PrivateKey_file:             # DATA XREF: LOAD:00001E88↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_PrivateKey_file)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_s_file
                move    $s3, $a0
                move    $s0, $a1
                jalr    $t9 ; BIO_s_file
                move    $s2, $a2
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_3D198
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $v0
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 3
                blez    $v0, loc_3D204
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 1
                beq     $s2, $v0, loc_3D1DC
                li      $v0, 2
                beq     $s2, $v0, loc_3D14C
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xB0
                li      $a2, 0x7C  # '|'

loc_3D10C:                               # CODE XREF: SSL_CTX_use_PrivateKey_file+1A4↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $zero

loc_3D11C:                               # CODE XREF: SSL_CTX_use_PrivateKey_file+120↓j
                                         # SSL_CTX_use_PrivateKey_file+1C4↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3D14C:                               # CODE XREF: SSL_CTX_use_PrivateKey_file+84↑j
                la      $t9, d2i_PrivateKey_bio
                move    $a0, $s1
                jalr    $t9 ; d2i_PrivateKey_bio
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                li      $a2, 0xD

loc_3D168:                               # CODE XREF: SSL_CTX_use_PrivateKey_file+18C↓j
                beqz    $s0, loc_3D21C
                la      $t9, SSL_CTX_use_PrivateKey
                move    $a1, $s0
                jalr    $t9 ; SSL_CTX_use_PrivateKey
                move    $a0, $s3
                lw      $gp, 0x38+var_20($sp)
                la      $t9, EVP_PKEY_free
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_free
                move    $s0, $v0
                b       loc_3D11C
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3D198:                               # CODE XREF: SSL_CTX_use_PrivateKey_file+50↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                move    $s0, $zero
                li      $a0, 0x14
                li      $a1, 0xB0
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3D1DC:                               # CODE XREF: SSL_CTX_use_PrivateKey_file+7C↑j
                la      $t9, PEM_read_bio_PrivateKey
                lw      $a2, 0x6C($s3)
                lw      $a3, 0x70($s3)
                move    $a0, $s1
                jalr    $t9 ; PEM_read_bio_PrivateKey
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                b       loc_3D168
                li      $a2, 9
 # ---------------------------------------------------------------------------

loc_3D204:                               # CODE XREF: SSL_CTX_use_PrivateKey_file+70↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xB0
                li      $a2, 2
                b       loc_3D10C
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_3D21C:                               # CODE XREF: SSL_CTX_use_PrivateKey_file:loc_3D168↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xB0
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3D11C
                lw      $gp, 0x38+var_20($sp)
 # End of function SSL_CTX_use_PrivateKey_file


 # =============== S U B R O U T I N E =======================================


                .globl SSL_use_PrivateKey
SSL_use_PrivateKey:                      # CODE XREF: sub_C104+42C↑p
                                         # ssl3_send_client_certificate+1E8↑p ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_use_PrivateKey)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s1, $a1
                beqz    $a1, loc_3D2D8
                move    $s0, $a0
                la      $t9, ssl_cert_inst
                jalr    $t9 ; ssl_cert_inst
                addiu   $a0, 0x98
                bnez    $v0, loc_3D2B4
                lw      $gp, 0x30+var_18($sp)
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xC9
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3D2B4:                               # CODE XREF: SSL_use_PrivateKey+38↑j
                la      $t9, loc_40000
                lw      $a0, 0x98($s0)
                move    $a1, $s1
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                addiu   $t9, (sub_3CCE8 - 0x40000)
                jr      $t9 ; sub_3CCE8
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3D2D8:                               # CODE XREF: SSL_use_PrivateKey+24↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xC9
                li      $a2, 0x43  # 'C'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x30
 # End of function SSL_use_PrivateKey


 # =============== S U B R O U T I N E =======================================


                .globl SSL_use_PrivateKey_ASN1
SSL_use_PrivateKey_ASN1:                 # DATA XREF: LOAD:00002238↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_use_PrivateKey_ASN1)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, d2i_PrivateKey
                sw      $a2, 0x38+var_18($sp)
                move    $s1, $a1
                addiu   $a2, $sp, 0x38+var_18
                jalr    $t9 ; d2i_PrivateKey
                move    $a1, $zero
                move    $s0, $v0
                beqz    $v0, loc_3D394
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_use_PrivateKey
                move    $a0, $s1
                jalr    $t9 ; SSL_use_PrivateKey
                move    $a1, $v0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, EVP_PKEY_free
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_free
                move    $s0, $v0
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3D394:                               # CODE XREF: SSL_use_PrivateKey_ASN1+3C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xCA
                li      $a2, 0xD
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # End of function SSL_use_PrivateKey_ASN1


 # =============== S U B R O U T I N E =======================================


                .globl SSL_use_PrivateKey_file
SSL_use_PrivateKey_file:                 # DATA XREF: LOAD:00001A78↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_use_PrivateKey_file)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_s_file
                move    $s3, $a0
                move    $s0, $a1
                jalr    $t9 ; BIO_s_file
                move    $s2, $a2
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_3D4F4
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $v0
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 3
                blez    $v0, loc_3D564
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 1
                beq     $s2, $v0, loc_3D538
                li      $v0, 2
                beq     $s2, $v0, loc_3D4A8
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xCB
                li      $a2, 0x7C  # '|'

loc_3D468:                               # CODE XREF: SSL_use_PrivateKey_file+1A8↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $zero

loc_3D478:                               # CODE XREF: SSL_use_PrivateKey_file+120↓j
                                         # SSL_use_PrivateKey_file+1C8↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3D4A8:                               # CODE XREF: SSL_use_PrivateKey_file+84↑j
                la      $t9, d2i_PrivateKey_bio
                move    $a0, $s1
                jalr    $t9 ; d2i_PrivateKey_bio
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                li      $a2, 0xD

loc_3D4C4:                               # CODE XREF: SSL_use_PrivateKey_file+190↓j
                beqz    $s0, loc_3D57C
                la      $t9, SSL_use_PrivateKey
                move    $a1, $s0
                jalr    $t9 ; SSL_use_PrivateKey
                move    $a0, $s3
                lw      $gp, 0x38+var_20($sp)
                la      $t9, EVP_PKEY_free
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_free
                move    $s0, $v0
                b       loc_3D478
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3D4F4:                               # CODE XREF: SSL_use_PrivateKey_file+50↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                move    $s0, $zero
                li      $a0, 0x14
                li      $a1, 0xCB
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3D538:                               # CODE XREF: SSL_use_PrivateKey_file+7C↑j
                lw      $v0, 0xDC($s3)
                la      $t9, PEM_read_bio_PrivateKey
                lw      $a2, 0x6C($v0)
                lw      $a3, 0x70($v0)
                move    $a0, $s1
                jalr    $t9 ; PEM_read_bio_PrivateKey
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                b       loc_3D4C4
                li      $a2, 9
 # ---------------------------------------------------------------------------

loc_3D564:                               # CODE XREF: SSL_use_PrivateKey_file+70↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xCB
                li      $a2, 2
                b       loc_3D468
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_3D57C:                               # CODE XREF: SSL_use_PrivateKey_file:loc_3D4C4↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xCB
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3D478
                lw      $gp, 0x38+var_20($sp)
 # End of function SSL_use_PrivateKey_file


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_RSAPrivateKey
SSL_CTX_use_RSAPrivateKey:               # CODE XREF: SSL_CTX_use_RSAPrivateKey_ASN1+4C↓p
                                         # SSL_CTX_use_RSAPrivateKey_file+10C↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_RSAPrivateKey)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s1, $a1
                beqz    $a1, loc_3D6A8
                move    $s2, $a0
                la      $t9, ssl_cert_inst
                jalr    $t9 ; ssl_cert_inst
                addiu   $a0, 0xB0
                beqz    $v0, loc_3D668
                lw      $gp, 0x30+var_18($sp)
                la      $t9, EVP_PKEY_new
                jalr    $t9 ; EVP_PKEY_new
                nop
                move    $s0, $v0
                beqz    $v0, loc_3D6C0
                lw      $gp, 0x30+var_18($sp)
                la      $t9, RSA_up_ref
                jalr    $t9 ; RSA_up_ref
                move    $a0, $s1
                lw      $gp, 0x30+var_18($sp)
                la      $t9, EVP_PKEY_assign
                move    $a2, $s1
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_assign
                li      $a1, 6
                lw      $gp, 0x30+var_18($sp)
                lw      $a0, 0xB0($s2)
                la      $t9, loc_40000
                addiu   $t9, (sub_3CCE8 - 0x40000)
                jalr    $t9 ; sub_3CCE8
                move    $a1, $s0
                lw      $gp, 0x30+var_18($sp)
                la      $t9, EVP_PKEY_free
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_free
                move    $s0, $v0
                lw      $gp, 0x30+var_18($sp)

loc_3D64C:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey+140↓j
                move    $v0, $s0
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3D668:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey+3C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xB1
                li      $a2, 0x41  # 'A'

loc_3D67C:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey+11C↓j
                move    $s0, $zero
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3D6A8:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey+28↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xB1
                li      $a2, 0x43  # 'C'
                b       loc_3D67C
                sw      $zero, 0x30+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3D6C0:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey+54↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xB1
                li      $a2, 6
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3D64C
                lw      $gp, 0x30+var_18($sp)
 # End of function SSL_CTX_use_RSAPrivateKey


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_RSAPrivateKey_ASN1
SSL_CTX_use_RSAPrivateKey_ASN1:          # DATA XREF: LOAD:00002078↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_RSAPrivateKey_ASN1)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, d2i_RSAPrivateKey
                sw      $a1, 0x38+var_18($sp)
                move    $s1, $a0
                addiu   $a1, $sp, 0x38+var_18
                jalr    $t9 ; d2i_RSAPrivateKey
                move    $a0, $zero
                move    $s0, $v0
                beqz    $v0, loc_3D768
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_CTX_use_RSAPrivateKey
                move    $a0, $s1
                jalr    $t9 ; SSL_CTX_use_RSAPrivateKey
                move    $a1, $v0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, RSA_free
                move    $a0, $s0
                jalr    $t9 ; RSA_free
                move    $s0, $v0
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3D768:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey_ASN1+3C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xB2
                li      $a2, 0xD
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # End of function SSL_CTX_use_RSAPrivateKey_ASN1


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_RSAPrivateKey_file
SSL_CTX_use_RSAPrivateKey_file:          # DATA XREF: LOAD:00001B58↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_RSAPrivateKey_file)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_s_file
                move    $s3, $a0
                move    $s0, $a1
                jalr    $t9 ; BIO_s_file
                move    $s2, $a2
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_3D8D0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $v0
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 3
                blez    $v0, loc_3D934
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 2
                beq     $s2, $v0, loc_3D914
                li      $v0, 1
                beq     $s2, $v0, loc_3D87C
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xB3
                li      $a2, 0x7C  # '|'

loc_3D83C:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey_file+1A4↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $zero

loc_3D84C:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey_file+128↓j
                                         # SSL_CTX_use_RSAPrivateKey_file+1C4↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3D87C:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey_file+84↑j
                la      $t9, PEM_read_bio_RSAPrivateKey
                lw      $a2, 0x6C($s3)
                lw      $a3, 0x70($s3)
                move    $a0, $s1
                jalr    $t9 ; PEM_read_bio_RSAPrivateKey
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                li      $a2, 9

loc_3D8A0:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey_file+18C↓j
                beqz    $s0, loc_3D94C
                la      $t9, SSL_CTX_use_RSAPrivateKey
                move    $a1, $s0
                jalr    $t9 ; SSL_CTX_use_RSAPrivateKey
                move    $a0, $s3
                lw      $gp, 0x38+var_20($sp)
                la      $t9, RSA_free
                move    $a0, $s0
                jalr    $t9 ; RSA_free
                move    $s0, $v0
                b       loc_3D84C
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3D8D0:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey_file+50↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                move    $s0, $zero
                li      $a0, 0x14
                li      $a1, 0xB3
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3D914:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey_file+7C↑j
                la      $t9, d2i_RSAPrivateKey_bio
                move    $a0, $s1
                jalr    $t9 ; d2i_RSAPrivateKey_bio
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                b       loc_3D8A0
                li      $a2, 0xD
 # ---------------------------------------------------------------------------

loc_3D934:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey_file+70↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xB3
                li      $a2, 2
                b       loc_3D83C
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_3D94C:                               # CODE XREF: SSL_CTX_use_RSAPrivateKey_file:loc_3D8A0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xB3
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3D84C
                lw      $gp, 0x38+var_20($sp)
 # End of function SSL_CTX_use_RSAPrivateKey_file


 # =============== S U B R O U T I N E =======================================


                .globl SSL_use_RSAPrivateKey
SSL_use_RSAPrivateKey:                   # CODE XREF: SSL_use_RSAPrivateKey_ASN1+4C↓p
                                         # SSL_use_RSAPrivateKey_file+110↓p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_use_RSAPrivateKey)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s1, $a1
                beqz    $a1, loc_3DA78
                move    $s2, $a0
                la      $t9, ssl_cert_inst
                jalr    $t9 ; ssl_cert_inst
                addiu   $a0, 0x98
                beqz    $v0, loc_3DA38
                lw      $gp, 0x30+var_18($sp)
                la      $t9, EVP_PKEY_new
                jalr    $t9 ; EVP_PKEY_new
                nop
                move    $s0, $v0
                beqz    $v0, loc_3DA90
                lw      $gp, 0x30+var_18($sp)
                la      $t9, RSA_up_ref
                jalr    $t9 ; RSA_up_ref
                move    $a0, $s1
                lw      $gp, 0x30+var_18($sp)
                la      $t9, EVP_PKEY_assign
                move    $a2, $s1
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_assign
                li      $a1, 6
                lw      $gp, 0x30+var_18($sp)
                lw      $a0, 0x98($s2)
                la      $t9, loc_40000
                addiu   $t9, (sub_3CCE8 - 0x40000)
                jalr    $t9 ; sub_3CCE8
                move    $a1, $s0
                lw      $gp, 0x30+var_18($sp)
                la      $t9, EVP_PKEY_free
                move    $a0, $s0
                jalr    $t9 ; EVP_PKEY_free
                move    $s0, $v0
                lw      $gp, 0x30+var_18($sp)

loc_3DA1C:                               # CODE XREF: SSL_use_RSAPrivateKey+140↓j
                move    $v0, $s0
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3DA38:                               # CODE XREF: SSL_use_RSAPrivateKey+3C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xCC
                li      $a2, 0x41  # 'A'

loc_3DA4C:                               # CODE XREF: SSL_use_RSAPrivateKey+11C↓j
                move    $s0, $zero
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3DA78:                               # CODE XREF: SSL_use_RSAPrivateKey+28↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xCC
                li      $a2, 0x43  # 'C'
                b       loc_3DA4C
                sw      $zero, 0x30+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3DA90:                               # CODE XREF: SSL_use_RSAPrivateKey+54↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xCC
                li      $a2, 6
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3DA1C
                lw      $gp, 0x30+var_18($sp)
 # End of function SSL_use_RSAPrivateKey


 # =============== S U B R O U T I N E =======================================


                .globl SSL_use_RSAPrivateKey_ASN1
SSL_use_RSAPrivateKey_ASN1:              # DATA XREF: LOAD:00001C38↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_use_RSAPrivateKey_ASN1)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s1, 0x38+var_C($sp)
                sw      $s0, 0x38+var_10($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, d2i_RSAPrivateKey
                sw      $a1, 0x38+var_18($sp)
                move    $s1, $a0
                addiu   $a1, $sp, 0x38+var_18
                jalr    $t9 ; d2i_RSAPrivateKey
                move    $a0, $zero
                move    $s0, $v0
                beqz    $v0, loc_3DB38
                lw      $gp, 0x38+var_20($sp)
                la      $t9, SSL_use_RSAPrivateKey
                move    $a0, $s1
                jalr    $t9 ; SSL_use_RSAPrivateKey
                move    $a1, $v0
                lw      $gp, 0x38+var_20($sp)
                la      $t9, RSA_free
                move    $a0, $s0
                jalr    $t9 ; RSA_free
                move    $s0, $v0
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3DB38:                               # CODE XREF: SSL_use_RSAPrivateKey_ASN1+3C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xCD
                li      $a2, 0xD
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s1, 0x38+var_C($sp)
                lw      $s0, 0x38+var_10($sp)
                jr      $ra
                addiu   $sp, 0x38
 # End of function SSL_use_RSAPrivateKey_ASN1


 # =============== S U B R O U T I N E =======================================


                .globl SSL_use_RSAPrivateKey_file
SSL_use_RSAPrivateKey_file:              # DATA XREF: LOAD:00002198↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_use_RSAPrivateKey_file)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_s_file
                move    $s3, $a0
                move    $s0, $a1
                jalr    $t9 ; BIO_s_file
                move    $s2, $a2
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_3DCA4
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $v0
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 3
                blez    $v0, loc_3DD08
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 2
                beq     $s2, $v0, loc_3DCE8
                li      $v0, 1
                beq     $s2, $v0, loc_3DC4C
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xCE
                li      $a2, 0x7C  # '|'

loc_3DC0C:                               # CODE XREF: SSL_use_RSAPrivateKey_file+1A8↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $zero

loc_3DC1C:                               # CODE XREF: SSL_use_RSAPrivateKey_file+12C↓j
                                         # SSL_use_RSAPrivateKey_file+1C8↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3DC4C:                               # CODE XREF: SSL_use_RSAPrivateKey_file+84↑j
                lw      $v0, 0xDC($s3)
                la      $t9, PEM_read_bio_RSAPrivateKey
                lw      $a2, 0x6C($v0)
                lw      $a3, 0x70($v0)
                move    $a0, $s1
                jalr    $t9 ; PEM_read_bio_RSAPrivateKey
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                li      $a2, 9

loc_3DC74:                               # CODE XREF: SSL_use_RSAPrivateKey_file+190↓j
                beqz    $s0, loc_3DD20
                la      $t9, SSL_use_RSAPrivateKey
                move    $a1, $s0
                jalr    $t9 ; SSL_use_RSAPrivateKey
                move    $a0, $s3
                lw      $gp, 0x38+var_20($sp)
                la      $t9, RSA_free
                move    $a0, $s0
                jalr    $t9 ; RSA_free
                move    $s0, $v0
                b       loc_3DC1C
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3DCA4:                               # CODE XREF: SSL_use_RSAPrivateKey_file+50↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                move    $s0, $zero
                li      $a0, 0x14
                li      $a1, 0xCE
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3DCE8:                               # CODE XREF: SSL_use_RSAPrivateKey_file+7C↑j
                la      $t9, d2i_RSAPrivateKey_bio
                move    $a0, $s1
                jalr    $t9 ; d2i_RSAPrivateKey_bio
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                b       loc_3DC74
                li      $a2, 0xD
 # ---------------------------------------------------------------------------

loc_3DD08:                               # CODE XREF: SSL_use_RSAPrivateKey_file+70↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0xCE
                li      $a2, 2
                b       loc_3DC0C
                sw      $zero, 0x38+var_28($sp)
 # ---------------------------------------------------------------------------

loc_3DD20:                               # CODE XREF: SSL_use_RSAPrivateKey_file:loc_3DC74↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xCE
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3DC1C
                lw      $gp, 0x38+var_20($sp)
 # End of function SSL_use_RSAPrivateKey_file


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_certificate_ASN1
SSL_CTX_use_certificate_ASN1:            # DATA XREF: LOAD:00001868↑o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_8           =  8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_certificate_ASN1)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $t9, d2i_X509
                sw      $a2, 0x30+arg_8($sp)
                move    $s1, $a0
                move    $a2, $a1
                move    $a0, $zero
                jalr    $t9 ; d2i_X509
                addiu   $a1, $sp, 0x30+arg_8
                move    $s0, $v0
                beqz    $v0, loc_3DDC8
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_CTX_use_certificate
                move    $a0, $s1
                jalr    $t9 ; SSL_CTX_use_certificate
                move    $a1, $v0
                lw      $gp, 0x30+var_18($sp)
                la      $t9, X509_free
                move    $a0, $s0
                jalr    $t9 ; X509_free
                move    $s0, $v0
                move    $v0, $s0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3DDC8:                               # CODE XREF: SSL_CTX_use_certificate_ASN1+40↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xAC
                li      $a2, 0xD
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # End of function SSL_CTX_use_certificate_ASN1


 # =============== S U B R O U T I N E =======================================


                .globl SSL_use_certificate_ASN1
SSL_use_certificate_ASN1:                # DATA XREF: LOAD:00001CB8↑o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_4           =  4

                la      $gp, (off_5A360+0x7FF0 - SSL_use_certificate_ASN1)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $t9, d2i_X509
                sw      $a1, 0x30+arg_4($sp)
                move    $s1, $a0
                addiu   $a1, $sp, 0x30+arg_4
                jalr    $t9 ; d2i_X509
                move    $a0, $zero
                move    $s0, $v0
                beqz    $v0, loc_3DE84
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_use_certificate
                move    $a0, $s1
                jalr    $t9 ; SSL_use_certificate
                move    $a1, $v0
                lw      $gp, 0x30+var_18($sp)
                la      $t9, X509_free
                move    $a0, $s0
                jalr    $t9 ; X509_free
                move    $s0, $v0
                move    $v0, $s0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_3DE84:                               # CODE XREF: SSL_use_certificate_ASN1+3C↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xC7
                li      $a2, 0xD
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # End of function SSL_use_certificate_ASN1


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_use_certificate_file
SSL_CTX_use_certificate_file:            # DATA XREF: LOAD:00001ED8↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_use_certificate_file)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_s_file
                move    $s3, $a0
                move    $s0, $a1
                jalr    $t9 ; BIO_s_file
                move    $s2, $a2
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_3DFEC
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $v0
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 3
                blez    $v0, loc_3E050
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 2
                beq     $s2, $v0, loc_3E030
                li      $v0, 1
                beq     $s2, $v0, loc_3DF98
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xAD
                li      $a2, 0x7C  # '|'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)

loc_3DF64:                               # CODE XREF: SSL_CTX_use_certificate_file+1B0↓j
                                         # SSL_CTX_use_certificate_file+1D0↓j
                move    $s0, $zero

loc_3DF68:                               # CODE XREF: SSL_CTX_use_certificate_file+128↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3DF98:                               # CODE XREF: SSL_CTX_use_certificate_file+84↑j
                la      $t9, PEM_read_bio_X509
                lw      $a2, 0x6C($s3)
                lw      $a3, 0x70($s3)
                move    $a0, $s1
                jalr    $t9 ; PEM_read_bio_X509
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                li      $a2, 9

loc_3DFBC:                               # CODE XREF: SSL_CTX_use_certificate_file+18C↓j
                beqz    $s0, loc_3E074
                la      $t9, SSL_CTX_use_certificate
                move    $a1, $s0
                jalr    $t9 ; SSL_CTX_use_certificate
                move    $a0, $s3
                lw      $gp, 0x38+var_20($sp)
                la      $t9, X509_free
                move    $a0, $s0
                jalr    $t9 ; X509_free
                move    $s0, $v0
                b       loc_3DF68
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3DFEC:                               # CODE XREF: SSL_CTX_use_certificate_file+50↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                move    $s0, $zero
                li      $a0, 0x14
                li      $a1, 0xAD
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3E030:                               # CODE XREF: SSL_CTX_use_certificate_file+7C↑j
                la      $t9, d2i_X509_bio
                move    $a0, $s1
                jalr    $t9 ; d2i_X509_bio
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                b       loc_3DFBC
                li      $a2, 0xD
 # ---------------------------------------------------------------------------

loc_3E050:                               # CODE XREF: SSL_CTX_use_certificate_file+70↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xAD
                li      $a2, 2
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3DF64
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3E074:                               # CODE XREF: SSL_CTX_use_certificate_file:loc_3DFBC↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xAD
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3DF64
                lw      $gp, 0x38+var_20($sp)
 # End of function SSL_CTX_use_certificate_file


 # =============== S U B R O U T I N E =======================================


                .globl SSL_use_certificate_file
SSL_use_certificate_file:                # DATA XREF: LOAD:00002168↑o

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_use_certificate_file)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_s_file
                move    $s3, $a0
                move    $s0, $a1
                jalr    $t9 ; BIO_s_file
                move    $s2, $a2
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_3E1C8
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $v0
                li      $a1, 0x6C  # 'l'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 3
                blez    $v0, loc_3E22C
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 2
                beq     $s2, $v0, loc_3E20C
                li      $v0, 1
                beq     $s2, $v0, loc_3E170
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xC8
                li      $a2, 0x7C  # '|'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x38+var_20($sp)

loc_3E13C:                               # CODE XREF: SSL_use_certificate_file+1B4↓j
                                         # SSL_use_certificate_file+1D4↓j
                move    $s0, $zero

loc_3E140:                               # CODE XREF: SSL_use_certificate_file+12C↓j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3E170:                               # CODE XREF: SSL_use_certificate_file+84↑j
                lw      $v0, 0xDC($s3)
                la      $t9, PEM_read_bio_X509
                lw      $a2, 0x6C($v0)
                lw      $a3, 0x70($v0)
                move    $a0, $s1
                jalr    $t9 ; PEM_read_bio_X509
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                li      $a2, 9

loc_3E198:                               # CODE XREF: SSL_use_certificate_file+190↓j
                beqz    $s0, loc_3E250
                la      $t9, SSL_use_certificate
                move    $a1, $s0
                jalr    $t9 ; SSL_use_certificate
                move    $a0, $s3
                lw      $gp, 0x38+var_20($sp)
                la      $t9, X509_free
                move    $a0, $s0
                jalr    $t9 ; X509_free
                move    $s0, $v0
                b       loc_3E140
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3E1C8:                               # CODE XREF: SSL_use_certificate_file+50↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                move    $s0, $zero
                li      $a0, 0x14
                li      $a1, 0xC8
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_3E20C:                               # CODE XREF: SSL_use_certificate_file+7C↑j
                la      $t9, d2i_X509_bio
                move    $a0, $s1
                jalr    $t9 ; d2i_X509_bio
                move    $a1, $zero
                lw      $gp, 0x38+var_20($sp)
                move    $s0, $v0
                b       loc_3E198
                li      $a2, 0xD
 # ---------------------------------------------------------------------------

loc_3E22C:                               # CODE XREF: SSL_use_certificate_file+70↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xC8
                li      $a2, 2
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3E13C
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_3E250:                               # CODE XREF: SSL_use_certificate_file:loc_3E198↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0xC8
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_3E13C
                lw      $gp, 0x38+var_20($sp)
 # End of function SSL_use_certificate_file


 # =============== S U B R O U T I N E =======================================


                .globl d2i_SSL_SESSION
d2i_SSL_SESSION:                         # CODE XREF: ssl3_send_newsession_ticket+110↑p
                                         # tls1_process_ticket+3C4↑p
                                         # DATA XREF: ...

var_98          = -0x98
var_90          = -0x90
var_88          = -0x88
var_84          = -0x84
var_80          = -0x80
var_7C          = -0x7C
var_78          = -0x78
var_74          = -0x74
var_6C          = -0x6C
var_64          = -0x64
var_5C          = -0x5C
var_54          = -0x54
var_4C          = -0x4C
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_8           =  8

                la      $gp, (off_5A360+0x7FF0 - d2i_SSL_SESSION)
                addu    $gp, $t9
                addiu   $sp, -0xA8
                sw      $ra, 0xA8+var_8($sp)
                sw      $s7, 0xA8+var_C($sp)
                sw      $s6, 0xA8+var_10($sp)
                sw      $s5, 0xA8+var_14($sp)
                sw      $s4, 0xA8+var_18($sp)
                sw      $s3, 0xA8+var_1C($sp)
                sw      $s2, 0xA8+var_20($sp)
                sw      $s1, 0xA8+var_24($sp)
                sw      $s0, 0xA8+var_28($sp)
                sw      $gp, 0xA8+var_90($sp)
                move    $s4, $a1
                lw      $a1, 0($a1)
                li      $v0, 0x3A  # ':'
                move    $s3, $a0
                sw      $a2, 0xA8+arg_8($sp)
                sw      $v0, 0xA8+var_4C($sp)
                sw      $s4, 0xA8+var_30($sp)
                beqz    $a0, loc_3E4A4
                sw      $a1, 0xA8+var_34($sp)
                lw      $s1, 0($a0)
                beqz    $s1, loc_3E4A8
                la      $t9, SSL_SESSION_new

loc_3E2D8:                               # CODE XREF: d2i_SSL_SESSION+24C↓j
                lw      $a0, 0xA8+arg_8($sp)
                addiu   $v0, $sp, 0xA8+var_74
                addiu   $v1, $sp, 0xA8+var_64
                sw      $v0, 0xA8+var_88($sp)
                sw      $v1, 0xA8+var_84($sp)
                bnez    $a0, loc_3E470
                sw      $a1, 0xA8+var_54($sp)
                la      $t9, asn1_GetSequence
                move    $v0, $zero
                addiu   $s2, $sp, 0xA8+var_54
                sw      $v0, 0xA8+var_38($sp)
                move    $a0, $s2
                jalr    $t9 ; asn1_GetSequence
                addiu   $a1, $sp, 0xA8+arg_8
                beqz    $v0, loc_3E494
                lw      $gp, 0xA8+var_90($sp)

loc_3E318:                               # CODE XREF: d2i_SSL_SESSION+21C↓j
                lw      $v0, 0xA8+var_54($sp)
                la      $t9, d2i_ASN1_INTEGER
                addiu   $s5, $sp, 0xA8+var_88
                lw      $a2, 0xA8+var_3C($sp)
                sw      $v0, 0xA8+var_34($sp)
                sw      $zero, 0xA8+var_6C($sp)
                sw      $zero, 0xA8+var_74($sp)
                move    $a0, $s5
                jalr    $t9 ; d2i_ASN1_INTEGER
                move    $a1, $s2
                beqz    $v0, loc_3E568
                lw      $gp, 0xA8+var_90($sp)
                lw      $a3, 0xA8+var_54($sp)
                lw      $v0, 0xA8+var_34($sp)
                lw      $a2, 0xA8+var_3C($sp)
                subu    $v0, $a3, $v0
                lw      $a0, 0xA8+var_6C($sp)
                subu    $a2, $v0
                beqz    $a0, loc_3E388
                sw      $a2, 0xA8+var_3C($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0xA8+var_90($sp)
                lw      $a3, 0xA8+var_54($sp)
                lw      $a2, 0xA8+var_3C($sp)
                sw      $zero, 0xA8+var_6C($sp)
                sw      $zero, 0xA8+var_74($sp)

loc_3E388:                               # CODE XREF: d2i_SSL_SESSION+F0↑j
                la      $t9, d2i_ASN1_INTEGER
                sw      $a3, 0xA8+var_34($sp)
                move    $a0, $s5
                jalr    $t9 ; d2i_ASN1_INTEGER
                move    $a1, $s2
                beqz    $v0, loc_3E4C4
                lw      $gp, 0xA8+var_90($sp)
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $a0, 0xA8+var_3C($sp)
                subu    $v0, $v1
                subu    $a2, $a0, $v0
                la      $t9, ASN1_INTEGER_get
                lw      $a0, 0xA8+var_88($sp)
                jalr    $t9 ; ASN1_INTEGER_get
                sw      $a2, 0xA8+var_3C($sp)
                lw      $a0, 0xA8+var_6C($sp)
                lw      $gp, 0xA8+var_90($sp)
                move    $s0, $v0
                beqz    $a0, loc_3E3F4
                sw      $v0, 0($s1)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0xA8+var_90($sp)
                sw      $zero, 0xA8+var_6C($sp)
                sw      $zero, 0xA8+var_74($sp)

loc_3E3F4:                               # CODE XREF: d2i_SSL_SESSION+164↑j
                lw      $v0, 0xA8+var_54($sp)
                la      $t9, d2i_ASN1_OCTET_STRING
                addiu   $s6, $sp, 0xA8+var_84
                lw      $a2, 0xA8+var_3C($sp)
                sw      $v0, 0xA8+var_34($sp)
                sw      $zero, 0xA8+var_5C($sp)
                sw      $zero, 0xA8+var_64($sp)
                move    $a0, $s6
                jalr    $t9 ; d2i_ASN1_OCTET_STRING
                move    $a1, $s2
                beqz    $v0, loc_3E958
                lw      $gp, 0xA8+var_90($sp)
                lw      $a3, 0xA8+var_54($sp)
                lw      $v0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a3, $v0
                subu    $a2, $v1, $v0
                li      $v1, 2
                beq     $s0, $v1, loc_3E578
                sw      $a2, 0xA8+var_3C($sp)
                sra     $v0, $s0, 8
                slti    $v0, 3
                bnez    $v0, loc_3E55C
                li      $v0, 0xFE
                lw      $v0, 0xA8+var_64($sp)
                beq     $v0, $v1, loc_3EAD8
                lw      $v1, 0xA8+var_5C($sp)
                li      $v0, 0x89

loc_3E464:                               # CODE XREF: d2i_SSL_SESSION+310↓j
                move    $a2, $v0
                b       loc_3E4D0
                sw      $v0, 0xA8+var_4C($sp)
 # ---------------------------------------------------------------------------

loc_3E470:                               # CODE XREF: d2i_SSL_SESSION+7C↑j
                addu    $v0, $a1, $a0
                la      $t9, asn1_GetSequence
                addiu   $s2, $sp, 0xA8+var_54
                sw      $v0, 0xA8+var_38($sp)
                move    $a0, $s2
                jalr    $t9 ; asn1_GetSequence
                addiu   $a1, $sp, 0xA8+arg_8
                bnez    $v0, loc_3E318
                lw      $gp, 0xA8+var_90($sp)

loc_3E494:                               # CODE XREF: d2i_SSL_SESSION+A0↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x188
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3E4A4:                               # CODE XREF: d2i_SSL_SESSION+54↑j
                la      $t9, SSL_SESSION_new

loc_3E4A8:                               # CODE XREF: d2i_SSL_SESSION+60↑j
                jalr    $t9 ; SSL_SESSION_new
                nop
                move    $s1, $v0
                beqz    $v0, loc_3EC34
                lw      $gp, 0xA8+var_90($sp)
                b       loc_3E2D8
                lw      $a1, 0($s4)
 # ---------------------------------------------------------------------------

loc_3E4C4:                               # CODE XREF: d2i_SSL_SESSION+12C↑j
                li      $v0, 0x18F
                lw      $a2, 0xA8+var_4C($sp)
                sw      $v0, 0xA8+var_2C($sp)

loc_3E4D0:                               # CODE XREF: d2i_SSL_SESSION+1F8↑j
                                         # d2i_SSL_SESSION+22C↑j ...
                la      $t9, ERR_put_error
                li      $a0, 0xD
                li      $a1, 0x67  # 'g'
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0xA8+var_98($sp)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a0, 0($s4)
                lw      $a1, 0xA8+var_34($sp)
                la      $t9, asn1_add_error
                jalr    $t9 ; asn1_add_error
                subu    $a1, $a0
                beqz    $s1, loc_3E52C
                lw      $gp, 0xA8+var_90($sp)
                beqz    $s3, loc_3E51C
                la      $t9, SSL_SESSION_free
                lw      $v0, 0($s3)
                beq     $s1, $v0, loc_3E950
                nop

loc_3E51C:                               # CODE XREF: d2i_SSL_SESSION+298↑j
                jalr    $t9 ; SSL_SESSION_free
                move    $a0, $s1
                lw      $gp, 0xA8+var_90($sp)
                move    $s1, $zero

loc_3E52C:                               # CODE XREF: d2i_SSL_SESSION+290↑j
                                         # d2i_SSL_SESSION:loc_3E950↓j ...
                move    $v0, $s1
                lw      $ra, 0xA8+var_8($sp)
                lw      $s7, 0xA8+var_C($sp)
                lw      $s6, 0xA8+var_10($sp)
                lw      $s5, 0xA8+var_14($sp)
                lw      $s4, 0xA8+var_18($sp)
                lw      $s3, 0xA8+var_1C($sp)
                lw      $s2, 0xA8+var_20($sp)
                lw      $s1, 0xA8+var_24($sp)
                lw      $s0, 0xA8+var_28($sp)
                jr      $ra
                addiu   $sp, 0xA8
 # ---------------------------------------------------------------------------

loc_3E55C:                               # CODE XREF: d2i_SSL_SESSION+1DC↑j
                move    $a2, $v0
                b       loc_3E4D0
                sw      $v0, 0xA8+var_4C($sp)
 # ---------------------------------------------------------------------------

loc_3E568:                               # CODE XREF: d2i_SSL_SESSION+D0↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x18B
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3E578:                               # CODE XREF: d2i_SSL_SESSION+1CC↑j
                lw      $v1, 0xA8+var_64($sp)
                li      $v0, 3
                bne     $v1, $v0, loc_3E464
                li      $v0, 0x89
                lw      $v1, 0xA8+var_5C($sp)
                lbu     $v0, 0($v1)
                lbu     $a1, 2($v1)
                lbu     $a0, 1($v1)
                sll     $v0, 16
                or      $v0, $a1
                lui     $v1, 0x200
                or      $v0, $v1
                sll     $a0, 8
                or      $v0, $a0

loc_3E5B0:                               # CODE XREF: d2i_SSL_SESSION+87C↓j
                sw      $v0, 0xB0($s1)
                la      $t9, d2i_ASN1_OCTET_STRING
                lw      $a2, 0xA8+var_3C($sp)
                sw      $a3, 0xA8+var_34($sp)
                sw      $zero, 0xAC($s1)
                move    $a0, $s6
                jalr    $t9 ; d2i_ASN1_OCTET_STRING
                move    $a1, $s2
                beqz    $v0, loc_3EB44
                lw      $gp, 0xA8+var_90($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $v0, 0xA8+var_54($sp)
                lw      $a0, 0xA8+var_3C($sp)
                lw      $a1, 0xA8+var_64($sp)
                subu    $v0, $v1
                subu    $a2, $a0, $v0
                slti    $v1, $a1, 0x21  # '!'
                bnez    $v1, loc_3E608
                sw      $a2, 0xA8+var_3C($sp)
                li      $v0, 0x20  # ' '
                sw      $v0, 0xA8+var_64($sp)
                li      $a1, 0x20  # ' '

loc_3E608:                               # CODE XREF: d2i_SSL_SESSION+384↑j
                sw      $a1, 0x44($s1)
                lw      $a2, 0xA8+var_64($sp)
                slti    $v0, $a2, 0x21  # '!'
                beqz    $v0, loc_3EB00
                la      $a0, loc_40000

loc_3E61C:                               # CODE XREF: d2i_SSL_SESSION+8AC↓j
                la      $t9, memcpy
                lw      $a1, 0xA8+var_5C($sp)
                jalr    $t9 ; memcpy
                addiu   $a0, $s1, 0x48  # 'H'
                lw      $gp, 0xA8+var_90($sp)
                lw      $v0, 0xA8+var_54($sp)
                lw      $a2, 0xA8+var_3C($sp)
                la      $t9, d2i_ASN1_OCTET_STRING
                sw      $v0, 0xA8+var_34($sp)
                move    $a0, $s6
                jalr    $t9 ; d2i_ASN1_OCTET_STRING
                move    $a1, $s2
                beqz    $v0, loc_3EB7C
                lw      $gp, 0xA8+var_90($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $v0, 0xA8+var_54($sp)
                lw      $a0, 0xA8+var_3C($sp)
                lw      $a1, 0xA8+var_64($sp)
                subu    $v0, $v1
                subu    $a2, $a0, $v0
                slti    $v1, $a1, 0x31  # '1'
                bnez    $v1, loc_3EAF4
                sw      $a2, 0xA8+var_3C($sp)
                li      $v0, 0x30  # '0'
                sw      $v0, 0x10($s1)
                move    $a2, $v0

loc_3E684:                               # CODE XREF: d2i_SSL_SESSION+888↓j
                la      $t9, memcpy
                lw      $a1, 0xA8+var_5C($sp)
                jalr    $t9 ; memcpy
                addiu   $a0, $s1, 0x14
                lw      $v0, 0xA8+var_3C($sp)
                lw      $gp, 0xA8+var_90($sp)
                beqz    $v0, loc_3E6BC
                sw      $zero, 0xA8+var_64($sp)
                lw      $a0, 0xA8+var_54($sp)
                li      $v0, 0x80
                lbu     $s0, 0($a0)
                andi    $v1, $s0, 0xDF
                beq     $v1, $v0, loc_3E968
                andi    $v0, $s0, 0x20

loc_3E6BC:                               # CODE XREF: d2i_SSL_SESSION+42C↑j
                move    $v0, $zero
                sw      $v0, 4($s1)

loc_3E6C4:                               # CODE XREF: d2i_SSL_SESSION+750↓j
                move    $a2, $v0

loc_3E6C8:                               # CODE XREF: d2i_SSL_SESSION+C70↓j
                la      $t9, memcpy
                lw      $a1, 0xA8+var_5C($sp)
                jalr    $t9 ; memcpy
                addiu   $a0, $s1, 8
                lw      $a0, 0xA8+var_5C($sp)
                beqz    $a0, loc_3E6F4
                lw      $gp, 0xA8+var_90($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0xA8+var_90($sp)

loc_3E6F4:                               # CODE XREF: d2i_SSL_SESSION+46C↑j
                lw      $a0, 0xA8+var_3C($sp)
                beqz    $a0, loc_3E714
                sw      $zero, 0xA8+var_74($sp)
                lw      $a1, 0xA8+var_54($sp)
                li      $v0, 0xA1
                lbu     $v1, 0($a1)
                beq     $v1, $v0, loc_3EBAC
                la      $t9, ASN1_get_object

loc_3E714:                               # CODE XREF: d2i_SSL_SESSION+488↑j
                                         # d2i_SSL_SESSION+B5C↓j
                lw      $v0, 0xA8+var_6C($sp)
                beqz    $v0, loc_3EB94
                la      $t9, ASN1_INTEGER_get
                jalr    $t9 ; ASN1_INTEGER_get
                lw      $a0, 0xA8+var_88($sp)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a0, 0xA8+var_6C($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                sw      $v0, 0xA4($s1)
                lw      $gp, 0xA8+var_90($sp)
                sw      $zero, 0xA8+var_6C($sp)
                sw      $zero, 0xA8+var_74($sp)

loc_3E748:                               # CODE XREF: d2i_SSL_SESSION+934↓j
                lw      $a0, 0xA8+var_3C($sp)
                beqz    $a0, loc_3E768
                sw      $zero, 0xA8+var_74($sp)
                lw      $a1, 0xA8+var_54($sp)
                li      $v0, 0xA2
                lbu     $v1, 0($a1)
                beq     $v1, $v0, loc_3EBF0
                la      $t9, ASN1_get_object

loc_3E768:                               # CODE XREF: d2i_SSL_SESSION+4DC↑j
                                         # d2i_SSL_SESSION+BA8↓j
                lw      $v0, 0xA8+var_6C($sp)
                beqz    $v0, loc_3EB24
                la      $t9, ASN1_INTEGER_get
                jalr    $t9 ; ASN1_INTEGER_get
                lw      $a0, 0xA8+var_88($sp)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a0, 0xA8+var_6C($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                sw      $v0, 0xA0($s1)
                lw      $gp, 0xA8+var_90($sp)
                sw      $zero, 0xA8+var_6C($sp)
                sw      $zero, 0xA8+var_74($sp)

loc_3E79C:                               # CODE XREF: d2i_SSL_SESSION+8B8↓j
                lw      $a0, 0x94($s1)
                beqz    $a0, loc_3E7B8
                la      $t9, X509_free
                jalr    $t9 ; X509_free
                nop
                lw      $gp, 0xA8+var_90($sp)
                sw      $zero, 0x94($s1)

loc_3E7B8:                               # CODE XREF: d2i_SSL_SESSION+530↑j
                lw      $a2, 0xA8+var_3C($sp)
                beqz    $a2, loc_3E7D4
                li      $v0, 0xA3
                lw      $a0, 0xA8+var_54($sp)
                lbu     $v1, 0($a0)
                beq     $v1, $v0, loc_3EC78
                la      $t9, ASN1_get_object

loc_3E7D4:                               # CODE XREF: d2i_SSL_SESSION+54C↑j
                                         # d2i_SSL_SESSION+BF4↓j
                sw      $zero, 0xA8+var_64($sp)
                beqz    $a2, loc_3E7F4
                sw      $zero, 0xA8+var_5C($sp)
                lw      $a0, 0xA8+var_54($sp)
                li      $v0, 0xA4
                lbu     $v1, 0($a0)
                beq     $v1, $v0, loc_3E9C8
                la      $t9, ASN1_get_object

loc_3E7F4:                               # CODE XREF: d2i_SSL_SESSION+568↑j
                                         # d2i_SSL_SESSION+C44↓j
                sw      $zero, 0x68($s1)

loc_3E7F8:                               # CODE XREF: d2i_SSL_SESSION+11AC↓j
                beqz    $a2, loc_3E814
                sw      $zero, 0xA8+var_74($sp)
                lw      $a0, 0xA8+var_54($sp)
                li      $v0, 0xA5
                lbu     $v1, 0($a0)
                beq     $v1, $v0, loc_3ECBC
                la      $t9, ASN1_get_object

loc_3E814:                               # CODE XREF: d2i_SSL_SESSION:loc_3E7F8↑j
                                         # d2i_SSL_SESSION+D40↓j
                lw      $v0, 0xA8+var_6C($sp)
                beqz    $v0, loc_3EB54
                la      $t9, ASN1_INTEGER_get
                jalr    $t9 ; ASN1_INTEGER_get
                lw      $a0, 0xA8+var_88($sp)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a0, 0xA8+var_6C($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                sw      $v0, 0x98($s1)
                lw      $gp, 0xA8+var_90($sp)
                sw      $zero, 0xA8+var_6C($sp)
                sw      $zero, 0xA8+var_74($sp)

loc_3E848:                               # CODE XREF: d2i_SSL_SESSION:loc_3EB54↓j
                lw      $a2, 0xA8+var_3C($sp)
                sw      $zero, 0xA8+var_64($sp)
                beqz    $a2, loc_3E86C
                sw      $zero, 0xA8+var_5C($sp)
                lw      $a0, 0xA8+var_54($sp)
                li      $v0, 0xA6
                lbu     $v1, 0($a0)
                beq     $v1, $v0, loc_3EA0C
                la      $t9, ASN1_get_object

loc_3E86C:                               # CODE XREF: d2i_SSL_SESSION+5E0↑j
                                         # d2i_SSL_SESSION+CC0↓j
                sw      $zero, 0xC8($s1)

loc_3E870:                               # CODE XREF: d2i_SSL_SESSION+CF4↓j
                beqz    $a2, loc_3E88C
                sw      $zero, 0xA8+var_74($sp)
                lw      $a0, 0xA8+var_54($sp)
                li      $v0, 0xA9
                lbu     $v1, 0($a0)
                beq     $v1, $v0, loc_3ED00
                la      $t9, ASN1_get_object

loc_3E88C:                               # CODE XREF: d2i_SSL_SESSION:loc_3E870↑j
                                         # d2i_SSL_SESSION+DF4↓j
                lw      $v0, 0xA8+var_6C($sp)
                beqz    $v0, loc_3EB5C
                la      $t9, ASN1_INTEGER_get
                jalr    $t9 ; ASN1_INTEGER_get
                lw      $a0, 0xA8+var_88($sp)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a0, 0xA8+var_6C($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                sw      $v0, 0xD4($s1)
                lw      $gp, 0xA8+var_90($sp)
                sw      $zero, 0xA8+var_6C($sp)
                sw      $zero, 0xA8+var_74($sp)

loc_3E8C0:                               # CODE XREF: d2i_SSL_SESSION+904↓j
                                         # d2i_SSL_SESSION:loc_3EB8C↓j
                lw      $a2, 0xA8+var_3C($sp)
                sw      $zero, 0xA8+var_64($sp)
                beqz    $a2, loc_3E8E4
                sw      $zero, 0xA8+var_5C($sp)
                lw      $a0, 0xA8+var_54($sp)
                li      $v0, 0xAA
                lbu     $v1, 0($a0)
                beq     $v1, $v0, loc_3EA50
                la      $t9, ASN1_get_object

loc_3E8E4:                               # CODE XREF: d2i_SSL_SESSION+658↑j
                                         # d2i_SSL_SESSION+D90↓j
                sw      $zero, 0xCC($s1)

loc_3E8E8:                               # CODE XREF: d2i_SSL_SESSION+DA8↓j
                sw      $zero, 0xA8+var_64($sp)
                beqz    $a2, loc_3E908
                sw      $zero, 0xA8+var_5C($sp)
                lw      $a0, 0xA8+var_54($sp)
                li      $v0, 0xAB
                lbu     $v1, 0($a0)
                beq     $v1, $v0, loc_3ED44
                la      $t9, ASN1_get_object

loc_3E908:                               # CODE XREF: d2i_SSL_SESSION+67C↑j
                                         # d2i_SSL_SESSION+EC4↓j ...
                sw      $zero, 0xA8+var_64($sp)
                beqz    $a2, loc_3E928
                sw      $zero, 0xA8+var_5C($sp)
                lw      $a0, 0xA8+var_54($sp)
                li      $v0, 0xAC
                lbu     $v1, 0($a0)
                beq     $v1, $v0, loc_3EA94
                la      $t9, ASN1_get_object

loc_3E928:                               # CODE XREF: d2i_SSL_SESSION+69C↑j
                                         # d2i_SSL_SESSION+E44↓j
                sw      $zero, 0xD8($s1)

loc_3E92C:                               # CODE XREF: d2i_SSL_SESSION+E74↓j
                la      $t9, asn1_const_Finish
                jalr    $t9 ; asn1_const_Finish
                move    $a0, $s2
                bnez    $v0, loc_3EB30
                lw      $gp, 0xA8+var_90($sp)
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x281
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3E950:                               # CODE XREF: d2i_SSL_SESSION+2A4↑j
                b       loc_3E52C
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_3E958:                               # CODE XREF: d2i_SSL_SESSION+1AC↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x195
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3E968:                               # CODE XREF: d2i_SSL_SESSION+444↑j
                ori     $v0, 4
                sb      $v0, 0($a0)
                lw      $v0, 0xA8+var_54($sp)
                la      $t9, d2i_ASN1_OCTET_STRING
                lw      $a2, 0xA8+var_3C($sp)
                sw      $v0, 0xA8+var_34($sp)
                move    $a0, $s6
                jalr    $t9 ; d2i_ASN1_OCTET_STRING
                move    $a1, $s2
                beqz    $v0, loc_3F15C
                lw      $gp, 0xA8+var_90($sp)
                lw      $a0, 0xA8+var_34($sp)
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $a2, $v1, $v0
                sw      $a2, 0xA8+var_3C($sp)
                sb      $s0, 0($a0)
                lw      $v1, 0xA8+var_64($sp)
                slti    $v0, $v1, 9
                beqz    $v0, loc_3EED8
                move    $v0, $v1
                b       loc_3E6C4
                sw      $v0, 4($s1)
 # ---------------------------------------------------------------------------

loc_3E9C8:                               # CODE XREF: d2i_SSL_SESSION+57C↑j
                sw      $a0, 0xA8+var_34($sp)
                sw      $a2, 0xA8+var_98($sp)
                move    $a0, $s2
                addiu   $a1, $sp, 0xA8+var_78
                addiu   $a2, $sp, 0xA8+var_80
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_7C
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3EE6C
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x205
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3EA0C:                               # CODE XREF: d2i_SSL_SESSION+5F4↑j
                sw      $a0, 0xA8+var_34($sp)
                sw      $a2, 0xA8+var_98($sp)
                move    $a0, $s2
                addiu   $a1, $sp, 0xA8+var_78
                addiu   $a2, $sp, 0xA8+var_80
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_7C
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3EEE8
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x225
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3EA50:                               # CODE XREF: d2i_SSL_SESSION+66C↑j
                sw      $a0, 0xA8+var_34($sp)
                sw      $a2, 0xA8+var_98($sp)
                move    $a0, $s2
                addiu   $a1, $sp, 0xA8+var_78
                addiu   $a2, $sp, 0xA8+var_80
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_7C
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3EFB8
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x25B
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3EA94:                               # CODE XREF: d2i_SSL_SESSION+6B0↑j
                sw      $a0, 0xA8+var_34($sp)
                sw      $a2, 0xA8+var_98($sp)
                move    $a0, $s2
                addiu   $a1, $sp, 0xA8+var_78
                addiu   $a2, $sp, 0xA8+var_80
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_7C
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3F06C
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x275
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3EAD8:                               # CODE XREF: d2i_SSL_SESSION+1E8↑j
                lbu     $v0, 0($v1)
                lbu     $a0, 1($v1)
                sll     $v0, 8
                or      $v0, $a0
                lui     $v1, 0x300
                b       loc_3E5B0
                or      $v0, $v1
 # ---------------------------------------------------------------------------

loc_3EAF4:                               # CODE XREF: d2i_SSL_SESSION+400↑j
                move    $a2, $a1
                b       loc_3E684
                sw      $a1, 0x10($s1)
 # ---------------------------------------------------------------------------

loc_3EB00:                               # CODE XREF: d2i_SSL_SESSION+3A4↑j
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a2, (aOsLengthIntSiz - 0x40000)  # "os.length <= (int)sizeof(ret->session_i"...
                addiu   $a0, (aSslAsn1C - 0x40000)  # "ssl_asn1.c"
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0x1C2
                lw      $gp, 0xA8+var_90($sp)
                b       loc_3E61C
                lw      $a2, 0xA8+var_64($sp)
 # ---------------------------------------------------------------------------

loc_3EB24:                               # CODE XREF: d2i_SSL_SESSION+4FC↑j
                li      $v0, 3
                b       loc_3E79C
                sw      $v0, 0xA0($s1)
 # ---------------------------------------------------------------------------

loc_3EB30:                               # CODE XREF: d2i_SSL_SESSION+6C8↑j
                lw      $v0, 0xA8+var_54($sp)
                beqz    $s3, loc_3E52C
                sw      $v0, 0($s4)
                b       loc_3E52C
                sw      $s1, 0($s3)
 # ---------------------------------------------------------------------------

loc_3EB44:                               # CODE XREF: d2i_SSL_SESSION+360↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x1B6
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3EB54:                               # CODE XREF: d2i_SSL_SESSION+5A8↑j
                b       loc_3E848
                sw      $zero, 0x98($s1)
 # ---------------------------------------------------------------------------

loc_3EB5C:                               # CODE XREF: d2i_SSL_SESSION+620↑j
                lw      $v0, 0xD0($s1)
                beqz    $v0, loc_3EB8C
                nop
                lw      $v0, 0x44($s1)
                beqz    $v0, loc_3EB8C
                li      $v0, 0xFFFFFFFF
                b       loc_3E8C0
                sw      $v0, 0xD4($s1)
 # ---------------------------------------------------------------------------

loc_3EB7C:                               # CODE XREF: d2i_SSL_SESSION+3DC↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x1C5
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3EB8C:                               # CODE XREF: d2i_SSL_SESSION+8F0↑j
                                         # d2i_SSL_SESSION+8FC↑j
                b       loc_3E8C0
                sw      $zero, 0xD4($s1)
 # ---------------------------------------------------------------------------

loc_3EB94:                               # CODE XREF: d2i_SSL_SESSION+4A8↑j
                la      $t9, time
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $gp, 0xA8+var_90($sp)
                b       loc_3E748
                sw      $v0, 0xA4($s1)
 # ---------------------------------------------------------------------------

loc_3EBAC:                               # CODE XREF: d2i_SSL_SESSION+49C↑j
                sw      $a1, 0xA8+var_34($sp)
                sw      $a0, 0xA8+var_98($sp)
                addiu   $a1, $sp, 0xA8+var_78
                move    $a0, $s2
                addiu   $a2, $sp, 0xA8+var_7C
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_80
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3ED88
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x1E9
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3EBF0:                               # CODE XREF: d2i_SSL_SESSION+4F0↑j
                sw      $a1, 0xA8+var_34($sp)
                sw      $a0, 0xA8+var_98($sp)
                addiu   $a1, $sp, 0xA8+var_78
                move    $a0, $s2
                addiu   $a2, $sp, 0xA8+var_80
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_7C
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3EDD4
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x1F3
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3EC34:                               # CODE XREF: d2i_SSL_SESSION+244↑j
                la      $t9, ERR_put_error
                li      $v0, 0x182
                lw      $a2, 0xA8+var_4C($sp)
                sw      $v0, 0xA8+var_2C($sp)
                li      $a0, 0xD
                li      $a1, 0x67  # 'g'
                move    $a3, $zero
                jalr    $t9 ; ERR_put_error
                sw      $zero, 0xA8+var_98($sp)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a0, 0($s4)
                lw      $a1, 0xA8+var_34($sp)
                la      $t9, asn1_add_error
                jalr    $t9 ; asn1_add_error
                subu    $a1, $a0
                b       loc_3E52C
                lw      $gp, 0xA8+var_90($sp)
 # ---------------------------------------------------------------------------

loc_3EC78:                               # CODE XREF: d2i_SSL_SESSION+55C↑j
                sw      $a0, 0xA8+var_34($sp)
                sw      $a2, 0xA8+var_98($sp)
                move    $a0, $s2
                addiu   $a1, $sp, 0xA8+var_78
                addiu   $a2, $sp, 0xA8+var_7C
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_80
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3EE20
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x201
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3ECBC:                               # CODE XREF: d2i_SSL_SESSION+59C↑j
                sw      $a0, 0xA8+var_34($sp)
                sw      $a2, 0xA8+var_98($sp)
                move    $a0, $s2
                addiu   $a1, $sp, 0xA8+var_78
                addiu   $a2, $sp, 0xA8+var_7C
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_80
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3EF6C
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x219
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3ED00:                               # CODE XREF: d2i_SSL_SESSION+614↑j
                sw      $a0, 0xA8+var_34($sp)
                sw      $a2, 0xA8+var_98($sp)
                move    $a0, $s2
                addiu   $a1, $sp, 0xA8+var_78
                addiu   $a2, $sp, 0xA8+var_7C
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_80
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3F020
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x24F
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3ED44:                               # CODE XREF: d2i_SSL_SESSION+690↑j
                sw      $a0, 0xA8+var_34($sp)
                sw      $a2, 0xA8+var_98($sp)
                move    $a0, $s2
                addiu   $a1, $sp, 0xA8+var_78
                addiu   $a2, $sp, 0xA8+var_7C
                jalr    $t9 ; ASN1_get_object
                addiu   $a3, $sp, 0xA8+var_80
                move    $s0, $v0
                andi    $v0, 0x80
                beqz    $v0, loc_3F0EC
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3B  # ';'
                li      $v1, 0x269
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3ED88:                               # CODE XREF: d2i_SSL_SESSION+960↑j
                li      $s7, 0x21  # '!'
                beq     $s0, $s7, loc_3F174
                lw      $v0, 0xA8+var_54($sp)

loc_3ED94:                               # CODE XREF: d2i_SSL_SESSION+F18↓j
                la      $t9, d2i_ASN1_INTEGER
                lw      $a2, 0xA8+var_78($sp)
                move    $a0, $s5
                jalr    $t9 ; d2i_ASN1_INTEGER
                move    $a1, $s2
                beqz    $v0, loc_3F274
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s7, loc_3F2EC
                lw      $v0, 0xA8+var_54($sp)

loc_3EDB8:                               # CODE XREF: d2i_SSL_SESSION+109C↓j
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $a0, 0xA8+var_3C($sp)
                subu    $v0, $v1
                subu    $a2, $a0, $v0
                b       loc_3E714
                sw      $a2, 0xA8+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_3EDD4:                               # CODE XREF: d2i_SSL_SESSION+9A4↑j
                li      $s7, 0x21  # '!'
                beq     $s0, $s7, loc_3F190
                lw      $v0, 0xA8+var_54($sp)

loc_3EDE0:                               # CODE XREF: d2i_SSL_SESSION+F34↓j
                la      $t9, d2i_ASN1_INTEGER
                lw      $a2, 0xA8+var_78($sp)
                move    $a0, $s5
                jalr    $t9 ; d2i_ASN1_INTEGER
                move    $a1, $s2
                beqz    $v0, loc_3F200
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s7, loc_3F38C
                lw      $v0, 0xA8+var_54($sp)

loc_3EE04:                               # CODE XREF: d2i_SSL_SESSION+113C↓j
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $a0, 0xA8+var_3C($sp)
                subu    $v0, $v1
                subu    $a2, $a0, $v0
                b       loc_3E768
                sw      $a2, 0xA8+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_3EE20:                               # CODE XREF: d2i_SSL_SESSION+A2C↑j
                li      $s7, 0x21  # '!'
                beq     $s0, $s7, loc_3F1AC
                lw      $v0, 0xA8+var_54($sp)

loc_3EE2C:                               # CODE XREF: d2i_SSL_SESSION+F50↓j
                la      $t9, d2i_X509
                lw      $a2, 0xA8+var_78($sp)
                addiu   $a0, $s1, 0x94
                jalr    $t9 ; d2i_X509
                move    $a1, $s2
                beqz    $v0, loc_3F210
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s7, loc_3F34C
                lw      $v0, 0xA8+var_54($sp)

loc_3EE50:                               # CODE XREF: d2i_SSL_SESSION+10FC↓j
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $a2, 0xA8+var_3C($sp)
                subu    $v0, $v1
                subu    $a2, $v0
                b       loc_3E7D4
                sw      $a2, 0xA8+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_3EE6C:                               # CODE XREF: d2i_SSL_SESSION+77C↑j
                li      $s7, 0x21  # '!'
                beq     $s0, $s7, loc_3F1E4
                lw      $v0, 0xA8+var_54($sp)

loc_3EE78:                               # CODE XREF: d2i_SSL_SESSION+F88↓j
                la      $t9, d2i_ASN1_OCTET_STRING
                lw      $a2, 0xA8+var_78($sp)
                move    $a0, $s6
                jalr    $t9 ; d2i_ASN1_OCTET_STRING
                move    $a1, $s2
                beqz    $v0, loc_3F3DC
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s7, loc_3F424
                lw      $v0, 0xA8+var_54($sp)

loc_3EE9C:                               # CODE XREF: d2i_SSL_SESSION+11D4↓j
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $a2, 0xA8+var_3C($sp)
                subu    $v0, $v1
                lw      $a1, 0xA8+var_5C($sp)
                subu    $a2, $v0
                beqz    $a1, loc_3E7F4
                sw      $a2, 0xA8+var_3C($sp)
                lw      $v1, 0xA8+var_64($sp)
                slti    $v0, $v1, 0x21  # '!'
                bnez    $v0, loc_3F3EC
                li      $v0, 0x10F
                move    $a2, $v0
                b       loc_3E4D0
                sw      $v0, 0xA8+var_4C($sp)
 # ---------------------------------------------------------------------------

loc_3EED8:                               # CODE XREF: d2i_SSL_SESSION+748↑j
                li      $v0, 8
                move    $a2, $v0
                b       loc_3E6C8
                sw      $v0, 4($s1)
 # ---------------------------------------------------------------------------

loc_3EEE8:                               # CODE XREF: d2i_SSL_SESSION+7C0↑j
                li      $s7, 0x21  # '!'
                beq     $s0, $s7, loc_3F220
                lw      $v0, 0xA8+var_54($sp)

loc_3EEF4:                               # CODE XREF: d2i_SSL_SESSION+FC4↓j
                la      $t9, d2i_ASN1_OCTET_STRING
                lw      $a2, 0xA8+var_78($sp)
                move    $a0, $s6
                jalr    $t9 ; d2i_ASN1_OCTET_STRING
                move    $a1, $s2
                beqz    $v0, loc_3F32C
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s7, loc_3F464
                lw      $v0, 0xA8+var_54($sp)

loc_3EF18:                               # CODE XREF: d2i_SSL_SESSION+1214↓j
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $a2, 0xA8+var_3C($sp)
                subu    $v0, $v1
                lw      $a0, 0xA8+var_5C($sp)
                subu    $a2, $v0
                beqz    $a0, loc_3E86C
                sw      $a2, 0xA8+var_3C($sp)
                la      $t9, BUF_strndup
                jalr    $t9 ; BUF_strndup
                lw      $a1, 0xA8+var_64($sp)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a0, 0xA8+var_5C($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                sw      $v0, 0xC8($s1)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a2, 0xA8+var_3C($sp)
                sw      $zero, 0xA8+var_5C($sp)
                b       loc_3E870
                sw      $zero, 0xA8+var_64($sp)
 # ---------------------------------------------------------------------------

loc_3EF6C:                               # CODE XREF: d2i_SSL_SESSION+A70↑j
                li      $s7, 0x21  # '!'
                beq     $s0, $s7, loc_3F1C8
                lw      $v0, 0xA8+var_54($sp)

loc_3EF78:                               # CODE XREF: d2i_SSL_SESSION+F6C↓j
                la      $t9, d2i_ASN1_INTEGER
                lw      $a2, 0xA8+var_78($sp)
                move    $a0, $s5
                jalr    $t9 ; d2i_ASN1_INTEGER
                move    $a1, $s2
                beqz    $v0, loc_3F3CC
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s7, loc_3F524
                lw      $v0, 0xA8+var_54($sp)

loc_3EF9C:                               # CODE XREF: d2i_SSL_SESSION+12D4↓j
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $a0, 0xA8+var_3C($sp)
                subu    $v0, $v1
                subu    $a2, $a0, $v0
                b       loc_3E814
                sw      $a2, 0xA8+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_3EFB8:                               # CODE XREF: d2i_SSL_SESSION+804↑j
                li      $s5, 0x21  # '!'
                beq     $s0, $s5, loc_3F284
                lw      $v0, 0xA8+var_54($sp)

loc_3EFC4:                               # CODE XREF: d2i_SSL_SESSION+1028↓j
                la      $t9, d2i_ASN1_OCTET_STRING
                lw      $a2, 0xA8+var_78($sp)
                move    $a0, $s6
                jalr    $t9 ; d2i_ASN1_OCTET_STRING
                move    $a1, $s2
                beqz    $v0, loc_3F2CC
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s5, loc_3F564
                lw      $v0, 0xA8+var_54($sp)

loc_3EFE8:                               # CODE XREF: d2i_SSL_SESSION+1314↓j
                lw      $v1, 0xA8+var_34($sp)
                lw      $v0, 0xA8+var_54($sp)
                lw      $a2, 0xA8+var_3C($sp)
                subu    $v0, $v1
                lw      $v1, 0xA8+var_5C($sp)
                subu    $a2, $v0
                beqz    $v1, loc_3E8E4
                sw      $a2, 0xA8+var_3C($sp)
                lw      $v0, 0xA8+var_64($sp)
                sw      $v1, 0xCC($s1)
                sw      $v0, 0xD0($s1)
                sw      $zero, 0xA8+var_5C($sp)
                b       loc_3E8E8
                sw      $zero, 0xA8+var_64($sp)
 # ---------------------------------------------------------------------------

loc_3F020:                               # CODE XREF: d2i_SSL_SESSION+AB4↑j
                li      $s7, 0x21  # '!'
                beq     $s0, $s7, loc_3F2A0
                lw      $v0, 0xA8+var_54($sp)

loc_3F02C:                               # CODE XREF: d2i_SSL_SESSION+1044↓j
                la      $t9, d2i_ASN1_INTEGER
                lw      $a2, 0xA8+var_78($sp)
                move    $a0, $s5
                jalr    $t9 ; d2i_ASN1_INTEGER
                move    $a1, $s2
                beqz    $v0, loc_3F2DC
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s7, loc_3F4A4
                lw      $v0, 0xA8+var_54($sp)

loc_3F050:                               # CODE XREF: d2i_SSL_SESSION+1254↓j
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $a0, 0xA8+var_3C($sp)
                subu    $v0, $v1
                subu    $a2, $a0, $v0
                b       loc_3E88C
                sw      $a2, 0xA8+var_3C($sp)
 # ---------------------------------------------------------------------------

loc_3F06C:                               # CODE XREF: d2i_SSL_SESSION+848↑j
                li      $s5, 0x21  # '!'
                beq     $s0, $s5, loc_3F258
                lw      $v0, 0xA8+var_54($sp)

loc_3F078:                               # CODE XREF: d2i_SSL_SESSION+FFC↓j
                la      $t9, d2i_ASN1_OCTET_STRING
                lw      $a2, 0xA8+var_78($sp)
                move    $a0, $s6
                jalr    $t9 ; d2i_ASN1_OCTET_STRING
                move    $a1, $s2
                beqz    $v0, loc_3F2BC
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s5, loc_3F5A4
                lw      $v0, 0xA8+var_54($sp)

loc_3F09C:                               # CODE XREF: d2i_SSL_SESSION+1354↓j
                lw      $v0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_54($sp)
                lw      $a0, 0xA8+var_5C($sp)
                subu    $v1, $v0
                lw      $v0, 0xA8+var_3C($sp)
                subu    $v0, $v1
                beqz    $a0, loc_3E928
                sw      $v0, 0xA8+var_3C($sp)
                la      $t9, BUF_strndup
                jalr    $t9 ; BUF_strndup
                lw      $a1, 0xA8+var_64($sp)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a0, 0xA8+var_5C($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                sw      $v0, 0xD8($s1)
                lw      $gp, 0xA8+var_90($sp)
                sw      $zero, 0xA8+var_5C($sp)
                b       loc_3E92C
                sw      $zero, 0xA8+var_64($sp)
 # ---------------------------------------------------------------------------

loc_3F0EC:                               # CODE XREF: d2i_SSL_SESSION+AF8↑j
                li      $s5, 0x21  # '!'
                beq     $s0, $s5, loc_3F23C
                lw      $v0, 0xA8+var_54($sp)

loc_3F0F8:                               # CODE XREF: d2i_SSL_SESSION+FE0↓j
                la      $t9, d2i_ASN1_OCTET_STRING
                lw      $a2, 0xA8+var_78($sp)
                move    $a0, $s6
                jalr    $t9 ; d2i_ASN1_OCTET_STRING
                move    $a1, $s2
                beqz    $v0, loc_3F33C
                lw      $gp, 0xA8+var_90($sp)
                beq     $s0, $s5, loc_3F4E4
                lw      $v0, 0xA8+var_54($sp)

loc_3F11C:                               # CODE XREF: d2i_SSL_SESSION+1294↓j
                lw      $v0, 0xA8+var_54($sp)
                lw      $v1, 0xA8+var_34($sp)
                lw      $a2, 0xA8+var_3C($sp)
                subu    $v0, $v1
                lw      $a0, 0xA8+var_5C($sp)
                subu    $a2, $v0
                beqz    $a0, loc_3E908
                sw      $a2, 0xA8+var_3C($sp)
                lbu     $v0, 0($a0)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                sw      $v0, 0xA8($s1)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a2, 0xA8+var_3C($sp)
                b       loc_3E908
                sw      $zero, 0xA8+var_5C($sp)
 # ---------------------------------------------------------------------------

loc_3F15C:                               # CODE XREF: d2i_SSL_SESSION+71C↑j
                lw      $v1, 0xA8+var_34($sp)
                li      $v0, 0x1E0
                sw      $v0, 0xA8+var_2C($sp)
                sb      $s0, 0($v1)
                b       loc_3E4D0
                lw      $a2, 0xA8+var_4C($sp)
 # ---------------------------------------------------------------------------

loc_3F174:                               # CODE XREF: d2i_SSL_SESSION+B1C↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3ED94
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F190:                               # CODE XREF: d2i_SSL_SESSION+B68↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3EDE0
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F1AC:                               # CODE XREF: d2i_SSL_SESSION+BB4↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3EE2C
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F1C8:                               # CODE XREF: d2i_SSL_SESSION+D00↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3EF78
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F1E4:                               # CODE XREF: d2i_SSL_SESSION+C00↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3EE78
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F200:                               # CODE XREF: d2i_SSL_SESSION+B84↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x1F3
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F210:                               # CODE XREF: d2i_SSL_SESSION+BD0↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x201
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F220:                               # CODE XREF: d2i_SSL_SESSION+C7C↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3EEF4
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F23C:                               # CODE XREF: d2i_SSL_SESSION+E80↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3F0F8
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F258:                               # CODE XREF: d2i_SSL_SESSION+E00↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3F078
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F274:                               # CODE XREF: d2i_SSL_SESSION+B38↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x1E9
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F284:                               # CODE XREF: d2i_SSL_SESSION+D4C↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3EFC4
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F2A0:                               # CODE XREF: d2i_SSL_SESSION+DB4↑j
                lw      $a0, 0xA8+var_34($sp)
                lw      $v1, 0xA8+var_3C($sp)
                subu    $v0, $a0
                subu    $v1, $v0
                addiu   $v1, -2
                b       loc_3F02C
                sw      $v1, 0xA8+var_78($sp)
 # ---------------------------------------------------------------------------

loc_3F2BC:                               # CODE XREF: d2i_SSL_SESSION+E1C↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x275
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F2CC:                               # CODE XREF: d2i_SSL_SESSION+D68↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x25B
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F2DC:                               # CODE XREF: d2i_SSL_SESSION+DD0↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x24F
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F2EC:                               # CODE XREF: d2i_SSL_SESSION+B40↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3EDB8
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x1E9
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F32C:                               # CODE XREF: d2i_SSL_SESSION+C98↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x225
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F33C:                               # CODE XREF: d2i_SSL_SESSION+E9C↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x269
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F34C:                               # CODE XREF: d2i_SSL_SESSION+BD8↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3EE50
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x201
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F38C:                               # CODE XREF: d2i_SSL_SESSION+B8C↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3EE04
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x1F3
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F3CC:                               # CODE XREF: d2i_SSL_SESSION+D1C↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x219
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F3DC:                               # CODE XREF: d2i_SSL_SESSION+C1C↑j
                lw      $a2, 0xA8+var_4C($sp)
                li      $v0, 0x205
                b       loc_3E4D0
                sw      $v0, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F3EC:                               # CODE XREF: d2i_SSL_SESSION+C54↑j
                sw      $v1, 0x68($s1)
                la      $t9, memcpy
                lw      $a2, 0xA8+var_64($sp)
                jalr    $t9 ; memcpy
                addiu   $a0, $s1, 0x6C  # 'l'
                lw      $gp, 0xA8+var_90($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0xA8+var_5C($sp)
                lw      $gp, 0xA8+var_90($sp)
                lw      $a2, 0xA8+var_3C($sp)
                sw      $zero, 0xA8+var_5C($sp)
                b       loc_3E7F8
                sw      $zero, 0xA8+var_64($sp)
 # ---------------------------------------------------------------------------

loc_3F424:                               # CODE XREF: d2i_SSL_SESSION+C24↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3EE9C
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x205
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F464:                               # CODE XREF: d2i_SSL_SESSION+CA0↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3EF18
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x225
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F4A4:                               # CODE XREF: d2i_SSL_SESSION+DD8↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3F050
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x24F
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F4E4:                               # CODE XREF: d2i_SSL_SESSION+EA4↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3F11C
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x269
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F524:                               # CODE XREF: d2i_SSL_SESSION+D24↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3EF9C
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x219
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F564:                               # CODE XREF: d2i_SSL_SESSION+D70↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3EFE8
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x25B
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # ---------------------------------------------------------------------------

loc_3F5A4:                               # CODE XREF: d2i_SSL_SESSION+E24↑j
                lw      $v1, 0xA8+var_34($sp)
                lw      $a1, 0xA8+var_3C($sp)
                subu    $v0, $v1
                la      $t9, ASN1_const_check_infinite_end
                subu    $a1, $v0
                sw      $a1, 0xA8+var_78($sp)
                jalr    $t9 ; ASN1_const_check_infinite_end
                move    $a0, $s2
                bnez    $v0, loc_3F09C
                lw      $gp, 0xA8+var_90($sp)
                li      $v0, 0x3F  # '?'
                li      $v1, 0x275
                move    $a2, $v0
                sw      $v0, 0xA8+var_4C($sp)
                b       loc_3E4D0
                sw      $v1, 0xA8+var_2C($sp)
 # End of function d2i_SSL_SESSION


 # =============== S U B R O U T I N E =======================================


                .globl i2d_SSL_SESSION
i2d_SSL_SESSION:                         # CODE XREF: ssl3_send_newsession_ticket+9C↑p
                                         # ssl3_send_newsession_ticket+F4↑p ...

var_198         = -0x198
var_190         = -0x190
var_188         = -0x188
var_187         = -0x187
var_186         = -0x186
var_185         = -0x185
var_180         = -0x180
var_17C         = -0x17C
var_174         = -0x174
var_16C         = -0x16C
var_164         = -0x164
var_15C         = -0x15C
var_154         = -0x154
var_14C         = -0x14C
var_148         = -0x148
var_144         = -0x144
var_13C         = -0x13C
var_138         = -0x138
var_134         = -0x134
var_12C         = -0x12C
var_128         = -0x128
var_124         = -0x124
var_11C         = -0x11C
var_118         = -0x118
var_114         = -0x114
var_10C         = -0x10C
var_108         = -0x108
var_104         = -0x104
var_FC          = -0xFC
var_F8          = -0xF8
var_F4          = -0xF4
var_EC          = -0xEC
var_E8          = -0xE8
var_E4          = -0xE4
var_DC          = -0xDC
var_D8          = -0xD8
var_D4          = -0xD4
var_CC          = -0xCC
var_C8          = -0xC8
var_C4          = -0xC4
var_BC          = -0xBC
var_B8          = -0xB8
var_B4          = -0xB4
var_AC          = -0xAC
var_A8          = -0xA8
var_A4          = -0xA4
var_9C          = -0x9C
var_98          = -0x98
var_94          = -0x94
var_8C          = -0x8C
var_88          = -0x88
var_84          = -0x84
var_7C          = -0x7C
var_78          = -0x78
var_74          = -0x74
var_6C          = -0x6C
var_68          = -0x68
var_64          = -0x64
var_58          = -0x58
var_54          = -0x54
var_50          = -0x50
var_4C          = -0x4C
var_48          = -0x48
var_44          = -0x44
var_40          = -0x40
var_3C          = -0x3C
var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4
arg_4           =  4

                la      $gp, (off_5A360+0x7FF0 - i2d_SSL_SESSION)
                addu    $gp, $t9
                addiu   $sp, -0x1A8
                sw      $ra, 0x1A8+var_4($sp)
                sw      $fp, 0x1A8+var_8($sp)
                sw      $s7, 0x1A8+var_C($sp)
                sw      $s6, 0x1A8+var_10($sp)
                sw      $s5, 0x1A8+var_14($sp)
                sw      $s4, 0x1A8+var_18($sp)
                sw      $s3, 0x1A8+var_1C($sp)
                sw      $s2, 0x1A8+var_20($sp)
                sw      $s1, 0x1A8+var_24($sp)
                sw      $s0, 0x1A8+var_28($sp)
                sw      $gp, 0x1A8+var_190($sp)
                move    $s4, $a0
                beqz    $a0, loc_3FD48
                sw      $a1, 0x1A8+arg_4($sp)
                lw      $v0, 0xAC($a0)
                beqz    $v0, loc_3FD3C
                la      $t9, ASN1_INTEGER_set

loc_3F638:                               # CODE XREF: i2d_SSL_SESSION+75C↓j
                li      $s0, 8
                li      $s1, 2
                addiu   $v0, $sp, 0x1A8+var_17C
                addiu   $fp, $sp, 0x5C  # '\'
                move    $a0, $fp
                li      $a1, 1
                sw      $v0, 0x1A8+var_144($sp)
                sw      $s0, 0x1A8+var_14C($sp)
                jalr    $t9 ; ASN1_INTEGER_set
                sw      $s1, 0x1A8+var_148($sp)
                lw      $gp, 0x1A8+var_190($sp)
                lw      $a1, 0($s4)
                la      $t9, ASN1_INTEGER_set
                addiu   $v0, $sp, 0x1A8+var_174
                addiu   $s7, $sp, 0x1A8+var_13C
                move    $a0, $s7
                sw      $s0, 0x1A8+var_13C($sp)
                sw      $s1, 0x1A8+var_138($sp)
                jalr    $t9 ; ASN1_INTEGER_set
                sw      $v0, 0x1A8+var_134($sp)
                lw      $a0, 0xAC($s4)
                li      $v0, 4
                addiu   $v1, $sp, 0x1A8+var_187
                lw      $gp, 0x1A8+var_190($sp)
                sw      $v0, 0x1A8+var_128($sp)
                beqz    $a0, loc_4000C
                sw      $v1, 0x1A8+var_124($sp)
                lw      $a1, 8($a0)

loc_3F6A8:                               # CODE XREF: i2d_SSL_SESSION:loc_4000C↓j
                lw      $v0, 0($s4)
                li      $v1, 2
                beq     $v0, $v1, loc_3FECC
                sra     $v0, $a1, 8
                sw      $v1, 0x1A8+var_12C($sp)
                sb      $v0, 0x1A8+var_187($sp)
                sb      $a1, 0x1A8+var_186($sp)

loc_3F6C4:                               # CODE XREF: i2d_SSL_SESSION+900↓j
                lw      $v0, 0xA8($s4)
                bnez    $v0, loc_3FCB8
                li      $v1, 4

loc_3F6D0:                               # CODE XREF: i2d_SSL_SESSION+6E8↓j
                lw      $a2, 0x10($s4)
                lw      $a3, 0x44($s4)
                lw      $t0, 0x68($s4)
                lw      $t1, 4($s4)
                lw      $t2, 0xA4($s4)
                li      $s1, 4
                addiu   $v0, $s4, 0x14
                addiu   $v1, $s4, 0x48  # 'H'
                addiu   $a0, $s4, 0x6C  # 'l'
                addiu   $a1, $s4, 8
                sw      $a2, 0x1A8+var_10C($sp)
                sw      $v0, 0x1A8+var_104($sp)
                sw      $a3, 0x1A8+var_FC($sp)
                sw      $v1, 0x1A8+var_F4($sp)
                sw      $t0, 0x1A8+var_EC($sp)
                sw      $a0, 0x1A8+var_E4($sp)
                sw      $t1, 0x1A8+var_DC($sp)
                sw      $a1, 0x1A8+var_D4($sp)
                sw      $s1, 0x1A8+var_108($sp)
                sw      $s1, 0x1A8+var_F8($sp)
                sw      $s1, 0x1A8+var_E8($sp)
                bnez    $t2, loc_3FE4C
                sw      $s1, 0x1A8+var_D8($sp)

loc_3F72C:                               # CODE XREF: i2d_SSL_SESSION+890↓j
                lw      $a1, 0xA0($s4)
                bnez    $a1, loc_3FDF4
                li      $v0, 8
                lw      $a1, 0x98($s4)
                bnez    $a1, loc_3FE28
                la      $t9, ASN1_INTEGER_set

loc_3F744:                               # CODE XREF: i2d_SSL_SESSION+834↓j
                                         # i2d_SSL_SESSION+860↓j
                lw      $s0, 0xC8($s4)
                beqz    $s0, loc_3F768
                la      $t9, strlen
                jalr    $t9 ; strlen
                move    $a0, $s0
                lw      $gp, 0x1A8+var_190($sp)
                sw      $v0, 0x1A8+var_9C($sp)
                sw      $s0, 0x1A8+var_94($sp)
                sw      $s1, 0x1A8+var_98($sp)

loc_3F768:                               # CODE XREF: i2d_SSL_SESSION+164↑j
                lw      $v1, 0xCC($s4)
                beqz    $v1, loc_3F784
                nop
                lw      $v0, 0xD0($s4)
                sw      $v1, 0x1A8+var_74($sp)
                sw      $v0, 0x1A8+var_7C($sp)
                sw      $s1, 0x1A8+var_78($sp)

loc_3F784:                               # CODE XREF: i2d_SSL_SESSION+188↑j
                lw      $a1, 0xD4($s4)
                blez    $a1, loc_3F7B4
                li      $v0, 8
                la      $t9, ASN1_INTEGER_set
                sw      $v0, 0x1A8+var_8C($sp)
                li      $v1, 2
                addiu   $v0, $sp, 0x1A8+var_154
                sw      $v1, 0x1A8+var_88($sp)
                sw      $v0, 0x1A8+var_84($sp)
                jalr    $t9 ; ASN1_INTEGER_set
                addiu   $a0, $sp, 0x1A8+var_8C
                lw      $gp, 0x1A8+var_190($sp)

loc_3F7B4:                               # CODE XREF: i2d_SSL_SESSION+1A4↑j
                lw      $s0, 0xD8($s4)
                beqz    $s0, loc_3F7D8
                la      $t9, strlen
                jalr    $t9 ; strlen
                move    $a0, $s0
                lw      $gp, 0x1A8+var_190($sp)
                sw      $v0, 0x1A8+var_6C($sp)
                sw      $s1, 0x1A8+var_68($sp)
                sw      $s0, 0x1A8+var_64($sp)

loc_3F7D8:                               # CODE XREF: i2d_SSL_SESSION+1D4↑j
                la      $t9, i2d_ASN1_INTEGER
                move    $a0, $fp
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_INTEGER
                move    $a0, $s7
                move    $a1, $zero
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $s3, $v0
                lw      $gp, 0x1A8+var_190($sp)
                addiu   $v1, $sp, 0x1A8+var_12C
                la      $t9, i2d_ASN1_OCTET_STRING
                move    $a0, $v1
                sw      $v1, 0x1A8+var_3C($sp)
                move    $a1, $zero
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $s0, $v0
                lw      $gp, 0x1A8+var_190($sp)
                addiu   $v1, $sp, 0x1A8+var_FC
                la      $t9, i2d_ASN1_OCTET_STRING
                move    $a0, $v1
                sw      $v1, 0x1A8+var_34($sp)
                move    $a1, $zero
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $s2, $v0
                lw      $gp, 0x1A8+var_190($sp)
                addiu   $v1, $sp, 0x1A8+var_10C
                la      $t9, i2d_ASN1_OCTET_STRING
                sw      $v1, 0x1A8+var_38($sp)
                move    $a0, $v1
                move    $a1, $zero
                addu    $s0, $s3
                move    $s1, $v0
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                addu    $s0, $s2
                lw      $v1, 4($s4)
                addu    $s0, $s1
                lw      $gp, 0x1A8+var_190($sp)
                bnez    $v1, loc_3FEB0
                addu    $s0, $v0

loc_3F87C:                               # CODE XREF: i2d_SSL_SESSION+8E0↓j
                lw      $v0, 0xA4($s4)
                bnez    $v0, loc_3FE7C
                la      $t9, i2d_ASN1_INTEGER
                sw      $zero, 0x1A8+var_40($sp)

loc_3F88C:                               # CODE XREF: i2d_SSL_SESSION+8C4↓j
                lw      $v0, 0xA0($s4)
                bnez    $v0, loc_3FDC0
                la      $t9, i2d_ASN1_INTEGER
                sw      $zero, 0x1A8+var_44($sp)

loc_3F89C:                               # CODE XREF: i2d_SSL_SESSION+808↓j
                lw      $a0, 0x94($s4)
                beqz    $a0, loc_3FD80
                la      $t9, i2d_X509
                jalr    $t9 ; i2d_X509
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                sw      $v0, 0x1A8+var_48($sp)
                li      $a0, 1
                move    $a1, $v0
                jalr    $t9 ; ASN1_object_size
                li      $a2, 3
                lw      $gp, 0x1A8+var_190($sp)
                addu    $s0, $v0

loc_3F8D4:                               # CODE XREF: i2d_SSL_SESSION:loc_3FD80↓j
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $v0, $sp, 0x1A8+var_EC
                move    $a0, $v0
                move    $a1, $zero
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                sw      $v0, 0x1A8+var_30($sp)
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                li      $a0, 1
                move    $a1, $v0
                li      $a2, 4
                jalr    $t9 ; ASN1_object_size
                move    $s2, $v0
                lw      $v1, 0x98($s4)
                lw      $gp, 0x1A8+var_190($sp)
                bnez    $v1, loc_3FD88
                addu    $s0, $v0, $s0
                sw      $zero, 0x1A8+var_4C($sp)

loc_3F91C:                               # CODE XREF: i2d_SSL_SESSION+7D4↓j
                lw      $v0, 0xD4($s4)
                blez    $v0, loc_3FCD4
                la      $t9, i2d_ASN1_INTEGER
                addiu   $a0, $sp, 0x1A8+var_8C
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                sw      $v0, 0x1A8+var_50($sp)
                li      $a0, 1
                move    $a1, $v0
                jalr    $t9 ; ASN1_object_size
                li      $a2, 9
                addu    $s0, $v0
                lw      $v0, 0xCC($s4)
                beqz    $v0, loc_3FCE0
                lw      $gp, 0x1A8+var_190($sp)

loc_3F960:                               # CODE XREF: i2d_SSL_SESSION+6F4↓j
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_7C
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                sw      $v0, 0x1A8+var_54($sp)
                li      $a0, 1
                move    $a1, $v0
                jalr    $t9 ; ASN1_object_size
                li      $a2, 0xA
                addu    $s0, $v0
                lw      $v0, 0xC8($s4)
                beqz    $v0, loc_3FCEC
                lw      $gp, 0x1A8+var_190($sp)

loc_3F99C:                               # CODE XREF: i2d_SSL_SESSION+700↓j
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_9C
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                li      $a0, 1
                move    $a1, $v0
                li      $a2, 6
                jalr    $t9 ; ASN1_object_size
                move    $s5, $v0
                addu    $s0, $v0
                lw      $v0, 0xA8($s4)
                bnez    $v0, loc_3FCF8
                lw      $gp, 0x1A8+var_190($sp)

loc_3F9D8:                               # CODE XREF: i2d_SSL_SESSION+70C↓j
                lw      $v0, 0xD8($s4)
                beqz    $v0, loc_3FD34
                sw      $zero, 0x1A8+var_58($sp)

loc_3F9E4:                               # CODE XREF: i2d_SSL_SESSION+748↓j
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_6C
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                li      $a0, 1
                move    $a1, $v0
                li      $a2, 0xC
                jalr    $t9 ; ASN1_object_size
                move    $s6, $v0
                lw      $gp, 0x1A8+var_190($sp)
                addu    $s0, $v0

loc_3FA18:                               # CODE XREF: i2d_SSL_SESSION:loc_3FD34↓j
                la      $t9, ASN1_object_size
                li      $a0, 1
                move    $a1, $s0
                jalr    $t9 ; ASN1_object_size
                li      $a2, 0x10
                lw      $v1, 0x1A8+arg_4($sp)
                lw      $gp, 0x1A8+var_190($sp)
                beqz    $v1, loc_3FC84
                move    $s3, $v0
                lw      $v0, 0($v1)
                addiu   $s1, $sp, 0x1A8+var_180
                la      $t9, ASN1_put_object
                move    $a2, $s0
                li      $a3, 0x10
                sw      $v0, 0x1A8+var_180($sp)
                move    $a0, $s1
                li      $a1, 1
                jalr    $t9 ; ASN1_put_object
                sw      $zero, 0x1A8+var_198($sp)
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_INTEGER
                move    $a0, $fp
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $s1
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_INTEGER
                move    $a0, $s7
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $s1
                lw      $gp, 0x1A8+var_190($sp)
                lw      $a0, 0x1A8+var_3C($sp)
                la      $t9, i2d_ASN1_OCTET_STRING
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $s1
                lw      $gp, 0x1A8+var_190($sp)
                lw      $a0, 0x1A8+var_34($sp)
                la      $t9, i2d_ASN1_OCTET_STRING
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $s1
                lw      $gp, 0x1A8+var_190($sp)
                lw      $a0, 0x1A8+var_38($sp)
                la      $t9, i2d_ASN1_OCTET_STRING
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $s1
                lw      $v1, 4($s4)
                bnez    $v1, loc_3FEEC
                lw      $gp, 0x1A8+var_190($sp)
                lw      $v0, 0xA4($s4)
                bnez    $v0, loc_3FF24
                la      $t9, ASN1_put_object

loc_3FAE0:                               # CODE XREF: i2d_SSL_SESSION+938↓j
                lw      $v0, 0xA0($s4)
                bnez    $v0, loc_3FF64
                la      $t9, ASN1_put_object

loc_3FAEC:                               # CODE XREF: i2d_SSL_SESSION+974↓j
                                         # i2d_SSL_SESSION+9B0↓j
                lw      $v0, 0x94($s4)
                beqz    $v0, loc_3FB2C
                la      $t9, ASN1_put_object
                li      $v0, 0x80
                lw      $a2, 0x1A8+var_48($sp)
                sw      $v0, 0x1A8+var_198($sp)
                move    $a0, $s1
                li      $a1, 1
                jalr    $t9 ; ASN1_put_object
                li      $a3, 3
                lw      $gp, 0x1A8+var_190($sp)
                lw      $a0, 0x94($s4)
                la      $t9, i2d_X509
                jalr    $t9 ; i2d_X509
                move    $a1, $s1
                lw      $gp, 0x1A8+var_190($sp)

loc_3FB2C:                               # CODE XREF: i2d_SSL_SESSION+50C↑j
                la      $t9, ASN1_put_object
                li      $s0, 0x80
                move    $a2, $s2
                move    $a0, $s1
                li      $a1, 1
                li      $a3, 4
                jalr    $t9 ; ASN1_put_object
                sw      $s0, 0x1A8+var_198($sp)
                lw      $gp, 0x1A8+var_190($sp)
                lw      $a0, 0x1A8+var_30($sp)
                la      $t9, i2d_ASN1_OCTET_STRING
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $s1
                lw      $v1, 0x98($s4)
                bnez    $v1, loc_3FFD4
                lw      $gp, 0x1A8+var_190($sp)

loc_3FB6C:                               # CODE XREF: i2d_SSL_SESSION:loc_40004↓j
                lw      $v0, 0xC8($s4)
                beqz    $v0, loc_3FBAC
                nop
                la      $t9, ASN1_put_object
                move    $a2, $s5
                move    $a0, $s1
                li      $a1, 1
                li      $a3, 6
                jalr    $t9 ; ASN1_put_object
                sw      $s0, 0x1A8+var_198($sp)
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_9C
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $s1
                lw      $gp, 0x1A8+var_190($sp)

loc_3FBAC:                               # CODE XREF: i2d_SSL_SESSION+58C↑j
                lw      $v0, 0xD4($s4)
                blez    $v0, loc_3FBEC
                nop
                la      $t9, ASN1_put_object
                lw      $a2, 0x1A8+var_50($sp)
                move    $a0, $s1
                li      $a1, 1
                li      $a3, 9
                jalr    $t9 ; ASN1_put_object
                sw      $s0, 0x1A8+var_198($sp)
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_INTEGER
                addiu   $a0, $sp, 0x1A8+var_8C
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $s1
                lw      $gp, 0x1A8+var_190($sp)

loc_3FBEC:                               # CODE XREF: i2d_SSL_SESSION+5CC↑j
                lw      $v0, 0xCC($s4)
                beqz    $v0, loc_3FC2C
                nop
                la      $t9, ASN1_put_object
                lw      $a2, 0x1A8+var_54($sp)
                move    $a0, $s1
                li      $a1, 1
                li      $a3, 0xA
                jalr    $t9 ; ASN1_put_object
                sw      $s0, 0x1A8+var_198($sp)
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_7C
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $s1
                lw      $gp, 0x1A8+var_190($sp)

loc_3FC2C:                               # CODE XREF: i2d_SSL_SESSION+60C↑j
                lw      $v0, 0xA8($s4)
                bnez    $v0, loc_3FF9C
                nop

loc_3FC38:                               # CODE XREF: i2d_SSL_SESSION+9E8↓j
                lw      $v0, 0xD8($s4)
                beqz    $v0, loc_3FC7C
                lw      $v0, 0x1A8+var_180($sp)
                la      $t9, ASN1_put_object
                move    $a2, $s6
                move    $a0, $s1
                li      $a1, 1
                li      $a3, 0xC
                jalr    $t9 ; ASN1_put_object
                sw      $s0, 0x1A8+var_198($sp)
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_OCTET_STRING
                move    $a1, $s1
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_6C
                lw      $gp, 0x1A8+var_190($sp)
                lw      $v0, 0x1A8+var_180($sp)

loc_3FC7C:                               # CODE XREF: i2d_SSL_SESSION+658↑j
                lw      $v1, 0x1A8+arg_4($sp)
                sw      $v0, 0($v1)

loc_3FC84:                               # CODE XREF: i2d_SSL_SESSION+450↑j
                move    $v0, $s3
                lw      $ra, 0x1A8+var_4($sp)
                lw      $fp, 0x1A8+var_8($sp)
                lw      $s7, 0x1A8+var_C($sp)
                lw      $s6, 0x1A8+var_10($sp)
                lw      $s5, 0x1A8+var_14($sp)
                lw      $s4, 0x1A8+var_18($sp)
                lw      $s3, 0x1A8+var_1C($sp)
                lw      $s2, 0x1A8+var_20($sp)
                lw      $s1, 0x1A8+var_24($sp)
                lw      $s0, 0x1A8+var_28($sp)
                jr      $ra
                addiu   $sp, 0x1A8
 # ---------------------------------------------------------------------------

loc_3FCB8:                               # CODE XREF: i2d_SSL_SESSION+E4↑j
                sb      $v0, 0x1A8+var_188($sp)
                li      $v0, 1
                sw      $v0, 0x1A8+var_11C($sp)
                addiu   $v0, $sp, 0x1A8+var_188
                sw      $v1, 0x1A8+var_118($sp)
                b       loc_3F6D0
                sw      $v0, 0x1A8+var_114($sp)
 # ---------------------------------------------------------------------------

loc_3FCD4:                               # CODE XREF: i2d_SSL_SESSION+33C↑j
                lw      $v0, 0xCC($s4)
                bnez    $v0, loc_3F960
                sw      $zero, 0x1A8+var_50($sp)

loc_3FCE0:                               # CODE XREF: i2d_SSL_SESSION+374↑j
                lw      $v0, 0xC8($s4)
                bnez    $v0, loc_3F99C
                sw      $zero, 0x1A8+var_54($sp)

loc_3FCEC:                               # CODE XREF: i2d_SSL_SESSION+3B0↑j
                lw      $v0, 0xA8($s4)
                beqz    $v0, loc_3F9D8
                move    $s5, $zero

loc_3FCF8:                               # CODE XREF: i2d_SSL_SESSION+3EC↑j
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_11C
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                sw      $v0, 0x1A8+var_58($sp)
                li      $a0, 1
                move    $a1, $v0
                jalr    $t9 ; ASN1_object_size
                li      $a2, 0xB
                addu    $s0, $v0
                lw      $v0, 0xD8($s4)
                bnez    $v0, loc_3F9E4
                lw      $gp, 0x1A8+var_190($sp)

loc_3FD34:                               # CODE XREF: i2d_SSL_SESSION+3F8↑j
                b       loc_3FA18
                move    $s6, $zero
 # ---------------------------------------------------------------------------

loc_3FD3C:                               # CODE XREF: i2d_SSL_SESSION+4C↑j
                lw      $v0, 0xB0($a0)
                bnez    $v0, loc_3F638
                nop

loc_3FD48:                               # CODE XREF: i2d_SSL_SESSION+40↑j
                move    $s3, $zero
                move    $v0, $s3
                lw      $ra, 0x1A8+var_4($sp)
                lw      $fp, 0x1A8+var_8($sp)
                lw      $s7, 0x1A8+var_C($sp)
                lw      $s6, 0x1A8+var_10($sp)
                lw      $s5, 0x1A8+var_14($sp)
                lw      $s4, 0x1A8+var_18($sp)
                lw      $s3, 0x1A8+var_1C($sp)
                lw      $s2, 0x1A8+var_20($sp)
                lw      $s1, 0x1A8+var_24($sp)
                lw      $s0, 0x1A8+var_28($sp)
                jr      $ra
                addiu   $sp, 0x1A8
 # ---------------------------------------------------------------------------

loc_3FD80:                               # CODE XREF: i2d_SSL_SESSION+2BC↑j
                b       loc_3F8D4
                sw      $zero, 0x1A8+var_48($sp)
 # ---------------------------------------------------------------------------

loc_3FD88:                               # CODE XREF: i2d_SSL_SESSION+32C↑j
                la      $t9, i2d_ASN1_INTEGER
                addiu   $a0, $sp, 0x1A8+var_AC
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                sw      $v0, 0x1A8+var_4C($sp)
                li      $a0, 1
                move    $a1, $v0
                jalr    $t9 ; ASN1_object_size
                li      $a2, 5
                lw      $gp, 0x1A8+var_190($sp)
                b       loc_3F91C
                addu    $s0, $v0
 # ---------------------------------------------------------------------------

loc_3FDC0:                               # CODE XREF: i2d_SSL_SESSION+2AC↑j
                addiu   $a0, $sp, 0x1A8+var_BC
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                sw      $v0, 0x1A8+var_44($sp)
                li      $a0, 1
                move    $a1, $v0
                jalr    $t9 ; ASN1_object_size
                li      $a2, 2
                lw      $gp, 0x1A8+var_190($sp)
                b       loc_3F89C
                addu    $s0, $v0
 # ---------------------------------------------------------------------------

loc_3FDF4:                               # CODE XREF: i2d_SSL_SESSION+14C↑j
                la      $t9, ASN1_INTEGER_set
                sw      $v0, 0x1A8+var_BC($sp)
                li      $v1, 2
                addiu   $v0, $sp, 0x1A8+var_164
                sw      $v1, 0x1A8+var_B8($sp)
                sw      $v0, 0x1A8+var_B4($sp)
                jalr    $t9 ; ASN1_INTEGER_set
                addiu   $a0, $sp, 0x1A8+var_BC
                lw      $a1, 0x98($s4)
                beqz    $a1, loc_3F744
                lw      $gp, 0x1A8+var_190($sp)
                li      $v0, 8
                la      $t9, ASN1_INTEGER_set

loc_3FE28:                               # CODE XREF: i2d_SSL_SESSION+158↑j
                sw      $v0, 0x1A8+var_AC($sp)
                li      $v1, 2
                addiu   $v0, $sp, 0x1A8+var_15C
                sw      $v1, 0x1A8+var_A8($sp)
                sw      $v0, 0x1A8+var_A4($sp)
                jalr    $t9 ; ASN1_INTEGER_set
                addiu   $a0, $sp, 0x1A8+var_AC
                b       loc_3F744
                lw      $gp, 0x1A8+var_190($sp)
 # ---------------------------------------------------------------------------

loc_3FE4C:                               # CODE XREF: i2d_SSL_SESSION+140↑j
                li      $v0, 8
                la      $t9, ASN1_INTEGER_set
                sw      $v0, 0x1A8+var_CC($sp)
                li      $v1, 2
                addiu   $v0, $sp, 0x1A8+var_16C
                sw      $v1, 0x1A8+var_C8($sp)
                sw      $v0, 0x1A8+var_C4($sp)
                move    $a1, $t2
                jalr    $t9 ; ASN1_INTEGER_set
                addiu   $a0, $sp, 0x1A8+var_CC
                b       loc_3F72C
                lw      $gp, 0x1A8+var_190($sp)
 # ---------------------------------------------------------------------------

loc_3FE7C:                               # CODE XREF: i2d_SSL_SESSION+29C↑j
                addiu   $a0, $sp, 0x1A8+var_CC
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_object_size
                sw      $v0, 0x1A8+var_40($sp)
                li      $a0, 1
                move    $a1, $v0
                jalr    $t9 ; ASN1_object_size
                li      $a2, 1
                lw      $gp, 0x1A8+var_190($sp)
                b       loc_3F88C
                addu    $s0, $v0
 # ---------------------------------------------------------------------------

loc_3FEB0:                               # CODE XREF: i2d_SSL_SESSION+290↑j
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_DC
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $zero
                lw      $gp, 0x1A8+var_190($sp)
                b       loc_3F87C
                addu    $s0, $v0
 # ---------------------------------------------------------------------------

loc_3FECC:                               # CODE XREF: i2d_SSL_SESSION+CC↑j
                sra     $v0, $a1, 16
                sra     $a0, $a1, 8
                li      $v1, 3
                sw      $v1, 0x1A8+var_12C($sp)
                sb      $v0, 0x1A8+var_187($sp)
                sb      $a0, 0x1A8+var_186($sp)
                b       loc_3F6C4
                sb      $a1, 0x1A8+var_185($sp)
 # ---------------------------------------------------------------------------

loc_3FEEC:                               # CODE XREF: i2d_SSL_SESSION+4E8↑j
                lw      $s0, 0x1A8+var_180($sp)
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_DC
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $s1
                lbu     $v1, 0($s0)
                li      $v0, 0xFFFFFF80
                andi    $v1, 0x20
                or      $v1, $v0
                lw      $gp, 0x1A8+var_190($sp)
                sb      $v1, 0($s0)
                lw      $v0, 0xA4($s4)
                beqz    $v0, loc_3FAE0
                la      $t9, ASN1_put_object

loc_3FF24:                               # CODE XREF: i2d_SSL_SESSION+4F4↑j
                li      $v0, 0x80
                lw      $a2, 0x1A8+var_40($sp)
                sw      $v0, 0x1A8+var_198($sp)
                move    $a0, $s1
                li      $a1, 1
                jalr    $t9 ; ASN1_put_object
                li      $a3, 1
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_INTEGER
                addiu   $a0, $sp, 0x1A8+var_CC
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $s1
                lw      $v0, 0xA0($s4)
                beqz    $v0, loc_3FAEC
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, ASN1_put_object

loc_3FF64:                               # CODE XREF: i2d_SSL_SESSION+500↑j
                li      $v0, 0x80
                lw      $a2, 0x1A8+var_44($sp)
                sw      $v0, 0x1A8+var_198($sp)
                move    $a0, $s1
                li      $a1, 1
                jalr    $t9 ; ASN1_put_object
                li      $a3, 2
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_INTEGER
                addiu   $a0, $sp, 0x1A8+var_BC
                jalr    $t9 ; i2d_ASN1_INTEGER
                move    $a1, $s1
                b       loc_3FAEC
                lw      $gp, 0x1A8+var_190($sp)
 # ---------------------------------------------------------------------------

loc_3FF9C:                               # CODE XREF: i2d_SSL_SESSION+64C↑j
                la      $t9, ASN1_put_object
                lw      $a2, 0x1A8+var_58($sp)
                move    $a0, $s1
                li      $a1, 1
                li      $a3, 0xB
                jalr    $t9 ; ASN1_put_object
                sw      $s0, 0x1A8+var_198($sp)
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_OCTET_STRING
                addiu   $a0, $sp, 0x1A8+var_11C
                jalr    $t9 ; i2d_ASN1_OCTET_STRING
                move    $a1, $s1
                b       loc_3FC38
                lw      $gp, 0x1A8+var_190($sp)
 # ---------------------------------------------------------------------------

loc_3FFD4:                               # CODE XREF: i2d_SSL_SESSION+580↑j
                la      $t9, ASN1_put_object
                lw      $a2, 0x1A8+var_4C($sp)
                move    $a0, $s1
                li      $a1, 1
                li      $a3, 5
                jalr    $t9 ; ASN1_put_object
                sw      $s0, 0x1A8+var_198($sp)
                lw      $gp, 0x1A8+var_190($sp)
                la      $t9, i2d_ASN1_INTEGER
                addiu   $a0, $sp, 0x1A8+var_AC
                jalr    $t9 ; i2d_ASN1_INTEGER

loc_40000:                               # DATA XREF: sub_A24C+420↑o
                                         # ssl2_connect+EDC↑o ...
                move    $a1, $s1

loc_40004:                               # DATA XREF: ssl_parse_serverhello_tlsext+108↑o
                b       loc_3FB6C
                lw      $gp, 0x1A8+var_190($sp)
 # ---------------------------------------------------------------------------

loc_4000C:                               # CODE XREF: i2d_SSL_SESSION+B8↑j
                b       loc_3F6A8
                lw      $a1, 0xB0($s4)
 # End of function i2d_SSL_SESSION


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_print
SSL_SESSION_print:                       # CODE XREF: SSL_SESSION_print_fp+74↓p
                                         # DATA XREF: LOAD:00002E48↑o ...

var_30          = -0x30
var_2C          = -0x2C
var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_SESSION_print)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s3, 0x40+var_C($sp)
                sw      $s2, 0x40+var_10($sp)
                sw      $s1, 0x40+var_14($sp)
                sw      $s0, 0x40+var_18($sp)
                sw      $gp, 0x40+var_28($sp)
                move    $s1, $a1
                beqz    $a1, loc_40100
                move    $s2, $a0
                la      $a1, loc_40000
                la      $t9, BIO_puts
                jalr    $t9 ; BIO_puts
                addiu   $a1, (aSslSession - 0x40000)  # "SSL-Session:\n"
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                lw      $v1, 0($s1)
                li      $v0, 2
                beq     $v1, $v0, loc_40120
                li      $v0, 0x300
                beq     $v1, $v0, loc_40298
                li      $v0, 0x303
                beq     $v1, $v0, loc_40310
                li      $v0, 0x302
                beq     $v1, $v0, loc_40270
                li      $v0, 0x301
                beq     $v1, $v0, loc_4031C
                li      $v0, 0xFEFF
                beq     $v1, $v0, loc_40394
                li      $v0, 0x100
                beq     $v1, $v0, loc_40504
                la      $v0, loc_40000
                b       loc_40128
                addiu   $a2, $v0, (aUnknown - 0x40000)  # "unknown"
 # ---------------------------------------------------------------------------

loc_400A8:                               # CODE XREF: SSL_SESSION_print+440↓j
                addiu   $v0, $sp, 0x40+var_20
                move    $a2, $zero
                sw      $v0, 0x40+var_2C($sp)
                sw      $zero, 0x40+var_20($sp)
                sw      $zero, 0x40+var_30($sp)
                move    $a0, $s1
                move    $a1, $zero
                jalr    $t9 ; ssl_cipher_get_evp
                move    $a3, $zero
                lw      $a2, 0x40+var_20($sp)
                beqz    $a2, loc_40558
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 8($a2)
                la      $a1, loc_40000
                la      $t9, BIO_printf
                lw      $a2, 0($a2)
                lw      $a3, 4($v0)
                addiu   $a1, (aCompressionDS - 0x40000)  # "\n    Compression: %d (%s)"
                jalr    $t9 ; BIO_printf
                move    $a0, $s2
                bgtz    $v0, loc_4045C
                lw      $gp, 0x40+var_28($sp)

loc_40100:                               # CODE XREF: SSL_SESSION_print+2C↑j
                                         # SSL_SESSION_print+44↑j ...
                move    $v0, $zero

loc_40104:                               # CODE XREF: SSL_SESSION_print+1BC↓j
                                         # SSL_SESSION_print+228↓j ...
                lw      $ra, 0x40+var_8($sp)
                lw      $s3, 0x40+var_C($sp)
                lw      $s2, 0x40+var_10($sp)
                lw      $s1, 0x40+var_14($sp)
                lw      $s0, 0x40+var_18($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_40120:                               # CODE XREF: SSL_SESSION_print+54↑j
                la      $v0, loc_40000
                addiu   $a2, $v0, (aSslv2 - 0x40000)  # "SSLv2"

loc_40128:                               # CODE XREF: SSL_SESSION_print+8C↑j
                                         # SSL_SESSION_print+260↓j ...
                la      $a1, loc_40000
                la      $t9, BIO_printf
                addiu   $a1, (aProtocolS - 0x40000)  # "    Protocol  : %s\n"
                jalr    $t9 ; BIO_printf
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0xAC($s1)
                beqz    $v0, loc_40244
                la      $a1, loc_40000
                lw      $a2, 4($v0)
                la      $t9, BIO_printf
                addiu   $a1, (aCipherS - 0x40000)  # "    Cipher    : %s\n"

loc_4015C:                               # CODE XREF: SSL_SESSION_print+254↓j
                                         # SSL_SESSION_print+27C↓j
                jalr    $t9 ; BIO_printf
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                la      $a1, loc_40000
                la      $t9, BIO_puts
                addiu   $a1, (aSessionId - 0x40000)  # "    Session-ID: "
                jalr    $t9 ; BIO_puts
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x44($s1)
                beqz    $v0, loc_401D8
                la      $s3, loc_40000
                b       loc_401AC
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_4019C:                               # CODE XREF: SSL_SESSION_print+1B4↓j
                lw      $v0, 0x44($s1)
                sltu    $v0, $s0, $v0
                beqz    $v0, loc_401DC
                la      $a1, loc_40000

loc_401AC:                               # CODE XREF: SSL_SESSION_print+180↑j
                addu    $v0, $s1, $s0
                la      $t9, BIO_printf
                lbu     $a2, 0x48($v0)
                move    $a0, $s2
                jalr    $t9 ; BIO_printf
                addiu   $a1, $s3, 0x7664
                addiu   $s0, 1
                bgtz    $v0, loc_4019C
                lw      $gp, 0x40+var_28($sp)
                b       loc_40104
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_401D8:                               # CODE XREF: SSL_SESSION_print+178↑j
                la      $a1, loc_40000

loc_401DC:                               # CODE XREF: SSL_SESSION_print+190↑j
                la      $t9, BIO_puts
                addiu   $a1, (aSessionIdCtx - 0x40000)  # "\n    Session-ID-ctx: "
                jalr    $t9 ; BIO_puts
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x68($s1)
                beqz    $v0, loc_402A4
                la      $s3, loc_40000
                b       loc_40218
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_40208:                               # CODE XREF: SSL_SESSION_print+220↓j
                lw      $v0, 0x68($s1)
                sltu    $v0, $s0, $v0
                beqz    $v0, loc_402A8
                la      $a1, loc_40000

loc_40218:                               # CODE XREF: SSL_SESSION_print+1EC↑j
                addu    $v0, $s1, $s0
                la      $t9, BIO_printf
                lbu     $a2, 0x6C($v0)
                move    $a0, $s2
                jalr    $t9 ; BIO_printf
                addiu   $a1, $s3, 0x7664
                addiu   $s0, 1
                bgtz    $v0, loc_40208
                lw      $gp, 0x40+var_28($sp)
                b       loc_40104
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_40244:                               # CODE XREF: SSL_SESSION_print+134↑j
                lw      $a0, 0xB0($s1)
                lui     $v0, 0xFF00
                and     $v0, $a0, $v0
                lui     $v1, 0x200
                beq     $v0, $v1, loc_4027C
                nop
                la      $a1, loc_40000
                la      $t9, BIO_printf
                addiu   $a1, (aCipher04lx - 0x40000)  # "    Cipher    : %04lX\n"
                b       loc_4015C
                andi    $a2, $a0, 0xFFFF
 # ---------------------------------------------------------------------------

loc_40270:                               # CODE XREF: SSL_SESSION_print+6C↑j
                la      $v0, loc_40000
                b       loc_40128
                addiu   $a2, $v0, (aTlsv11 - 0x40000)  # "TLSv1.1"
 # ---------------------------------------------------------------------------

loc_4027C:                               # CODE XREF: SSL_SESSION_print+240↑j
                lui     $a2, 0xFF
                la      $a1, loc_40000
                li      $a2, 0xFFFFFF
                la      $t9, BIO_printf
                and     $a2, $a0, $a2
                b       loc_4015C
                addiu   $a1, (aCipher06lx - 0x40000)  # "    Cipher    : %06lX\n"
 # ---------------------------------------------------------------------------

loc_40298:                               # CODE XREF: SSL_SESSION_print+5C↑j
                la      $v0, loc_40000
                b       loc_40128
                addiu   $a2, $v0, (aSslv3 - 0x40000)  # "SSLv3"
 # ---------------------------------------------------------------------------

loc_402A4:                               # CODE XREF: SSL_SESSION_print+1E4↑j
                la      $a1, loc_40000

loc_402A8:                               # CODE XREF: SSL_SESSION_print+1FC↑j
                la      $t9, BIO_puts
                addiu   $a1, (aMasterKey - 0x40000)  # "\n    Master-Key: "
                jalr    $t9 ; BIO_puts
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x10($s1)
                beqz    $v0, loc_40328
                la      $s3, loc_40000
                b       loc_402E4
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_402D4:                               # CODE XREF: SSL_SESSION_print+2EC↓j
                lw      $v0, 0x10($s1)
                sltu    $v0, $s0, $v0
                beqz    $v0, loc_4032C
                la      $a1, loc_40000

loc_402E4:                               # CODE XREF: SSL_SESSION_print+2B8↑j
                addu    $v0, $s1, $s0
                la      $t9, BIO_printf
                lbu     $a2, 0x14($v0)
                move    $a0, $s2
                jalr    $t9 ; BIO_printf
                addiu   $a1, $s3, 0x7664
                addiu   $s0, 1
                bgtz    $v0, loc_402D4
                lw      $gp, 0x40+var_28($sp)
                b       loc_40104
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_40310:                               # CODE XREF: SSL_SESSION_print+64↑j
                la      $v0, loc_40000
                b       loc_40128
                addiu   $a2, $v0, (aTlsv12 - 0x40000)  # "TLSv1.2"
 # ---------------------------------------------------------------------------

loc_4031C:                               # CODE XREF: SSL_SESSION_print+74↑j
                la      $v0, loc_40000
                b       loc_40128
                addiu   $a2, $v0, (aTlsv1 - 0x40000)  # "TLSv1"
 # ---------------------------------------------------------------------------

loc_40328:                               # CODE XREF: SSL_SESSION_print+2B0↑j
                la      $a1, loc_40000

loc_4032C:                               # CODE XREF: SSL_SESSION_print+2C8↑j
                la      $t9, BIO_puts
                addiu   $a1, (aKeyArg - 0x40000)  # "\n    Key-Arg   : "
                jalr    $t9 ; BIO_puts
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 4($s1)
                beqz    $v0, loc_403A0
                la      $s3, loc_40000
                b       loc_40368
                move    $s0, $zero
 # ---------------------------------------------------------------------------

loc_40358:                               # CODE XREF: SSL_SESSION_print+370↓j
                lw      $v0, 4($s1)
                sltu    $v0, $s0, $v0
                beqz    $v0, loc_403C0
                la      $a1, loc_40000

loc_40368:                               # CODE XREF: SSL_SESSION_print+33C↑j
                addu    $v0, $s1, $s0
                la      $t9, BIO_printf
                lbu     $a2, 8($v0)
                move    $a0, $s2
                jalr    $t9 ; BIO_printf
                addiu   $a1, $s3, 0x7664
                addiu   $s0, 1
                bgtz    $v0, loc_40358
                lw      $gp, 0x40+var_28($sp)
                b       loc_40104
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_40394:                               # CODE XREF: SSL_SESSION_print+7C↑j
                la      $v0, loc_40000
                b       loc_40128
                addiu   $a2, $v0, (aDtlsv1 - 0x40000)  # "DTLSv1"
 # ---------------------------------------------------------------------------

loc_403A0:                               # CODE XREF: SSL_SESSION_print+334↑j
                la      $a1, loc_40000
                la      $t9, BIO_puts
                addiu   $a1, (aNone_0 - 0x40000)  # "None"
                jalr    $t9 ; BIO_puts
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                la      $a1, loc_40000

loc_403C0:                               # CODE XREF: SSL_SESSION_print+34C↑j
                la      $t9, BIO_puts
                addiu   $a1, (aSrpUsername - 0x40000)  # "\n    SRP username: "
                jalr    $t9 ; BIO_puts
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                lw      $a2, 0xD8($s1)
                beqz    $a2, loc_40530
                la      $v0, loc_40000

loc_403E4:                               # CODE XREF: SSL_SESSION_print:loc_40530↓j
                la      $a1, loc_40000
                la      $t9, BIO_printf
                addiu   $a1, (aS - 0x40000)  # "%s"
                jalr    $t9 ; BIO_printf
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                lw      $a2, 0xD4($s1)
                bnez    $a2, loc_40510
                la      $a1, loc_40000

loc_4040C:                               # CODE XREF: SSL_SESSION_print+50C↓j
                lw      $v0, 0xCC($s1)
                beqz    $v0, loc_40450
                la      $a1, loc_40000
                la      $t9, BIO_puts
                addiu   $a1, (aTlsSessionTick - 0x40000)  # "\n    TLS session ticket:\n"
                jalr    $t9 ; BIO_puts
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BIO_dump_indent
                lw      $a1, 0xCC($s1)
                lw      $a2, 0xD0($s1)
                move    $a0, $s2
                jalr    $t9 ; BIO_dump_indent
                li      $a3, 4
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)

loc_40450:                               # CODE XREF: SSL_SESSION_print+3FC↑j
                lw      $v0, 0xA8($s1)
                bnez    $v0, loc_400A8
                la      $t9, ssl_cipher_get_evp

loc_4045C:                               # CODE XREF: SSL_SESSION_print+E4↑j
                                         # SSL_SESSION_print+55C↓j
                lw      $a2, 0xA4($s1)
                bnez    $a2, loc_40538
                la      $a1, loc_40000

loc_40468:                               # CODE XREF: SSL_SESSION_print+534↓j
                lw      $a2, 0xA0($s1)
                beqz    $a2, loc_40494
                la      $a1, loc_40000
                la      $a1, loc_40000
                la      $t9, BIO_printf
                addiu   $a1, (aTimeoutLdSec - 0x40000)  # "\n    Timeout   : %ld (sec)"
                jalr    $t9 ; BIO_printf
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                la      $a1, loc_40000

loc_40494:                               # CODE XREF: SSL_SESSION_print+458↑j
                la      $t9, BIO_puts
                addiu   $a1, (aLdS+8 - 0x40000)  # "\n"
                jalr    $t9 ; BIO_puts
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                la      $a1, loc_40000
                la      $t9, BIO_puts
                addiu   $a1, (aVerifyReturnCo - 0x40000)  # "    Verify return code: "
                jalr    $t9 ; BIO_puts
                move    $a0, $s2
                blez    $v0, loc_40100
                lw      $gp, 0x40+var_28($sp)
                lw      $s0, 0x98($s1)
                la      $t9, X509_verify_cert_error_string
                jalr    $t9 ; X509_verify_cert_error_string
                move    $a0, $s0
                lw      $gp, 0x40+var_28($sp)
                la      $a1, loc_40000
                la      $t9, BIO_printf
                move    $a0, $s2
                addiu   $a1, (aLdS - 0x40000)  # "%ld (%s)\n"
                move    $a2, $s0
                jalr    $t9 ; BIO_printf
                move    $a3, $v0
                lw      $gp, 0x40+var_28($sp)
                b       loc_40104
                slt     $v0, $zero, $v0
 # ---------------------------------------------------------------------------

loc_40504:                               # CODE XREF: SSL_SESSION_print+84↑j
                la      $v0, loc_40000
                b       loc_40128
                addiu   $a2, $v0, (aDtlsv1Bad - 0x40000)  # "DTLSv1-bad"
 # ---------------------------------------------------------------------------

loc_40510:                               # CODE XREF: SSL_SESSION_print+3F0↑j
                la      $t9, BIO_printf
                addiu   $a1, (aTlsSessionTick_0 - 0x40000)  # "\n    TLS session ticket lifetime hint:"...
                jalr    $t9 ; BIO_printf
                move    $a0, $s2
                bgtz    $v0, loc_4040C
                lw      $gp, 0x40+var_28($sp)
                b       loc_40104
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_40530:                               # CODE XREF: SSL_SESSION_print+3C8↑j
                b       loc_403E4
                addiu   $a2, $v0, (aNone_0 - 0x40000)  # "None"
 # ---------------------------------------------------------------------------

loc_40538:                               # CODE XREF: SSL_SESSION_print+44C↑j
                la      $t9, BIO_printf
                addiu   $a1, (aStartTimeLd - 0x40000)  # "\n    Start Time: %ld"
                jalr    $t9 ; BIO_printf
                move    $a0, $s2
                bgtz    $v0, loc_40468
                lw      $gp, 0x40+var_28($sp)
                b       loc_40104
                move    $v0, $zero
 # ---------------------------------------------------------------------------

loc_40558:                               # CODE XREF: SSL_SESSION_print+BC↑j
                la      $a1, loc_40000
                la      $t9, BIO_printf
                lw      $a2, 0xA8($s1)
                addiu   $a1, (aCompressionD - 0x40000)  # "\n    Compression: %d"
                jalr    $t9 ; BIO_printf
                move    $a0, $s2
                bgtz    $v0, loc_4045C
                lw      $gp, 0x40+var_28($sp)
                b       loc_40104
                move    $v0, $zero
 # End of function SSL_SESSION_print


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SESSION_print_fp
SSL_SESSION_print_fp:                    # DATA XREF: LOAD:00001A98↑o

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_SESSION_print_fp)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_s_file
                move    $s1, $a0
                jalr    $t9 ; BIO_s_file
                move    $s2, $a1
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s0, $v0
                beqz    $v0, loc_40630
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_ctrl
                move    $a3, $s1
                move    $a2, $zero
                move    $a0, $v0
                jalr    $t9 ; BIO_ctrl
                li      $a1, 0x6A  # 'j'
                lw      $gp, 0x30+var_18($sp)
                la      $t9, SSL_SESSION_print
                move    $a1, $s2
                jalr    $t9 ; SSL_SESSION_print
                move    $a0, $s0
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BIO_free
                move    $a0, $s0
                jalr    $t9 ; BIO_free
                move    $s0, $v0
                move    $v0, $s0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_40630:                               # CODE XREF: SSL_SESSION_print_fp+48↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0xBE
                li      $a2, 7
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                move    $v0, $s0
                lw      $gp, 0x30+var_18($sp)
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                jr      $ra
                addiu   $sp, 0x30
 # End of function SSL_SESSION_print_fp


 # =============== S U B R O U T I N E =======================================


                .globl SSL_library_init
SSL_library_init:                        # DATA XREF: LOAD:00001E98↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_library_init)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_des_cbc
                la      $s1, loc_40000
                jalr    $t9 ; EVP_des_cbc
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_des_ede3_cbc
                la      $s0, loc_40000
                jalr    $t9 ; EVP_des_ede3_cbc
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_rc4
                jalr    $t9 ; EVP_rc4
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_aes_128_cbc
                jalr    $t9 ; EVP_aes_128_cbc
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_aes_192_cbc
                jalr    $t9 ; EVP_aes_192_cbc
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_aes_256_cbc
                jalr    $t9 ; EVP_aes_256_cbc
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_aes_128_gcm
                jalr    $t9 ; EVP_aes_128_gcm
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_aes_256_gcm
                jalr    $t9 ; EVP_aes_256_gcm
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_aes_128_cbc_hmac_sha1
                jalr    $t9 ; EVP_aes_128_cbc_hmac_sha1
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_aes_256_cbc_hmac_sha1
                jalr    $t9 ; EVP_aes_256_cbc_hmac_sha1
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_cipher
                jalr    $t9 ; EVP_add_cipher
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_md5
                jalr    $t9 ; EVP_md5
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_digest
                jalr    $t9 ; EVP_add_digest
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $a0, loc_40000
                la      $t9, OBJ_NAME_add
                addiu   $a2, $s1, (aExpAdhRc4Md5+0xC - 0x40000)  # "MD5"
                addiu   $a0, (aSsl2Md5 - 0x40000)  # "ssl2-md5"
                jalr    $t9 ; OBJ_NAME_add
                li      $a1, 0x8001
                lw      $gp, 0x28+var_18($sp)
                la      $a0, loc_40000
                la      $t9, OBJ_NAME_add
                addiu   $a2, $s1, (aExpAdhRc4Md5+0xC - 0x40000)  # "MD5"
                li      $a1, 0x8001
                jalr    $t9 ; OBJ_NAME_add
                addiu   $a0, (aSsl3Md5 - 0x40000)  # "ssl3-md5"
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_sha1
                jalr    $t9 ; EVP_sha1
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_digest
                jalr    $t9 ; EVP_add_digest
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $a0, loc_40000
                la      $a2, loc_40000
                la      $t9, OBJ_NAME_add
                addiu   $a0, (aSsl3Sha1 - 0x40000)  # "ssl3-sha1"
                addiu   $a2, (aSha1 - 0x40000)  # "SHA1"
                jalr    $t9 ; OBJ_NAME_add
                li      $a1, 0x8001
                lw      $gp, 0x28+var_18($sp)
                la      $a2, loc_40000
                la      $a0, loc_40000
                la      $t9, OBJ_NAME_add
                addiu   $a2, (aRsaSha1 - 0x40000)  # "RSA-SHA1"
                li      $a1, 0x8001
                jalr    $t9 ; OBJ_NAME_add
                addiu   $a0, (aRsaSha12 - 0x40000)  # "RSA-SHA1-2"
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_sha224
                jalr    $t9 ; EVP_sha224
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_digest
                jalr    $t9 ; EVP_add_digest
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_sha256
                jalr    $t9 ; EVP_sha256
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_digest
                jalr    $t9 ; EVP_add_digest
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_sha384
                jalr    $t9 ; EVP_sha384
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_digest
                jalr    $t9 ; EVP_add_digest
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_sha512
                jalr    $t9 ; EVP_sha512
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_digest
                jalr    $t9 ; EVP_add_digest
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_dss1
                jalr    $t9 ; EVP_dss1
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, EVP_add_digest
                jalr    $t9 ; EVP_add_digest
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)
                la      $a0, loc_40000
                la      $t9, OBJ_NAME_add
                addiu   $a2, $s0, 0x77D0
                addiu   $a0, (aDsaSha1Old - 0x40000)  # "DSA-SHA1-old"
                jalr    $t9 ; OBJ_NAME_add
                li      $a1, 0x8001
                lw      $gp, 0x28+var_18($sp)
                la      $a0, loc_40000
                la      $t9, OBJ_NAME_add
                addiu   $a2, $s0, 0x77D0
                addiu   $a0, (aDss1 - 0x40000)  # "DSS1"
                jalr    $t9 ; OBJ_NAME_add
                li      $a1, 0x8001
                lw      $gp, 0x28+var_18($sp)
                la      $a0, loc_40000
                la      $t9, OBJ_NAME_add
                addiu   $a2, $s0, 0x77D0
                addiu   $a0, (aDss1_0 - 0x40000)  # "dss1"
                jalr    $t9 ; OBJ_NAME_add
                li      $a1, 0x8001
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_COMP_get_compression_methods
                jalr    $t9 ; SSL_COMP_get_compression_methods
                nop
                lw      $gp, 0x28+var_18($sp)
                la      $t9, ssl_load_ciphers
                jalr    $t9 ; ssl_load_ciphers
                nop
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # End of function SSL_library_init


 # =============== S U B R O U T I N E =======================================


                .globl BIO_f_ssl
BIO_f_ssl:                               # CODE XREF: BIO_new_ssl+2C↓p
                                         # DATA XREF: LOAD:00003C08↑o ...
                la      $gp, (off_5A360+0x7FF0 - BIO_f_ssl)
                addu    $gp, $t9
                li      $v0, 0x60000
                jr      $ra
                addiu   $v0, (dword_5A330 - 0x60000)
 # End of function BIO_f_ssl


 # =============== S U B R O U T I N E =======================================


                .globl BIO_ssl_shutdown
BIO_ssl_shutdown:                        # DATA XREF: LOAD:00002158↑o
                la      $gp, (off_5A360+0x7FF0 - BIO_ssl_shutdown)
                addu    $gp, $t9
                bnez    $a0, loc_409F8
                move    $a1, $a0
                b       locret_40A18
                nop
 # ---------------------------------------------------------------------------

loc_409EC:                               # CODE XREF: BIO_ssl_shutdown+34↓j
                lw      $a1, 0x24($a1)
                beqz    $a1, locret_40A18
                nop

loc_409F8:                               # CODE XREF: BIO_ssl_shutdown+C↑j
                lw      $v0, 0($a1)
                li      $v1, 0x207
                lw      $a0, 0($v0)
                bne     $a0, $v1, loc_409EC
                la      $t9, SSL_shutdown
                lw      $v0, 0x20($a1)
                jr      $t9 ; SSL_shutdown
                lw      $a0, 0($v0)
 # ---------------------------------------------------------------------------

locret_40A18:                            # CODE XREF: BIO_ssl_shutdown+14↑j
                                         # BIO_ssl_shutdown+20↑j
                jr      $ra
                nop
 # End of function BIO_ssl_shutdown


 # =============== S U B R O U T I N E =======================================


                .globl BIO_ssl_copy_session_id
BIO_ssl_copy_session_id:                 # DATA XREF: LOAD:00001D98↑o

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - BIO_ssl_copy_session_id)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                la      $t9, BIO_find_type
                move    $s0, $a1
                jalr    $t9 ; BIO_find_type
                li      $a1, 0x207
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BIO_find_type
                move    $a0, $s0
                li      $a1, 0x207
                jalr    $t9 ; BIO_find_type
                move    $s0, $v0
                move    $v1, $v0
                beqz    $s0, loc_40AB8
                lw      $gp, 0x20+var_10($sp)
                beqz    $v0, loc_40ABC
                lw      $ra, 0x20+var_4($sp)
                lw      $v0, 0x20($s0)
                lw      $a0, 0($v0)
                beqz    $a0, loc_40AC0
                lw      $s0, 0x20+var_8($sp)
                lw      $v0, 0x20($v1)
                lw      $a1, 0($v0)
                beqz    $a1, loc_40AC0
                la      $t9, SSL_copy_session_id
                jalr    $t9 ; SSL_copy_session_id
                nop
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_40AB8:                               # CODE XREF: BIO_ssl_copy_session_id+48↑j
                lw      $ra, 0x20+var_4($sp)

loc_40ABC:                               # CODE XREF: BIO_ssl_copy_session_id+50↑j
                lw      $s0, 0x20+var_8($sp)

loc_40AC0:                               # CODE XREF: BIO_ssl_copy_session_id+60↑j
                                         # BIO_ssl_copy_session_id+70↑j
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x20
 # End of function BIO_ssl_copy_session_id


 # =============== S U B R O U T I N E =======================================


                .globl BIO_new_ssl
BIO_new_ssl:                             # CODE XREF: BIO_new_ssl_connect+50↓p
                                         # DATA XREF: LOAD:00003118↑o ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - BIO_new_ssl)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_f_ssl
                move    $s0, $a0
                jalr    $t9 ; BIO_f_ssl
                move    $s2, $a1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_40B68
                lw      $gp, 0x28+var_18($sp)
                la      $t9, SSL_new
                jalr    $t9 ; SSL_new
                move    $a0, $s0
                move    $s0, $v0
                beqz    $v0, loc_40B94
                lw      $gp, 0x28+var_18($sp)
                bnez    $s2, loc_40B84
                la      $t9, SSL_set_connect_state
                la      $t9, SSL_set_accept_state
                jalr    $t9 ; SSL_set_accept_state
                move    $a0, $v0
                lw      $gp, 0x28+var_18($sp)

loc_40B4C:                               # CODE XREF: BIO_new_ssl+C0↓j
                la      $t9, BIO_ctrl
                move    $a3, $s0
                move    $a0, $s1
                li      $a1, 0x6D  # 'm'
                jalr    $t9 ; BIO_ctrl
                li      $a2, 1
                lw      $gp, 0x28+var_18($sp)

loc_40B68:                               # CODE XREF: BIO_new_ssl+48↑j
                                         # BIO_new_ssl+D8↓j
                move    $v0, $s1
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_40B84:                               # CODE XREF: BIO_new_ssl+68↑j
                jalr    $t9 ; SSL_set_connect_state
                move    $a0, $v0
                b       loc_40B4C
                lw      $gp, 0x28+var_18($sp)
 # ---------------------------------------------------------------------------

loc_40B94:                               # CODE XREF: BIO_new_ssl+60↑j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                b       loc_40B68
                move    $s1, $zero
 # End of function BIO_new_ssl


 # =============== S U B R O U T I N E =======================================


                .globl BIO_new_ssl_connect
BIO_new_ssl_connect:                     # CODE XREF: BIO_new_buffer_ssl_connect+50↓p
                                         # DATA XREF: LOAD:00003198↑o ...

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - BIO_new_ssl_connect)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_s_connect
                jalr    $t9 ; BIO_s_connect
                move    $s1, $a0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s0, $v0
                beqz    $v0, loc_40C60
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_new_ssl
                move    $a0, $s1
                jalr    $t9 ; BIO_new_ssl
                li      $a1, 1
                beqz    $v0, loc_40C38
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_push
                move    $a0, $v0
                jalr    $t9 ; BIO_push
                move    $a1, $s0
                beqz    $v0, loc_40C38
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_40C38:                               # CODE XREF: BIO_new_ssl_connect+58↑j
                                         # BIO_new_ssl_connect+70↑j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s0
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_40C60:                               # CODE XREF: BIO_new_ssl_connect+40↑j
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function BIO_new_ssl_connect


 # =============== S U B R O U T I N E =======================================


                .globl BIO_new_buffer_ssl_connect
BIO_new_buffer_ssl_connect:              # DATA XREF: LOAD:00002188↑o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - BIO_new_buffer_ssl_connect)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_f_buffer
                jalr    $t9 ; BIO_f_buffer
                move    $s0, $a0
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_new
                jalr    $t9 ; BIO_new
                move    $a0, $v0
                move    $s1, $v0
                beqz    $v0, loc_40D14
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_new_ssl_connect
                jalr    $t9 ; BIO_new_ssl_connect
                move    $a0, $s0
                move    $s0, $v0
                beqz    $v0, loc_40D34
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_push
                move    $a0, $s1
                jalr    $t9 ; BIO_push
                move    $a1, $v0
                move    $s2, $v0
                beqz    $v0, loc_40D4C
                lw      $gp, 0x28+var_18($sp)

loc_40CF8:                               # CODE XREF: BIO_new_buffer_ssl_connect+CC↓j
                                         # BIO_new_buffer_ssl_connect+F0↓j
                move    $v0, $s2
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_40D14:                               # CODE XREF: BIO_new_buffer_ssl_connect+44↑j
                move    $s2, $zero
                move    $v0, $s2
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_40D34:                               # CODE XREF: BIO_new_buffer_ssl_connect+5C↑j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                b       loc_40CF8
                move    $s2, $zero
 # ---------------------------------------------------------------------------

loc_40D4C:                               # CODE XREF: BIO_new_buffer_ssl_connect+78↑j
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_free
                jalr    $t9 ; BIO_free
                move    $a0, $s0
                b       loc_40CF8
                lw      $gp, 0x28+var_18($sp)
 # End of function BIO_new_buffer_ssl_connect


 # =============== S U B R O U T I N E =======================================


sub_40D70:                               # DATA XREF: .data:0005A354↓o

var_10          = -0x10
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_40D70)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                lw      $v0, 0x20($a0)
                lw      $a0, 0($v0)
                li      $v0, 0xE
                beq     $a1, $v0, loc_40DAC
                la      $t9, BIO_callback_ctrl
                lw      $a0, 0xC($a0)
                lw      $ra, 0x20+var_8($sp)
                jr      $t9 ; BIO_callback_ctrl
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_40DAC:                               # CODE XREF: sub_40D70+24↑j
                la      $t9, SSL_set_info_callback
                jalr    $t9 ; SSL_set_info_callback
                move    $a1, $a2
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x20
 # End of function sub_40D70


 # =============== S U B R O U T I N E =======================================


sub_40DCC:                               # DATA XREF: .data:0005A350↓o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_40DCC)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                beqz    $a0, loc_40E9C
                move    $s0, $a0
                lw      $s1, 0x20($a0)
                lw      $a0, 0($s1)
                beqz    $a0, loc_40E10
                la      $t9, SSL_shutdown
                jalr    $t9 ; SSL_shutdown
                nop
                lw      $gp, 0x28+var_18($sp)

loc_40E10:                               # CODE XREF: sub_40DCC+30↑j
                lw      $v0, 0x10($s0)
                bnez    $v0, loc_40E50
                nop
                lw      $a0, 0x20($s0)
                beqz    $a0, loc_40E88
                lw      $ra, 0x28+var_8($sp)

loc_40E28:                               # CODE XREF: sub_40DCC+B0↓j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x28+var_18($sp)
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_40E50:                               # CODE XREF: sub_40DCC+48↑j
                lw      $v0, 0xC($s0)
                beqz    $v0, loc_40E74
                nop
                lw      $a0, 0($s1)
                beqz    $a0, loc_40E74
                la      $t9, SSL_free
                jalr    $t9 ; SSL_free
                nop
                lw      $gp, 0x28+var_18($sp)

loc_40E74:                               # CODE XREF: sub_40DCC+88↑j
                                         # sub_40DCC+94↑j
                lw      $a0, 0x20($s0)
                sw      $zero, 0xC($s0)
                bnez    $a0, loc_40E28
                sw      $zero, 0x14($s0)
                lw      $ra, 0x28+var_8($sp)

loc_40E88:                               # CODE XREF: sub_40DCC+54↑j
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_40E9C:                               # CODE XREF: sub_40DCC+20↑j
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function sub_40DCC


 # =============== S U B R O U T I N E =======================================


sub_40EB4:                               # DATA XREF: .data:0005A34C↓o

var_18          = -0x18
var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - sub_40EB4)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_4($sp)
                sw      $s0, 0x28+var_8($sp)
                sw      $gp, 0x28+var_10($sp)
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                move    $s0, $a0
                addiu   $a1, (aBioSslC - 0x40000)  # "bio_ssl.c"
                li      $a0, 0x18
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x6C  # 'l'
                beqz    $v0, loc_40F2C
                lw      $gp, 0x28+var_10($sp)
                sw      $zero, 0($v0)
                sw      $zero, 4($v0)
                sw      $zero, 8($v0)
                sw      $zero, 0xC($v0)
                sw      $zero, 0x10($v0)
                sw      $zero, 0x14($v0)
                lw      $ra, 0x28+var_4($sp)
                sw      $v0, 0x20($s0)
                sw      $zero, 0x14($s0)
                sw      $zero, 0xC($s0)
                lw      $s0, 0x28+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x28
 # ---------------------------------------------------------------------------

loc_40F2C:                               # CODE XREF: sub_40EB4+38↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x28+var_18($sp)
                li      $a0, 0x20  # ' '
                li      $a1, 0x76  # 'v'
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x28+var_10($sp)
                lw      $ra, 0x28+var_4($sp)
                lw      $s0, 0x28+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x28
 # End of function sub_40EB4


 # =============== S U B R O U T I N E =======================================


sub_40F60:                               # DATA XREF: .data:0005A340↓o

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_40F60)
                addu    $gp, $t9
                addiu   $sp, -0x28
                sw      $ra, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                la      $t9, strlen
                move    $s0, $a0
                move    $a0, $a1
                jalr    $t9 ; strlen
                move    $s1, $a1
                lw      $gp, 0x28+var_18($sp)
                la      $t9, BIO_write
                move    $a0, $s0
                move    $a1, $s1
                lw      $ra, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                move    $a2, $v0
                jr      $t9 ; BIO_write
                addiu   $sp, 0x28
 # End of function sub_40F60


 # =============== S U B R O U T I N E =======================================


sub_40FBC:                               # DATA XREF: .data:0005A33C↓o

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - sub_40FBC)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s4, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                move    $s0, $a1
                move    $s2, $a2
                beqz    $a1, loc_41054
                move    $s4, $a0
                la      $t9, BIO_clear_flags
                lw      $s1, 0x20($a0)
                li      $a1, 0xF
                jalr    $t9 ; BIO_clear_flags
                lw      $s3, 0($s1)
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_read
                move    $a1, $s0
                move    $a2, $s2
                jalr    $t9 ; SSL_read
                move    $a0, $s3
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_get_error
                move    $a0, $s3
                move    $a1, $v0
                jalr    $t9 ; SSL_get_error
                move    $s0, $v0
                move    $v1, $v0
                sltiu   $v0, 9           # switch 9 cases
                bnez    $v0, loc_41078

def_41090:                               # jumptable 00041090 default case
                lw      $gp, 0x30+var_20($sp)

loc_4104C:                               # CODE XREF: sub_40FBC+D4↓j
                                         # sub_40FBC+200↓j
                                         # DATA XREF: ...
                move    $v0, $zero       # jumptable 00041090 cases 1,5,6

loc_41050:                               # CODE XREF: sub_40FBC:loc_41138↓j
                                         # sub_40FBC+1D4↓j ...
                sw      $v0, 0x18($s4)

loc_41054:                               # CODE XREF: sub_40FBC+34↑j
                                         # sub_40FBC+F4↓j ...
                move    $v0, $s0
                lw      $ra, 0x30+var_4($sp)
                lw      $s4, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_41078:                               # CODE XREF: sub_40FBC+88↑j
                sll     $v0, $v1, 2
                la      $v1, loc_40000
                addiu   $v1, (jpt_41090 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_41098:                               # CODE XREF: sub_40FBC+D4↑j
                                         # DATA XREF: .rodata:jpt_41090↓o
                la      $t9, BIO_set_flags  # jumptable 00041090 case 8
                move    $a0, $s4
                jalr    $t9 ; BIO_set_flags
                li      $a1, 0xC
                lw      $gp, 0x30+var_20($sp)
                li      $v0, 3
                b       loc_41054
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_410B8:                               # CODE XREF: sub_40FBC+D4↑j
                                         # DATA XREF: .rodata:jpt_41090↓o
                la      $t9, BIO_set_flags  # jumptable 00041090 case 7
                move    $a0, $s4
                jalr    $t9 ; BIO_set_flags
                li      $a1, 0xC
                lw      $gp, 0x30+var_20($sp)
                li      $v0, 2
                b       loc_41054
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_410D8:                               # CODE XREF: sub_40FBC+D4↑j
                                         # DATA XREF: .rodata:jpt_41090↓o
                la      $t9, BIO_set_flags  # jumptable 00041090 case 4
                move    $a0, $s4
                jalr    $t9 ; BIO_set_flags
                li      $a1, 0xC
                lw      $gp, 0x30+var_20($sp)
                li      $v0, 1
                b       loc_41054
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_410F8:                               # CODE XREF: sub_40FBC+D4↑j
                                         # DATA XREF: .rodata:jpt_41090↓o
                la      $t9, BIO_set_flags  # jumptable 00041090 case 3
                move    $a0, $s4
                jalr    $t9 ; BIO_set_flags
                li      $a1, 0xA
                lw      $gp, 0x30+var_20($sp)
                move    $v0, $zero
                b       loc_41054
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_41118:                               # CODE XREF: sub_40FBC+D4↑j
                                         # DATA XREF: .rodata:jpt_41090↓o
                la      $t9, BIO_set_flags  # jumptable 00041090 case 2
                move    $a0, $s4
                jalr    $t9 ; BIO_set_flags
                li      $a1, 9
                lw      $gp, 0x30+var_20($sp)
                move    $v0, $zero
                b       loc_41054
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_41138:                               # CODE XREF: sub_40FBC+D4↑j
                                         # DATA XREF: .rodata:jpt_41090↓o
                blez    $s0, loc_41050   # jumptable 00041090 case 0
                move    $v0, $zero
                lw      $v1, 8($s1)
                beqz    $v1, loc_41188
                nop
                lw      $v0, 0xC($s1)
                addu    $v0, $s0, $v0
                sltu    $v1, $v0
                beqz    $v1, loc_41188
                sw      $v0, 0xC($s1)
                lw      $v0, 4($s1)
                la      $t9, SSL_renegotiate
                addiu   $v0, 1
                sw      $v0, 4($s1)
                sw      $zero, 0xC($s1)
                jalr    $t9 ; SSL_renegotiate
                move    $a0, $s3
                lw      $gp, 0x30+var_20($sp)
                b       loc_4118C
                li      $v1, 1
 # ---------------------------------------------------------------------------

loc_41188:                               # CODE XREF: sub_40FBC+188↑j
                                         # sub_40FBC+19C↑j
                move    $v1, $zero

loc_4118C:                               # CODE XREF: sub_40FBC+1C4↑j
                lw      $v0, 0x10($s1)
                beqz    $v0, loc_41050
                move    $v0, $zero
                bnez    $v1, loc_41050
                la      $t9, time
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $v1, 0x10($s1)
                lw      $a0, 0x14($s1)
                lw      $gp, 0x30+var_20($sp)
                addu    $v1, $a0
                sltu    $v1, $v0
                beqz    $v1, loc_4104C   # jumptable 00041090 cases 1,5,6
                move    $a1, $v0
                lw      $v0, 4($s1)
                la      $t9, SSL_renegotiate
                addiu   $v0, 1
                sw      $v0, 4($s1)
                sw      $a1, 0x14($s1)
                jalr    $t9 ; SSL_renegotiate
                move    $a0, $s3
                lw      $gp, 0x30+var_20($sp)
                move    $v0, $zero
                b       loc_41054
                sw      $v0, 0x18($s4)
 # End of function sub_40FBC


 # =============== S U B R O U T I N E =======================================


sub_411F0:                               # DATA XREF: .data:0005A338↓o

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - sub_411F0)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s4, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                move    $s0, $a1
                move    $s2, $a2
                beqz    $a1, loc_41288
                move    $s4, $a0
                la      $t9, BIO_clear_flags
                lw      $s1, 0x20($a0)
                li      $a1, 0xF
                jalr    $t9 ; BIO_clear_flags
                lw      $s3, 0($s1)
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_write
                move    $a1, $s0
                move    $a2, $s2
                jalr    $t9 ; SSL_write
                move    $a0, $s3
                lw      $gp, 0x30+var_20($sp)
                la      $t9, SSL_get_error
                move    $a0, $s3
                move    $a1, $v0
                jalr    $t9 ; SSL_get_error
                move    $s0, $v0
                move    $v1, $v0
                sltiu   $v0, 8           # switch 8 cases
                bnez    $v0, loc_412AC

def_412C4:                               # jumptable 000412C4 default case
                lw      $gp, 0x30+var_20($sp)

loc_41280:                               # CODE XREF: sub_411F0+D4↓j
                                         # sub_411F0+1B8↓j
                                         # DATA XREF: ...
                move    $v0, $zero       # jumptable 000412C4 cases 1,5,6

loc_41284:                               # CODE XREF: sub_411F0:loc_4134C↓j
                                         # sub_411F0+18C↓j ...
                sw      $v0, 0x18($s4)

loc_41288:                               # CODE XREF: sub_411F0+34↑j
                                         # sub_411F0+F4↓j ...
                move    $v0, $s0
                lw      $ra, 0x30+var_4($sp)
                lw      $s4, 0x30+var_8($sp)
                lw      $s3, 0x30+var_C($sp)
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_412AC:                               # CODE XREF: sub_411F0+88↑j
                sll     $v0, $v1, 2
                la      $v1, loc_40000
                addiu   $v1, (jpt_412C4 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_412CC:                               # CODE XREF: sub_411F0+D4↑j
                                         # DATA XREF: .rodata:jpt_412C4↓o
                la      $t9, BIO_set_flags  # jumptable 000412C4 case 7
                move    $a0, $s4
                jalr    $t9 ; BIO_set_flags
                li      $a1, 0xC
                lw      $gp, 0x30+var_20($sp)
                li      $v0, 2
                b       loc_41288
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_412EC:                               # CODE XREF: sub_411F0+D4↑j
                                         # DATA XREF: .rodata:jpt_412C4↓o
                la      $t9, BIO_set_flags  # jumptable 000412C4 case 4
                move    $a0, $s4
                jalr    $t9 ; BIO_set_flags
                li      $a1, 0xC
                lw      $gp, 0x30+var_20($sp)
                li      $v0, 1
                b       loc_41288
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_4130C:                               # CODE XREF: sub_411F0+D4↑j
                                         # DATA XREF: .rodata:jpt_412C4↓o
                la      $t9, BIO_set_flags  # jumptable 000412C4 case 3
                move    $a0, $s4
                jalr    $t9 ; BIO_set_flags
                li      $a1, 0xA
                lw      $gp, 0x30+var_20($sp)
                move    $v0, $zero
                b       loc_41288
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_4132C:                               # CODE XREF: sub_411F0+D4↑j
                                         # DATA XREF: .rodata:jpt_412C4↓o
                la      $t9, BIO_set_flags  # jumptable 000412C4 case 2
                move    $a0, $s4
                jalr    $t9 ; BIO_set_flags
                li      $a1, 9
                lw      $gp, 0x30+var_20($sp)
                move    $v0, $zero
                b       loc_41288
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_4134C:                               # CODE XREF: sub_411F0+D4↑j
                                         # DATA XREF: .rodata:jpt_412C4↓o
                blez    $s0, loc_41284   # jumptable 000412C4 case 0
                move    $v0, $zero
                lw      $v1, 8($s1)
                beqz    $v1, loc_41374
                nop
                lw      $v0, 0xC($s1)
                addu    $v0, $s0, $v0
                sltu    $v1, $v0
                bnez    $v1, loc_413DC
                sw      $v0, 0xC($s1)

loc_41374:                               # CODE XREF: sub_411F0+168↑j
                move    $v1, $zero

loc_41378:                               # CODE XREF: sub_411F0+20C↓j
                lw      $v0, 0x10($s1)
                beqz    $v0, loc_41284
                move    $v0, $zero
                bnez    $v1, loc_41284
                la      $t9, time
                jalr    $t9 ; time
                move    $a0, $zero
                lw      $v1, 0x10($s1)
                lw      $a0, 0x14($s1)
                lw      $gp, 0x30+var_20($sp)
                addu    $v1, $a0
                sltu    $v1, $v0
                beqz    $v1, loc_41280   # jumptable 000412C4 cases 1,5,6
                move    $a1, $v0
                lw      $v0, 4($s1)
                la      $t9, SSL_renegotiate
                addiu   $v0, 1
                sw      $v0, 4($s1)
                sw      $a1, 0x14($s1)
                jalr    $t9 ; SSL_renegotiate
                move    $a0, $s3
                lw      $gp, 0x30+var_20($sp)
                move    $v0, $zero
                b       loc_41288
                sw      $v0, 0x18($s4)
 # ---------------------------------------------------------------------------

loc_413DC:                               # CODE XREF: sub_411F0+17C↑j
                lw      $v0, 4($s1)
                la      $t9, SSL_renegotiate
                addiu   $v0, 1
                sw      $v0, 4($s1)
                sw      $zero, 0xC($s1)
                jalr    $t9 ; SSL_renegotiate
                move    $a0, $s3
                lw      $gp, 0x30+var_20($sp)
                b       loc_41378
                li      $v1, 1
 # End of function sub_411F0


 # =============== S U B R O U T I N E =======================================


sub_41404:                               # DATA XREF: .data:0005A348↓o

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - sub_41404)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                lw      $s0, 0x20($a0)
                move    $s3, $a0
                lw      $s2, 0($s0)
                move    $s1, $a1
                move    $s5, $a2
                beqz    $s2, loc_414B0
                move    $s4, $a3
                sltiu   $v0, $a1, 0x80   # switch 128 cases
                bnez    $v0, loc_41494

def_414A8:                               # jumptable 000414A8 default case
                la      $v1, loc_40000

loc_4145C:                               # CODE XREF: sub_41404+A4↓j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                lw      $a0, 0xC($s2)    # jumptable 000414A8 cases 0,2,4,5,16-100,102-104,106-108,111-118,120-124

loc_41460:                               # CODE XREF: sub_41404+2CC↓j
                la      $t9, BIO_ctrl

loc_41464:                               # CODE XREF: sub_41404+2D8↓j
                move    $a1, $s1
                move    $a2, $s5
                move    $a3, $s4

loc_41470:                               # CODE XREF: sub_41404+358↓j
                                         # sub_41404+4B0↓j ...
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                jr      $t9 ; BIO_ctrl
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_41494:                               # CODE XREF: sub_41404+50↑j
                sll     $v0, $a1, 2
                addiu   $v1, (jpt_414A8 - 0x40000)
                addu    $v0, $v1
                lw      $a0, 0($v0)
                addu    $a0, $gp
                jr      $a0              # switch jump
                nop
 # ---------------------------------------------------------------------------

loc_414B0:                               # CODE XREF: sub_41404+44↑j
                li      $v0, 0x6D  # 'm'
                beq     $a1, $v0, loc_41578
                la      $t9, SSL_get_rbio

loc_414BC:                               # CODE XREF: sub_41404+A4↑j
                                         # sub_41404:loc_418BC↓j
                                         # DATA XREF: ...
                move    $s1, $zero       # jumptable 000414A8 cases 3,14

loc_414C0:                               # CODE XREF: sub_41404+228↓j
                                         # sub_41404+234↓j ...
                move    $v0, $s1
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_414E8:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                la      $t9, SSL_shutdown  # jumptable 000414A8 case 109
                jalr    $t9 ; SSL_shutdown
                move    $a0, $s2
                lw      $v1, 0x10($s3)
                beqz    $v1, loc_41514
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0xC($s3)
                bnez    $v0, loc_4160C
                nop

loc_4150C:                               # CODE XREF: sub_41404+20C↓j
                                         # sub_41404+21C↓j
                sw      $zero, 0xC($s3)
                sw      $zero, 0x14($s3)

loc_41514:                               # CODE XREF: sub_41404+F4↑j
                lw      $a0, 0x20($s3)
                beqz    $a0, loc_4152C
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                nop
                lw      $gp, 0x40+var_28($sp)

loc_4152C:                               # CODE XREF: sub_41404+114↑j
                la      $a1, loc_40000
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aBioSslC - 0x40000)  # "bio_ssl.c"
                li      $a0, 0x18
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x6C  # 'l'
                beqz    $v0, loc_41944
                lw      $gp, 0x40+var_28($sp)
                sw      $zero, 0($v0)
                sw      $zero, 4($v0)
                sw      $zero, 8($v0)
                sw      $zero, 0xC($v0)
                sw      $zero, 0x10($v0)
                sw      $zero, 0x14($v0)
                move    $s0, $v0
                sw      $zero, 0xC($s3)
                sw      $v0, 0x20($s3)
                sw      $zero, 0x14($s3)
                la      $t9, SSL_get_rbio

loc_41578:                               # CODE XREF: sub_41404+B0↑j
                sw      $s4, 0($s0)
                sw      $s5, 0x10($s3)
                jalr    $t9 ; SSL_get_rbio
                move    $a0, $s4
                move    $s0, $v0
                beqz    $v0, loc_415D8
                lw      $gp, 0x40+var_28($sp)
                lw      $a1, 0x24($s3)
                beqz    $a1, loc_415AC
                la      $t9, BIO_push
                jalr    $t9 ; BIO_push
                move    $a0, $v0
                lw      $gp, 0x40+var_28($sp)

loc_415AC:                               # CODE XREF: sub_41404+194↑j
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x16D
                sw      $v0, 0x40+var_30($sp)
                addiu   $a0, $s0, 0x2C  # ','
                sw      $s0, 0x24($s3)
                addiu   $a3, (aBioSslC - 0x40000)  # "bio_ssl.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0x15
                lw      $gp, 0x40+var_28($sp)

loc_415D8:                               # CODE XREF: sub_41404+188↑j
                li      $s1, 1
                li      $v0, 1
                sw      $v0, 0xC($s3)
                lw      $ra, 0x40+var_8($sp)
                move    $v0, $s1
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_4160C:                               # CODE XREF: sub_41404+100↑j
                lw      $a0, 0($s0)
                beqz    $a0, loc_4150C
                la      $t9, SSL_free
                jalr    $t9 ; SSL_free
                nop
                b       loc_4150C
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_41628:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                lw      $a1, 0x24($s3)   # jumptable 000414A8 case 6
                beqz    $a1, loc_414C0
                li      $s1, 1
                lw      $v0, 0xC($s2)
                beq     $a1, $v0, loc_414C0
                la      $t9, SSL_set_bio
                move    $a2, $a1
                jalr    $t9 ; SSL_set_bio
                move    $a0, $s2
                lw      $gp, 0x40+var_28($sp)
                lw      $a0, 0x24($s3)
                la      $a3, loc_40000
                li      $v0, 0x191
                la      $t9, CRYPTO_add_lock
                sw      $v0, 0x40+var_30($sp)
                addiu   $a0, 0x2C  # ','
                addiu   $a3, (aBioSslC - 0x40000)  # "bio_ssl.c"
                li      $a1, 1
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0x15
                lw      $gp, 0x40+var_28($sp)
                b       loc_414C0
                li      $s1, 1
 # ---------------------------------------------------------------------------

loc_41684:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                beq     $s3, $a3, loc_418E8  # jumptable 000414A8 case 7
                li      $s1, 1
                b       loc_414C0
                nop
 # ---------------------------------------------------------------------------

loc_41694:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                la      $t9, SSL_shutdown  # jumptable 000414A8 case 1
                jalr    $t9 ; SSL_shutdown
                move    $a0, $s2
                lw      $v1, 8($s2)
                lw      $a0, 0x20($s2)
                lw      $v0, 0x14($v1)
                beq     $a0, $v0, loc_419E0
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x10($v1)
                beq     $a0, $v0, loc_419F4
                la      $t9, SSL_set_accept_state

loc_416C0:                               # CODE XREF: sub_41404+5E8↓j
                                         # sub_41404+5F8↓j
                la      $t9, SSL_clear
                jalr    $t9 ; SSL_clear
                move    $a0, $s2
                lw      $a0, 0x24($s3)
                bnez    $a0, loc_41460
                lw      $gp, 0x40+var_28($sp)
                lw      $a0, 0xC($s2)
                bnez    $a0, loc_41464
                la      $t9, BIO_ctrl
                b       loc_414C0
                li      $s1, 1
 # ---------------------------------------------------------------------------

loc_416EC:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                lw      $s0, 0x20($a3)   # jumptable 000414A8 case 12
                lw      $a0, 0($s0)
                beqz    $a0, loc_4170C
                la      $t9, SSL_free
                jalr    $t9 ; SSL_free
                nop
                lw      $gp, 0x40+var_28($sp)
                lw      $s0, 0x20($s4)

loc_4170C:                               # CODE XREF: sub_41404+2F0↑j
                la      $t9, SSL_dup
                jalr    $t9 ; SSL_dup
                move    $a0, $s2
                lw      $v1, 0x20($s4)
                lw      $gp, 0x40+var_28($sp)
                sw      $v0, 0($s0)
                lw      $v0, 0x20($s3)
                lw      $a3, 0($v1)
                lw      $t0, 0x14($v0)
                lw      $a0, 8($v0)
                lw      $a1, 0xC($v0)
                lw      $a2, 0x10($v0)
                sltu    $s1, $zero, $a3
                sw      $a0, 8($v1)
                sw      $a1, 0xC($v1)
                sw      $a2, 0x10($v1)
                b       loc_414C0
                sw      $t0, 0x14($v1)
 # ---------------------------------------------------------------------------

loc_41754:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                lw      $a0, 0x10($s2)   # jumptable 000414A8 case 13
                la      $t9, BIO_ctrl
                b       loc_41470
                li      $a1, 0xD
 # ---------------------------------------------------------------------------

loc_41764:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                b       loc_414C0        # jumptable 000414A8 case 8
                lw      $s1, 0x10($s3)
 # ---------------------------------------------------------------------------

loc_4176C:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                li      $s1, 1           # jumptable 000414A8 case 9
                b       loc_414C0
                sw      $a2, 0x10($s3)
 # ---------------------------------------------------------------------------

loc_41778:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                la      $t9, SSL_pending  # jumptable 000414A8 case 10
                jalr    $t9 ; SSL_pending
                move    $a0, $s2
                beqz    $v0, loc_4196C
                lw      $gp, 0x40+var_28($sp)
                b       loc_414C0
                move    $s1, $v0
 # ---------------------------------------------------------------------------

loc_41794:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                la      $t9, BIO_clear_flags  # jumptable 000414A8 case 11
                move    $a0, $s3
                jalr    $t9 ; BIO_clear_flags
                li      $a1, 0xF
                lw      $gp, 0x40+var_28($sp)
                lw      $a0, 0x10($s2)
                la      $t9, BIO_ctrl
                move    $a2, $s5
                move    $a3, $s4
                jalr    $t9 ; BIO_ctrl
                li      $a1, 0xB
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BIO_copy_next_retry
                move    $a0, $s3
                jalr    $t9 ; BIO_copy_next_retry
                move    $s1, $v0
                b       loc_414C0
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_417DC:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                beqz    $a2, loc_417E8   # jumptable 000414A8 case 119
                la      $t9, SSL_set_accept_state
                la      $t9, SSL_set_connect_state

loc_417E8:                               # CODE XREF: sub_41404:loc_417DC↑j
                jalr    $t9
                move    $a0, $s2
                lw      $gp, 0x40+var_28($sp)
                b       loc_414C0
                li      $s1, 1
 # ---------------------------------------------------------------------------

loc_417FC:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                slti    $v0, $a2, 0x200  # jumptable 000414A8 case 125
                bnez    $v0, loc_414C0
                lw      $s1, 8($s0)
                b       loc_414C0
                sw      $a2, 8($s0)
 # ---------------------------------------------------------------------------

loc_41810:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                b       loc_414C0        # jumptable 000414A8 case 126
                lw      $s1, 4($s0)
 # ---------------------------------------------------------------------------

loc_41818:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                slti    $v0, $a2, 0x3C  # '<'  # jumptable 000414A8 case 127
                li      $v1, 5
                la      $t9, time
                movz    $v1, $a2, $v0
                lw      $s1, 0x10($s0)
                move    $a0, $zero
                jalr    $t9 ; time
                sw      $v1, 0x10($s0)
                lw      $gp, 0x40+var_28($sp)
                b       loc_414C0
                sw      $v0, 0x14($s0)
 # ---------------------------------------------------------------------------

loc_41844:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                la      $t9, BIO_clear_flags  # jumptable 000414A8 case 101
                li      $a1, 0xF
                jalr    $t9 ; BIO_clear_flags
                move    $a0, $s3
                lw      $gp, 0x40+var_28($sp)
                la      $t9, SSL_do_handshake
                move    $a0, $s2
                jalr    $t9 ; SSL_do_handshake
                sw      $zero, 0x18($s3)
                lw      $gp, 0x40+var_28($sp)
                la      $t9, SSL_get_error
                move    $a0, $s2
                move    $a1, $v0
                jalr    $t9 ; SSL_get_error
                move    $s0, $v0
                move    $v1, $v0
                li      $v0, 3
                beq     $v1, $v0, loc_419C4
                lw      $gp, 0x40+var_28($sp)
                li      $v0, 7
                beq     $v1, $v0, loc_4199C
                li      $v0, 2
                beq     $v1, $v0, loc_41984
                la      $t9, BIO_set_flags
                b       loc_414C0
                move    $s1, $s0
 # ---------------------------------------------------------------------------

loc_418AC:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                lw      $a0, 0xC($s2)    # jumptable 000414A8 case 105
                la      $t9, BIO_ctrl
                b       loc_41470
                li      $a1, 0x69  # 'i'
 # ---------------------------------------------------------------------------

loc_418BC:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                beqz    $a3, loc_414BC   # jumptable 000414A8 case 110
                li      $s1, 1
                b       loc_414C0
                sw      $s2, 0($a3)
 # ---------------------------------------------------------------------------

loc_418CC:                               # CODE XREF: sub_41404+A4↑j
                                         # DATA XREF: .rodata:jpt_414A8↓o
                la      $t9, SSL_get_info_callback  # jumptable 000414A8 case 15
                jalr    $t9 ; SSL_get_info_callback
                move    $a0, $s2
                lw      $gp, 0x40+var_28($sp)
                li      $s1, 1
                b       loc_414C0
                sw      $v0, 0($s4)
 # ---------------------------------------------------------------------------

loc_418E8:                               # CODE XREF: sub_41404:loc_41684↑j
                lw      $a0, 0x10($s2)
                lw      $v0, 0xC($s2)
                beq     $v0, $a0, loc_41904
                la      $t9, BIO_free_all
                jalr    $t9 ; BIO_free_all
                nop
                lw      $gp, 0x40+var_28($sp)

loc_41904:                               # CODE XREF: sub_41404+4EC↑j
                lw      $a0, 0x24($s4)
                beqz    $a0, loc_41934
                la      $a3, loc_40000
                la      $t9, CRYPTO_add_lock
                li      $v0, 0x19E
                sw      $v0, 0x40+var_30($sp)
                addiu   $a0, 0x2C  # ','
                addiu   $a3, (aBioSslC - 0x40000)  # "bio_ssl.c"
                li      $a1, 0xFFFFFFFF
                jalr    $t9 ; CRYPTO_add_lock
                li      $a2, 0x15
                lw      $gp, 0x40+var_28($sp)

loc_41934:                               # CODE XREF: sub_41404+504↑j
                li      $s1, 1
                sw      $zero, 0xC($s2)
                b       loc_414C0
                sw      $zero, 0x10($s2)
 # ---------------------------------------------------------------------------

loc_41944:                               # CODE XREF: sub_41404+140↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x40+var_30($sp)
                li      $a0, 0x20  # ' '
                li      $a1, 0x76  # 'v'
                li      $a2, 0x41  # 'A'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x40+var_28($sp)
                b       loc_414C0
                move    $s1, $zero
 # ---------------------------------------------------------------------------

loc_4196C:                               # CODE XREF: sub_41404+380↑j
                lw      $a0, 0xC($s2)
                la      $t9, BIO_ctrl
                li      $a1, 0xA
                move    $a2, $zero
                b       loc_41470
                move    $a3, $zero
 # ---------------------------------------------------------------------------

loc_41984:                               # CODE XREF: sub_41404+498↑j
                move    $a0, $s3
                jalr    $t9 ; BIO_set_flags
                li      $a1, 9
                lw      $gp, 0x40+var_28($sp)
                b       loc_414C0
                move    $s1, $s0
 # ---------------------------------------------------------------------------

loc_4199C:                               # CODE XREF: sub_41404+490↑j
                la      $t9, BIO_set_flags
                move    $a0, $s3
                jalr    $t9 ; BIO_set_flags
                li      $a1, 0xC
                lw      $v0, 0x24($s3)
                lw      $gp, 0x40+var_28($sp)
                lw      $v1, 0x18($v0)
                move    $s1, $s0
                b       loc_414C0
                sw      $v1, 0x18($s3)
 # ---------------------------------------------------------------------------

loc_419C4:                               # CODE XREF: sub_41404+484↑j
                la      $t9, BIO_set_flags
                move    $a0, $s3
                jalr    $t9 ; BIO_set_flags
                li      $a1, 0xA
                lw      $gp, 0x40+var_28($sp)
                b       loc_414C0
                move    $s1, $s0
 # ---------------------------------------------------------------------------

loc_419E0:                               # CODE XREF: sub_41404+2A8↑j
                la      $t9, SSL_set_connect_state
                jalr    $t9 ; SSL_set_connect_state
                move    $a0, $s2
                b       loc_416C0
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_419F4:                               # CODE XREF: sub_41404+2B4↑j
                jalr    $t9 ; SSL_set_accept_state
                move    $a0, $s2
                b       loc_416C0
                lw      $gp, 0x40+var_28($sp)
 # End of function sub_41404


 # =============== S U B R O U T I N E =======================================


                .globl ERR_load_SSL_strings
ERR_load_SSL_strings:                    # DATA XREF: LOAD:00001E08↑o
                jr      $ra
                nop
 # End of function ERR_load_SSL_strings


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_SRP_CTX_init
SSL_CTX_SRP_CTX_init:                    # CODE XREF: SSL_CTX_new+2EC↑p
                                         # DATA XREF: LOAD:00002358↑o ...
                beqz    $a0, locret_41A60
                nop
                li      $v0, 0x400
                sw      $v0, 0x190($a0)
                li      $v0, 1
                sw      $zero, 0x158($a0)
                sw      $zero, 0x15C($a0)
                sw      $zero, 0x160($a0)
                sw      $zero, 0x164($a0)
                sw      $zero, 0x16C($a0)
                sw      $zero, 0x170($a0)
                sw      $zero, 0x174($a0)
                sw      $zero, 0x178($a0)
                sw      $zero, 0x17C($a0)
                sw      $zero, 0x180($a0)
                sw      $zero, 0x184($a0)
                sw      $zero, 0x188($a0)
                sw      $zero, 0x168($a0)
                sw      $zero, 0x194($a0)
                jr      $ra
                sw      $zero, 0x18C($a0)
 # ---------------------------------------------------------------------------

locret_41A60:                            # CODE XREF: SSL_CTX_SRP_CTX_init↑j
                jr      $ra
                move    $v0, $zero
 # End of function SSL_CTX_SRP_CTX_init


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_srp_g
SSL_get_srp_g:                           # DATA XREF: LOAD:00001DC8↑o
                lw      $v0, 0x194($a0)
                beqz    $v0, loc_41A7C
                nop
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_41A7C:                               # CODE XREF: SSL_get_srp_g+4↑j
                lw      $v0, 0xDC($a0)
                jr      $ra
                lw      $v0, 0x170($v0)
 # End of function SSL_get_srp_g


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_srp_N
SSL_get_srp_N:                           # DATA XREF: LOAD:00001BA8↑o
                lw      $v0, 0x190($a0)
                beqz    $v0, loc_41A9C
                nop
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_41A9C:                               # CODE XREF: SSL_get_srp_N+4↑j
                lw      $v0, 0xDC($a0)
                jr      $ra
                lw      $v0, 0x16C($v0)
 # End of function SSL_get_srp_N


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_srp_username
SSL_get_srp_username:                    # DATA XREF: LOAD:000020E8↑o
                lw      $v0, 0x18C($a0)
                beqz    $v0, loc_41ABC
                nop
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_41ABC:                               # CODE XREF: SSL_get_srp_username+4↑j
                lw      $v0, 0xDC($a0)
                jr      $ra
                lw      $v0, 0x168($v0)
 # End of function SSL_get_srp_username


 # =============== S U B R O U T I N E =======================================


                .globl SSL_get_srp_userinfo
SSL_get_srp_userinfo:                    # DATA XREF: LOAD:00001778↑o
                lw      $v0, 0x1B0($a0)
                beqz    $v0, loc_41ADC
                nop
                jr      $ra
                nop
 # ---------------------------------------------------------------------------

loc_41ADC:                               # CODE XREF: SSL_get_srp_userinfo+4↑j
                lw      $v0, 0xDC($a0)
                jr      $ra
                lw      $v0, 0x18C($v0)
 # End of function SSL_get_srp_userinfo


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_srp_client_pwd_callback
SSL_CTX_set_srp_client_pwd_callback:     # DATA XREF: LOAD:00001E68↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_srp_client_pwd_callback)
                addu    $gp, $t9
                la      $t9, ssl3_ctx_callback_ctrl
                move    $a2, $a1
                jr      $t9 ; ssl3_ctx_callback_ctrl
                li      $a1, 0x4D  # 'M'
 # End of function SSL_CTX_set_srp_client_pwd_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_srp_username_callback
SSL_CTX_set_srp_username_callback:       # DATA XREF: LOAD:00001CE8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_srp_username_callback)
                addu    $gp, $t9
                la      $t9, ssl3_ctx_callback_ctrl
                move    $a2, $a1
                jr      $t9 ; ssl3_ctx_callback_ctrl
                li      $a1, 0x4B  # 'K'
 # End of function SSL_CTX_set_srp_username_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_srp_verify_param_callback
SSL_CTX_set_srp_verify_param_callback:   # DATA XREF: LOAD:00001FC8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_srp_verify_param_callback)
                addu    $gp, $t9
                la      $t9, ssl3_ctx_callback_ctrl
                move    $a2, $a1
                jr      $t9 ; ssl3_ctx_callback_ctrl
                li      $a1, 0x4C  # 'L'
 # End of function SSL_CTX_set_srp_verify_param_callback


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_srp_cb_arg
SSL_CTX_set_srp_cb_arg:                  # DATA XREF: LOAD:00001988↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_srp_cb_arg)
                addu    $gp, $t9
                la      $t9, ssl3_ctx_ctrl
                move    $a3, $a1
                move    $a2, $zero
                jr      $t9 ; ssl3_ctx_ctrl
                li      $a1, 0x4E  # 'N'
 # End of function SSL_CTX_set_srp_cb_arg


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_srp_strength
SSL_CTX_set_srp_strength:                # DATA XREF: LOAD:00002128↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_srp_strength)
                addu    $gp, $t9
                la      $t9, ssl3_ctx_ctrl
                move    $a2, $a1
                move    $a3, $zero
                jr      $t9 ; ssl3_ctx_ctrl
                li      $a1, 0x50  # 'P'
 # End of function SSL_CTX_set_srp_strength


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_srp_password
SSL_CTX_set_srp_password:                # DATA XREF: LOAD:000017B8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_srp_password)
                addu    $gp, $t9
                la      $t9, ssl3_ctx_ctrl
                move    $a3, $a1
                move    $a2, $zero
                jr      $t9 ; ssl3_ctx_ctrl
                li      $a1, 0x51  # 'Q'
 # End of function SSL_CTX_set_srp_password


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_set_srp_username
SSL_CTX_set_srp_username:                # DATA XREF: LOAD:000020D8↑o
                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_set_srp_username)
                addu    $gp, $t9
                la      $t9, ssl3_ctx_ctrl
                move    $a3, $a1
                move    $a2, $zero
                jr      $t9 ; ssl3_ctx_ctrl
                li      $a1, 0x4F  # 'O'
 # End of function SSL_CTX_set_srp_username


 # =============== S U B R O U T I N E =======================================


                .globl SRP_Calc_A_param
SRP_Calc_A_param:                        # CODE XREF: ssl3_connect:loc_1825C↑p
                                         # DATA XREF: LOAD:00002D88↑o ...

var_48          = -0x48
var_40          = -0x40
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SRP_Calc_A_param)
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_8($sp)
                sw      $s1, 0x58+var_C($sp)
                sw      $s0, 0x58+var_10($sp)
                sw      $gp, 0x58+var_48($sp)
                la      $t9, BN_num_bits
                move    $s1, $a0
                jalr    $t9 ; BN_num_bits
                lw      $a0, 0x190($a0)
                lw      $v1, 0x1B4($s1)
                slt     $v0, $v1
                bnez    $v0, loc_41CB4
                lw      $gp, 0x58+var_48($sp)
                lw      $v0, 0x184($s1)
                beqz    $v0, loc_41CA0
                la      $t9, SRP_check_known_gN_param

loc_41C08:                               # CODE XREF: SRP_Calc_A_param+F0↓j
                la      $t9, RAND_bytes
                addiu   $s0, $sp, 0x58+var_40
                move    $a0, $s0
                jalr    $t9 ; RAND_bytes
                li      $a1, 0x30  # '0'
                lw      $gp, 0x58+var_48($sp)
                lw      $a2, 0x1A4($s1)
                la      $t9, BN_bin2bn
                move    $a0, $s0
                jalr    $t9 ; BN_bin2bn
                li      $a1, 0x30  # '0'
                lw      $gp, 0x58+var_48($sp)
                la      $t9, OPENSSL_cleanse
                sw      $v0, 0x1A4($s1)
                move    $a0, $s0
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x30  # '0'
                lw      $gp, 0x58+var_48($sp)
                lw      $a0, 0x1A4($s1)
                la      $t9, SRP_Calc_A
                lw      $a1, 0x190($s1)
                jalr    $t9 ; SRP_Calc_A
                lw      $a2, 0x194($s1)
                lw      $gp, 0x58+var_48($sp)
                beqz    $v0, loc_41CB4
                sw      $v0, 0x1A0($s1)
                lw      $t9, 0x184($s1)
                beqz    $t9, loc_41CCC
                lw      $ra, 0x58+var_8($sp)
                lw      $a1, 0x17C($s1)
                jalr    $t9
                move    $a0, $s1
                lw      $gp, 0x58+var_48($sp)
                lw      $ra, 0x58+var_8($sp)
                lw      $s1, 0x58+var_C($sp)
                lw      $s0, 0x58+var_10($sp)
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_41CA0:                               # CODE XREF: SRP_Calc_A_param+44↑j
                lw      $a0, 0x194($s1)
                jalr    $t9 ; SRP_check_known_gN_param
                lw      $a1, 0x190($s1)
                bnez    $v0, loc_41C08
                lw      $gp, 0x58+var_48($sp)

loc_41CB4:                               # CODE XREF: SRP_Calc_A_param+38↑j
                                         # SRP_Calc_A_param+AC↑j
                lw      $ra, 0x58+var_8($sp)
                lw      $s1, 0x58+var_C($sp)
                lw      $s0, 0x58+var_10($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_41CCC:                               # CODE XREF: SRP_Calc_A_param+B8↑j
                lw      $s1, 0x58+var_C($sp)
                lw      $s0, 0x58+var_10($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x58
 # End of function SRP_Calc_A_param


 # =============== S U B R O U T I N E =======================================


                .globl SRP_generate_client_master_secret
SRP_generate_client_master_secret:       # CODE XREF: ssl3_send_client_key_exchange+1DC↑p
                                         # DATA XREF: LOAD:00002568↑o ...

var_38          = -0x38
var_34          = -0x34
var_30          = -0x30
var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SRP_generate_client_master_secret)
                addu    $gp, $t9
                addiu   $sp, -0x48
                sw      $ra, 0x48+var_8($sp)
                sw      $s7, 0x48+var_C($sp)
                sw      $s6, 0x48+var_10($sp)
                sw      $s5, 0x48+var_14($sp)
                sw      $s4, 0x48+var_18($sp)
                sw      $s3, 0x48+var_1C($sp)
                sw      $s2, 0x48+var_20($sp)
                sw      $s1, 0x48+var_24($sp)
                sw      $s0, 0x48+var_28($sp)
                sw      $gp, 0x48+var_30($sp)
                move    $s0, $a0
                la      $t9, SRP_Verify_B_mod_N
                move    $s7, $a1
                lw      $a0, 0x19C($a0)
                jalr    $t9 ; SRP_Verify_B_mod_N
                lw      $a1, 0x190($s0)
                beqz    $v0, loc_41EC8
                lw      $gp, 0x48+var_30($sp)
                la      $t9, SRP_Calc_u
                lw      $a0, 0x1A0($s0)
                lw      $a1, 0x19C($s0)
                jalr    $t9 ; SRP_Calc_u
                lw      $a2, 0x190($s0)
                move    $s2, $v0
                beqz    $v0, loc_41ECC
                lw      $gp, 0x48+var_30($sp)
                lw      $t9, 0x188($s0)
                beqz    $t9, loc_41ECC
                nop
                lw      $a1, 0x17C($s0)
                jalr    $t9
                move    $a0, $s0
                move    $s1, $v0
                beqz    $v0, loc_41ECC
                lw      $gp, 0x48+var_30($sp)
                la      $t9, SRP_Calc_x
                lw      $a0, 0x198($s0)
                lw      $a1, 0x18C($s0)
                jalr    $t9 ; SRP_Calc_x
                move    $a2, $v0
                move    $s6, $v0
                beqz    $v0, loc_41F30
                lw      $gp, 0x48+var_30($sp)
                lw      $v0, 0x1A4($s0)
                lw      $a0, 0x190($s0)
                lw      $a1, 0x19C($s0)
                lw      $a2, 0x194($s0)
                la      $t9, SRP_Calc_client_key
                sw      $v0, 0x48+var_38($sp)
                sw      $s2, 0x48+var_34($sp)
                jalr    $t9 ; SRP_Calc_client_key
                move    $a3, $s6
                move    $s5, $v0
                beqz    $v0, loc_41F34
                lw      $gp, 0x48+var_30($sp)
                la      $t9, BN_num_bits
                jalr    $t9 ; BN_num_bits
                move    $a0, $v0
                addiu   $v1, $v0, 7
                lw      $gp, 0x48+var_30($sp)
                addiu   $v0, 0xE
                slti    $a0, $v1, 0
                movn    $v1, $v0, $a0
                la      $a1, loc_40000
                sra     $s4, $v1, 3
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aTlsSrpC - 0x40000)  # "tls_srp.c"
                move    $a0, $s4
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x186
                move    $s3, $v0
                beqz    $v0, loc_41F5C
                lw      $gp, 0x48+var_30($sp)
                la      $t9, BN_bn2bin
                move    $a0, $s5
                jalr    $t9 ; BN_bn2bin
                move    $a1, $v0
                lw      $v1, 8($s0)
                move    $a0, $s0
                lw      $v0, 0x64($v1)
                move    $a2, $s3
                lw      $t9, 0xC($v0)
                move    $a3, $s4
                jalr    $t9
                move    $a1, $s7
                lw      $gp, 0x48+var_30($sp)
                la      $t9, OPENSSL_cleanse
                move    $a1, $s4
                move    $a0, $s3
                jalr    $t9 ; OPENSSL_cleanse
                move    $s0, $v0
                lw      $gp, 0x48+var_30($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s3
                lw      $gp, 0x48+var_30($sp)

loc_41E70:                               # CODE XREF: SRP_generate_client_master_secret:loc_41F5C↓j
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                move    $a0, $s5
                lw      $gp, 0x48+var_30($sp)
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                move    $a0, $s6
                lw      $gp, 0x48+var_30($sp)

loc_41E90:                               # CODE XREF: SRP_generate_client_master_secret+274↓j
                la      $t9, strlen
                jalr    $t9 ; strlen
                move    $a0, $s1
                lw      $gp, 0x48+var_30($sp)
                la      $t9, OPENSSL_cleanse
                move    $a1, $v0
                jalr    $t9 ; OPENSSL_cleanse
                move    $a0, $s1
                lw      $gp, 0x48+var_30($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                b       loc_41EF0
                lw      $gp, 0x48+var_30($sp)
 # ---------------------------------------------------------------------------

loc_41EC8:                               # CODE XREF: SRP_generate_client_master_secret+50↑j
                move    $s2, $zero

loc_41ECC:                               # CODE XREF: SRP_generate_client_master_secret+70↑j
                                         # SRP_generate_client_master_secret+7C↑j ...
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                move    $a0, $zero
                lw      $gp, 0x48+var_30($sp)
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                move    $a0, $zero
                lw      $gp, 0x48+var_30($sp)
                li      $s0, 0xFFFFFFFF

loc_41EF0:                               # CODE XREF: SRP_generate_client_master_secret+1E0↑j
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                move    $a0, $s2
                move    $v0, $s0
                lw      $gp, 0x48+var_30($sp)
                lw      $ra, 0x48+var_8($sp)
                lw      $s7, 0x48+var_C($sp)
                lw      $s6, 0x48+var_10($sp)
                lw      $s5, 0x48+var_14($sp)
                lw      $s4, 0x48+var_18($sp)
                lw      $s3, 0x48+var_1C($sp)
                lw      $s2, 0x48+var_20($sp)
                lw      $s1, 0x48+var_24($sp)
                lw      $s0, 0x48+var_28($sp)
                jr      $ra
                addiu   $sp, 0x48
 # ---------------------------------------------------------------------------

loc_41F30:                               # CODE XREF: SRP_generate_client_master_secret+B4↑j
                move    $s5, $zero

loc_41F34:                               # CODE XREF: SRP_generate_client_master_secret+E4↑j
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                move    $a0, $s5
                lw      $gp, 0x48+var_30($sp)
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                move    $a0, $s6
                lw      $gp, 0x48+var_30($sp)
                b       loc_41E90
                li      $s0, 0xFFFFFFFF
 # ---------------------------------------------------------------------------

loc_41F5C:                               # CODE XREF: SRP_generate_client_master_secret+12C↑j
                b       loc_41E70
                li      $s0, 0xFFFFFFFF
 # End of function SRP_generate_client_master_secret


 # =============== S U B R O U T I N E =======================================


                .globl SRP_generate_server_master_secret
SRP_generate_server_master_secret:       # CODE XREF: ssl3_get_client_key_exchange+494↑p
                                         # DATA XREF: LOAD:00003C18↑o ...

var_30          = -0x30
var_28          = -0x28
var_20          = -0x20
var_1C          = -0x1C
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SRP_generate_server_master_secret)
                addu    $gp, $t9
                addiu   $sp, -0x40
                sw      $ra, 0x40+var_8($sp)
                sw      $s5, 0x40+var_C($sp)
                sw      $s4, 0x40+var_10($sp)
                sw      $s3, 0x40+var_14($sp)
                sw      $s2, 0x40+var_18($sp)
                sw      $s1, 0x40+var_1C($sp)
                sw      $s0, 0x40+var_20($sp)
                sw      $gp, 0x40+var_28($sp)
                move    $s0, $a0
                la      $t9, SRP_Verify_A_mod_N
                move    $s5, $a1
                lw      $a0, 0x1A0($a0)
                jalr    $t9 ; SRP_Verify_A_mod_N
                lw      $a1, 0x190($s0)
                beqz    $v0, loc_420A8
                lw      $gp, 0x40+var_28($sp)
                la      $t9, SRP_Calc_u
                lw      $a0, 0x1A0($s0)
                lw      $a1, 0x19C($s0)
                jalr    $t9 ; SRP_Calc_u
                lw      $a2, 0x190($s0)
                move    $s4, $v0
                beqz    $v0, loc_420FC
                lw      $gp, 0x40+var_28($sp)
                lw      $v0, 0x190($s0)
                la      $t9, SRP_Calc_server_key
                lw      $a0, 0x1A0($s0)
                lw      $a1, 0x1AC($s0)
                lw      $a3, 0x1A8($s0)
                move    $a2, $s4
                jalr    $t9 ; SRP_Calc_server_key
                sw      $v0, 0x40+var_30($sp)
                move    $s3, $v0
                beqz    $v0, loc_420B0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BN_num_bits
                jalr    $t9 ; BN_num_bits
                move    $a0, $v0
                addiu   $v1, $v0, 7
                lw      $gp, 0x40+var_28($sp)
                addiu   $v0, 0xE
                slti    $a0, $v1, 0
                movn    $v1, $v0, $a0
                la      $a1, loc_40000
                sra     $s2, $v1, 3
                la      $t9, CRYPTO_malloc
                addiu   $a1, (aTlsSrpC - 0x40000)  # "tls_srp.c"
                move    $a0, $s2
                jalr    $t9 ; CRYPTO_malloc
                li      $a2, 0x165
                move    $s1, $v0
                beqz    $v0, loc_420B0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BN_bn2bin
                move    $a0, $s3
                jalr    $t9 ; BN_bn2bin
                move    $a1, $v0
                lw      $v1, 8($s0)
                move    $a0, $s0
                lw      $v0, 0x64($v1)
                move    $a2, $s1
                lw      $t9, 0xC($v0)
                move    $a3, $s2
                jalr    $t9
                move    $a1, $s5
                lw      $gp, 0x40+var_28($sp)
                la      $t9, OPENSSL_cleanse
                move    $a1, $s2
                move    $a0, $s1
                jalr    $t9 ; OPENSSL_cleanse
                move    $s0, $v0
                lw      $gp, 0x40+var_28($sp)
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                move    $a0, $s1
                b       loc_420B4
                lw      $gp, 0x40+var_28($sp)
 # ---------------------------------------------------------------------------

loc_420A8:                               # CODE XREF: SRP_generate_server_master_secret+48↑j
                move    $s3, $zero
                move    $s4, $zero

loc_420B0:                               # CODE XREF: SRP_generate_server_master_secret+94↑j
                                         # SRP_generate_server_master_secret+DC↑j ...
                li      $s0, 0xFFFFFFFF

loc_420B4:                               # CODE XREF: SRP_generate_server_master_secret+13C↑j
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                move    $a0, $s3
                lw      $gp, 0x40+var_28($sp)
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                move    $a0, $s4
                move    $v0, $s0
                lw      $gp, 0x40+var_28($sp)
                lw      $ra, 0x40+var_8($sp)
                lw      $s5, 0x40+var_C($sp)
                lw      $s4, 0x40+var_10($sp)
                lw      $s3, 0x40+var_14($sp)
                lw      $s2, 0x40+var_18($sp)
                lw      $s1, 0x40+var_1C($sp)
                lw      $s0, 0x40+var_20($sp)
                jr      $ra
                addiu   $sp, 0x40
 # ---------------------------------------------------------------------------

loc_420FC:                               # CODE XREF: SRP_generate_server_master_secret+68↑j
                b       loc_420B0
                move    $s3, $zero
 # End of function SRP_generate_server_master_secret


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SRP_CTX_free
SSL_SRP_CTX_free:                        # CODE XREF: ssl3_free+E4↑p
                                         # DATA XREF: LOAD:00003478↑o ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_SRP_CTX_free)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                beqz    $a0, loc_42210
                move    $s0, $a0
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x18C($a0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x190($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x194($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x198($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x19C($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x1A0($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x1A4($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x1A8($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x1AC($s0)
                li      $v0, 0x400
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_4($sp)
                sw      $v0, 0x1B4($s0)
                sw      $zero, 0x1B8($s0)
                sw      $zero, 0x180($s0)
                sw      $zero, 0x17C($s0)
                sw      $zero, 0x184($s0)
                sw      $zero, 0x188($s0)
                sw      $zero, 0x190($s0)
                sw      $zero, 0x194($s0)
                sw      $zero, 0x198($s0)
                sw      $zero, 0x19C($s0)
                sw      $zero, 0x1A0($s0)
                sw      $zero, 0x1A4($s0)
                sw      $zero, 0x1A8($s0)
                sw      $zero, 0x1AC($s0)
                sw      $zero, 0x18C($s0)
                sw      $zero, 0x1B0($s0)
                lw      $s0, 0x20+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_42210:                               # CODE XREF: SSL_SRP_CTX_free+1C↑j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x20
 # End of function SSL_SRP_CTX_free


 # =============== S U B R O U T I N E =======================================


                .globl SSL_CTX_SRP_CTX_free
SSL_CTX_SRP_CTX_free:                    # CODE XREF: SSL_CTX_free+18C↑p
                                         # DATA XREF: LOAD:00002338↑o ...

var_10          = -0x10
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - SSL_CTX_SRP_CTX_free)
                addu    $gp, $t9
                addiu   $sp, -0x20
                sw      $ra, 0x20+var_4($sp)
                sw      $s0, 0x20+var_8($sp)
                sw      $gp, 0x20+var_10($sp)
                beqz    $a0, loc_42330
                move    $s0, $a0
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x168($a0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x16C($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x170($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x174($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x178($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x17C($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x180($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x184($s0)
                lw      $gp, 0x20+var_10($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x188($s0)
                li      $v0, 0x400
                lw      $gp, 0x20+var_10($sp)
                lw      $ra, 0x20+var_4($sp)
                sw      $v0, 0x190($s0)
                sw      $zero, 0x194($s0)
                sw      $zero, 0x15C($s0)
                sw      $zero, 0x158($s0)
                sw      $zero, 0x160($s0)
                sw      $zero, 0x164($s0)
                sw      $zero, 0x16C($s0)
                sw      $zero, 0x170($s0)
                sw      $zero, 0x174($s0)
                sw      $zero, 0x178($s0)
                sw      $zero, 0x17C($s0)
                sw      $zero, 0x180($s0)
                sw      $zero, 0x184($s0)
                sw      $zero, 0x188($s0)
                sw      $zero, 0x168($s0)
                sw      $zero, 0x18C($s0)
                lw      $s0, 0x20+var_8($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x20
 # ---------------------------------------------------------------------------

loc_42330:                               # CODE XREF: SSL_CTX_SRP_CTX_free+1C↑j
                lw      $ra, 0x20+var_4($sp)
                lw      $s0, 0x20+var_8($sp)
                move    $v0, $zero
                jr      $ra
                addiu   $sp, 0x20
 # End of function SSL_CTX_SRP_CTX_free


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_srp_server_param
SSL_set_srp_server_param:                # DATA XREF: LOAD:00001F98↑o

var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
arg_10          =  0x10
arg_14          =  0x14

                la      $gp, (off_5A360+0x7FF0 - SSL_set_srp_server_param)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s3, 0x30+var_C($sp)
                sw      $s2, 0x30+var_10($sp)
                sw      $s1, 0x30+var_14($sp)
                sw      $s0, 0x30+var_18($sp)
                sw      $gp, 0x30+var_20($sp)
                move    $s0, $a0
                move    $s1, $a2
                move    $s2, $a3
                beqz    $a1, loc_4239C
                lw      $s3, 0x30+arg_10($sp)
                lw      $a0, 0x190($a0)
                beqz    $a0, loc_42500
                la      $t9, BN_copy
                jalr    $t9 ; BN_copy
                nop
                beqz    $v0, loc_42488
                lw      $gp, 0x30+var_20($sp)

loc_4239C:                               # CODE XREF: SSL_set_srp_server_param+34↑j
                                         # SSL_set_srp_server_param+154↓j ...
                beqz    $s1, loc_423C0
                nop
                lw      $a0, 0x194($s0)
                beqz    $a0, loc_424B8
                la      $t9, BN_copy
                jalr    $t9 ; BN_copy
                move    $a1, $s1
                beqz    $v0, loc_424A0
                lw      $gp, 0x30+var_20($sp)

loc_423C0:                               # CODE XREF: SSL_set_srp_server_param:loc_4239C↑j
                                         # SSL_set_srp_server_param+16C↓j ...
                beqz    $s2, loc_423E4
                nop
                lw      $a0, 0x198($s0)
                beqz    $a0, loc_424D0
                la      $t9, BN_copy
                jalr    $t9 ; BN_copy
                move    $a1, $s2
                beqz    $v0, loc_42470
                lw      $gp, 0x30+var_20($sp)

loc_423E4:                               # CODE XREF: SSL_set_srp_server_param:loc_423C0↑j
                                         # SSL_set_srp_server_param+13C↓j ...
                beqz    $s3, loc_4240C
                lw      $v0, 0x30+arg_14($sp)
                lw      $a0, 0x1AC($s0)
                beqz    $a0, loc_424E8
                la      $t9, BN_copy
                jalr    $t9 ; BN_copy
                move    $a1, $s3
                beqz    $v0, loc_42518
                lw      $gp, 0x30+var_20($sp)

loc_42408:                               # CODE XREF: SSL_set_srp_server_param+1B4↓j
                                         # SSL_set_srp_server_param+1E4↓j
                lw      $v0, 0x30+arg_14($sp)

loc_4240C:                               # CODE XREF: SSL_set_srp_server_param:loc_423E4↑j
                lw      $v1, 0x190($s0)
                beqz    $v1, loc_42450
                sw      $v0, 0x1B0($s0)
                lw      $v0, 0x194($s0)
                beqz    $v0, loc_42454
                lw      $ra, 0x30+var_8($sp)
                lw      $v0, 0x198($s0)
                beqz    $v0, loc_42458
                lw      $s3, 0x30+var_C($sp)
                lw      $v0, 0x1AC($s0)
                beqz    $v0, loc_42458
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_42450:                               # CODE XREF: SSL_set_srp_server_param+CC↑j
                lw      $ra, 0x30+var_8($sp)

loc_42454:                               # CODE XREF: SSL_set_srp_server_param+D8↑j
                lw      $s3, 0x30+var_C($sp)

loc_42458:                               # CODE XREF: SSL_set_srp_server_param+E4↑j
                                         # SSL_set_srp_server_param+F0↑j
                lw      $s2, 0x30+var_10($sp)
                lw      $s1, 0x30+var_14($sp)
                lw      $s0, 0x30+var_18($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_42470:                               # CODE XREF: SSL_set_srp_server_param+98↑j
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x198($s0)
                lw      $gp, 0x30+var_20($sp)
                b       loc_423E4
                sw      $zero, 0x198($s0)
 # ---------------------------------------------------------------------------

loc_42488:                               # CODE XREF: SSL_set_srp_server_param+50↑j
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x190($s0)
                lw      $gp, 0x30+var_20($sp)
                b       loc_4239C
                sw      $zero, 0x190($s0)
 # ---------------------------------------------------------------------------

loc_424A0:                               # CODE XREF: SSL_set_srp_server_param+74↑j
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x194($s0)
                lw      $gp, 0x30+var_20($sp)
                b       loc_423C0
                sw      $zero, 0x194($s0)
 # ---------------------------------------------------------------------------

loc_424B8:                               # CODE XREF: SSL_set_srp_server_param+64↑j
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                move    $a0, $s1
                lw      $gp, 0x30+var_20($sp)
                b       loc_423C0
                sw      $v0, 0x194($s0)
 # ---------------------------------------------------------------------------

loc_424D0:                               # CODE XREF: SSL_set_srp_server_param+88↑j
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                move    $a0, $s2
                lw      $gp, 0x30+var_20($sp)
                b       loc_423E4
                sw      $v0, 0x198($s0)
 # ---------------------------------------------------------------------------

loc_424E8:                               # CODE XREF: SSL_set_srp_server_param+AC↑j
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                move    $a0, $s3
                lw      $gp, 0x30+var_20($sp)
                b       loc_42408
                sw      $v0, 0x1AC($s0)
 # ---------------------------------------------------------------------------

loc_42500:                               # CODE XREF: SSL_set_srp_server_param+40↑j
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                move    $a0, $a1
                lw      $gp, 0x30+var_20($sp)
                b       loc_4239C
                sw      $v0, 0x190($s0)
 # ---------------------------------------------------------------------------

loc_42518:                               # CODE XREF: SSL_set_srp_server_param+BC↑j
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x1AC($s0)
                lw      $gp, 0x30+var_20($sp)
                b       loc_42408
                sw      $zero, 0x1AC($s0)
 # End of function SSL_set_srp_server_param


 # =============== S U B R O U T I N E =======================================


                .globl SSL_set_srp_server_param_pw
SSL_set_srp_server_param_pw:             # DATA XREF: LOAD:000019B8↑o

var_28          = -0x28
var_24          = -0x24
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_set_srp_server_param_pw)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                la      $t9, SRP_get_default_gN
                move    $s1, $a0
                move    $a0, $a3
                move    $s2, $a1
                jalr    $t9 ; SRP_get_default_gN
                move    $s3, $a2
                move    $s0, $v0
                beqz    $v0, loc_4262C
                lw      $gp, 0x38+var_20($sp)
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                lw      $a0, 8($v0)
                lw      $gp, 0x38+var_20($sp)
                sw      $v0, 0x190($s1)
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                lw      $a0, 4($s0)
                lw      $a0, 0x1AC($s1)
                lw      $gp, 0x38+var_20($sp)
                beqz    $a0, loc_425C0
                sw      $v0, 0x194($s1)
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                nop
                lw      $gp, 0x38+var_20($sp)
                sw      $zero, 0x1AC($s1)

loc_425C0:                               # CODE XREF: SSL_set_srp_server_param_pw+74↑j
                lw      $a0, 0x198($s1)
                beqz    $a0, loc_425DC
                la      $t9, BN_clear_free
                jalr    $t9 ; BN_clear_free
                nop
                lw      $gp, 0x38+var_20($sp)
                sw      $zero, 0x198($s1)

loc_425DC:                               # CODE XREF: SSL_set_srp_server_param_pw+94↑j
                lw      $v0, 8($s0)
                la      $t9, SRP_create_verifier_BN
                sw      $v0, 0x38+var_28($sp)
                lw      $v1, 4($s0)
                move    $a0, $s2
                sw      $v1, 0x38+var_24($sp)
                move    $a1, $s3
                addiu   $a3, $s1, 0x1AC
                jalr    $t9 ; SRP_create_verifier_BN
                addiu   $a2, $s1, 0x198
                beqz    $v0, loc_4262C
                lw      $gp, 0x38+var_20($sp)
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $v0, 1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_4262C:                               # CODE XREF: SSL_set_srp_server_param_pw+44↑j
                                         # SSL_set_srp_server_param_pw+D4↑j
                lw      $ra, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                li      $v0, 0xFFFFFFFF
                jr      $ra
                addiu   $sp, 0x38
 # End of function SSL_set_srp_server_param_pw


 # =============== S U B R O U T I N E =======================================


                .globl SSL_srp_server_param_with_username
SSL_srp_server_param_with_username:      # CODE XREF: ssl3_accept+948↑p
                                         # DATA XREF: LOAD:00002728↑o ...

var_48          = -0x48
var_40          = -0x40
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_srp_server_param_with_username)
                addu    $gp, $t9
                addiu   $sp, -0x58
                sw      $ra, 0x58+var_8($sp)
                sw      $s1, 0x58+var_C($sp)
                sw      $s0, 0x58+var_10($sp)
                sw      $gp, 0x58+var_48($sp)
                lw      $t9, 0x180($a0)
                li      $v0, 0x73  # 's'
                move    $s1, $a0
                move    $s0, $a1
                bnez    $t9, loc_42758
                sw      $v0, 0($a1)

loc_42684:                               # CODE XREF: SSL_srp_server_param_with_username+118↓j
                lw      $v1, 0x190($s1)
                li      $v0, 0x50  # 'P'
                beqz    $v1, loc_4273C
                sw      $v0, 0($s0)
                lw      $v0, 0x194($s1)
                beqz    $v0, loc_42740
                li      $v1, 2
                lw      $v0, 0x198($s1)
                beqz    $v0, loc_42740
                nop
                lw      $v0, 0x1AC($s1)
                beqz    $v0, loc_42740
                la      $t9, RAND_bytes
                addiu   $s0, $sp, 0x58+var_40
                move    $a0, $s0
                jalr    $t9 ; RAND_bytes
                li      $a1, 0x30  # '0'
                lw      $gp, 0x58+var_48($sp)
                la      $t9, BN_bin2bn
                move    $a2, $zero
                move    $a0, $s0
                jalr    $t9 ; BN_bin2bn
                li      $a1, 0x30  # '0'
                lw      $gp, 0x58+var_48($sp)
                la      $t9, OPENSSL_cleanse
                sw      $v0, 0x1A8($s1)
                move    $a0, $s0
                jalr    $t9 ; OPENSSL_cleanse
                li      $a1, 0x30  # '0'
                lw      $gp, 0x58+var_48($sp)
                lw      $a0, 0x1A8($s1)
                la      $t9, SRP_Calc_B
                lw      $a1, 0x190($s1)
                lw      $a2, 0x194($s1)
                jalr    $t9 ; SRP_Calc_B
                lw      $a3, 0x1AC($s1)
                li      $v1, 2
                lw      $gp, 0x58+var_48($sp)
                movn    $v1, $zero, $v0
                sw      $v0, 0x19C($s1)
                lw      $ra, 0x58+var_8($sp)

loc_42728:                               # CODE XREF: SSL_srp_server_param_with_username+120↓j
                lw      $s1, 0x58+var_C($sp)
                lw      $s0, 0x58+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_4273C:                               # CODE XREF: SSL_srp_server_param_with_username+40↑j
                li      $v1, 2

loc_42740:                               # CODE XREF: SSL_srp_server_param_with_username+4C↑j
                                         # SSL_srp_server_param_with_username+58↑j ...
                lw      $ra, 0x58+var_8($sp)
                lw      $s1, 0x58+var_C($sp)
                lw      $s0, 0x58+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x58
 # ---------------------------------------------------------------------------

loc_42758:                               # CODE XREF: SSL_srp_server_param_with_username+30↑j
                jalr    $t9
                lw      $a2, 0x17C($a0)
                move    $v1, $v0
                beqz    $v0, loc_42684
                lw      $gp, 0x58+var_48($sp)
                b       loc_42728
                lw      $ra, 0x58+var_8($sp)
 # End of function SSL_srp_server_param_with_username


 # =============== S U B R O U T I N E =======================================


                .globl SSL_SRP_CTX_init
SSL_SRP_CTX_init:                        # CODE XREF: ssl3_new+78↑p
                                         # DATA XREF: LOAD:00003368↑o ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - SSL_SRP_CTX_init)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                beqz    $a0, loc_42A0C
                move    $s1, $a0
                lw      $s0, 0xDC($a0)
                beqz    $s0, loc_42A10
                move    $v1, $zero
                sw      $zero, 0x190($a0)
                lw      $v0, 0x158($s0)
                lw      $v1, 0x15C($s0)
                lw      $a0, 0x160($s0)
                lw      $a1, 0x164($s0)
                lw      $a2, 0x18C($s0)
                lw      $a3, 0x190($s0)
                lw      $t0, 0x16C($s0)
                sw      $v0, 0x17C($s1)
                sw      $v1, 0x180($s1)
                sw      $a0, 0x184($s1)
                sw      $a1, 0x188($s1)
                sw      $a2, 0x1B0($s1)
                sw      $a3, 0x1B4($s1)
                sw      $zero, 0x194($s1)
                sw      $zero, 0x198($s1)
                sw      $zero, 0x19C($s1)
                sw      $zero, 0x1A0($s1)
                sw      $zero, 0x1A4($s1)
                sw      $zero, 0x1A8($s1)
                sw      $zero, 0x1AC($s1)
                beqz    $t0, loc_4281C
                sw      $zero, 0x18C($s1)
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                move    $a0, $t0
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_42940
                sw      $v0, 0x190($s1)

loc_4281C:                               # CODE XREF: SSL_SRP_CTX_init+88↑j
                lw      $a0, 0x170($s0)
                beqz    $a0, loc_4283C
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                nop
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_42940
                sw      $v0, 0x194($s1)

loc_4283C:                               # CODE XREF: SSL_SRP_CTX_init+AC↑j
                lw      $a0, 0x174($s0)
                beqz    $a0, loc_4285C
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                nop
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_42940
                sw      $v0, 0x198($s1)

loc_4285C:                               # CODE XREF: SSL_SRP_CTX_init+CC↑j
                lw      $a0, 0x178($s0)
                beqz    $a0, loc_4287C
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                nop
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_42940
                sw      $v0, 0x19C($s1)

loc_4287C:                               # CODE XREF: SSL_SRP_CTX_init+EC↑j
                lw      $a0, 0x17C($s0)
                beqz    $a0, loc_4289C
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                nop
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_42940
                sw      $v0, 0x1A0($s1)

loc_4289C:                               # CODE XREF: SSL_SRP_CTX_init+10C↑j
                lw      $a0, 0x180($s0)
                beqz    $a0, loc_428BC
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                nop
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_42940
                sw      $v0, 0x1A4($s1)

loc_428BC:                               # CODE XREF: SSL_SRP_CTX_init+12C↑j
                lw      $a0, 0x188($s0)
                beqz    $a0, loc_428DC
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                nop
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_42940
                sw      $v0, 0x1AC($s1)

loc_428DC:                               # CODE XREF: SSL_SRP_CTX_init+14C↑j
                lw      $a0, 0x184($s0)
                beqz    $a0, loc_428FC
                la      $t9, BN_dup
                jalr    $t9 ; BN_dup
                nop
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_42940
                sw      $v0, 0x1A8($s1)

loc_428FC:                               # CODE XREF: SSL_SRP_CTX_init+16C↑j
                lw      $a0, 0x168($s0)
                beqz    $a0, loc_4291C
                la      $t9, BUF_strdup
                jalr    $t9 ; BUF_strdup
                nop
                lw      $gp, 0x30+var_18($sp)
                beqz    $v0, loc_42A28
                sw      $v0, 0x18C($s1)

loc_4291C:                               # CODE XREF: SSL_SRP_CTX_init+18C↑j
                lw      $v0, 0x194($s0)
                li      $v1, 1
                sw      $v0, 0x1B8($s1)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_42940:                               # CODE XREF: SSL_SRP_CTX_init+A0↑j
                                         # SSL_SRP_CTX_init+C0↑j ...
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x139
                li      $a2, 3
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)

loc_42960:                               # CODE XREF: SSL_SRP_CTX_init+2D0↓j
                la      $t9, CRYPTO_free
                jalr    $t9 ; CRYPTO_free
                lw      $a0, 0x18C($s1)
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x190($s1)
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x194($s1)
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x198($s1)
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x19C($s1)
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x1A0($s1)
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x1A4($s1)
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x1A8($s1)
                lw      $gp, 0x30+var_18($sp)
                la      $t9, BN_free
                jalr    $t9 ; BN_free
                lw      $a0, 0x1AC($s1)
                lw      $gp, 0x30+var_18($sp)
                move    $v1, $zero
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_42A0C:                               # CODE XREF: SSL_SRP_CTX_init+20↑j
                move    $v1, $zero

loc_42A10:                               # CODE XREF: SSL_SRP_CTX_init+2C↑j
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_42A28:                               # CODE XREF: SSL_SRP_CTX_init+1A0↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x139
                li      $a2, 0x44  # 'D'
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                b       loc_42960
                lw      $gp, 0x30+var_18($sp)
 # End of function SSL_SRP_CTX_init


 # =============== S U B R O U T I N E =======================================


                .globl ssl_parse_serverhello_renegotiate_ext
ssl_parse_serverhello_renegotiate_ext:   # CODE XREF: ssl_parse_serverhello_tlsext+458↑p
                                         # DATA XREF: LOAD:00003008↑o ...

var_28          = -0x28
var_20          = -0x20
var_18          = -0x18
var_14          = -0x14
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_parse_serverhello_renegotiate_ext)
                addu    $gp, $t9
                addiu   $sp, -0x38
                sw      $ra, 0x38+var_4($sp)
                sw      $s4, 0x38+var_8($sp)
                sw      $s3, 0x38+var_C($sp)
                sw      $s2, 0x38+var_10($sp)
                sw      $s1, 0x38+var_14($sp)
                sw      $s0, 0x38+var_18($sp)
                sw      $gp, 0x38+var_20($sp)
                lw      $v0, 0x58($a0)
                move    $s1, $a0
                lbu     $v1, 0x40D($v0)
                lbu     $v0, 0x3CC($v0)
                move    $s3, $a1
                addu    $s0, $v1, $v0
                move    $s2, $a2
                beqz    $s0, loc_42AAC
                move    $s4, $a3
                beqz    $v0, loc_42B88
                la      $t9, OpenSSLDie
                beqz    $v1, loc_42B68
                la      $a0, loc_40000

loc_42AAC:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext+48↑j
                                         # ssl_parse_serverhello_renegotiate_ext+134↓j ...
                blez    $s2, loc_42AC4
                la      $t9, ERR_put_error
                lbu     $v1, 0($s3)
                addiu   $v0, $v1, 1
                beq     $v0, $s2, loc_42B10
                nop

loc_42AC4:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext:loc_42AAC↑j
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x12D
                li      $a2, 0x150

loc_42AD4:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext+1CC↓j
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                li      $v0, 0x2F  # '/'
                lw      $gp, 0x38+var_20($sp)
                move    $v1, $zero
                sw      $v0, 0($s4)

loc_42AEC:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext+1B4↓j
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_42B10:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext+70↑j
                beq     $v1, $s0, loc_42BB8
                la      $t9, memcmp

loc_42B18:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext+188↓j
                la      $t9, ERR_put_error
                sw      $zero, 0x38+var_28($sp)
                li      $a0, 0x14
                li      $a1, 0x12D
                li      $a2, 0x151
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                li      $v0, 0x28  # '('
                lw      $gp, 0x38+var_20($sp)
                move    $v1, $zero
                sw      $v0, 0($s4)
                lw      $ra, 0x38+var_4($sp)
                lw      $s4, 0x38+var_8($sp)
                lw      $s3, 0x38+var_C($sp)
                lw      $s2, 0x38+var_10($sp)
                lw      $s1, 0x38+var_14($sp)
                lw      $s0, 0x38+var_18($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x38
 # ---------------------------------------------------------------------------

loc_42B68:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext+58↑j
                                         # ssl_parse_serverhello_renegotiate_ext+164↓j
                la      $a2, loc_40000
                la      $t9, OpenSSLDie
                addiu   $a0, (aT1RenegC - 0x40000)  # "t1_reneg.c"
                addiu   $a2, (aExpectedLenSS3 - 0x40000)  # "!expected_len || s->s3->previous_server"...
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0xF1
                b       loc_42AAC
                lw      $gp, 0x38+var_20($sp)
 # ---------------------------------------------------------------------------

loc_42B88:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext+50↑j
                la      $a0, loc_40000
                la      $a2, loc_40000
                addiu   $a0, (aT1RenegC - 0x40000)  # "t1_reneg.c"
                addiu   $a2, (aExpectedLenSS3_0 - 0x40000)  # "!expected_len || s->s3->previous_client"...
                jalr    $t9 ; OpenSSLDie
                li      $a1, 0xF0
                lw      $v0, 0x58($s1)
                lbu     $v1, 0x40D($v0)
                bnez    $v1, loc_42AAC
                lw      $gp, 0x38+var_20($sp)
                b       loc_42B68
                la      $a0, loc_40000
 # ---------------------------------------------------------------------------

loc_42BB8:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext:loc_42B10↑j
                lw      $s0, 0x58($s1)
                lbu     $s1, 0x3CC($s0)
                addiu   $s2, $s3, 1
                move    $a0, $s2
                addiu   $a1, $s0, 0x38C
                jalr    $t9 ; memcmp
                move    $a2, $s1
                bnez    $v0, loc_42B18
                lw      $gp, 0x38+var_20($sp)
                la      $t9, memcmp
                lbu     $a2, 0x40D($s0)
                addu    $a0, $s1, $s2
                jalr    $t9 ; memcmp
                addiu   $a1, $s0, 0x3CD
                bnez    $v0, loc_42C08
                lw      $gp, 0x38+var_20($sp)
                li      $v0, 1
                li      $v1, 1
                b       loc_42AEC
                sw      $v0, 0x410($s0)
 # ---------------------------------------------------------------------------

loc_42C08:                               # CODE XREF: ssl_parse_serverhello_renegotiate_ext+1A4↑j
                la      $t9, ERR_put_error
                li      $a0, 0x14
                li      $a1, 0x12D
                li      $a2, 0x151
                b       loc_42AD4
                sw      $zero, 0x38+var_28($sp)
 # End of function ssl_parse_serverhello_renegotiate_ext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_parse_clienthello_renegotiate_ext
ssl_parse_clienthello_renegotiate_ext:   # CODE XREF: ssl_parse_clienthello_tlsext+758↑p
                                         # DATA XREF: LOAD:00003A48↑o ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_parse_clienthello_renegotiate_ext)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                blez    $a2, loc_42C58
                move    $s1, $a3
                lbu     $v1, 0($a1)
                addiu   $v0, $v1, 1
                beq     $v0, $a2, loc_42C9C
                nop

loc_42C58:                               # CODE XREF: ssl_parse_clienthello_renegotiate_ext+20↑j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x12C
                li      $a2, 0x150
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                li      $v0, 0x2F  # '/'
                lw      $gp, 0x30+var_18($sp)
                move    $v1, $zero
                sw      $v0, 0($s1)

loc_42C84:                               # CODE XREF: ssl_parse_clienthello_renegotiate_ext+EC↓j
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_42C9C:                               # CODE XREF: ssl_parse_clienthello_renegotiate_ext+30↑j
                lw      $s0, 0x58($a0)
                lbu     $a2, 0x3CC($s0)
                beq     $a2, $v1, loc_42CF0
                la      $t9, memcmp

loc_42CAC:                               # CODE XREF: ssl_parse_clienthello_renegotiate_ext+DC↓j
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x12C
                li      $a2, 0x151
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                li      $v0, 0x28  # '('
                lw      $gp, 0x30+var_18($sp)
                move    $v1, $zero
                sw      $v0, 0($s1)
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $v1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_42CF0:                               # CODE XREF: ssl_parse_clienthello_renegotiate_ext+84↑j
                addiu   $a0, $a1, 1
                jalr    $t9 ; memcmp
                addiu   $a1, $s0, 0x38C
                bnez    $v0, loc_42CAC
                lw      $gp, 0x30+var_18($sp)
                li      $v0, 1
                li      $v1, 1
                b       loc_42C84
                sw      $v0, 0x410($s0)
 # End of function ssl_parse_clienthello_renegotiate_ext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_add_serverhello_renegotiate_ext
ssl_add_serverhello_renegotiate_ext:     # CODE XREF: ssl_add_serverhello_tlsext+1F8↑p
                                         # ssl_add_serverhello_tlsext+254↑p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                la      $gp, (off_5A360+0x7FF0 - ssl_add_serverhello_renegotiate_ext)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_4($sp)
                sw      $s2, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $s0, $a1
                move    $s1, $a0
                beqz    $a1, loc_42DE8
                move    $s2, $a2
                lw      $v0, 0x58($a0)
                lbu     $a0, 0x40D($v0)
                lbu     $v1, 0x3CC($v0)
                addu    $v1, $a0
                addiu   $v0, $v1, 1
                slt     $v0, $a3, $v0
                beqz    $v0, loc_42DA8
                la      $t9, memcpy
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a1, 0x12B
                li      $a0, 0x14
                li      $a2, 0x14F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                move    $a1, $zero
                lw      $ra, 0x30+var_4($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_42DA8:                               # CODE XREF: ssl_add_serverhello_renegotiate_ext+4C↑j
                sb      $v1, 0($a1)
                lw      $a1, 0x58($s1)
                lbu     $a2, 0x3CC($a1)
                addiu   $s0, 1
                move    $a0, $s0
                jalr    $t9 ; memcpy
                addiu   $a1, 0x38C
                lw      $a1, 0x58($s1)
                lw      $gp, 0x30+var_18($sp)
                lbu     $a0, 0x3CC($a1)
                lbu     $a2, 0x40D($a1)
                la      $t9, memcpy
                addu    $a0, $s0
                jalr    $t9 ; memcpy
                addiu   $a1, 0x3CD
                lw      $gp, 0x30+var_18($sp)

loc_42DE8:                               # CODE XREF: ssl_add_serverhello_renegotiate_ext+2C↑j
                lw      $v0, 0x58($s1)
                li      $a1, 1
                lbu     $a0, 0x40D($v0)
                lbu     $v1, 0x3CC($v0)
                lw      $ra, 0x30+var_4($sp)
                addu    $v1, $a0
                addiu   $v1, 1
                sw      $v1, 0($s2)
                lw      $s1, 0x30+var_C($sp)
                lw      $s2, 0x30+var_8($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $a1
                jr      $ra
                addiu   $sp, 0x30
 # End of function ssl_add_serverhello_renegotiate_ext


 # =============== S U B R O U T I N E =======================================


                .globl ssl_add_clienthello_renegotiate_ext
ssl_add_clienthello_renegotiate_ext:     # CODE XREF: ssl_add_clienthello_tlsext+150↑p
                                         # ssl_add_clienthello_tlsext+1CC↑p
                                         # DATA XREF: ...

var_20          = -0x20
var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8

                la      $gp, (off_5A360+0x7FF0 - ssl_add_clienthello_renegotiate_ext)
                addu    $gp, $t9
                addiu   $sp, -0x30
                sw      $ra, 0x30+var_8($sp)
                sw      $s1, 0x30+var_C($sp)
                sw      $s0, 0x30+var_10($sp)
                sw      $gp, 0x30+var_18($sp)
                move    $t0, $a1
                move    $s0, $a0
                beqz    $a1, loc_42EC0
                move    $s1, $a2
                lw      $v1, 0x58($a0)
                lbu     $v1, 0x3CC($v1)
                addiu   $v0, $v1, 1
                slt     $v0, $a3, $v0
                beqz    $v0, loc_42EA4
                la      $t9, memcpy
                la      $t9, ERR_put_error
                sw      $zero, 0x30+var_20($sp)
                li      $a0, 0x14
                li      $a1, 0x12A
                li      $a2, 0x14F
                jalr    $t9 ; ERR_put_error
                move    $a3, $zero
                lw      $gp, 0x30+var_18($sp)
                move    $a0, $zero
                lw      $ra, 0x30+var_8($sp)
                lw      $s1, 0x30+var_C($sp)
                lw      $s0, 0x30+var_10($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x30
 # ---------------------------------------------------------------------------

loc_42EA4:                               # CODE XREF: ssl_add_clienthello_renegotiate_ext+40↑j
                sb      $v1, 0($a1)
                lw      $a1, 0x58($a0)
                lbu     $a2, 0x3CC($a1)
                addiu   $a0, $t0, 1
                jalr    $t9 ; memcpy
                addiu   $a1, 0x38C
                lw      $gp, 0x30+var_18($sp)

loc_42EC0:                               # CODE XREF: ssl_add_clienthello_renegotiate_ext+28↑j
                lw      $v1, 0x58($s0)
                li      $a0, 1
                lbu     $v0, 0x3CC($v1)
                lw      $ra, 0x30+var_8($sp)
                addiu   $v0, 1
                sw      $v0, 0($s1)
                lw      $s0, 0x30+var_10($sp)
                lw      $s1, 0x30+var_C($sp)
                move    $v0, $a0
                jr      $ra
                addiu   $sp, 0x30
 # End of function ssl_add_clienthello_renegotiate_ext


 # ===========================================================================

 # Segment type: Pure code
                .text # .MIPS.stubs

 # =============== S U B R O U T I N E =======================================


_RSAPrivateKey_dup:                      # DATA XREF: LOAD:00004748↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x305
 # End of function _RSAPrivateKey_dup


 # =============== S U B R O U T I N E =======================================


_X509_VERIFY_PARAM_inherit:              # DATA XREF: LOAD:00004738↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x304
 # End of function _X509_VERIFY_PARAM_inherit


 # =============== S U B R O U T I N E =======================================


_d2i_X509_NAME:                          # DATA XREF: LOAD:00004708↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x301
 # End of function _d2i_X509_NAME


 # =============== S U B R O U T I N E =======================================


_EVP_DecryptFinal:                       # DATA XREF: LOAD:000046D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2FE
 # End of function _EVP_DecryptFinal


 # =============== S U B R O U T I N E =======================================


_i2d_X509:                               # DATA XREF: LOAD:000046B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2FC
 # End of function _i2d_X509


 # =============== S U B R O U T I N E =======================================


_BIO_s_socket:                           # DATA XREF: LOAD:00004698↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2FA
 # End of function _BIO_s_socket


 # =============== S U B R O U T I N E =======================================


_X509_STORE_CTX_get0_param:              # DATA XREF: LOAD:00004678↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2F8
 # End of function _X509_STORE_CTX_get0_param


 # =============== S U B R O U T I N E =======================================


_SRP_Calc_A:                             # DATA XREF: LOAD:00004668↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2F7
 # End of function _SRP_Calc_A


 # =============== S U B R O U T I N E =======================================


_pitem_new:                              # DATA XREF: LOAD:000045D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2EE
 # End of function _pitem_new


 # =============== S U B R O U T I N E =======================================


_COMP_CTX_free:                          # DATA XREF: LOAD:000045C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2ED
 # End of function _COMP_CTX_free


 # =============== S U B R O U T I N E =======================================


_X509_STORE_load_locations:              # DATA XREF: LOAD:000045B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2EC
 # End of function _X509_STORE_load_locations


 # =============== S U B R O U T I N E =======================================


_EVP_DigestInit:                         # DATA XREF: LOAD:000045A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2EB
 # End of function _EVP_DigestInit


 # =============== S U B R O U T I N E =======================================


_pqueue_iterator:                        # DATA XREF: LOAD:00004598↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2EA
 # End of function _pqueue_iterator


 # =============== S U B R O U T I N E =======================================


_BIO_free:                               # DATA XREF: LOAD:00004588↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2E9
 # End of function _BIO_free


 # =============== S U B R O U T I N E =======================================


_BIO_s_mem:                              # DATA XREF: LOAD:00004568↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2E7
 # End of function _BIO_s_mem


 # =============== S U B R O U T I N E =======================================


_OPENSSL_DIR_read:                       # DATA XREF: LOAD:00004538↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2E4
 # End of function _OPENSSL_DIR_read


 # =============== S U B R O U T I N E =======================================


_sk_pop_free:                            # DATA XREF: LOAD:000044C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2DD
 # End of function _sk_pop_free


 # =============== S U B R O U T I N E =======================================


_EVP_MD_CTX_copy:                        # DATA XREF: LOAD:000044A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2DB
 # End of function _EVP_MD_CTX_copy


 # =============== S U B R O U T I N E =======================================


_BIO_free_all:                           # DATA XREF: LOAD:00004498↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2DA
 # End of function _BIO_free_all


 # =============== S U B R O U T I N E =======================================


___errno_location:                       # DATA XREF: LOAD:00004468↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2D7
 # End of function ___errno_location


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_sign:                          # DATA XREF: LOAD:00004458↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2D6
 # End of function _EVP_PKEY_sign


 # =============== S U B R O U T I N E =======================================


_BIO_ctrl:                               # DATA XREF: LOAD:00004428↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2D3
 # End of function _BIO_ctrl


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_CTX_free:                      # DATA XREF: LOAD:00004418↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2D2
 # End of function _EVP_PKEY_CTX_free


 # =============== S U B R O U T I N E =======================================


_X509_VERIFY_PARAM_set_depth:            # DATA XREF: LOAD:00004408↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2D1
 # End of function _X509_VERIFY_PARAM_set_depth


 # =============== S U B R O U T I N E =======================================


_EVP_sha384:                             # DATA XREF: LOAD:000043F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2D0
 # End of function _EVP_sha384


 # =============== S U B R O U T I N E =======================================


_sk_free:                                # DATA XREF: LOAD:000043E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2CF
 # End of function _sk_free


 # =============== S U B R O U T I N E =======================================


_pqueue_insert:                          # DATA XREF: LOAD:000043D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2CE
 # End of function _pqueue_insert


 # =============== S U B R O U T I N E =======================================


_BN_num_bits:                            # DATA XREF: LOAD:000043B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2CC
 # End of function _BN_num_bits


 # =============== S U B R O U T I N E =======================================


_OBJ_bsearch_:                           # DATA XREF: LOAD:000043A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2CB
 # End of function _OBJ_bsearch_


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_CTX_new:                       # DATA XREF: LOAD:00004388↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2C9
 # End of function _EVP_PKEY_CTX_new


 # =============== S U B R O U T I N E =======================================


_fwrite:                                 # DATA XREF: LOAD:00004378↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2C8
 # End of function _fwrite


 # =============== S U B R O U T I N E =======================================


_CRYPTO_get_ex_data:                     # DATA XREF: LOAD:00004358↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2C6
 # End of function _CRYPTO_get_ex_data


 # =============== S U B R O U T I N E =======================================


_HMAC_CTX_init:                          # DATA XREF: LOAD:00004348↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2C5
 # End of function _HMAC_CTX_init


 # =============== S U B R O U T I N E =======================================


_lh_new:                                 # DATA XREF: LOAD:00004338↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2C4
 # End of function _lh_new


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_CTX_block_size:              # DATA XREF: LOAD:00004328↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2C3
 # End of function _EVP_CIPHER_CTX_block_size


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_CTX_iv_length:               # DATA XREF: LOAD:00004318↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2C2
 # End of function _EVP_CIPHER_CTX_iv_length


 # =============== S U B R O U T I N E =======================================


_memcpy:                                 # DATA XREF: LOAD:00004308↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2C1
 # End of function _memcpy


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_iv_length:                   # DATA XREF: LOAD:000042D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2BE
 # End of function _EVP_CIPHER_iv_length


 # =============== S U B R O U T I N E =======================================


_asn1_add_error:                         # DATA XREF: LOAD:000042C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2BD
 # End of function _asn1_add_error


 # =============== S U B R O U T I N E =======================================


_EVP_aes_192_cbc:                        # DATA XREF: LOAD:00004288↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2B9
 # End of function _EVP_aes_192_cbc


 # =============== S U B R O U T I N E =======================================


_EVP_add_cipher:                         # DATA XREF: LOAD:00004238↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2B4
 # End of function _EVP_add_cipher


 # =============== S U B R O U T I N E =======================================


_BIO_copy_next_retry:                    # DATA XREF: LOAD:00004218↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2B2
 # End of function _BIO_copy_next_retry


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_CTX_init:                    # DATA XREF: LOAD:00004208↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2B1
 # End of function _EVP_CIPHER_CTX_init


 # =============== S U B R O U T I N E =======================================


_CRYPTO_new_ex_data:                     # DATA XREF: LOAD:000041F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2B0
 # End of function _CRYPTO_new_ex_data


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_derive_set_peer:               # DATA XREF: LOAD:000041E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2AF
 # End of function _EVP_PKEY_derive_set_peer


 # =============== S U B R O U T I N E =======================================


_SRP_get_default_gN:                     # DATA XREF: LOAD:000041C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2AD
 # End of function _SRP_get_default_gN


 # =============== S U B R O U T I N E =======================================


_lh_retrieve:                            # DATA XREF: LOAD:000041B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2AC
 # End of function _lh_retrieve


 # =============== S U B R O U T I N E =======================================


_SRP_Verify_A_mod_N:                     # DATA XREF: LOAD:000041A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2AB
 # End of function _SRP_Verify_A_mod_N


 # =============== S U B R O U T I N E =======================================


_BIO_get_retry_reason:                   # DATA XREF: LOAD:00004188↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2A9
 # End of function _BIO_get_retry_reason


 # =============== S U B R O U T I N E =======================================


_RSA_verify:                             # DATA XREF: LOAD:00004178↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2A8
 # End of function _RSA_verify


 # =============== S U B R O U T I N E =======================================


_EVP_sha256:                             # DATA XREF: LOAD:00004138↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2A4
 # End of function _EVP_sha256


 # =============== S U B R O U T I N E =======================================


_CRYPTO_get_ex_new_index:                # DATA XREF: LOAD:00004128↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2A3
 # End of function _CRYPTO_get_ex_new_index


 # =============== S U B R O U T I N E =======================================


_X509_NAME_dup:                          # DATA XREF: LOAD:00004118↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x2A2
 # End of function _X509_NAME_dup


 # =============== S U B R O U T I N E =======================================


_EVP_EncryptFinal:                       # DATA XREF: LOAD:000040E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x29F
 # End of function _EVP_EncryptFinal


 # =============== S U B R O U T I N E =======================================


_EVP_get_cipherbyname:                   # DATA XREF: LOAD:000040C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x29D
 # End of function _EVP_get_cipherbyname


 # =============== S U B R O U T I N E =======================================


_pqueue_next:                            # DATA XREF: LOAD:000040B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x29C
 # End of function _pqueue_next


 # =============== S U B R O U T I N E =======================================


_sk_set_cmp_func:                        # DATA XREF: LOAD:00004088↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x299
 # End of function _sk_set_cmp_func


 # =============== S U B R O U T I N E =======================================


_gettimeofday:                           # DATA XREF: LOAD:00004068↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x297
 # End of function _gettimeofday


 # =============== S U B R O U T I N E =======================================


_PEM_read_bio_PrivateKey:                # DATA XREF: LOAD:00004048↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x295
 # End of function _PEM_read_bio_PrivateKey


 # =============== S U B R O U T I N E =======================================


_sk_value:                               # DATA XREF: LOAD:00004038↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x294
 # End of function _sk_value


 # =============== S U B R O U T I N E =======================================


_RSA_size:                               # DATA XREF: LOAD:00004018↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x292
 # End of function _RSA_size


 # =============== S U B R O U T I N E =======================================


_HMAC_Update:                            # DATA XREF: LOAD:00003FE8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x28F
 # End of function _HMAC_Update


 # =============== S U B R O U T I N E =======================================


_X509_STORE_CTX_get_ex_new_index:        # DATA XREF: LOAD:00003FD8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x28E
 # End of function _X509_STORE_CTX_get_ex_new_index


 # =============== S U B R O U T I N E =======================================


_OPENSSL_cleanse:                        # DATA XREF: LOAD:00003FC8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x28D
 # End of function _OPENSSL_cleanse


 # =============== S U B R O U T I N E =======================================


_EVP_MD_CTX_create:                      # DATA XREF: LOAD:00003F88↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x289
 # End of function _EVP_MD_CTX_create


 # =============== S U B R O U T I N E =======================================


_i2d_ASN1_OCTET_STRING:                  # DATA XREF: LOAD:00003F78↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x288
 # End of function _i2d_ASN1_OCTET_STRING


 # =============== S U B R O U T I N E =======================================


_X509_STORE_new:                         # DATA XREF: LOAD:00003F68↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x287
 # End of function _X509_STORE_new


 # =============== S U B R O U T I N E =======================================


_SRP_Calc_u:                             # DATA XREF: LOAD:00003F38↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x284
 # End of function _SRP_Calc_u


 # =============== S U B R O U T I N E =======================================


_DSA_verify:                             # DATA XREF: LOAD:00003F28↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x283
 # End of function _DSA_verify


 # =============== S U B R O U T I N E =======================================


_d2i_ASN1_OCTET_STRING:                  # DATA XREF: LOAD:00003F18↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x282
 # End of function _d2i_ASN1_OCTET_STRING


 # =============== S U B R O U T I N E =======================================


_CRYPTO_malloc:                          # DATA XREF: LOAD:00003F08↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x281
 # End of function _CRYPTO_malloc


 # =============== S U B R O U T I N E =======================================


_X509_STORE_CTX_init:                    # DATA XREF: LOAD:00003EF8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x280
 # End of function _X509_STORE_CTX_init


 # =============== S U B R O U T I N E =======================================


_DSA_sign:                               # DATA XREF: LOAD:00003EB8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x27C
 # End of function _DSA_sign


 # =============== S U B R O U T I N E =======================================


_RSA_sign:                               # DATA XREF: LOAD:00003EA8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x27B
 # End of function _RSA_sign


 # =============== S U B R O U T I N E =======================================


_SRP_Calc_B:                             # DATA XREF: LOAD:00003E78↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x278
 # End of function _SRP_Calc_B


 # =============== S U B R O U T I N E =======================================


_ASN1_get_object:                        # DATA XREF: LOAD:00003E58↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x276
 # End of function _ASN1_get_object


 # =============== S U B R O U T I N E =======================================


_RSA_private_decrypt:                    # DATA XREF: LOAD:00003E08↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x271
 # End of function _RSA_private_decrypt


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_decrypt_init:                  # DATA XREF: LOAD:00003DF8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x270
 # End of function _EVP_PKEY_decrypt_init


 # =============== S U B R O U T I N E =======================================


_strncmp:                                # DATA XREF: LOAD:00003DD8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x26E
 # End of function _strncmp


 # =============== S U B R O U T I N E =======================================


_BN_bn2bin:                              # DATA XREF: LOAD:00003DC8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x26D
 # End of function _BN_bn2bin


 # =============== S U B R O U T I N E =======================================


_RSA_public_encrypt:                     # DATA XREF: LOAD:00003DB8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x26C
 # End of function _RSA_public_encrypt


 # =============== S U B R O U T I N E =======================================


_BIO_clear_flags:                        # DATA XREF: LOAD:00003DA8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x26B
 # End of function _BIO_clear_flags


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_asn1_get0_info:                # DATA XREF: LOAD:00003D98↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x26A
 # End of function _EVP_PKEY_asn1_get0_info


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_block_size:                  # DATA XREF: LOAD:00003D48↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x265
 # End of function _EVP_CIPHER_block_size


 # =============== S U B R O U T I N E =======================================


_pqueue_find:                            # DATA XREF: LOAD:00003CF8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x260
 # End of function _pqueue_find


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_missing_parameters:            # DATA XREF: LOAD:00003CE8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x25F
 # End of function _EVP_PKEY_missing_parameters


 # =============== S U B R O U T I N E =======================================


_X509_NAME_cmp:                          # DATA XREF: LOAD:00003CD8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x25E
 # End of function _X509_NAME_cmp


 # =============== S U B R O U T I N E =======================================


_CRYPTO_dup_ex_data:                     # DATA XREF: LOAD:00003CC8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x25D
 # End of function _CRYPTO_dup_ex_data


 # =============== S U B R O U T I N E =======================================


_OpenSSLDie:                             # DATA XREF: LOAD:00003CA8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x25B
 # End of function _OpenSSLDie


 # =============== S U B R O U T I N E =======================================


_strlen:                                 # DATA XREF: LOAD:00003C78↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x258
 # End of function _strlen


 # =============== S U B R O U T I N E =======================================


_EVP_add_digest:                         # DATA XREF: LOAD:00003C68↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x257
 # End of function _EVP_add_digest


 # =============== S U B R O U T I N E =======================================


_BUF_MEM_new:                            # DATA XREF: LOAD:00003C58↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x256
 # End of function _BUF_MEM_new


 # =============== S U B R O U T I N E =======================================


_ASN1_INTEGER_set:                       # DATA XREF: LOAD:00003C48↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x255
 # End of function _ASN1_INTEGER_set


 # =============== S U B R O U T I N E =======================================


_BIO_new:                                # DATA XREF: LOAD:00003C28↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x253
 # End of function _BIO_new


 # =============== S U B R O U T I N E =======================================


_X509_get_subject_name:                  # DATA XREF: LOAD:00003BF8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x250
 # End of function _X509_get_subject_name


 # =============== S U B R O U T I N E =======================================


_HMAC_Final:                             # DATA XREF: LOAD:00003BC8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x24D
 # End of function _HMAC_Final


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_asn1_find_str:                 # DATA XREF: LOAD:00003B88↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x249
 # End of function _EVP_PKEY_asn1_find_str


 # =============== S U B R O U T I N E =======================================


_ERR_clear_error:                        # DATA XREF: LOAD:00003B68↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x247
 # End of function _ERR_clear_error


 # =============== S U B R O U T I N E =======================================


_EVP_aes_256_cbc_hmac_sha1:              # DATA XREF: LOAD:00003B58↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x246
 # End of function _EVP_aes_256_cbc_hmac_sha1


 # =============== S U B R O U T I N E =======================================


_EVP_enc_null:                           # DATA XREF: LOAD:00003B48↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x245
 # End of function _EVP_enc_null


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_new_mac_key:                   # DATA XREF: LOAD:00003B28↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x243
 # End of function _EVP_PKEY_new_mac_key


 # =============== S U B R O U T I N E =======================================


_i2d_X509_EXTENSIONS:                    # DATA XREF: LOAD:00003AF8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x240
 # End of function _i2d_X509_EXTENSIONS


 # =============== S U B R O U T I N E =======================================


_sk_new:                                 # DATA XREF: LOAD:00003AB8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x23C
 # End of function _sk_new


 # =============== S U B R O U T I N E =======================================


_CRYPTO_lock:                            # DATA XREF: LOAD:00003AA8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x23B
 # End of function _CRYPTO_lock


 # =============== S U B R O U T I N E =======================================


_PEM_read_bio_X509:                      # DATA XREF: LOAD:00003A98↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x23A
 # End of function _PEM_read_bio_X509


 # =============== S U B R O U T I N E =======================================


_BIO_puts:                               # DATA XREF: LOAD:00003A88↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x239
 # End of function _BIO_puts


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_encrypt_init:                  # DATA XREF: LOAD:00003A78↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x238
 # End of function _EVP_PKEY_encrypt_init


 # =============== S U B R O U T I N E =======================================


_i2d_OCSP_RESPID:                        # DATA XREF: LOAD:00003A58↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x236
 # End of function _i2d_OCSP_RESPID


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_CTX_flags:                   # DATA XREF: LOAD:00003A38↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x234
 # End of function _EVP_CIPHER_CTX_flags


 # =============== S U B R O U T I N E =======================================


_BIO_method_type:                        # DATA XREF: LOAD:00003A08↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x231
 # End of function _BIO_method_type


 # =============== S U B R O U T I N E =======================================


_PEM_read_bio_RSAPrivateKey:             # DATA XREF: LOAD:000039F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x230
 # End of function _PEM_read_bio_RSAPrivateKey


 # =============== S U B R O U T I N E =======================================


_asn1_const_Finish:                      # DATA XREF: LOAD:000039C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x22D
 # End of function _asn1_const_Finish


 # =============== S U B R O U T I N E =======================================


_sk_zero:                                # DATA XREF: LOAD:000039B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x22C
 # End of function _sk_zero


 # =============== S U B R O U T I N E =======================================


_BIO_test_flags:                         # DATA XREF: LOAD:00003998↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x22A
 # End of function _BIO_test_flags


 # =============== S U B R O U T I N E =======================================


_SRP_create_verifier_BN:                 # DATA XREF: LOAD:00003968↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x227
 # End of function _SRP_create_verifier_BN


 # =============== S U B R O U T I N E =======================================


_CRYPTO_free:                            # DATA XREF: LOAD:00003958↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x226
 # End of function _CRYPTO_free


 # =============== S U B R O U T I N E =======================================


_BUF_MEM_grow:                           # DATA XREF: LOAD:00003938↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x224
 # End of function _BUF_MEM_grow


 # =============== S U B R O U T I N E =======================================


_EVP_MD_CTX_copy_ex:                     # DATA XREF: LOAD:00003918↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x222
 # End of function _EVP_MD_CTX_copy_ex


 # =============== S U B R O U T I N E =======================================


_EVP_sha224:                             # DATA XREF: LOAD:00003908↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x221
 # End of function _EVP_sha224


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_CTX_ctrl:                    # DATA XREF: LOAD:000038D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x21E
 # End of function _EVP_CIPHER_CTX_ctrl


 # =============== S U B R O U T I N E =======================================


_EVP_sha512:                             # DATA XREF: LOAD:000038B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x21C
 # End of function _EVP_sha512


 # =============== S U B R O U T I N E =======================================


_X509_STORE_CTX_cleanup:                 # DATA XREF: LOAD:00003868↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x217
 # End of function _X509_STORE_CTX_cleanup


 # =============== S U B R O U T I N E =======================================


_memmove:                                # DATA XREF: LOAD:00003848↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x215
 # End of function _memmove


 # =============== S U B R O U T I N E =======================================


_sk_shift:                               # DATA XREF: LOAD:00003828↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x213
 # End of function _sk_shift


 # =============== S U B R O U T I N E =======================================


_BIO_f_buffer:                           # DATA XREF: LOAD:00003818↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x212
 # End of function _BIO_f_buffer


 # =============== S U B R O U T I N E =======================================


_BIO_set_flags:                          # DATA XREF: LOAD:000037F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x210
 # End of function _BIO_set_flags


 # =============== S U B R O U T I N E =======================================


_X509_verify_cert:                       # DATA XREF: LOAD:000037D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x20E
 # End of function _X509_verify_cert


 # =============== S U B R O U T I N E =======================================


_HMAC_Init_ex:                           # DATA XREF: LOAD:000037A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x20B
 # End of function _HMAC_Init_ex


 # =============== S U B R O U T I N E =======================================


_d2i_X509_EXTENSIONS:                    # DATA XREF: LOAD:00003798↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x20A
 # End of function _d2i_X509_EXTENSIONS


 # =============== S U B R O U T I N E =======================================


_COMP_compress_block:                    # DATA XREF: LOAD:00003788↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x209
 # End of function _COMP_compress_block


 # =============== S U B R O U T I N E =======================================


_RAND_bytes:                             # DATA XREF: LOAD:00003738↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x204
 # End of function _RAND_bytes


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_bits:                          # DATA XREF: LOAD:00003728↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x203
 # End of function _EVP_PKEY_bits


 # =============== S U B R O U T I N E =======================================


_pitem_free:                             # DATA XREF: LOAD:00003718↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x202
 # End of function _pitem_free


 # =============== S U B R O U T I N E =======================================


_BN_bin2bn:                              # DATA XREF: LOAD:000036F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x200
 # End of function _BN_bin2bn


 # =============== S U B R O U T I N E =======================================


_sk_sort:                                # DATA XREF: LOAD:000036C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1FD
 # End of function _sk_sort


 # =============== S U B R O U T I N E =======================================


_EVP_MD_CTX_md:                          # DATA XREF: LOAD:00003698↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1FA
 # End of function _EVP_MD_CTX_md


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_size:                          # DATA XREF: LOAD:00003688↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1F9
 # End of function _EVP_PKEY_size


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_decrypt:                       # DATA XREF: LOAD:00003658↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1F6
 # End of function _EVP_PKEY_decrypt


 # =============== S U B R O U T I N E =======================================


_X509_verify_cert_error_string:          # DATA XREF: LOAD:00003648↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1F5
 # End of function _X509_verify_cert_error_string


 # =============== S U B R O U T I N E =======================================


_EVP_MD_CTX_cleanup:                     # DATA XREF: LOAD:00003638↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1F4
 # End of function _EVP_MD_CTX_cleanup


 # =============== S U B R O U T I N E =======================================


_OBJ_nid2sn:                             # DATA XREF: LOAD:00003628↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1F3
 # End of function _OBJ_nid2sn


 # =============== S U B R O U T I N E =======================================


_ASN1_object_size:                       # DATA XREF: LOAD:00003618↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1F2
 # End of function _ASN1_object_size


 # =============== S U B R O U T I N E =======================================


_X509_certificate_type:                  # DATA XREF: LOAD:00003608↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1F1
 # End of function _X509_certificate_type


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_CTX_cleanup:                 # DATA XREF: LOAD:000035D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1EE
 # End of function _EVP_CIPHER_CTX_cleanup


 # =============== S U B R O U T I N E =======================================


_time:                                   # DATA XREF: LOAD:00003598↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1EA
 # End of function _time


 # =============== S U B R O U T I N E =======================================


_EVP_CipherInit_ex:                      # DATA XREF: LOAD:00003588↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1E9
 # End of function _EVP_CipherInit_ex


 # =============== S U B R O U T I N E =======================================


_BUF_strdup:                             # DATA XREF: LOAD:00003558↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1E6
 # End of function _BUF_strdup


 # =============== S U B R O U T I N E =======================================


_BIO_push:                               # DATA XREF: LOAD:00003548↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1E5
 # End of function _BIO_push


 # =============== S U B R O U T I N E =======================================


_COMP_expand_block:                      # DATA XREF: LOAD:00003528↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1E3
 # End of function _COMP_expand_block


 # =============== S U B R O U T I N E =======================================


_RSA_new:                                # DATA XREF: LOAD:00003518↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1E2
 # End of function _RSA_new


 # =============== S U B R O U T I N E =======================================


_X509_VERIFY_PARAM_set_purpose:          # DATA XREF: LOAD:000034F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1E0
 # End of function _X509_VERIFY_PARAM_set_purpose


 # =============== S U B R O U T I N E =======================================


_EVP_aes_128_cbc_hmac_sha1:              # DATA XREF: LOAD:000034E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1DF
 # End of function _EVP_aes_128_cbc_hmac_sha1


 # =============== S U B R O U T I N E =======================================


_X509_check_purpose:                     # DATA XREF: LOAD:000034B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1DC
 # End of function _X509_check_purpose


 # =============== S U B R O U T I N E =======================================


_EVP_rc4:                                # DATA XREF: LOAD:00003498↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1DA
 # End of function _EVP_rc4


 # =============== S U B R O U T I N E =======================================


_d2i_RSAPrivateKey:                      # DATA XREF: LOAD:00003448↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1D5
 # End of function _d2i_RSAPrivateKey


 # =============== S U B R O U T I N E =======================================


_sk_find:                                # DATA XREF: LOAD:00003438↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1D4
 # End of function _sk_find


 # =============== S U B R O U T I N E =======================================


_CRYPTO_set_ex_data:                     # DATA XREF: LOAD:00003418↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1D2
 # End of function _CRYPTO_set_ex_data


 # =============== S U B R O U T I N E =======================================


_RSA_free:                               # DATA XREF: LOAD:000033F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1D0
 # End of function _RSA_free


 # =============== S U B R O U T I N E =======================================


_BIO_snprintf:                           # DATA XREF: LOAD:000033E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1CF
 # End of function _BIO_snprintf


 # =============== S U B R O U T I N E =======================================


_HMAC_CTX_cleanup:                       # DATA XREF: LOAD:000033B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1CC
 # End of function _HMAC_CTX_cleanup


 # =============== S U B R O U T I N E =======================================


_d2i_ASN1_INTEGER:                       # DATA XREF: LOAD:000033A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1CB
 # End of function _d2i_ASN1_INTEGER


 # =============== S U B R O U T I N E =======================================


_EVP_aes_256_cbc:                        # DATA XREF: LOAD:00003388↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1C9
 # End of function _EVP_aes_256_cbc


 # =============== S U B R O U T I N E =======================================


_RAND_add:                               # DATA XREF: LOAD:00003378↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1C8
 # End of function _RAND_add


 # =============== S U B R O U T I N E =======================================


_d2i_RSAPrivateKey_bio:                  # DATA XREF: LOAD:00003358↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1C6
 # End of function _d2i_RSAPrivateKey_bio


 # =============== S U B R O U T I N E =======================================


_EVP_DecryptInit_ex:                     # DATA XREF: LOAD:000032F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1C0
 # End of function _EVP_DecryptInit_ex


 # =============== S U B R O U T I N E =======================================


_EVP_MD_type:                            # DATA XREF: LOAD:000032E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1BF
 # End of function _EVP_MD_type


 # =============== S U B R O U T I N E =======================================


_sk_set:                                 # DATA XREF: LOAD:000032D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1BE
 # End of function _sk_set


 # =============== S U B R O U T I N E =======================================


_ERR_peek_last_error:                    # DATA XREF: LOAD:000032B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1BC
 # End of function _ERR_peek_last_error


 # =============== S U B R O U T I N E =======================================


_sk_dup:                                 # DATA XREF: LOAD:00003298↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1BA
 # End of function _sk_dup


 # =============== S U B R O U T I N E =======================================


_COMP_zlib:                              # DATA XREF: LOAD:00003288↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1B9
 # End of function _COMP_zlib


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_CTX_cipher:                  # DATA XREF: LOAD:00003278↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1B8
 # End of function _EVP_CIPHER_CTX_cipher


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_verify_init:                   # DATA XREF: LOAD:00003268↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1B7
 # End of function _EVP_PKEY_verify_init


 # =============== S U B R O U T I N E =======================================


_BN_clear_free:                          # DATA XREF: LOAD:00003258↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1B6
 # End of function _BN_clear_free


 # =============== S U B R O U T I N E =======================================


_X509_VERIFY_PARAM_set_trust:            # DATA XREF: LOAD:00003218↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1B2
 # End of function _X509_VERIFY_PARAM_set_trust


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_CTX_key_length:              # DATA XREF: LOAD:00003208↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1B1
 # End of function _EVP_CIPHER_CTX_key_length


 # =============== S U B R O U T I N E =======================================


_EVP_MD_CTX_destroy:                     # DATA XREF: LOAD:000031E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1AF
 # End of function _EVP_MD_CTX_destroy


 # =============== S U B R O U T I N E =======================================


_BIO_dump_indent:                        # DATA XREF: LOAD:000031D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1AE
 # End of function _BIO_dump_indent


 # =============== S U B R O U T I N E =======================================


_ASN1_INTEGER_get:                       # DATA XREF: LOAD:000031B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1AC
 # End of function _ASN1_INTEGER_get


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_verify:                        # DATA XREF: LOAD:00003188↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1A9
 # End of function _EVP_PKEY_verify


 # =============== S U B R O U T I N E =======================================


_PEM_ASN1_write_bio:                     # DATA XREF: LOAD:00003168↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1A7
 # End of function _PEM_ASN1_write_bio


 # =============== S U B R O U T I N E =======================================


_sk_num:                                 # DATA XREF: LOAD:00003148↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1A5
 # End of function _sk_num


 # =============== S U B R O U T I N E =======================================


_d2i_X509:                               # DATA XREF: LOAD:00003128↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1A3
 # End of function _d2i_X509


 # =============== S U B R O U T I N E =======================================


_OBJ_NAME_add:                           # DATA XREF: LOAD:00003108↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x1A1
 # End of function _OBJ_NAME_add


 # =============== S U B R O U T I N E =======================================


_SRP_check_known_gN_param:               # DATA XREF: LOAD:000030D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x19E
 # End of function _SRP_check_known_gN_param


 # =============== S U B R O U T I N E =======================================


_ASN1_put_object:                        # DATA XREF: LOAD:000030C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x19D
 # End of function _ASN1_put_object


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_free:                          # DATA XREF: LOAD:000030A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x19B
 # End of function _EVP_PKEY_free


 # =============== S U B R O U T I N E =======================================


_EVP_Digest:                             # DATA XREF: LOAD:00003088↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x199
 # End of function _EVP_Digest


 # =============== S U B R O U T I N E =======================================


_ERR_peek_error:                         # DATA XREF: LOAD:00003068↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x197
 # End of function _ERR_peek_error


 # =============== S U B R O U T I N E =======================================


_BUF_MEM_grow_clean:                     # DATA XREF: LOAD:00003058↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x196
 # End of function _BUF_MEM_grow_clean


 # =============== S U B R O U T I N E =======================================


_BUF_memdup:                             # DATA XREF: LOAD:00003038↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x194
 # End of function _BUF_memdup


 # =============== S U B R O U T I N E =======================================


_X509_VERIFY_PARAM_free:                 # DATA XREF: LOAD:00002FF8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x190
 # End of function _X509_VERIFY_PARAM_free


 # =============== S U B R O U T I N E =======================================


_EVP_MD_CTX_set_flags:                   # DATA XREF: LOAD:00002FD8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x18E
 # End of function _EVP_MD_CTX_set_flags


 # =============== S U B R O U T I N E =======================================


_OPENSSL_DIR_end:                        # DATA XREF: LOAD:00002FA8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x18B
 # End of function _OPENSSL_DIR_end


 # =============== S U B R O U T I N E =======================================


_BIO_write:                              # DATA XREF: LOAD:00002F78↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x188
 # End of function _BIO_write


 # =============== S U B R O U T I N E =======================================


_memset:                                 # DATA XREF: LOAD:00002F68↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x187
 # End of function _memset


 # =============== S U B R O U T I N E =======================================


_X509_get_pubkey:                        # DATA XREF: LOAD:00002F38↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x184
 # End of function _X509_get_pubkey


 # =============== S U B R O U T I N E =======================================


_X509_STORE_CTX_set_default:             # DATA XREF: LOAD:00002F28↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x183
 # End of function _X509_STORE_CTX_set_default


 # =============== S U B R O U T I N E =======================================


_i2d_X509_NAME:                          # DATA XREF: LOAD:00002F08↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x181
 # End of function _i2d_X509_NAME


 # =============== S U B R O U T I N E =======================================


_d2i_PrivateKey:                         # DATA XREF: LOAD:00002EF8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x180
 # End of function _d2i_PrivateKey


 # =============== S U B R O U T I N E =======================================


_BIO_printf:                             # DATA XREF: LOAD:00002EE8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x17F
 # End of function _BIO_printf


 # =============== S U B R O U T I N E =======================================


_EVP_get_digestbyname:                   # DATA XREF: LOAD:00002EB8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x17C
 # End of function _EVP_get_digestbyname


 # =============== S U B R O U T I N E =======================================


_fprintf:                                # DATA XREF: LOAD:00002E78↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x178
 # End of function _fprintf


 # =============== S U B R O U T I N E =======================================


_BN_dup:                                 # DATA XREF: LOAD:00002E68↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x177
 # End of function _BN_dup


 # =============== S U B R O U T I N E =======================================


_SRP_Calc_client_key:                    # DATA XREF: LOAD:00002E58↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x176
 # End of function _SRP_Calc_client_key


 # =============== S U B R O U T I N E =======================================


_X509_VERIFY_PARAM_set1:                 # DATA XREF: LOAD:00002E38↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x174
 # End of function _X509_VERIFY_PARAM_set1


 # =============== S U B R O U T I N E =======================================


_pqueue_free:                            # DATA XREF: LOAD:00002E18↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x172
 # End of function _pqueue_free


 # =============== S U B R O U T I N E =======================================


_RAND_pseudo_bytes:                      # DATA XREF: LOAD:00002E08↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x171
 # End of function _RAND_pseudo_bytes


 # =============== S U B R O U T I N E =======================================


_BUF_MEM_free:                           # DATA XREF: LOAD:00002DF8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x170
 # End of function _BUF_MEM_free


 # =============== S U B R O U T I N E =======================================


_X509_VERIFY_PARAM_get_depth:            # DATA XREF: LOAD:00002DE8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x16F
 # End of function _X509_VERIFY_PARAM_get_depth


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_encrypt:                       # DATA XREF: LOAD:00002DC8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x16D
 # End of function _EVP_PKEY_encrypt


 # =============== S U B R O U T I N E =======================================


_EVP_dss1:                               # DATA XREF: LOAD:00002DB8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x16C
 # End of function _EVP_dss1


 # =============== S U B R O U T I N E =======================================


_BIO_callback_ctrl:                      # DATA XREF: LOAD:00002DA8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x16B
 # End of function _BIO_callback_ctrl


 # =============== S U B R O U T I N E =======================================


_abort:                                  # DATA XREF: LOAD:00002D58↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x166
 # End of function _abort


 # =============== S U B R O U T I N E =======================================


_memcmp:                                 # DATA XREF: LOAD:00002D38↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x164
 # End of function _memcmp


 # =============== S U B R O U T I N E =======================================


_CRYPTO_add_lock:                        # DATA XREF: LOAD:00002D18↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x162
 # End of function _CRYPTO_add_lock


 # =============== S U B R O U T I N E =======================================


_EVP_des_cbc:                            # DATA XREF: LOAD:00002D08↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x161
 # End of function _EVP_des_cbc


 # =============== S U B R O U T I N E =======================================


_i2d_ASN1_INTEGER:                       # DATA XREF: LOAD:00002CE8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x15F
 # End of function _i2d_ASN1_INTEGER


 # =============== S U B R O U T I N E =======================================


_X509_STORE_CTX_set_verify_cb:           # DATA XREF: LOAD:00002CC8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x15D
 # End of function _X509_STORE_CTX_set_verify_cb


 # =============== S U B R O U T I N E =======================================


_EVP_DecryptUpdate:                      # DATA XREF: LOAD:00002C88↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x159
 # End of function _EVP_DecryptUpdate


 # =============== S U B R O U T I N E =======================================


_BIO_find_type:                          # DATA XREF: LOAD:00002C78↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x158
 # End of function _BIO_find_type


 # =============== S U B R O U T I N E =======================================


_lh_doall_arg:                           # DATA XREF: LOAD:00002C48↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x155
 # End of function _lh_doall_arg


 # =============== S U B R O U T I N E =======================================


_BUF_strndup:                            # DATA XREF: LOAD:00002C28↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x153
 # End of function _BUF_strndup


 # =============== S U B R O U T I N E =======================================


_X509_check_private_key:                 # DATA XREF: LOAD:00002C08↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x151
 # End of function _X509_check_private_key


 # =============== S U B R O U T I N E =======================================


_lh_free:                                # DATA XREF: LOAD:00002BF8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x150
 # End of function _lh_free


 # =============== S U B R O U T I N E =======================================


_EVP_SignFinal:                          # DATA XREF: LOAD:00002BD8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x14E
 # End of function _EVP_SignFinal


 # =============== S U B R O U T I N E =======================================


_SRP_Verify_B_mod_N:                     # DATA XREF: LOAD:00002BA8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x14B
 # End of function _SRP_Verify_B_mod_N


 # =============== S U B R O U T I N E =======================================


_COMP_CTX_new:                           # DATA XREF: LOAD:00002B88↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x149
 # End of function _COMP_CTX_new


 # =============== S U B R O U T I N E =======================================


_X509_STORE_free:                        # DATA XREF: LOAD:00002B78↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x148
 # End of function _X509_STORE_free


 # =============== S U B R O U T I N E =======================================


_lh_insert:                              # DATA XREF: LOAD:00002B68↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x147
 # End of function _lh_insert


 # =============== S U B R O U T I N E =======================================


_pqueue_size:                            # DATA XREF: LOAD:00002B48↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x145
 # End of function _pqueue_size


 # =============== S U B R O U T I N E =======================================


_EVP_MD_CTX_init:                        # DATA XREF: LOAD:00002B18↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x142
 # End of function _EVP_MD_CTX_init


 # =============== S U B R O U T I N E =======================================


_ASN1_const_check_infinite_end:          # DATA XREF: LOAD:00002AD8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x13E
 # End of function _ASN1_const_check_infinite_end


 # =============== S U B R O U T I N E =======================================


_sk_new_null:                            # DATA XREF: LOAD:00002A88↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x139
 # End of function _sk_new_null


 # =============== S U B R O U T I N E =======================================


_EVP_Cipher:                             # DATA XREF: LOAD:00002A78↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x138
 # End of function _EVP_Cipher


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_new:                           # DATA XREF: LOAD:00002A68↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x137
 # End of function _EVP_PKEY_new


 # =============== S U B R O U T I N E =======================================


_EVP_EncryptInit_ex:                     # DATA XREF: LOAD:00002A18↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x132
 # End of function _EVP_EncryptInit_ex


 # =============== S U B R O U T I N E =======================================


_BIO_s_file:                             # DATA XREF: LOAD:000029F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x130
 # End of function _BIO_s_file


 # =============== S U B R O U T I N E =======================================


_EVP_DigestSignInit:                     # DATA XREF: LOAD:000029D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x12E
 # End of function _EVP_DigestSignInit


 # =============== S U B R O U T I N E =======================================


_EVP_aes_256_gcm:                        # DATA XREF: LOAD:000029C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x12D
 # End of function _EVP_aes_256_gcm


 # =============== S U B R O U T I N E =======================================


_d2i_OCSP_RESPID:                        # DATA XREF: LOAD:000029A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x12B
 # End of function _d2i_OCSP_RESPID


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_CTX_ctrl:                      # DATA XREF: LOAD:00002998↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x12A
 # End of function _EVP_PKEY_CTX_ctrl


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_sign_init:                     # DATA XREF: LOAD:00002958↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x126
 # End of function _EVP_PKEY_sign_init


 # =============== S U B R O U T I N E =======================================


_pqueue_new:                             # DATA XREF: LOAD:00002918↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x122
 # End of function _pqueue_new


 # =============== S U B R O U T I N E =======================================


_X509_STORE_CTX_set_ex_data:             # DATA XREF: LOAD:000028F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x120
 # End of function _X509_STORE_CTX_set_ex_data


 # =============== S U B R O U T I N E =======================================


_EVP_EncryptUpdate:                      # DATA XREF: LOAD:000028E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x11F
 # End of function _EVP_EncryptUpdate


 # =============== S U B R O U T I N E =======================================


_EVP_DigestSignFinal:                    # DATA XREF: LOAD:000028D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x11E
 # End of function _EVP_DigestSignFinal


 # =============== S U B R O U T I N E =======================================


_BIO_read:                               # DATA XREF: LOAD:000028B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x11C
 # End of function _BIO_read


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_key_length:                  # DATA XREF: LOAD:000028A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x11B
 # End of function _EVP_CIPHER_key_length


 # =============== S U B R O U T I N E =======================================


_RSA_flags:                              # DATA XREF: LOAD:00002898↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x11A
 # End of function _RSA_flags


 # =============== S U B R O U T I N E =======================================


_SRP_Calc_x:                             # DATA XREF: LOAD:00002878↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x118
 # End of function _SRP_Calc_x


 # =============== S U B R O U T I N E =======================================


_EVP_DigestInit_ex:                      # DATA XREF: LOAD:00002858↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x116
 # End of function _EVP_DigestInit_ex


 # =============== S U B R O U T I N E =======================================


_sk_delete:                              # DATA XREF: LOAD:00002848↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x115
 # End of function _sk_delete


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_copy_parameters:               # DATA XREF: LOAD:00002838↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x114
 # End of function _EVP_PKEY_copy_parameters


 # =============== S U B R O U T I N E =======================================


_OBJ_find_sigid_algs:                    # DATA XREF: LOAD:00002818↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x112
 # End of function _OBJ_find_sigid_algs


 # =============== S U B R O U T I N E =======================================


_EVP_VerifyFinal:                        # DATA XREF: LOAD:00002808↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x111
 # End of function _EVP_VerifyFinal


 # =============== S U B R O U T I N E =======================================


_EVP_DigestFinal_ex:                     # DATA XREF: LOAD:000027F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x110
 # End of function _EVP_DigestFinal_ex


 # =============== S U B R O U T I N E =======================================


_BIO_pop:                                # DATA XREF: LOAD:000027E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x10F
 # End of function _BIO_pop


 # =============== S U B R O U T I N E =======================================


_EVP_aes_128_cbc:                        # DATA XREF: LOAD:000027C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x10D
 # End of function _EVP_aes_128_cbc


 # =============== S U B R O U T I N E =======================================


_EVP_PKEY_assign:                        # DATA XREF: LOAD:000027A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x10B
 # End of function _EVP_PKEY_assign


 # =============== S U B R O U T I N E =======================================


_EVP_des_ede3_cbc:                       # DATA XREF: LOAD:00002798↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x10A
 # End of function _EVP_des_ede3_cbc


 # =============== S U B R O U T I N E =======================================


_PEM_ASN1_read_bio:                      # DATA XREF: LOAD:00002768↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x107
 # End of function _PEM_ASN1_read_bio


 # =============== S U B R O U T I N E =======================================


_asn1_GetSequence:                       # DATA XREF: LOAD:00002748↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0x105
 # End of function _asn1_GetSequence


 # =============== S U B R O U T I N E =======================================


_EVP_md5:                                # DATA XREF: LOAD:000026E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xFF
 # End of function _EVP_md5


 # =============== S U B R O U T I N E =======================================


_BIO_int_ctrl:                           # DATA XREF: LOAD:000026D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xFE
 # End of function _BIO_int_ctrl


 # =============== S U B R O U T I N E =======================================


_SRP_Calc_server_key:                    # DATA XREF: LOAD:000026C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xFD
 # End of function _SRP_Calc_server_key


 # =============== S U B R O U T I N E =======================================


_strchr:                                 # DATA XREF: LOAD:000026A8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xFB
 # End of function _strchr


 # =============== S U B R O U T I N E =======================================


_d2i_X509_bio:                           # DATA XREF: LOAD:00002698↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xFA
 # End of function _d2i_X509_bio


 # =============== S U B R O U T I N E =======================================


_BIO_s_connect:                          # DATA XREF: LOAD:00002628↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xF3
 # End of function _BIO_s_connect


 # =============== S U B R O U T I N E =======================================


_PEM_read_bio_X509_AUX:                  # DATA XREF: LOAD:00002608↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xF1
 # End of function _PEM_read_bio_X509_AUX


 # =============== S U B R O U T I N E =======================================


_RSA_up_ref:                             # DATA XREF: LOAD:000025F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xF0
 # End of function _RSA_up_ref


 # =============== S U B R O U T I N E =======================================


_PEM_ASN1_write:                         # DATA XREF: LOAD:000025D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xEE
 # End of function _PEM_ASN1_write


 # =============== S U B R O U T I N E =======================================


_X509_VERIFY_PARAM_new:                  # DATA XREF: LOAD:000025B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xEC
 # End of function _X509_VERIFY_PARAM_new


 # =============== S U B R O U T I N E =======================================


_lh_num_items:                           # DATA XREF: LOAD:00002598↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xEA
 # End of function _lh_num_items


 # =============== S U B R O U T I N E =======================================


_CRYPTO_mem_ctrl:                        # DATA XREF: LOAD:00002588↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xE9
 # End of function _CRYPTO_mem_ctrl


 # =============== S U B R O U T I N E =======================================


_pqueue_peek:                            # DATA XREF: LOAD:00002538↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xE4
 # End of function _pqueue_peek


 # =============== S U B R O U T I N E =======================================


_EVP_aes_128_gcm:                        # DATA XREF: LOAD:00002528↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xE3
 # End of function _EVP_aes_128_gcm


 # =============== S U B R O U T I N E =======================================


_lh_delete:                              # DATA XREF: LOAD:00002508↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xE1
 # End of function _lh_delete


 # =============== S U B R O U T I N E =======================================


_BN_free:                                # DATA XREF: LOAD:000024D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xDE
 # End of function _BN_free


 # =============== S U B R O U T I N E =======================================


_EVP_sha1:                               # DATA XREF: LOAD:00002498↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xDA
 # End of function _EVP_sha1


 # =============== S U B R O U T I N E =======================================


_BN_copy:                                # DATA XREF: LOAD:00002488↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xD9
 # End of function _BN_copy


 # =============== S U B R O U T I N E =======================================


_ERR_add_error_data:                     # DATA XREF: LOAD:00002468↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xD7
 # End of function _ERR_add_error_data


 # =============== S U B R O U T I N E =======================================


_ERR_put_error:                          # DATA XREF: LOAD:00002438↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xD4
 # End of function _ERR_put_error


 # =============== S U B R O U T I N E =======================================


_X509_STORE_set_default_paths:           # DATA XREF: LOAD:00002428↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xD3
 # End of function _X509_STORE_set_default_paths


 # =============== S U B R O U T I N E =======================================


_sk_push:                                # DATA XREF: LOAD:000023F8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xD0
 # End of function _sk_push


 # =============== S U B R O U T I N E =======================================


_EVP_MD_size:                            # DATA XREF: LOAD:000023E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xCF
 # End of function _EVP_MD_size


 # =============== S U B R O U T I N E =======================================


_OBJ_obj2nid:                            # DATA XREF: LOAD:000023D8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xCE
 # End of function _OBJ_obj2nid


 # =============== S U B R O U T I N E =======================================


_EVP_DigestUpdate:                       # DATA XREF: LOAD:000023C8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xCD
 # End of function _EVP_DigestUpdate


 # =============== S U B R O U T I N E =======================================


_d2i_PrivateKey_bio:                     # DATA XREF: LOAD:000023B8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xCC
 # End of function _d2i_PrivateKey_bio


 # =============== S U B R O U T I N E =======================================


_EVP_CIPHER_flags:                       # DATA XREF: LOAD:00002388↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xC9
 # End of function _EVP_CIPHER_flags


 # =============== S U B R O U T I N E =======================================


_strcpy:                                 # DATA XREF: LOAD:00002378↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xC8
 # End of function _strcpy


 # =============== S U B R O U T I N E =======================================


_pqueue_pop:                             # DATA XREF: LOAD:00002348↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xC5
 # End of function _pqueue_pop


 # =============== S U B R O U T I N E =======================================


_PEM_ASN1_read:                          # DATA XREF: LOAD:00002308↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xC1
 # End of function _PEM_ASN1_read


 # =============== S U B R O U T I N E =======================================


_CRYPTO_free_ex_data:                    # DATA XREF: LOAD:000022E8↑o
                lw      $t9, off_5A360
                move    $t7, $ra
                jalr    $t9
                li      $t8, 0xBF
                nop
                nop
                nop
                nop
 # End of function _CRYPTO_free_ex_data


 # ===========================================================================

 # Segment type: Pure code
                .text # LOAD
                nop

 # ===========================================================================

 # Segment type: Pure data
                .data # .rodata
aS2SrvrC:       .ascii "s2_srvr.c"<0>    # DATA XREF: sub_A24C+438↑o
                                         # sub_A24C+528↑o
                .align 2
aS2ClntC:       .ascii "s2_clnt.c"<0>    # DATA XREF: ssl2_connect+F00↑o
                .align 2
aS2LibC:        .ascii "s2_lib.c"<0>     # DATA XREF: ssl2_write_error+DC↑o
                                         # ssl2_generate_key_material+1C0↑o ...
                .align 2
aError0ErrorInt:.ascii "error >= 0 && error <= (int)sizeof(buf)"<0>
                                         # DATA XREF: ssl2_write_error+E0↑o
aSSessionMaster:.ascii "s->session->master_key_length >= 0 && s->session->master_key_"
                .ascii "length < (int)sizeof(s->session->master_key)"<0>
                .align 2
aExpRc4Md5:     .ascii "EXP-RC4-MD5"<0>  # DATA XREF: .data.rel.ro:00057AFC↓o
                                         # .data:00059354↓o
aExpRc2CbcMd5:  .ascii "EXP-RC2-CBC-MD5"<0>
                                         # DATA XREF: .data.rel.ro:00057B5C↓o
                                         # .data:000593E4↓o ...
aDesCbcMd5:     .ascii "DES-CBC-MD5"<0>  # DATA XREF: .data.rel.ro:00057B8C↓o
aDesCbc3Md5:    .ascii "DES-CBC3-MD5"<0>
                                         # DATA XREF: .data.rel.ro:00057BBC↓o
                .align 4
                .globl ssl2_version_str
ssl2_version_str:.ascii "SSLv2 part of OpenSSL 1.0.1c 10 May 2012"<0>
                                         # DATA XREF: LOAD:00001A88↑o
                .align 2
aS2EncC:        .ascii "s2_enc.c"<0>     # DATA XREF: ssl2_enc_init+268↑o
                                         # ssl2_enc_init+2AC↑o ...
                .align 2
aSS2KeyMaterial:.ascii "s->s2->key_material_length <= sizeof s->s2->key_material"<0>
                                         # DATA XREF: ssl2_enc_init+2B0↑o
                .align 2
aCIvLenIntSizeo:.ascii "c->iv_len <= (int)sizeof(s->session->key_arg)"<0>
                                         # DATA XREF: ssl2_enc_init+2D8↑o
                .align 2
aS2PktC:        .ascii "s2_pkt.c"<0>
                .align 4
aMacSizeMaxMacS:.ascii "mac_size <= MAX_MAC_SIZE"<0>
                                         # DATA XREF: sub_EC5C+520↑o
                .align 2
aS3SrvrC:       .ascii "s3_srvr.c"<0>    # DATA XREF: ssl3_get_next_proto+F4↑o
                                         # ssl3_send_newsession_ticket+C8↑o
                .align 2
aGostSignatureL:.ascii "GOST signature length is %d"<0>
                                         # DATA XREF: ssl3_get_cert_verify+4F0↑o
aS3ClntC:       .ascii "s3_clnt.c"<0>    # DATA XREF: ssl3_get_new_session_ticket+1B8↑o
                                         # ssl3_get_server_certificate+55C↑o ...
                .align 4
jpt_18D0C:      .word loc_18CD4 - 0x62350, loc_18D14 - 0x62350, loc_18D44 - 0x62350
                                         # DATA XREF: ssl3_ctx_ctrl+60↑o
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18D88 - 0x62350  # jump table for switch statement
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18DC8 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18DF0 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18DFC - 0x62350, loc_18DFC - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18E20 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18CD4 - 0x62350, loc_18CD4 - 0x62350, loc_18CD4 - 0x62350
                .word loc_18E2C - 0x62350, loc_18E44 - 0x62350, loc_18EAC - 0x62350
                .word loc_18EF0 - 0x62350, loc_18EB8 - 0x62350, loc_18EC8 - 0x62350
jpt_1929C:      .word loc_19228 - 0x62350, loc_192C0 - 0x62350, loc_192FC - 0x62350
                                         # DATA XREF: ssl3_ctrl+CC↑o
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19348 - 0x62350  # jump table for switch statement
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19360 - 0x62350
                .word loc_19228 - 0x62350, loc_19368 - 0x62350, loc_19374 - 0x62350
                .word loc_19384 - 0x62350, loc_19390 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_1939C - 0x62350, loc_19228 - 0x62350
                .word loc_193F4 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_194CC - 0x62350
                .word loc_19400 - 0x62350, loc_19410 - 0x62350, loc_1941C - 0x62350
                .word loc_1942C - 0x62350, loc_19438 - 0x62350, loc_19448 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19228 - 0x62350, loc_19228 - 0x62350
                .word loc_19228 - 0x62350, loc_19470 - 0x62350, loc_194C4 - 0x62350
                .word loc_192A4 - 0x62350
aS3LibC:        .ascii "s3_lib.c"<0>     # DATA XREF: ssl3_new+2C↑o
                .align 2
aNullMd5:       .ascii "NULL-MD5"<0>     # DATA XREF: .data:000592F4↓o
                .align 2
aNullSha:       .ascii "NULL-SHA"<0>     # DATA XREF: .data:00059324↓o
                .align 2
aRc4Sha:        .ascii "RC4-SHA"<0>      # DATA XREF: .data:000593B4↓o
aExpDesCbcSha:  .ascii "EXP-DES-CBC-SHA"<0>
                                         # DATA XREF: .data:00059414↓o
aExpDhDssDesCbc:.ascii "EXP-DH-DSS-DES-CBC-SHA"<0>
                                         # DATA XREF: .data:000594A4↓o
                                         # .data:000594D4↓o
                .align 2
aDhDssDesCbc3Sh:.ascii "DH-DSS-DES-CBC3-SHA"<0>
                                         # DATA XREF: .data:00059504↓o
aExpDhRsaDesCbc:.ascii "EXP-DH-RSA-DES-CBC-SHA"<0>
                                         # DATA XREF: .data:00059534↓o
                                         # .data:00059564↓o
                .align 4
aDhRsaDesCbc3Sh:.ascii "DH-RSA-DES-CBC3-SHA"<0>
                                         # DATA XREF: .data:00059594↓o
aExpEdhDssDesCb:.ascii "EXP-EDH-DSS-DES-CBC-SHA"<0>
                                         # DATA XREF: .data:000595C4↓o
                                         # .data:000595F4↓o
aEdhDssDesCbc3S:.ascii "EDH-DSS-DES-CBC3-SHA"<0>
                                         # DATA XREF: .data:00059624↓o
                .align 2
aExpEdhRsaDesCb:.ascii "EXP-EDH-RSA-DES-CBC-SHA"<0>
                                         # DATA XREF: .data:00059654↓o
                                         # .data:00059684↓o ...
aEdhRsaDesCbc3S:.ascii "EDH-RSA-DES-CBC3-SHA"<0>
                                         # DATA XREF: .data:000596B4↓o
                                         # .data:00059474↓o
                .align 2
aExpAdhRc4Md5:  .ascii "EXP-ADH-RC4-MD5"<0>
                                         # DATA XREF: .data:000596E4↓o
                                         # .data:00059714↓o ...
aExpAdhDesCbcSh:.ascii "EXP-ADH-DES-CBC-SHA"<0>
                                         # DATA XREF: .data:00059744↓o
                                         # .data:00059774↓o
aAdhDesCbc3Sha: .ascii "ADH-DES-CBC3-SHA"<0>
                                         # DATA XREF: .data:000597A4↓o
                .align 2
aDhDssAes128Sha:.ascii "DH-DSS-AES128-SHA"<0>
                                         # DATA XREF: .data:00059804↓o
                .align 4
aDhRsaAes128Sha:.ascii "DH-RSA-AES128-SHA"<0>
                                         # DATA XREF: .data:00059834↓o
                .align 2
aDheDssAes128Sh:.ascii "DHE-DSS-AES128-SHA"<0>
                                         # DATA XREF: .data:00059864↓o
                .align 2
aDheRsaAes128Sh:.ascii "DHE-RSA-AES128-SHA"<0>
                                         # DATA XREF: .data:00059894↓o
                                         # .data:000597D4↓o
                .align 2
aAdhAes128Sha:  .ascii "ADH-AES128-SHA"<0>
                                         # DATA XREF: .data:000598C4↓o
                .align 2
aDhDssAes256Sha:.ascii "DH-DSS-AES256-SHA"<0>
                                         # DATA XREF: .data:00059924↓o
                .align 4
aDhRsaAes256Sha:.ascii "DH-RSA-AES256-SHA"<0>
                                         # DATA XREF: .data:00059954↓o
                .align 2
aDheDssAes256Sh:.ascii "DHE-DSS-AES256-SHA"<0>
                                         # DATA XREF: .data:00059984↓o
                .align 2
aDheRsaAes256Sh:.ascii "DHE-RSA-AES256-SHA"<0>
                                         # DATA XREF: .data:000599B4↓o
                                         # .data:000598F4↓o
                .align 2
aAdhAes256Sha:  .ascii "ADH-AES256-SHA"<0>
                                         # DATA XREF: .data:000599E4↓o
                .align 2
aNullSha256:    .ascii "NULL-SHA256"<0>  # DATA XREF: .data:00059A14↓o
aDhDssAes128Sha_0:.ascii "DH-DSS-AES128-SHA256"<0>
                                         # DATA XREF: .data:00059AA4↓o
                .align 4
aDhRsaAes128Sha_0:.ascii "DH-RSA-AES128-SHA256"<0>
                                         # DATA XREF: .data:00059AD4↓o
                .align 2
aDheDssAes128Sh_0:.ascii "DHE-DSS-AES128-SHA256"<0>
                                         # DATA XREF: .data:00059B04↓o
                .align 4
aDheRsaAes128Sh_0:.ascii "DHE-RSA-AES128-SHA256"<0>
                                         # DATA XREF: .data:00059B34↓o
                                         # .data:00059A44↓o
                .align 2
aDhDssAes256Sha_0:.ascii "DH-DSS-AES256-SHA256"<0>
                                         # DATA XREF: .data:00059B64↓o
                .align 4
aDhRsaAes256Sha_0:.ascii "DH-RSA-AES256-SHA256"<0>
                                         # DATA XREF: .data:00059B94↓o
                .align 2
aDheDssAes256Sh_0:.ascii "DHE-DSS-AES256-SHA256"<0>
                                         # DATA XREF: .data:00059BC4↓o
                .align 4
aDheRsaAes256Sh_0:.ascii "DHE-RSA-AES256-SHA256"<0>
                                         # DATA XREF: .data:00059BF4↓o
                                         # .data:00059A74↓o
                .align 2
aAdhAes128Sha25:.ascii "ADH-AES128-SHA256"<0>
                                         # DATA XREF: .data:00059C24↓o
                .align 2
aAdhAes256Sha25:.ascii "ADH-AES256-SHA256"<0>
                                         # DATA XREF: .data:00059C54↓o
                .align 4
aGost94Gost89Go:.ascii "GOST94-GOST89-GOST89"<0>
                                         # DATA XREF: .data:00059C84↓o
                .align 2
aGost2001Gost89:.ascii "GOST2001-GOST89-GOST89"<0>
                                         # DATA XREF: .data:00059CB4↓o
                .align 4
aGost94NullGost:.ascii "GOST94-NULL-GOST94"<0>
                                         # DATA XREF: .data:00059CE4↓o
                                         # .data.rel.ro:000586A0↓o
                .align 2
aGost2001NullGo:.ascii "GOST2001-NULL-GOST94"<0>
                                         # DATA XREF: .data:00059D14↓o
                .align 2
aDheRsaAes128Gc:.ascii "DHE-RSA-AES128-GCM-SHA256"<0>
                                         # DATA XREF: .data:00059DA4↓o
                                         # .data:00059D44↓o
                .align 2
aDheRsaAes256Gc:.ascii "DHE-RSA-AES256-GCM-SHA384"<0>
                                         # DATA XREF: .data:00059DD4↓o
                                         # .data:00059D74↓o
                .align 2
aDhRsaAes128Gcm:.ascii "DH-RSA-AES128-GCM-SHA256"<0>
                                         # DATA XREF: .data:00059E04↓o
                .align 4
aDhRsaAes256Gcm:.ascii "DH-RSA-AES256-GCM-SHA384"<0>
                                         # DATA XREF: .data:00059E34↓o
                .align 2
aDheDssAes128Gc:.ascii "DHE-DSS-AES128-GCM-SHA256"<0>
                                         # DATA XREF: .data:00059E64↓o
                .align 2
aDheDssAes256Gc:.ascii "DHE-DSS-AES256-GCM-SHA384"<0>
                                         # DATA XREF: .data:00059E94↓o
                .align 2
aDhDssAes128Gcm:.ascii "DH-DSS-AES128-GCM-SHA256"<0>
                                         # DATA XREF: .data:00059EC4↓o
                .align 4
aDhDssAes256Gcm:.ascii "DH-DSS-AES256-GCM-SHA384"<0>
                                         # DATA XREF: .data:00059EF4↓o
                .align 2
aAdhAes128GcmSh:.ascii "ADH-AES128-GCM-SHA256"<0>
                                         # DATA XREF: .data:00059F24↓o
                .align 2
aAdhAes256GcmSh:.ascii "ADH-AES256-GCM-SHA384"<0>
                                         # DATA XREF: .data:00059F54↓o
                .align 2
aSrp3desEdeCbcS:.ascii "SRP-3DES-EDE-CBC-SHA"<0>
                                         # DATA XREF: .data:00059F84↓o
                .align 2
aSrpRsa3desEdeC:.ascii "SRP-RSA-3DES-EDE-CBC-SHA"<0>
                                         # DATA XREF: .data:00059FB4↓o
                .align 4
aSrpDss3desEdeC:.ascii "SRP-DSS-3DES-EDE-CBC-SHA"<0>
                                         # DATA XREF: .data:00059FE4↓o
                .align 2
aSrpAes128CbcSh:.ascii "SRP-AES-128-CBC-SHA"<0>
                                         # DATA XREF: .data:0005A014↓o
aSrpRsaAes128Cb:.ascii "SRP-RSA-AES-128-CBC-SHA"<0>
                                         # DATA XREF: .data:0005A044↓o
aSrpDssAes128Cb:.ascii "SRP-DSS-AES-128-CBC-SHA"<0>
                                         # DATA XREF: .data:0005A074↓o
aSrpAes256CbcSh:.ascii "SRP-AES-256-CBC-SHA"<0>
                                         # DATA XREF: .data:0005A0A4↓o
aSrpRsaAes256Cb:.ascii "SRP-RSA-AES-256-CBC-SHA"<0>
                                         # DATA XREF: .data:0005A0D4↓o
aSrpDssAes256Cb:.ascii "SRP-DSS-AES-256-CBC-SHA"<0>
                                         # DATA XREF: .data:0005A104↓o
aClnt:          .ascii "CLNT"<0>         # DATA XREF: .data:0005A150↓o
                .align 2
aSrvr:          .ascii "SRVR"<0>         # DATA XREF: .data:0005A158↓o
                .align 2
                .globl ssl3_version_str
ssl3_version_str:.ascii "SSLv3 part of OpenSSL 1.0.1c 10 May 2012"<0>
                                         # DATA XREF: LOAD:00002258↑o
                .align 4
jpt_19AE4:      .word locret_19B14 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                                         # DATA XREF: ssl3_alert_code+24↑o
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350  # jump table for switch statement
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19B0C - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AF4 - 0x62350
                .word locret_19AF4 - 0x62350, locret_19AF4 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19B34 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AEC - 0x62350, locret_19B3C - 0x62350
                .word locret_19AFC - 0x62350, locret_19B44 - 0x62350, locret_19B04 - 0x62350
                .word locret_19B4C - 0x62350, locret_19B24 - 0x62350, locret_19B1C - 0x62350
                .word locret_19AFC - 0x62350, locret_19AEC - 0x62350, locret_19AEC - 0x62350
                .word locret_19AEC - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AEC - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AEC - 0x62350, locret_19AEC - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AEC - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AEC - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AC8 - 0x62350
                .word locret_19AC8 - 0x62350, locret_19AC8 - 0x62350, locret_19AEC - 0x62350
                .word locret_19AEC - 0x62350, locret_19AEC - 0x62350, locret_19AEC - 0x62350
                .word locret_19AEC - 0x62350, locret_19B2C - 0x62350
dword_44D20:    .word 0x4242             # DATA XREF: ssl3_generate_master_secret+1A8↑o
dword_44D24:    .word 0x434343           # DATA XREF: ssl3_generate_master_secret+2CC↑o
aS3EncC:        .ascii "s3_enc.c"<0>     # DATA XREF: ssl3_digest_cached_records+4C↑o
                                         # ssl3_setup_key_block+180↑o ...
                .align 2
aM:             .ascii "m"<0>            # DATA XREF: ssl3_change_cipher_state+5CC↑o
                .align 2
aS3PktC:        .ascii "s3_pkt.c"<0>     # DATA XREF: ssl3_read_bytes+B58↑o
                .align 2
aMacSize0:      .ascii "mac_size >= 0"<0>
                                         # DATA XREF: ssl3_read_bytes+B64↑o
                .align 2
aD:             .ascii "%d"<0>           # DATA XREF: ssl3_read_bytes+EC4↑o
                                         # dtls1_read_bytes+BA0↑o
                .align 2
aSslAlertNumber:.ascii "SSL alert number "<0>
                                         # DATA XREF: ssl3_read_bytes+EE4↑o
                                         # dtls1_read_bytes+BC0↑o
                .align 2
jpt_1DAE4:      .word locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350, locret_1DAEC - 0x62350
                                         # DATA XREF: ssl_verify_alarm_type+24↑o
                .word locret_1DAEC - 0x62350, locret_1DB14 - 0x62350, locret_1DB14 - 0x62350  # jump table for switch statement
                .word locret_1DB14 - 0x62350, locret_1DB1C - 0x62350, locret_1DB1C - 0x62350
                .word locret_1DB14 - 0x62350, locret_1DB24 - 0x62350, locret_1DB14 - 0x62350
                .word locret_1DB24 - 0x62350, locret_1DB14 - 0x62350, locret_1DB14 - 0x62350
                .word locret_1DB14 - 0x62350, locret_1DB14 - 0x62350, locret_1DAF4 - 0x62350
                .word locret_1DAEC - 0x62350, locret_1DAEC - 0x62350, locret_1DAEC - 0x62350
                .word locret_1DAEC - 0x62350, locret_1DAEC - 0x62350, locret_1DAFC - 0x62350
                .word locret_1DAEC - 0x62350, locret_1DAEC - 0x62350, locret_1DB04 - 0x62350
                .word locret_1DB14 - 0x62350, locret_1DB14 - 0x62350, locret_1DAC8 - 0x62350
                .word locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350
                .word locret_1DAEC - 0x62350, locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350
                .word locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350
                .word locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350
                .word locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350
                .word locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350
                .word locret_1DAC8 - 0x62350, locret_1DAC8 - 0x62350, locret_1DB0C - 0x62350
aS3BothC:       .ascii "s3_both.c"<0>    # DATA XREF: ssl3_release_write_buffer+50↑o
                                         # ssl3_release_write_buffer:loc_1DBD0↑o ...
                .align 2
aIEvpMaxMdSize: .ascii "i <= EVP_MAX_MD_SIZE"<0>
                                         # DATA XREF: ssl3_get_finished+170↑o
                                         # ssl3_get_finished+1EC↑o ...
                .align 2
aGet:           .ascii "GET "<0>         # DATA XREF: ssl23_get_client_hello+62C↑o
                .align 2
aPost:          .ascii "POST "<0>        # DATA XREF: ssl23_get_client_hello+64C↑o
                .align 2
aHead:          .ascii "HEAD "<0>        # DATA XREF: ssl23_get_client_hello+770↑o
                .align 2
aPut:           .ascii "PUT "<0>         # DATA XREF: ssl23_get_client_hello+790↑o
                .align 2
aConnect:       .ascii "CONNECT"<0>      # DATA XREF: ssl23_get_client_hello+7B0↑o
aT1LibC:        .ascii "t1_lib.c"<0>     # DATA XREF: tls1_heartbeat+B8↑o
                                         # tls1_process_heartbeat+104↑o ...
                .align 4
aClientFinished:.ascii "client finished"<0>
                                         # DATA XREF: tls1_export_keying_material+1E8↑o
                                         # .data:0005A1E8↓o ...
aServerFinished:.ascii "server finished"<0>
                                         # DATA XREF: tls1_export_keying_material+2D8↑o
                                         # .data:0005A1F0↓o ...
jpt_21A48:      .word locret_21A2C - 0x62350
                                         # DATA XREF: tls12_get_hash+28↑o
                .word loc_21A5C - 0x62350  # jump table for switch statement
                .word loc_21A68 - 0x62350
                .word loc_21A74 - 0x62350
                .word loc_21A80 - 0x62350
                .word loc_21A8C - 0x62350
                .word loc_21A50 - 0x62350
                .globl tls1_version_str
tls1_version_str:.ascii "TLSv1 part of OpenSSL 1.0.1c 10 May 2012"<0>
                                         # DATA XREF: LOAD:00002268↑o
                .align 2
dword_44EF8:    .word 0x2000E8FD, 0x8301E30, 0x852A0606, 0x9020203, 0x6060830
                                         # DATA XREF: ssl_add_serverhello_tlsext+42C↑o
                .word 0x203852A, 0x8301602, 0x852A0606
dword_44F18:    .word 0x17020203         # DATA XREF: ssl_add_serverhello_tlsext+430↑o
jpt_2418C:      .word locret_24274 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                                         # DATA XREF: tls1_alert_code+24↑o
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350  # jump table for switch statement
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_2426C - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24264 - 0x62350
                .word locret_2425C - 0x62350, locret_24254 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_2424C - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24244 - 0x62350, locret_24170 - 0x62350
                .word locret_2423C - 0x62350, locret_24234 - 0x62350, locret_2422C - 0x62350
                .word locret_24224 - 0x62350, locret_2421C - 0x62350, locret_24214 - 0x62350
                .word locret_2420C - 0x62350, locret_24204 - 0x62350, locret_241FC - 0x62350
                .word locret_241F4 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_241EC - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_241E4 - 0x62350, locret_241DC - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_241D4 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_241CC - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_241C4 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_24170 - 0x62350
                .word locret_24170 - 0x62350, locret_24170 - 0x62350, locret_241BC - 0x62350
                .word locret_241B4 - 0x62350, locret_241AC - 0x62350, locret_241A4 - 0x62350
                .word locret_2419C - 0x62350, locret_24194 - 0x62350
aT1EncC:        .ascii "t1_enc.c"<0>     # DATA XREF: sub_2427C+608↑o
                                         # tls1_export_keying_material+50↑o ...
                .align 2
aChunk0:        .ascii "chunk >= 0"<0>   # DATA XREF: sub_2427C+614↑o
                .align 2
aMasterSecret:  .ascii "master secret"<0>
                                         # DATA XREF: tls1_export_keying_material+2F8↑o
                                         # tls1_generate_master_secret+98↑o
                .align 2
aKeyExpansion:  .ascii "key expansion"<0>
                                         # DATA XREF: tls1_export_keying_material+318↑o
                                         # tls1_setup_key_block+1F0↑o
                .align 2
aT0:            .ascii "t >= 0"<0>       # DATA XREF: tls1_mac+2D0↑o
                                         # sub_2BB18+404↑o
                .align 2
aT0_0:          .ascii "t > 0"<0>        # DATA XREF: tls1_mac+36C↑o
                .align 2
aN0:            .ascii "n >= 0"<0>       # DATA XREF: tls1_enc+5E8↑o
                                         # tls1_enc+60C↑o
                .align 2
aSDRecDataRecIn:.ascii "%s:%d: rec->data != rec->input\n"<0>
                                         # DATA XREF: tls1_enc+110↑o
                                         # dtls1_enc+98↑o
aClientWriteKey:.ascii "client write key"<0>
                                         # DATA XREF: tls1_change_cipher_state+37C↑o
                .align 4
aServerWriteKey:.ascii "server write key"<0>
                                         # DATA XREF: tls1_change_cipher_state+200↑o
                .align 2
aIvBlock:       .ascii "IV block"<0>     # DATA XREF: tls1_change_cipher_state+4C8↑o
                .align 4
dword_45190:    .word 0, 0, 0, 0         # DATA XREF: tls1_enc+750↑o
dword_451A0:    .word 0                  # DATA XREF: tls1_change_cipher_state+4BC↑o
aD1SrvrC:       .ascii "d1_srvr.c"<0>    # DATA XREF: dtls1_send_newsession_ticket+E0↑o
                .align 4
aD1LibC:        .ascii "d1_lib.c"<0>     # DATA XREF: dtls1_new+54↑o
                .align 2
                .globl dtls1_version_str
dtls1_version_str:.ascii "DTLSv1 part of OpenSSL 1.0.1c 10 May 2012"<0>
                                         # DATA XREF: LOAD:00002058↑o
                .align 2
aD1PktC:        .ascii "d1_pkt.c"<0>     # DATA XREF: do_dtls1_write+24C↑o
                                         # dtls1_write_bytes+4C↑o ...
                .align 2
aLenSsl3RtMaxPl:.ascii "len <= SSL3_RT_MAX_PLAIN_LENGTH"<0>
                                         # DATA XREF: dtls1_write_bytes+50↑o
aD1BothC:       .ascii "d1_both.c"<0>    # DATA XREF: dtls1_heartbeat+B8↑o
                                         # dtls1_process_heartbeat+118↑o ...
                .align 4
aInvalidStateRe:.ascii "invalid state reached %s:%d"<0>
                                         # DATA XREF: dtls1_read_failed+40↑o
aSD1MtuDtls1Min:.ascii "s->d1->mtu >= dtls1_min_mtu()"<0>
                                         # DATA XREF: dtls1_do_write+4E4↑o
                .align 2
aSInitNumIntSD1:.ascii "s->init_num == (int)s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADE"
                                         # DATA XREF: dtls1_do_write+5EC↑o
                .ascii "R_LENGTH"<0>
                .align 2
aSInitOffDtls1H:.ascii "s->init_off > DTLS1_HM_HEADER_LENGTH"<0>
                                         # DATA XREF: dtls1_do_write+4B8↑o
                .align 2
aLenDtls1HmHead:.ascii "len >= DTLS1_HM_HEADER_LENGTH"<0>
                                         # DATA XREF: dtls1_do_write+354↑o
                .align 2
aLenUnsignedInt:.ascii "len == (unsigned int)ret"<0>
                .align 2
aRetransmitMess:.ascii "retransmit:  message %d non-existant\n"<0>
                                         # DATA XREF: dtls1_retransmit_message+25C↑o
                .align 4
aDtls1Retransmi_1:.ascii "dtls1_retransmit_message() failed\n"<0>
                                         # DATA XREF: dtls1_retransmit_buffered_messages+CC↑o
                .align 2
aSInitOff0:     .ascii "s->init_off == 0"<0>
                                         # DATA XREF: dtls1_buffer_message+240↑o
                .align 2
aSD1WMsgHdrMsgL:.ascii "s->d1->w_msg_hdr.msg_len + ((s->version==DTLS1_VERSION)?DTLS1"
                                         # DATA XREF: dtls1_buffer_message+A8↑o
                .ascii "_CCS_HEADER_LENGTH:3) == (unsigned int)s->init_num"<0>
aSD1WMsgHdrMsgL_0:.ascii "s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADER_LENGTH == (unsigne"
                                         # DATA XREF: dtls1_buffer_message+1BC↑o
                .ascii "d int)s->init_num"<0>
                .align 2
aLongMsgHdrMsgL:.ascii "((long)msg_hdr->msg_len) > 0"<0>
                                         # DATA XREF: sub_2F088+450↑o
                .align 2
dword_45448:    .word 0xF8FCFEFF, 0x80C0E0F0
                                         # DATA XREF: sub_2F088+3A8↑o
dword_45450:    .word 0x70301FF, 0x7F3F1F0F
                                         # DATA XREF: sub_2F088:loc_2F33C↑o
                                         # sub_2F088+420↑o
aD1EncC:        .ascii "d1_enc.c"<0>     # DATA XREF: dtls1_enc+9C↑o
                .align 4
dword_45470:    .word 0, 0, 0, 0         # DATA XREF: dtls1_enc+418↑o
aSrtpAes128CmSh:.ascii "SRTP_AES128_CM_SHA1_80"<0>
                                         # DATA XREF: .data:off_5A290↓o
                .align 2
aSrtpAes128CmSh_0:.ascii "SRTP_AES128_CM_SHA1_32"<0>
                                         # DATA XREF: .data:0005A298↓o
                .align 4
aTlsv12:        .ascii "TLSv1.2"<0>      # DATA XREF: SSL_get_version+70↑o
                                         # SSL_CIPHER_description+2DC↑o ...
aTlsv11:        .ascii "TLSv1.1"<0>      # DATA XREF: SSL_get_version+78↑o
                                         # SSL_SESSION_print+264↑o
aTlsv1:         .ascii "TLSv1"<0>        # DATA XREF: SSL_get_version+80↑o
                                         # SSL_SESSION_print+310↑o ...
                .align 2
aSslv3:         .ascii "SSLv3"<0>        # DATA XREF: SSL_get_version+68↑o
                                         # SSL_CIPHER_description+244↑o ...
                .align 4
aSslv2:         .ascii "SSLv2"<0>        # DATA XREF: SSL_get_version+60↑o
                                         # SSL_CTX_set_ssl_version+AC↑o ...
                .align 2
aSslLibC:       .ascii "ssl_lib.c"<0>    # DATA XREF: SSL_get_peer_certificate+60↑o
                                         # ssl_update_cache+84↑o ...
                .align 2
aAllAnullEnullS:.ascii "ALL:!aNULL:!eNULL:!SSLv2"<0>
                                         # DATA XREF: SSL_CTX_set_ssl_version+30↑o
                                         # SSL_CTX_new+19C↑o ...
                .align 4
aSsl2Md5:       .ascii "ssl2-md5"<0>     # DATA XREF: SSL_CTX_new+1F4↑o
                                         # SSL_library_init+194↑o
                .align 2
aSsl3Md5:       .ascii "ssl3-md5"<0>     # DATA XREF: SSL_CTX_new+210↑o
                                         # SSL_library_init+1B8↑o
                .align 2
aSsl3Sha1:      .ascii "ssl3-sha1"<0>    # DATA XREF: SSL_CTX_new+22C↑o
                                         # SSL_library_init+1EC↑o
                .align 2
aSSidCtxLengthS:.ascii "s->sid_ctx_length <= sizeof s->sid_ctx"<0>
                                         # DATA XREF: SSL_new+2D4↑o
                .align 2
aOpenssl101c10M:.ascii "OpenSSL 1.0.1c 10 May 2012"<0>
                                         # DATA XREF: .data:SSL_version_str↓o
                .align 2
jpt_31194:      .word loc_311C8 - 0x62350, loc_311D4 - 0x62350, loc_31158 - 0x62350
                                         # DATA XREF: SSL_ctrl+60↑o
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350  # jump table for switch statement
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_3120C - 0x62350, loc_31220 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31234 - 0x62350, loc_3123C - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31248 - 0x62350, loc_31250 - 0x62350
                .word loc_3125C - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31158 - 0x62350, loc_31158 - 0x62350, loc_31158 - 0x62350
                .word loc_31278 - 0x62350, loc_3128C - 0x62350, loc_3119C - 0x62350
jpt_332E0:      .word loc_33414 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                                         # DATA XREF: SSL_CTX_ctrl+34↑o
                .word loc_332B8 - 0x62350, loc_33408 - 0x62350, loc_33400 - 0x62350  # jump table for switch statement
                .word loc_333F8 - 0x62350, loc_333F0 - 0x62350, loc_333E8 - 0x62350
                .word loc_333E0 - 0x62350, loc_333D8 - 0x62350, loc_333D0 - 0x62350
                .word loc_333C8 - 0x62350, loc_333C0 - 0x62350, loc_333B8 - 0x62350
                .word loc_333B0 - 0x62350, loc_3339C - 0x62350, loc_33388 - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_33380 - 0x62350, loc_33374 - 0x62350, loc_33368 - 0x62350
                .word loc_33360 - 0x62350, loc_33354 - 0x62350, loc_3334C - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_33344 - 0x62350, loc_33338 - 0x62350
                .word loc_3331C - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_332B8 - 0x62350, loc_332B8 - 0x62350
                .word loc_332B8 - 0x62350, loc_33304 - 0x62350, loc_332E8 - 0x62350
aSslCertC:      .ascii "ssl_cert.c"<0>   # DATA XREF: SSL_add_dir_cert_subjects_to_stack+54↑o
                                         # ssl_sess_cert_free+34↑o ...
                .align 2
aSS:            .ascii "%s/%s"<0>
                .align 2
aOpensslDirRead_0:.ascii "OPENSSL_DIR_read(&ctx, '"<0>
                                         # DATA XREF: SSL_add_dir_cert_subjects_to_stack+1E0↑o
                .align 4
asc_45790:      .ascii "')"<0>           # DATA XREF: SSL_add_dir_cert_subjects_to_stack+1E8↑o
                .align 2
aSslForVerifyCa:.ascii "SSL for verify callback"<0>
                                         # DATA XREF: SSL_get_ex_data_X509_STORE_CTX_idx+100↑o
aSslClient:     .ascii "ssl_client"<0>   # DATA XREF: ssl_verify_cert_chain+D4↑o
                .align 2
aSslServer:     .ascii "ssl_server"<0>   # DATA XREF: ssl_verify_cert_chain+1C4↑o
                .align 2
aSslSessionPara:.ascii "SSL SESSION PARAMETERS"<0>
                                         # DATA XREF: PEM_write_SSL_SESSION+44↑o
                                         # PEM_write_bio_SSL_SESSION+44↑o ...
                .align 2
aSslSessC:      .ascii "ssl_sess.c"<0>   # DATA XREF: SSL_get1_session+34↑o
                                         # SSL_get1_session+5C↑o ...
                .align 2
jpt_380F0:      .word loc_382A0 - 0x62350
                                         # DATA XREF: ssl_get_prev_session+B0↑o
                .word loc_38148 - 0x62350  # jump table for switch statement
                .word loc_38148 - 0x62350
                .word loc_380F8 - 0x62350
                .word loc_380F8 - 0x62350
aNone:          .ascii "(NONE)"<0>       # DATA XREF: SSL_CIPHER_get_version+54↑o
                                         # SSL_CIPHER_get_name+24↑o
                .align 2
aTlsv1Sslv3:    .ascii "TLSv1/SSLv3"<0>  # DATA XREF: SSL_CIPHER_get_version+4C↑o
aSslCiphC:      .ascii "ssl_ciph.c"<0>   # DATA XREF: sub_388FC+38↑o
                                         # sub_388FC+54↑o ...
                .align 2
aExport:        .ascii " export"<0>      # DATA XREF: SSL_CIPHER_description:loc_38DFC↑o
aSrp:           .ascii "SRP"<0>          # DATA XREF: SSL_CIPHER_description+348↑o
                                         # .data.rel.ro:00058340↓o
aRsa:           .ascii "RSA"<0>          # DATA XREF: SSL_CIPHER_description+340↑o
                                         # SSL_CIPHER_description:loc_39354↑o ...
aRsa512:        .ascii "RSA(512)"<0>     # DATA XREF: SSL_CIPHER_description+624↑o
                .align 2
aRsa1024:       .ascii "RSA(1024)"<0>    # DATA XREF: SSL_CIPHER_description+320↑o
                .align 2
aDhRsa:         .ascii "DH/RSA"<0>       # DATA XREF: SSL_CIPHER_description+52C↑o
                .align 2
aDhDss:         .ascii "DH/DSS"<0>       # DATA XREF: SSL_CIPHER_description+4FC↑o
                .align 2
aKrb5:          .ascii "KRB5"<0>         # DATA XREF: SSL_CIPHER_description+25C↑o
                                         # SSL_CIPHER_description+4AC↑o ...
                .align 2
aDh512:         .ascii "DH(512)"<0>      # DATA XREF: SSL_CIPHER_description+614↑o
aDh1024:        .ascii "DH(1024)"<0>     # DATA XREF: SSL_CIPHER_description+298↑o
                .align 4
aEcdhRsa:       .ascii "ECDH/RSA"<0>     # DATA XREF: SSL_CIPHER_description+514↑o
                .align 2
aEcdhEcdsa:     .ascii "ECDH/ECDSA"<0>   # DATA XREF: SSL_CIPHER_description+300↑o
                .align 2
aEcdh:          .ascii "ECDH"<0>         # DATA XREF: SSL_CIPHER_description+3A8↑o
                                         # SSL_CIPHER_description+508↑o ...
                .align 4
aPsk:           .ascii "PSK"<0>          # DATA XREF: SSL_CIPHER_description+494↑o
                                         # SSL_CIPHER_description+520↑o ...
aDss:           .ascii "DSS"<0>          # DATA XREF: SSL_CIPHER_description+4C4↑o
                                         # .data.rel.ro:00057FB0↓o
aNone_0:        .ascii "None"<0>         # DATA XREF: SSL_CIPHER_description+4B8↑o
                                         # SSL_CIPHER_description+574↑o ...
                .align 4
aEcdsa:         .ascii "ECDSA"<0>        # DATA XREF: SSL_CIPHER_description+4A0↑o
                                         # .data.rel.ro:000580D0↓o
                .align 2
aSeed128:       .ascii "SEED(128)"<0>    # DATA XREF: SSL_CIPHER_description+478↑o
                .align 2
aDes40:         .ascii "DES(40)"<0>      # DATA XREF: SSL_CIPHER_description+548↑o
aDes56:         .ascii "DES(56)"<0>      # DATA XREF: SSL_CIPHER_description:loc_392D4↑o
a3des168:       .ascii "3DES(168)"<0>    # DATA XREF: SSL_CIPHER_description+350↑o
                .align 4
aRc440:         .ascii "RC4(40)"<0>      # DATA XREF: SSL_CIPHER_description+644↑o
aRc456:         .ascii "RC4(56)"<0>      # DATA XREF: SSL_CIPHER_description+5A4↑o
aRc464:         .ascii "RC4(64)"<0>      # DATA XREF: SSL_CIPHER_description+5EC↑o
aRc4128:        .ascii "RC4(128)"<0>     # DATA XREF: SSL_CIPHER_description:loc_39384↑o
                .align 2
aRc2128:        .ascii "RC2(128)"<0>     # DATA XREF: SSL_CIPHER_description:loc_39378↑o
                .align 4
aRc240:         .ascii "RC2(40)"<0>      # DATA XREF: SSL_CIPHER_description+634↑o
aRc256:         .ascii "RC2(56)"<0>      # DATA XREF: SSL_CIPHER_description+44C↑o
aIdea128:       .ascii "IDEA(128)"<0>    # DATA XREF: SSL_CIPHER_description+580↑o
                .align 2
aAes128:        .ascii "AES(128)"<0>     # DATA XREF: SSL_CIPHER_description+2C8↑o
                .align 2
aAes256:        .ascii "AES(256)"<0>     # DATA XREF: SSL_CIPHER_description+5C4↑o
                .align 2
aAesgcm128:     .ascii "AESGCM(128)"<0>  # DATA XREF: SSL_CIPHER_description+5B8↑o
aAesgcm256:     .ascii "AESGCM(256)"<0>  # DATA XREF: SSL_CIPHER_description+568↑o
aCamellia128:   .ascii "Camellia(128)"<0>
                                         # DATA XREF: SSL_CIPHER_description+380↑o
                .align 2
aCamellia256:   .ascii "Camellia(256)"<0>
                                         # DATA XREF: SSL_CIPHER_description+58C↑o
                .align 2
aAead:          .ascii "AEAD"<0>         # DATA XREF: SSL_CIPHER_description+3C4↑o
                .align 2
aSha256:        .ascii "SHA256"<0>       # DATA XREF: SSL_CIPHER_description+410↑o
                                         # ssl_load_ciphers+274↑o ...
                .align 2
aSha384:        .ascii "SHA384"<0>       # DATA XREF: SSL_CIPHER_description+41C↑o
                                         # ssl_load_ciphers+2A0↑o ...
                .align 2
aOpensslMallocE:.ascii "OPENSSL_malloc Error"<0>
                                         # DATA XREF: SSL_CIPHER_description+658↑o
                .align 2
aBufferTooSmall:.ascii "Buffer too small"<0>
                                         # DATA XREF: SSL_CIPHER_description+3CC↑o
                .align 4
aStrength:      .ascii "STRENGTH"<0>     # DATA XREF: sub_395B4+544↑o
                .align 2
aRc4HmacMd5:    .ascii "RC4-HMAC-MD5"<0>
                                         # DATA XREF: ssl_cipher_get_evp+3D0↑o
                .align 2
aAes128CbcHmacS:.ascii "AES-128-CBC-HMAC-SHA1"<0>
                                         # DATA XREF: ssl_cipher_get_evp+408↑o
                .align 2
aAes256CbcHmacS:.ascii "AES-256-CBC-HMAC-SHA1"<0>
                                         # DATA XREF: ssl_cipher_get_evp+2EC↑o
                .align 2
aDesCbc:        .ascii "DES-CBC"<0>      # DATA XREF: ssl_load_ciphers+30↑o
aDesEde3Cbc:    .ascii "DES-EDE3-CBC"<0>
                                         # DATA XREF: ssl_load_ciphers+4C↑o
                .align 2
aRc4:           .ascii "RC4"<0>          # DATA XREF: ssl_load_ciphers+68↑o
                                         # .data.rel.ro:000583D0↓o
aRc2Cbc:        .ascii "RC2-CBC"<0>      # DATA XREF: ssl_load_ciphers+80↑o
aAes128Cbc:     .ascii "AES-128-CBC"<0>  # DATA XREF: ssl_load_ciphers+94↑o
aAes256Cbc:     .ascii "AES-256-CBC"<0>  # DATA XREF: ssl_load_ciphers+B4↑o
aCamellia128Cbc:.ascii "CAMELLIA-128-CBC"<0>
                                         # DATA XREF: ssl_load_ciphers+CC↑o
                .align 2
aCamellia256Cbc:.ascii "CAMELLIA-256-CBC"<0>
                                         # DATA XREF: ssl_load_ciphers+E4↑o
                .align 4
aGost89Cnt:     .ascii "gost89-cnt"<0>   # DATA XREF: ssl_load_ciphers+FC↑o
                .align 2
aSeedCbc:       .ascii "SEED-CBC"<0>     # DATA XREF: ssl_load_ciphers+114↑o
                .align 2
aIdAes128Gcm:   .ascii "id-aes128-GCM"<0>
                                         # DATA XREF: ssl_load_ciphers+12C↑o
                .align 2
aIdAes256Gcm:   .ascii "id-aes256-GCM"<0>
                                         # DATA XREF: ssl_load_ciphers+144↑o
                .align 2
aSslMacSecretSi:.ascii "ssl_mac_secret_size[SSL_MD_MD5_IDX] >= 0"<0>
                                         # DATA XREF: ssl_load_ciphers+2E8↑o
                .align 2
aSslMacSecretSi_0:.ascii "ssl_mac_secret_size[SSL_MD_SHA1_IDX] >= 0"<0>
                                         # DATA XREF: ssl_load_ciphers+30C↑o
                .align 4
aMdGost94:      .ascii "md_gost94"<0>    # DATA XREF: ssl_load_ciphers+1CC↑o
                .align 2
aSslMacSecretSi_1:.ascii "ssl_mac_secret_size[SSL_MD_GOST94_IDX] >= 0"<0>
                                         # DATA XREF: ssl_load_ciphers+330↑o
aGostMac:       .ascii "gost-mac"<0>     # DATA XREF: ssl_load_ciphers+200↑o
                                         # ssl_load_ciphers+214↑o
                .align 2
aGost94:        .ascii "gost94"<0>       # DATA XREF: ssl_create_cipher_list+A8↑o
                .align 2
aGost2001:      .ascii "gost2001"<0>     # DATA XREF: ssl_create_cipher_list+100↑o
                .align 2
a23sSKx8sAu4sEn:.ascii "%-23s %s Kx=%-8s Au=%-4s Enc=%-9s Mac=%-4s%s\n"<0>
                                         # DATA XREF: .data.rel.ro:off_57BE8↓o
                .align 2
aComplementofal:.ascii "COMPLEMENTOFALL"<0>
                                         # DATA XREF: .data.rel.ro:00057C20↓o
                                         # .data.rel.ro:00057BF0↓o
dword_45B88:    .word 0x504D4F43, 0x454D454C, 0x464F544E
                                         # DATA XREF: .data.rel.ro:00057C50↓o
aDefault:       .ascii "DEFAULT"<0>      # DATA XREF: ssl_create_cipher_list+804↑o
aKrsa:          .ascii "kRSA"<0>         # DATA XREF: .data.rel.ro:00057C80↓o
                .align 2
aKdhr:          .ascii "kDHr"<0>         # DATA XREF: .data.rel.ro:00057CB0↓o
                .align 2
aKdhd:          .ascii "kDHd"<0>         # DATA XREF: .data.rel.ro:00057CE0↓o
                .align 2
aKdh:           .ascii "kDH"<0>          # DATA XREF: .data.rel.ro:00057D10↓o
aKedh:          .ascii "kEDH"<0>         # DATA XREF: .data.rel.ro:00057D40↓o
                .align 4
aKkrb5:         .ascii "kKRB5"<0>        # DATA XREF: .data.rel.ro:00057DA0↓o
                .align 2
aKecdhr:        .ascii "kECDHr"<0>       # DATA XREF: .data.rel.ro:00057DD0↓o
                .align 4
aKecdhe:        .ascii "kECDHe"<0>       # DATA XREF: .data.rel.ro:00057E00↓o
                .align 2
aKecdh:         .ascii "kECDH"<0>        # DATA XREF: .data.rel.ro:00057E30↓o
                .align 4
aKeecdh:        .ascii "kEECDH"<0>       # DATA XREF: .data.rel.ro:00057E60↓o
                                         # SSL_CIPHER_description:loc_39030↑o ...
                .align 2
aKpsk:          .ascii "kPSK"<0>         # DATA XREF: .data.rel.ro:00057EC0↓o
                .align 4
aKsrp:          .ascii "kSRP"<0>         # DATA XREF: .data.rel.ro:00057EF0↓o
                .align 2
aKgost:         .ascii "kGOST"<0>        # DATA XREF: .data.rel.ro:00057F20↓o
                .align 4
aArsa:          .ascii "aRSA"<0>         # DATA XREF: .data.rel.ro:00057F50↓o
                .align 2
aAdss:          .ascii "aDSS"<0>         # DATA XREF: .data.rel.ro:00057F80↓o
                .align 4
aAkrb5:         .ascii "aKRB5"<0>        # DATA XREF: .data.rel.ro:00057FE0↓o
                .align 2
aAnull:         .ascii "aNULL"<0>        # DATA XREF: .data.rel.ro:00058010↓o
                .align 4
aAdh:           .ascii "aDH"<0>          # DATA XREF: .data.rel.ro:00058040↓o
aAecdh:         .ascii "aECDH"<0>        # DATA XREF: .data.rel.ro:00058070↓o
                .align 2
aAecdsa:        .ascii "aECDSA"<0>       # DATA XREF: .data.rel.ro:000580A0↓o
                .align 2
aApsk:          .ascii "aPSK"<0>         # DATA XREF: .data.rel.ro:00058100↓o
                .align 2
aAgost94:       .ascii "aGOST94"<0>      # DATA XREF: .data.rel.ro:00058130↓o
aAgost01:       .ascii "aGOST01"<0>      # DATA XREF: .data.rel.ro:00058160↓o
aAgost:         .ascii "aGOST"<0>        # DATA XREF: .data.rel.ro:00058190↓o
                .align 2
aEdh:           .ascii "EDH"<0>          # DATA XREF: .data.rel.ro:000581C0↓o
aEecdh:         .ascii "EECDH"<0>        # DATA XREF: .data.rel.ro:000581F0↓o
                .align 4
aNull:          .ascii "NULL"<0>         # DATA XREF: .data.rel.ro:00058220↓o
                .align 2
aAdh_0:         .ascii "ADH"<0>          # DATA XREF: .data.rel.ro:000582B0↓o
aAecdh_0:       .ascii "AECDH"<0>        # DATA XREF: .data.rel.ro:000582E0↓o
                .align 2
aDes:           .ascii "DES"<0>          # DATA XREF: .data.rel.ro:00058370↓o
 # `typeinfo name for'DES
_ZTS3DES:       .ascii "3DES"<0>         # DATA XREF: .data.rel.ro:000583A0↓o
                                         # type descriptor name
                .align 4
aRc2:           .ascii "RC2"<0>          # DATA XREF: .data.rel.ro:00058400↓o
aIdea:          .ascii "IDEA"<0>         # DATA XREF: .data.rel.ro:00058430↓o
                .align 2
aSeed:          .ascii "SEED"<0>         # DATA XREF: .data.rel.ro:00058460↓o
                .align 2
aEnull:         .ascii "eNULL"<0>        # DATA XREF: .data.rel.ro:00058490↓o
                .align 2
aAes128_0:      .ascii "AES128"<0>       # DATA XREF: .data.rel.ro:000584C0↓o
                .align 2
aAes256_0:      .ascii "AES256"<0>       # DATA XREF: .data.rel.ro:000584F0↓o
                .align 2
aAes:           .ascii "AES"<0>          # DATA XREF: .data.rel.ro:00058520↓o
aAesgcm:        .ascii "AESGCM"<0>       # DATA XREF: .data.rel.ro:00058550↓o
                .align 2
aCamellia128_0: .ascii "CAMELLIA128"<0>  # DATA XREF: .data.rel.ro:00058580↓o
aCamellia256_0: .ascii "CAMELLIA256"<0>  # DATA XREF: .data.rel.ro:000585B0↓o
aCamellia:      .ascii "CAMELLIA"<0>     # DATA XREF: .data.rel.ro:000585E0↓o
                .align 2
aGost89mac:     .ascii "GOST89MAC"<0>    # DATA XREF: .data.rel.ro:000586D0↓o
                .align 2
aExp:           .ascii "EXP"<0>          # DATA XREF: .data.rel.ro:000587F0↓o
aExport_0:      .ascii "EXPORT"<0>       # DATA XREF: .data.rel.ro:00058820↓o
                .align 2
aExport40:      .ascii "EXPORT40"<0>     # DATA XREF: .data.rel.ro:00058850↓o
                .align 4
aExport56:      .ascii "EXPORT56"<0>     # DATA XREF: .data.rel.ro:00058880↓o
                .align 2
aLow:           .ascii "LOW"<0>          # DATA XREF: .data.rel.ro:000588B0↓o
aMedium:        .ascii "MEDIUM"<0>       # DATA XREF: .data.rel.ro:000588E0↓o
                                         # SSL_alert_desc_string+19C↑o
                .align 2
aHigh:          .ascii "HIGH"<0>         # DATA XREF: .data.rel.ro:00058910↓o
                .align 4
aFips:          .ascii "FIPS"<0>         # DATA XREF: .data.rel.ro:00058940↓o
                .align 2
jpt_39E68:      .word loc_39C78 - 0x62350
                                         # DATA XREF: ssl_cipher_get_evp+328↑o
                .word loc_39EE0 - 0x62350  # jump table for switch statement
                .word loc_39ED8 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39ED0 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39EC8 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39EC0 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39C78 - 0x62350
                .word loc_39E70 - 0x62350
dword_45DAC:    .word 0x10, 0x20, 0x40, 0
                                         # DATA XREF: ssl_get_handshake_digest+1C↑o
                .word 0x80, 0x100
aDtls1WriteHell:.ascii "DTLS1 write hello verify request B"<0>
                                         # DATA XREF: SSL_state_string_long+41C↑o
                .align 2
aUnknownState:  .ascii "unknown state"<0>
                                         # DATA XREF: SSL_state_string_long+260↑o
                .align 2
aBeforeSslIniti:.ascii "before SSL initialization"<0>
                                         # DATA XREF: SSL_state_string_long+A3C↑o
                .align 2
aBeforeAcceptIn:.ascii "before accept initialization"<0>
                                         # DATA XREF: SSL_state_string_long+7E0↑o
                .align 2
aBeforeConnectI:.ascii "before connect initialization"<0>
                                         # DATA XREF: SSL_state_string_long+2B0↑o
                .align 2
aSslNegotiation:.ascii "SSL negotiation finished successfully"<0>
                                         # DATA XREF: SSL_state_string_long+6A4↑o
                .align 2
aSslRenegotiate_2:.ascii "SSL renegotiate ciphers"<0>
                                         # DATA XREF: SSL_state_string_long+5D0↑o
aBeforeConnectI_0:.ascii "before/connect initialization"<0>
                                         # DATA XREF: SSL_state_string_long+A44↑o
                .align 2
aOkConnectSslIn:.ascii "ok/connect SSL initialization"<0>
                                         # DATA XREF: SSL_state_string_long+588↑o
                .align 2
aBeforeAcceptIn_0:.ascii "before/accept initialization"<0>
                                         # DATA XREF: SSL_state_string_long+A4C↑o
                .align 2
aOkAcceptSslIni:.ascii "ok/accept SSL initialization"<0>
                                         # DATA XREF: SSL_state_string_long+7E8↑o
                .align 2
aSslv2ClientSta:.ascii "SSLv2 client start encryption"<0>
                                         # DATA XREF: SSL_state_string_long+858↑o
                .align 2
aSslv2ServerSta:.ascii "SSLv2 server start encryption"<0>
                                         # DATA XREF: SSL_state_string_long+61C↑o
                .align 2
aSslv2WriteClie_4:.ascii "SSLv2 write client hello A"<0>
                                         # DATA XREF: SSL_state_string_long+A78↑o
                .align 4
aSslv2WriteClie_5:.ascii "SSLv2 write client hello B"<0>
                                         # DATA XREF: SSL_state_string_long+A80↑o
                .align 2
aSslv2ReadServe_4:.ascii "SSLv2 read server hello A"<0>
                                         # DATA XREF: SSL_state_string_long+A88↑o
                .align 2
aSslv2ReadServe_0:.ascii "SSLv2 read server hello B"<0>
                                         # DATA XREF: SSL_state_string_long+580↑o
                .align 2
aSslv2WriteClie:.ascii "SSLv2 write client master key A"<0>
                                         # DATA XREF: SSL_state_string_long+570↑o
aSslv2WriteClie_1:.ascii "SSLv2 write client master key B"<0>
                                         # DATA XREF: SSL_state_string_long+598↑o
aSslv2WriteClie_0:.ascii "SSLv2 write client finished A"<0>
                                         # DATA XREF: SSL_state_string_long+590↑o
                .align 2
aSslv2WriteClie_2:.ascii "SSLv2 write client finished B"<0>
                                         # DATA XREF: SSL_state_string_long+5A0↑o
                .align 2
aSslv2WriteClie_6:.ascii "SSLv2 write client certificate A"<0>
                                         # DATA XREF: SSL_state_string_long+AB4↑o
                .align 2
aSslv2WriteClie_7:.ascii "SSLv2 write client certificate B"<0>
                                         # DATA XREF: SSL_state_string_long+ABC↑o
                .align 2
aSslv2WriteClie_8:.ascii "SSLv2 write client certificate C"<0>
                                         # DATA XREF: SSL_state_string_long+AC4↑o
                .align 4
aSslv2WriteClie_3:.ascii "SSLv2 write client certificate D"<0>
                                         # DATA XREF: SSL_state_string_long+664↑o
                .align 2
aSslv2ReadServe_2:.ascii "SSLv2 read server verify A"<0>
                                         # DATA XREF: SSL_state_string_long+6B4↑o
                .align 4
aSslv2ReadServe:.ascii "SSLv2 read server verify B"<0>
                                         # DATA XREF: SSL_state_string_long+210↑o
                .align 2
aSslv2ReadServe_1:.ascii "SSLv2 read server finished A"<0>
                                         # DATA XREF: SSL_state_string_long+65C↑o
                .align 2
aSslv2ReadServe_3:.ascii "SSLv2 read server finished B"<0>
                                         # DATA XREF: SSL_state_string_long+850↑o
                .align 2
aSslv2ReadClien_2:.ascii "SSLv2 read client hello A"<0>
                                         # DATA XREF: SSL_state_string_long+6DC↑o
                .align 2
aSslv2ReadClien_1:.ascii "SSLv2 read client hello B"<0>
                                         # DATA XREF: SSL_state_string_long+67C↑o
                .align 2
aSslv2ReadClien:.ascii "SSLv2 read client hello C"<0>
                                         # DATA XREF: SSL_state_string_long+350↑o
                .align 4
aSslv2WriteServ_0:.ascii "SSLv2 write server hello A"<0>
                                         # DATA XREF: SSL_state_string_long+654↑o
                .align 2
aSslv2WriteServ_5:.ascii "SSLv2 write server hello B"<0>
                                         # DATA XREF: SSL_state_string_long+8F0↑o
                .align 2
aSslv2ReadClien_4:.ascii "SSLv2 read client master key A"<0>
                                         # DATA XREF: SSL_state_string_long+8F8↑o
                .align 2
aSslv2ReadClien_5:.ascii "SSLv2 read client master key B"<0>
                                         # DATA XREF: SSL_state_string_long+900↑o
                .align 2
aSslv2WriteServ:.ascii "SSLv2 write server verify A"<0>
                                         # DATA XREF: SSL_state_string_long+63C↑o
aSslv2WriteServ_1:.ascii "SSLv2 write server verify B"<0>
                                         # DATA XREF: SSL_state_string_long+70C↑o
aSslv2WriteServ_2:.ascii "SSLv2 write server verify C"<0>
                                         # DATA XREF: SSL_state_string_long+714↑o
aSslv2ReadClien_0:.ascii "SSLv2 read client finished A"<0>
                                         # DATA XREF: SSL_state_string_long+4A4↑o
                .align 2
aSslv2ReadClien_3:.ascii "SSLv2 read client finished B"<0>
                                         # DATA XREF: SSL_state_string_long+71C↑o
                .align 2
aSslv2WriteServ_3:.ascii "SSLv2 write server finished A"<0>
                                         # DATA XREF: SSL_state_string_long+760↑o
                .align 2
aSslv2WriteServ_4:.ascii "SSLv2 write server finished B"<0>
                                         # DATA XREF: SSL_state_string_long+768↑o
                .align 2
aSslv2WriteRequ_2:.ascii "SSLv2 write request certificate A"<0>
                                         # DATA XREF: SSL_state_string_long+770↑o
                .align 4
aSslv2WriteRequ_1:.ascii "SSLv2 write request certificate B"<0>
                                         # DATA XREF: SSL_state_string_long+6D4↑o
                .align 2
aSslv2WriteRequ_0:.ascii "SSLv2 write request certificate C"<0>
                                         # DATA XREF: SSL_state_string_long+5E8↑o
                .align 2
aSslv2WriteRequ:.ascii "SSLv2 write request certificate D"<0>
                                         # DATA XREF: SSL_state_string_long+1A8↑o
                .align 2
aSslv2X509ReadS:.ascii "SSLv2 X509 read server certificate"<0>
                                         # DATA XREF: SSL_state_string_long+92C↑o
                .align 4
aSslv2X509ReadC:.ascii "SSLv2 X509 read client certificate"<0>
                                         # DATA XREF: SSL_state_string_long+860↑o
                .align 2
aSslv3WriteClie_0:.ascii "SSLv3 write client hello A"<0>
                                         # DATA XREF: SSL_state_string_long+52C↑o
                .align 4
aSslv3WriteClie_5:.ascii "SSLv3 write client hello B"<0>
                                         # DATA XREF: SSL_state_string_long+72C↑o
                .align 2
aSslv3ReadServe_5:.ascii "SSLv3 read server hello A"<0>
                                         # DATA XREF: SSL_state_string_long+724↑o
                .align 2
aSslv3ReadServe_6:.ascii "SSLv3 read server hello B"<0>
                                         # DATA XREF: SSL_state_string_long+734↑o
                .align 2
aSslv3ReadServe_7:.ascii "SSLv3 read server certificate A"<0>
                                         # DATA XREF: SSL_state_string_long+7AC↑o
aSslv3ReadServe_4:.ascii "SSLv3 read server certificate B"<0>
                                         # DATA XREF: SSL_state_string_long+6E4↑o
aSslv3ReadServe_1:.ascii "SSLv3 read server key exchange A"<0>
                                         # DATA XREF: SSL_state_string_long+614↑o
                .align 2
aSslv3ReadServe_0:.ascii "SSLv3 read server key exchange B"<0>
                                         # DATA XREF: SSL_state_string_long+60C↑o
                .align 2
aSslv3ReadServe_2:.ascii "SSLv3 read server certificate request A"<0>
                                         # DATA XREF: SSL_state_string_long+634↑o
aSslv3ReadServe_8:.ascii "SSLv3 read server certificate request B"<0>
                                         # DATA XREF: SSL_state_string_long+960↑o
aSslv3ReadServe_3:.ascii "SSLv3 read server session ticket A"<0>
                                         # DATA XREF: SSL_state_string_long+644↑o
                .align 4
aSslv3ReadServe:.ascii "SSLv3 read server session ticket B"<0>
                                         # DATA XREF: SSL_state_string_long+4E8↑o
                .align 2
aSslv3ReadServe_9:.ascii "SSLv3 read server done A"<0>
                                         # DATA XREF: SSL_state_string_long+968↑o
                .align 4
aSslv3ReadServe_10:.ascii "SSLv3 read server done B"<0>
                                         # DATA XREF: SSL_state_string_long+970↑o
                .align 2
aSslv3WriteClie_1:.ascii "SSLv3 write client certificate A"<0>
                                         # DATA XREF: SSL_state_string_long+62C↑o
                .align 4
aSslv3WriteClie_2:.ascii "SSLv3 write client certificate B"<0>
                                         # DATA XREF: SSL_state_string_long+684↑o
                .align 2
aSslv3WriteClie_3:.ascii "SSLv3 write client certificate C"<0>
                                         # DATA XREF: SSL_state_string_long+68C↑o
                .align 2
aSslv3WriteClie:.ascii "SSLv3 write client certificate D"<0>
                                         # DATA XREF: SSL_state_string_long+460↑o
                .align 2
aSslv3WriteClie_4:.ascii "SSLv3 write client key exchange A"<0>
                                         # DATA XREF: SSL_state_string_long+694↑o
                .align 4
aSslv3WriteClie_6:.ascii "SSLv3 write client key exchange B"<0>
                                         # DATA XREF: SSL_state_string_long+88C↑o
                .align 2
aSslv3WriteCert_1:.ascii "SSLv3 write certificate verify A"<0>
                                         # DATA XREF: SSL_state_string_long+894↑o
                .align 2
aSslv3WriteCert_2:.ascii "SSLv3 write certificate verify B"<0>
                                         # DATA XREF: SSL_state_string_long+89C↑o
                .align 2
aSslv3WriteChan_0:.ascii "SSLv3 write change cipher spec A"<0>
                                         # DATA XREF: SSL_state_string_long+5A8↑o
                .align 4
aSslv3WriteChan:.ascii "SSLv3 write change cipher spec B"<0>
                                         # DATA XREF: SSL_state_string_long+140↑o
                .align 2
aSslv3WriteFini:.ascii "SSLv3 write finished A"<0>
                                         # DATA XREF: SSL_state_string_long+64C↑o
                .align 2
aSslv3WriteFini_0:.ascii "SSLv3 write finished B"<0>
                                         # DATA XREF: SSL_state_string_long+674↑o
                .align 2
aSslv3ReadChang_0:.ascii "SSLv3 read change cipher spec A"<0>
                                         # DATA XREF: SSL_state_string_long+69C↑o
aSslv3ReadChang:.ascii "SSLv3 read change cipher spec B"<0>
                                         # DATA XREF: SSL_state_string_long+B4↑o
aSslv3ReadFinis:.ascii "SSLv3 read finished A"<0>
                                         # DATA XREF: SSL_state_string_long+5D8↑o
                .align 2
aSslv3ReadFinis_0:.ascii "SSLv3 read finished B"<0>
                                         # DATA XREF: SSL_state_string_long+66C↑o
                .align 2
aSslv3FlushData:.ascii "SSLv3 flush data"<0>
                                         # DATA XREF: SSL_state_string_long+578↑o
                .align 2
aSslv3ReadClien_4:.ascii "SSLv3 read client hello A"<0>
                                         # DATA XREF: SSL_state_string_long+934↑o
                .align 2
aSslv3ReadClien_2:.ascii "SSLv3 read client hello B"<0>
                                         # DATA XREF: SSL_state_string_long+624↑o
                .align 4
aSslv3ReadClien_3:.ascii "SSLv3 read client hello C"<0>
                                         # DATA XREF: SSL_state_string_long+6F4↑o
                .align 2
aSslv3WriteHell:.ascii "SSLv3 write hello request A"<0>
                                         # DATA XREF: SSL_state_string_long+704↑o
aSslv3WriteHell_1:.ascii "SSLv3 write hello request B"<0>
                                         # DATA XREF: SSL_state_string_long+824↑o
aSslv3WriteHell_0:.ascii "SSLv3 write hello request C"<0>
                                         # DATA XREF: SSL_state_string_long+81C↑o
aSslv3WriteServ_2:.ascii "SSLv3 write server hello A"<0>
                                         # DATA XREF: SSL_state_string_long+814↑o
                .align 2
aSslv3WriteServ_1:.ascii "SSLv3 write server hello B"<0>
                                         # DATA XREF: SSL_state_string_long+6EC↑o
                .align 2
aSslv3WriteCert_0:.ascii "SSLv3 write certificate A"<0>
                                         # DATA XREF: SSL_state_string_long+6AC↑o
                .align 2
aSslv3WriteCert:.ascii "SSLv3 write certificate B"<0>
                                         # DATA XREF: SSL_state_string_long+300↑o
                .align 4
aSslv3WriteKeyE:.ascii "SSLv3 write key exchange A"<0>
                                         # DATA XREF: SSL_state_string_long+5B8↑o
                .align 2
aSslv3WriteKeyE_0:.ascii "SSLv3 write key exchange B"<0>
                                         # DATA XREF: SSL_state_string_long+A00↑o
                .align 2
aSslv3WriteCert_3:.ascii "SSLv3 write certificate request A"<0>
                                         # DATA XREF: SSL_state_string_long+A08↑o
                .align 2
aSslv3WriteCert_4:.ascii "SSLv3 write certificate request B"<0>
                                         # DATA XREF: SSL_state_string_long+A10↑o
                .align 4
aSslv3WriteSess_0:.ascii "SSLv3 write session ticket A"<0>
                                         # DATA XREF: SSL_state_string_long+5E0↑o
                .align 4
aSslv3WriteSess:.ascii "SSLv3 write session ticket B"<0>
                                         # DATA XREF: SSL_state_string_long+394↑o
                .align 4
aSslv3WriteServ_0:.ascii "SSLv3 write server done A"<0>
                                         # DATA XREF: SSL_state_string_long+5B0↑o
                .align 2
aSslv3WriteServ:.ascii "SSLv3 write server done B"<0>
                                         # DATA XREF: SSL_state_string_long+3D8↑o
                .align 2
aSslv3ReadClien_0:.ascii "SSLv3 read client certificate A"<0>
                                         # DATA XREF: SSL_state_string_long+5F8↑o
aSslv3ReadClien:.ascii "SSLv3 read client certificate B"<0>
                                         # DATA XREF: SSL_state_string_long+5F0↑o
aSslv3ReadClien_1:.ascii "SSLv3 read client key exchange A"<0>
                                         # DATA XREF: SSL_state_string_long+600↑o
                .align 2
aSslv3ReadClien_5:.ascii "SSLv3 read client key exchange B"<0>
                                         # DATA XREF: SSL_state_string_long+9C4↑o
                .align 4
aSslv3ReadCerti:.ascii "SSLv3 read certificate verify A"<0>
                                         # DATA XREF: SSL_state_string_long+9CC↑o
aSslv3ReadCerti_0:.ascii "SSLv3 read certificate verify B"<0>
                                         # DATA XREF: SSL_state_string_long+9D4↑o
aSslv2V3WriteCl_0:.ascii "SSLv2/v3 write client hello A"<0>
                                         # DATA XREF: SSL_state_string_long+6C4↑o
                .align 4
aSslv2V3WriteCl:.ascii "SSLv2/v3 write client hello B"<0>
                                         # DATA XREF: SSL_state_string_long+6BC↑o
                .align 4
aSslv2V3ReadSer:.ascii "SSLv2/v3 read server hello A"<0>
                                         # DATA XREF: SSL_state_string_long+6CC↑o
                .align 4
aSslv2V3ReadSer_0:.ascii "SSLv2/v3 read server hello B"<0>
                                         # DATA XREF: SSL_state_string_long+7D8↑o
                .align 4
aSslv2V3ReadCli_0:.ascii "SSLv2/v3 read client hello A"<0>
                                         # DATA XREF: SSL_state_string_long+5C8↑o
                .align 4
aSslv2V3ReadCli:.ascii "SSLv2/v3 read client hello B"<0>
                                         # DATA XREF: SSL_state_string_long+5C0↑o
                .align 4
aDtls1ReadHello:.ascii "DTLS1 read hello verify request A"<0>
                                         # DATA XREF: SSL_state_string_long+79C↑o
                .align 2
aDtls1ReadHello_0:.ascii "DTLS1 read hello verify request B"<0>
                                         # DATA XREF: SSL_state_string_long+7A4↑o
                .align 2
aDtls1WriteHell_0:.ascii "DTLS1 write hello verify request A"<0>
                                         # DATA XREF: SSL_state_string_long+6FC↑o
                .align 2
aReadDone:      .ascii "read done"<0>    # DATA XREF: SSL_rstate_string_long+50↑o
                .align 2
aReadHeader:    .ascii "read header"<0>  # DATA XREF: SSL_rstate_string_long+48↑o
aReadBody:      .ascii "read body"<0>    # DATA XREF: SSL_rstate_string_long+58↑o
                .align 4
aDwchvb:        .ascii "DWCHVB"<0>       # DATA XREF: SSL_state_string+780↑o
                .align 2
aUnkwn:         .ascii "UNKWN "<0>       # DATA XREF: SSL_state_string+248↑o
                .align 4
aPinit:         .ascii "PINIT "<0>       # DATA XREF: SSL_state_string+868↑o
                .align 2
aAinit:         .ascii "AINIT "<0>       # DATA XREF: SSL_state_string+640↑o
                .align 4
aCinit:         .ascii "CINIT "<0>       # DATA XREF: SSL_state_string+298↑o
                .align 2
aSslok:         .ascii "SSLOK "<0>       # DATA XREF: SSL_state_string+5E8↑o
                .align 4
a2csenc:        .ascii "2CSENC"<0>       # DATA XREF: SSL_state_string+7F8↑o
                                         # SSL_alert_desc_string+154↑o
                .align 2
a2ssenc:        .ascii "2SSENC"<0>       # DATA XREF: SSL_state_string+8D8↑o
                .align 4
a2schA:         .ascii "2SCH_A"<0>       # DATA XREF: SSL_state_string+510↑o
                .align 2
a2schB:         .ascii "2SCH_B"<0>       # DATA XREF: SSL_state_string+9C0↑o
                .align 4
a2gshA:         .ascii "2GSH_A"<0>       # DATA XREF: SSL_state_string+9C8↑o
                .align 2
a2gshB:         .ascii "2GSH_B"<0>       # DATA XREF: SSL_state_string+9D0↑o
                .align 4
a2scmka:        .ascii "2SCMKA"<0>       # DATA XREF: SSL_state_string+688↑o
                .align 2
a2scmkb:        .ascii "2SCMKB"<0>       # DATA XREF: SSL_state_string+518↑o
                .align 4
a2scfA:         .ascii "2SCF_A"<0>       # DATA XREF: SSL_state_string+500↑o
                .align 2
a2scfB:         .ascii "2SCF_B"<0>       # DATA XREF: SSL_state_string+520↑o
                .align 4
a2sccA:         .ascii "2SCC_A"<0>       # DATA XREF: SSL_state_string+984↑o
                .align 2
a2sccB:         .ascii "2SCC_B"<0>       # DATA XREF: SSL_state_string+98C↑o
                .align 4
a2sccC:         .ascii "2SCC_C"<0>       # DATA XREF: SSL_state_string+994↑o
                .align 2
a2sccD:         .ascii "2SCC_D"<0>       # DATA XREF: SSL_state_string+600↑o
                .align 4
a2gsvA:         .ascii "2GSV_A"<0>       # DATA XREF: SSL_state_string+5F8↑o
                .align 2
a2gsvB:         .ascii "2GSV_B"<0>       # DATA XREF: SSL_state_string+1F8↑o
                .align 4
a2gsfA:         .ascii "2GSF_A"<0>       # DATA XREF: SSL_state_string+5D8↑o
                .align 2
a2gsfB:         .ascii "2GSF_B"<0>       # DATA XREF: SSL_state_string+7F0↑o
                .align 4
a2gchA:         .ascii "2GCH_A"<0>       # DATA XREF: SSL_state_string+618↑o
                .align 2
a2gchB:         .ascii "2GCH_B"<0>       # DATA XREF: SSL_state_string+338↑o
                .align 4
a2gchC:         .ascii "2GCH_C"<0>       # DATA XREF: SSL_state_string+564↑o
                .align 2
a2sshA:         .ascii "2SSH_A"<0>       # DATA XREF: SSL_state_string+948↑o
                .align 4
a2sshB:         .ascii "2SSH_B"<0>       # DATA XREF: SSL_state_string+950↑o
                .align 2
a2gcmka:        .ascii "2GCMKA"<0>       # DATA XREF: SSL_state_string+620↑o
                                         # SSL_state_string+958↑o
                .align 4
a2ssvA:         .ascii "2SSV_A"<0>       # DATA XREF: SSL_state_string+678↑o
                .align 2
a2ssvB:         .ascii "2SSV_B"<0>       # DATA XREF: SSL_state_string+458↑o
                .align 4
a2ssvC:         .ascii "2SSV_C"<0>       # DATA XREF: SSL_state_string+680↑o
                .align 2
a2gcfA:         .ascii "2GCF_A"<0>       # DATA XREF: SSL_state_string+6C4↑o
                .align 4
a2gcfB:         .ascii "2GCF_B"<0>       # DATA XREF: SSL_state_string+6CC↑o
                .align 2
a2ssfA:         .ascii "2SSF_A"<0>       # DATA XREF: SSL_state_string+6D4↑o
                .align 4
a2ssfB:         .ascii "2SSF_B"<0>       # DATA XREF: SSL_state_string+638↑o
                .align 2
a2srcA:         .ascii "2SRC_A"<0>       # DATA XREF: SSL_state_string+554↑o
                .align 4
a2srcB:         .ascii "2SRC_B"<0>       # DATA XREF: SSL_state_string+190↑o
                .align 2
a2srcC:         .ascii "2SRC_C"<0>       # DATA XREF: SSL_state_string+5B0↑o
                .align 4
a2srcD:         .ascii "2SRC_D"<0>       # DATA XREF: SSL_state_string+8D0↑o
                .align 2
a2x9gsc:        .ascii "2X9GSC"<0>       # DATA XREF: SSL_state_string+8E0↑o
                .align 4
a2x9gcc:        .ascii "2X9GCC"<0>       # DATA XREF: SSL_state_string+800↑o
                .align 2
a3flush:        .ascii "3FLUSH"<0>       # DATA XREF: SSL_state_string+5D0↑o
                .align 4
a3wchA:         .ascii "3WCH_A"<0>       # DATA XREF: SSL_state_string+690↑o
                .align 2
a3wchB:         .ascii "3WCH_B"<0>       # DATA XREF: SSL_state_string+4C8↑o
                .align 4
a3rshA:         .ascii "3RSH_A"<0>       # DATA XREF: SSL_state_string+698↑o
                .align 2
a3rshB:         .ascii "3RSH_B"<0>       # DATA XREF: SSL_state_string+700↑o
                .align 4
a3rscA:         .ascii "3RSC_A"<0>       # DATA XREF: SSL_state_string+648↑o
                .align 2
a3rscB:         .ascii "3RSC_B"<0>       # DATA XREF: SSL_state_string+544↑o
                .align 4
a3rskea:        .ascii "3RSKEA"<0>       # DATA XREF: SSL_state_string+53C↑o
                .align 2
a3rskeb:        .ascii "3RSKEB"<0>       # DATA XREF: SSL_state_string+55C↑o
                .align 4
a3rcrA:         .ascii "3RCR_A"<0>       # DATA XREF: SSL_state_string+90C↑o
                .align 2
a3rcrB:         .ascii "3RCR_B"<0>       # DATA XREF: SSL_state_string+914↑o
                .align 4
a3rsdA:         .ascii "3RSD_A"<0>       # DATA XREF: SSL_state_string+91C↑o
                .align 2
a3rsdB:         .ascii "3RSD_B"<0>       # DATA XREF: SSL_state_string+658↑o
                .align 4
a3wccA:         .ascii "3WCC_A"<0>       # DATA XREF: SSL_state_string+628↑o
                .align 2
a3wccB:         .ascii "3WCC_B"<0>       # DATA XREF: SSL_state_string+420↑o
                .align 4
a3wccC:         .ascii "3WCC_C"<0>       # DATA XREF: SSL_state_string+630↑o
                .align 2
a3wccD:         .ascii "3WCC_D"<0>       # DATA XREF: SSL_state_string+73C↑o
                .align 4
a3wckea:        .ascii "3WCKEA"<0>       # DATA XREF: SSL_state_string+744↑o
                .align 2
a3wckeb:        .ascii "3WCKEB"<0>       # DATA XREF: SSL_state_string+74C↑o
                .align 4
a3wcvA:         .ascii "3WCV_A"<0>       # DATA XREF: SSL_state_string+528↑o
                .align 2
a3wcvB:         .ascii "3WCV_B"<0>       # DATA XREF: SSL_state_string+610↑o
                .align 4
a3wccsa:        .ascii "3WCCSA"<0>       # DATA XREF: SSL_state_string+128↑o
                .align 2
a3wccsb:        .ascii "3WCCSB"<0>       # DATA XREF: SSL_state_string+56C↑o
                .align 4
a3wfina:        .ascii "3WFINA"<0>       # DATA XREF: SSL_state_string+5A0↑o
                .align 2
a3wfinb:        .ascii "3WFINB"<0>       # DATA XREF: SSL_state_string+5A8↑o
                .align 4
a3rccsa:        .ascii "3RCCSA"<0>       # DATA XREF: SSL_state_string+82C↑o
                .align 2
a3rccsb:        .ascii "3RCCSB"<0>       # DATA XREF: SSL_state_string+670↑o
                .align 4
a3rfina:        .ascii "3RFINA"<0>       # DATA XREF: SSL_state_string+5C8↑o
                .align 2
a3rfinb:        .ascii "3RFINB"<0>       # DATA XREF: SSL_state_string+490↑o
                .align 4
a3whrA:         .ascii "3WHR_A"<0>       # DATA XREF: SSL_state_string+778↑o
                .align 2
a3whrB:         .ascii "3WHR_B"<0>       # DATA XREF: SSL_state_string+650↑o
                .align 4
a3whrC:         .ascii "3WHR_C"<0>       # DATA XREF: SSL_state_string+5F0↑o
                .align 2
a3rchA:         .ascii "3RCH_A"<0>       # DATA XREF: SSL_state_string+660↑o
                .align 4
a3rchB:         .ascii "3RCH_B"<0>       # DATA XREF: SSL_state_string+3E8↑o
                .align 2
a3rchC:         .ascii "3RCH_C"<0>       # DATA XREF: SSL_state_string+668↑o
                .align 4
a3wshA:         .ascii "3WSH_A"<0>       # DATA XREF: SSL_state_string+2E8↑o
                .align 2
a3wshB:         .ascii "3WSH_B"<0>       # DATA XREF: SSL_state_string+54C↑o
                .align 4
a3wscA:         .ascii "3WSC_A"<0>       # DATA XREF: SSL_state_string+894↑o
                .align 2
a3wscB:         .ascii "3WSC_B"<0>       # DATA XREF: SSL_state_string+89C↑o
                .align 4
a3wskea:        .ascii "3WSKEA"<0>       # DATA XREF: SSL_state_string+8A4↑o
                .align 2
a3wskeb:        .ascii "3WSKEB"<0>       # DATA XREF: SSL_state_string+574↑o
                .align 4
a3wcrA:         .ascii "3WCR_A"<0>       # DATA XREF: SSL_state_string+5B8↑o
                .align 2
a3wcrB:         .ascii "3WCR_B"<0>       # DATA XREF: SSL_state_string+3B0↑o
                .align 4
a3wsdA:         .ascii "3WSD_A"<0>       # DATA XREF: SSL_state_string+5C0↑o
                .align 2
a3wsdB:         .ascii "3WSD_B"<0>       # DATA XREF: SSL_state_string+7B4↑o
                .align 4
a3rccA:         .ascii "3RCC_A"<0>       # DATA XREF: SSL_state_string+7BC↑o
                .align 2
a3rccB:         .ascii "3RCC_B"<0>       # DATA XREF: SSL_state_string+7C4↑o
                .align 4
a3rckea:        .ascii "3RCKEA"<0>       # DATA XREF: SSL_state_string+5E0↑o
                .align 2
a3rckeb:        .ascii "3RCKEB"<0>       # DATA XREF: SSL_state_string+608↑o
                .align 4
a3rcvA:         .ascii "3RCV_A"<0>       # DATA XREF: SSL_state_string+A8↑o
                .align 2
a3rcvB:         .ascii "3RCV_B"<0>       # DATA XREF: SSL_state_string+530↑o
                .align 4
a23wcha:        .ascii "23WCHA"<0>       # DATA XREF: SSL_state_string+508↑o
                .align 2
a23wchb:        .ascii "23WCHB"<0>       # DATA XREF: SSL_state_string+9FC↑o
                .align 4
a23rsha:        .ascii "23RSHA"<0>       # DATA XREF: SSL_state_string+A04↑o
                                         # SSL_state_string+A0C↑o
                .align 2
a23rcha:        .ascii "23RCHA"<0>       # DATA XREF: SSL_state_string+858↑o
                .align 4
a23rchb:        .ascii "23RCHB"<0>       # DATA XREF: SSL_state_string+860↑o
                .align 2
aDrchva:        .ascii "DRCHVA"<0>       # DATA XREF: SSL_state_string+708↑o
                .align 4
aDrchvb:        .ascii "DRCHVB"<0>       # DATA XREF: SSL_state_string+710↑o
                .align 2
aDwchva:        .ascii "DWCHVA"<0>       # DATA XREF: SSL_state_string+788↑o
                .align 4
aWarning:       .ascii "warning"<0>      # DATA XREF: SSL_alert_type_string_long+44↑o
aFatal:         .ascii "fatal"<0>        # DATA XREF: SSL_alert_type_string_long+3C↑o
                .align 4
aW:             .ascii "W"<0>            # DATA XREF: SSL_alert_type_string+44↑o
                .align 2
aF:             .ascii "F"<0>            # DATA XREF: SSL_alert_type_string+3C↑o
                .align 2
aU:             .ascii "U"<0>            # DATA XREF: SSL_alert_type_string+30↑o
                .align 2
aUp:            .ascii "UP"<0>           # DATA XREF: SSL_alert_desc_string+4C↑o
                .align 4
aUk:            .ascii "UK"<0>           # DATA XREF: SSL_alert_desc_string+24↑o
                .align 2
aCn:            .ascii "CN"<0>           # DATA XREF: SSL_alert_desc_string+1A8↑o
                .align 2
aBm:            .ascii "BM"<0>           # DATA XREF: SSL_alert_desc_string+190↑o
                .align 2
aDf:            .ascii "DF"<0>           # DATA XREF: SSL_alert_desc_string+16C↑o
                .align 4
aHf:            .ascii "HF"<0>           # DATA XREF: SSL_alert_desc_string+160↑o
                .align 2
aBc:            .ascii "BC"<0>           # DATA XREF: SSL_alert_desc_string+148↑o
                .align 2
aUc:            .ascii "UC"<0>           # DATA XREF: SSL_alert_desc_string+13C↑o
                .align 2
aCr:            .ascii "CR"<0>           # DATA XREF: SSL_alert_desc_string+130↑o
                .align 4
aCe:            .ascii "CE"<0>           # DATA XREF: SSL_alert_desc_string+124↑o
                .align 2
aCu:            .ascii "CU"<0>           # DATA XREF: SSL_alert_desc_string+118↑o
                .align 2
aIp:            .ascii "IP"<0>           # DATA XREF: SSL_alert_desc_string+10C↑o
                .align 2
aDc:            .ascii "DC"<0>           # DATA XREF: SSL_alert_desc_string+184↑o
                .align 4
aRo:            .ascii "RO"<0>           # DATA XREF: SSL_alert_desc_string+178↑o
                .align 2
aAd:            .ascii "AD"<0>           # DATA XREF: SSL_alert_desc_string+F4↑o
                .align 2
aDe:            .ascii "DE"<0>           # DATA XREF: SSL_alert_desc_string+E8↑o
                .align 2
aCy:            .ascii "CY"<0>           # DATA XREF: SSL_alert_desc_string+DC↑o
                .align 4
aEr:            .ascii "ER"<0>           # DATA XREF: SSL_alert_desc_string+D0↑o
                .align 2
aPv:            .ascii "PV"<0>           # DATA XREF: SSL_alert_desc_string+C4↑o
                .align 2
aIs:            .ascii "IS"<0>           # DATA XREF: SSL_alert_desc_string+B8↑o
                .align 2
aIe:            .ascii "IE"<0>           # DATA XREF: SSL_alert_desc_string+AC↑o
                .align 4
aUs:            .ascii "US"<0>           # DATA XREF: SSL_alert_desc_string+A0↑o
                .align 2
aNr:            .ascii "NR"<0>           # DATA XREF: SSL_alert_desc_string+94↑o
                .align 2
aUe:            .ascii "UE"<0>           # DATA XREF: SSL_alert_desc_string+88↑o
                .align 2
aCo:            .ascii "CO"<0>           # DATA XREF: SSL_alert_desc_string+7C↑o
                .align 4
aUn:            .ascii "UN"<0>           # DATA XREF: SSL_alert_desc_string+70↑o
                .align 2
aBr:            .ascii "BR"<0>           # DATA XREF: SSL_alert_desc_string+64↑o
                .align 2
aBh:            .ascii "BH"<0>           # DATA XREF: SSL_alert_desc_string+58↑o
                .align 2
aUnknownPskIden:.ascii "unknown PSK identity"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+4C↑o
                .align 2
aCloseNotify:   .ascii "close notify"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+1A8↑o
                .align 2
aUnexpectedMess:.ascii "unexpected_message"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+19C↑o
                .align 2
aBadRecordMac:  .ascii "bad record mac"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+190↑o
                .align 2
aDecompressionF:.ascii "decompression failure"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+16C↑o
                .align 4
aHandshakeFailu:.ascii "handshake failure"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+160↑o
                .align 2
aNoCertificate: .ascii "no certificate"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+154↑o
                .align 2
aBadCertificate_1:.ascii "bad certificate"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+148↑o
aUnsupportedCer:.ascii "unsupported certificate"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+13C↑o
aCertificateRev:.ascii "certificate revoked"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+130↑o
aCertificateExp:.ascii "certificate expired"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+124↑o
dword_47064:    .word 0x74726563, 0x63696669, 0x20657461
                                         # DATA XREF: SSL_alert_desc_string_long+118↑o
aUnknown:       .ascii "unknown"<0>      # DATA XREF: SSL_get_version+54↑o
                                         # SSL_CIPHER_get_version+38↑o ...
aIllegalParamet:.ascii "illegal parameter"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+10C↑o
                .align 2
aDecryptionFail:.ascii "decryption failed"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+184↑o
                .align 4
aRecordOverflow:.ascii "record overflow"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+178↑o
aUnknownCa:     .ascii "unknown CA"<0>   # DATA XREF: SSL_alert_desc_string_long+100↑o
                                         # SSL_alert_desc_string+100↑o
                .align 2
aAccessDenied:  .ascii "access denied"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+F4↑o
                .align 2
aDecodeError:   .ascii "decode error"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+E8↑o
                .align 2
aDecryptError:  .ascii "decrypt error"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+DC↑o
                .align 2
aExportRestrict:.ascii "export restriction"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+D0↑o
                .align 4
aProtocolVersio:.ascii "protocol version"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+C4↑o
                .align 2
aInsufficientSe:.ascii "insufficient security"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+B8↑o
                .align 2
aInternalError: .ascii "internal error"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+AC↑o
                .align 2
aUserCanceled:  .ascii "user canceled"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+A0↑o
                .align 2
aNoRenegotiatio:.ascii "no renegotiation"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+94↑o
                .align 4
aUnsupportedExt:.ascii "unsupported extension"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+88↑o
                .align 2
aCertificateUno:.ascii "certificate unobtainable"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+7C↑o
                .align 2
aUnrecognizedNa:.ascii "unrecognized name"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+70↑o
                .align 2
aBadCertificate_0:.ascii "bad certificate status response"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+64↑o
aBadCertificate:.ascii "bad certificate hash value"<0>
                                         # DATA XREF: SSL_alert_desc_string_long+58↑o
                .align 2
aRd:            .ascii "RD"<0>           # DATA XREF: SSL_rstate_string+50↑o
                .align 2
aRh:            .ascii "RH"<0>           # DATA XREF: SSL_rstate_string+48↑o
                .align 2
aRb:            .ascii "RB"<0>           # DATA XREF: SSL_rstate_string+58↑o
                .align 4
jpt_3C30C:      .word loc_3C470 - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                                         # DATA XREF: SSL_alert_desc_string+2C↑o
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350  # jump table for switch statement
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C464 - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C458 - 0x62350
                .word loc_3C44C - 0x62350, loc_3C440 - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C434 - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C428 - 0x62350, loc_3C41C - 0x62350
                .word loc_3C410 - 0x62350, loc_3C404 - 0x62350, loc_3C3F8 - 0x62350
                .word loc_3C3EC - 0x62350, loc_3C3E0 - 0x62350, loc_3C3D4 - 0x62350
                .word loc_3C3C8 - 0x62350, loc_3C3BC - 0x62350, loc_3C3B0 - 0x62350
                .word loc_3C3A4 - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C398 - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C38C - 0x62350, loc_3C380 - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C374 - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C368 - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C35C - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C2EC - 0x62350
                .word loc_3C2EC - 0x62350, loc_3C2EC - 0x62350, loc_3C350 - 0x62350
                .word loc_3C344 - 0x62350, loc_3C338 - 0x62350, loc_3C32C - 0x62350
                .word loc_3C320 - 0x62350, loc_3C314 - 0x62350
jpt_3C4B8:      .word loc_3C61C - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                                         # DATA XREF: SSL_alert_desc_string_long+2C↑o
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350  # jump table for switch statement
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C610 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C604 - 0x62350
                .word loc_3C5F8 - 0x62350, loc_3C5EC - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C5E0 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C5D4 - 0x62350, loc_3C5C8 - 0x62350
                .word loc_3C5BC - 0x62350, loc_3C5B0 - 0x62350, loc_3C5A4 - 0x62350
                .word loc_3C598 - 0x62350, loc_3C58C - 0x62350, loc_3C580 - 0x62350
                .word loc_3C574 - 0x62350, loc_3C568 - 0x62350, loc_3C55C - 0x62350
                .word loc_3C550 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C544 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C538 - 0x62350, loc_3C52C - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C520 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C514 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C508 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C498 - 0x62350
                .word loc_3C498 - 0x62350, loc_3C498 - 0x62350, loc_3C4FC - 0x62350
                .word loc_3C4F0 - 0x62350, loc_3C4E4 - 0x62350, loc_3C4D8 - 0x62350
                .word loc_3C4CC - 0x62350, loc_3C4C0 - 0x62350
aSslRsaC:       .ascii "ssl_rsa.c"<0>    # DATA XREF: sub_3C684+104↑o
                                         # sub_3CCE8+104↑o
                .align 2
aSslAsn1C:      .ascii "ssl_asn1.c"<0>   # DATA XREF: d2i_SSL_SESSION+89C↑o
                .align 2
aOsLengthIntSiz:.ascii "os.length <= (int)sizeof(ret->session_id)"<0>
                                         # DATA XREF: d2i_SSL_SESSION+898↑o
                .align 2
aSslSession:    .ascii "SSL-Session:\n"<0>
                                         # DATA XREF: SSL_SESSION_print+40↑o
                .align 2
aDtlsv1:        .ascii "DTLSv1"<0>       # DATA XREF: SSL_SESSION_print+388↑o
                .align 2
aDtlsv1Bad:     .ascii "DTLSv1-bad"<0>   # DATA XREF: SSL_SESSION_print+4F8↑o
                .align 2
aProtocolS:     .ascii "    Protocol  : %s\n"<0>
                                         # DATA XREF: SSL_SESSION_print+11C↑o
aCipher06lx:    .ascii "    Cipher    : %06lX\n"<0>
                                         # DATA XREF: SSL_SESSION_print+280↑o
                .align 2
aCipher04lx:    .ascii "    Cipher    : %04lX\n"<0>
                                         # DATA XREF: SSL_SESSION_print+250↑o
                .align 2
aCipherS:       .ascii "    Cipher    : %s\n"<0>
                                         # DATA XREF: SSL_SESSION_print+144↑o
aSessionId:     .ascii "    Session-ID: "<0>
                                         # DATA XREF: SSL_SESSION_print+160↑o
                .align 2
a02x:           .ascii "%02X"<0>
                .align 2
aSessionIdCtx:  .ascii "\n"              # DATA XREF: SSL_SESSION_print+1CC↑o
                .ascii "    Session-ID-ctx: "<0>
                .align 2
aMasterKey:     .ascii "\n"              # DATA XREF: SSL_SESSION_print+298↑o
                .ascii "    Master-Key: "<0>
                .align 2
aKeyArg:        .ascii "\n"              # DATA XREF: SSL_SESSION_print+31C↑o
                .ascii "    Key-Arg   : "<0>
                .align 2
aSrpUsername:   .ascii "\n"              # DATA XREF: SSL_SESSION_print+3B0↑o
                .ascii "    SRP username: "<0>
aS:             .ascii "%s"<0>           # DATA XREF: SSL_SESSION_print+3D8↑o
                .align 2
aTlsSessionTick_0:.ascii "\n"            # DATA XREF: SSL_SESSION_print+500↑o
                .ascii "    TLS session ticket lifetime hint: %ld (seconds)"<0>
                .align 2
aTlsSessionTick:.ascii "\n"              # DATA XREF: SSL_SESSION_print+408↑o
                .ascii "    TLS session ticket:\n"<0>
                .align 2
aCompressionD:  .ascii "\n"              # DATA XREF: SSL_SESSION_print+550↑o
                .ascii "    Compression: %d"<0>
                .align 4
aCompressionDS: .ascii "\n"              # DATA XREF: SSL_SESSION_print+D8↑o
                .ascii "    Compression: %d (%s)"<0>
                .align 2
aStartTimeLd:   .ascii "\n"              # DATA XREF: SSL_SESSION_print+528↑o
                .ascii "    Start Time: %ld"<0>
                .align 2
aTimeoutLdSec:  .ascii "\n"              # DATA XREF: SSL_SESSION_print+468↑o
                .ascii "    Timeout   : %ld (sec)"<0>
                .align 4
aVerifyReturnCo:.ascii "    Verify return code: "<0>
                                         # DATA XREF: SSL_SESSION_print+4A0↑o
                .align 2
aLdS:           .ascii "%ld (%s)\n"<0>   # DATA XREF: SSL_SESSION_print+4D4↑o
                                         # SSL_SESSION_print+484↑o
                .align 2
aRsaSha12:      .ascii "RSA-SHA1-2"<0>   # DATA XREF: SSL_library_init+218↑o
                .align 2
aRsaSha1:       .ascii "RSA-SHA1"<0>     # DATA XREF: SSL_library_init+20C↑o
                .align 4
aDsaSha1Old:    .ascii "DSA-SHA1-old"<0>
                                         # DATA XREF: SSL_library_init+2CC↑o
                .align 4
                .word 0x2D415344
aSha1:          .ascii "SHA1"<0>         # DATA XREF: SSL_CIPHER_description+338↑o
                                         # ssl_load_ciphers+194↑o ...
                .align 2
aDss1:          .ascii "DSS1"<0>         # DATA XREF: SSL_library_init+2E8↑o
                .align 2
aDss1_0:        .ascii "dss1"<0>         # DATA XREF: SSL_library_init+304↑o
                .align 2
aBioSslC:       .ascii "bio_ssl.c"<0>    # DATA XREF: sub_40EB4+28↑o
                                         # sub_41404+130↑o ...
                .align 2
aSsl:           .ascii "ssl"<0>          # DATA XREF: .data:0005A334↓o
jpt_41090:      .word loc_41138 - 0x62350
                                         # DATA XREF: sub_40FBC+C4↑o
                .word loc_4104C - 0x62350  # jump table for switch statement
                .word loc_41118 - 0x62350
                .word loc_410F8 - 0x62350
                .word loc_410D8 - 0x62350
                .word loc_4104C - 0x62350
                .word loc_4104C - 0x62350
                .word loc_410B8 - 0x62350
                .word loc_41098 - 0x62350
jpt_412C4:      .word loc_4134C - 0x62350
                                         # DATA XREF: sub_411F0+C4↑o
                .word loc_41280 - 0x62350  # jump table for switch statement
                .word loc_4132C - 0x62350
                .word loc_4130C - 0x62350
                .word loc_412EC - 0x62350
                .word loc_41280 - 0x62350
                .word loc_41280 - 0x62350
                .word loc_412CC - 0x62350
jpt_414A8:      .word loc_4145C - 0x62350, loc_41694 - 0x62350, loc_4145C - 0x62350
                                         # DATA XREF: sub_41404+94↑o
                .word loc_414BC - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350  # jump table for switch statement
                .word loc_41628 - 0x62350, loc_41684 - 0x62350, loc_41764 - 0x62350
                .word loc_4176C - 0x62350, loc_41778 - 0x62350, loc_41794 - 0x62350
                .word loc_416EC - 0x62350, loc_41754 - 0x62350, loc_414BC - 0x62350
                .word loc_418CC - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_41844 - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_418AC - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_414E8 - 0x62350, loc_418BC - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_417DC - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_4145C - 0x62350
                .word loc_4145C - 0x62350, loc_4145C - 0x62350, loc_417FC - 0x62350
                .word loc_41810 - 0x62350, loc_41818 - 0x62350
aTlsSrpC:       .ascii "tls_srp.c"<0>    # DATA XREF: SRP_generate_client_master_secret+118↑o
                                         # SRP_generate_server_master_secret+C8↑o
                .align 2
aT1RenegC:      .ascii "t1_reneg.c"<0>   # DATA XREF: ssl_parse_serverhello_renegotiate_ext+124↑o
                                         # ssl_parse_serverhello_renegotiate_ext+144↑o
                .align 2
aExpectedLenSS3_0:.ascii "!expected_len || s->s3->previous_client_finished_len"<0>
                                         # DATA XREF: ssl_parse_serverhello_renegotiate_ext+148↑o
                .align 4
aExpectedLenSS3:.ascii "!expected_len || s->s3->previous_server_finished_len"<0>
                                         # DATA XREF: ssl_parse_serverhello_renegotiate_ext+128↑o
                .align 2

 # ===========================================================================

 # Segment type: Pure data
                .data # .data.rel.ro
                .globl ssl2_ciphers
ssl2_ciphers:   .word 1                  # DATA XREF: LOAD:0000005C↑o
                                         # LOAD:00002FB8↑o ...
                .word aExpAdhRc4Md5+8    # "RC4-MD5"
                .word 0x2010080, 1, 1, 4, 1, 1, 0x41, 0
                .word 0x80, 0x80, 1
                .word aExpRc4Md5         # "EXP-RC4-MD5"
                .word 0x2020080, 1, 1, 4, 1, 1, 0xA, 1, 0x28, 0x80, 1
                .word aExpRc2CbcMd5+4    # "RC2-CBC-MD5"
                .word 0x2030080, 1, 1, 8, 1, 1, 0x41, 0
                .word 0x80, 0x80, 1
                .word aExpRc2CbcMd5      # "EXP-RC2-CBC-MD5"
                .word 0x2040080, 1, 1, 8, 1, 1, 0xA, 1, 0x28, 0x80, 1
                .word aDesCbcMd5         # "DES-CBC-MD5"
                .word 0x2060040, 1, 1, 1, 1, 1, 0x21, 0
                .word 0x38, 0x38, 1
                .word aDesCbc3Md5        # "DES-CBC3-MD5"
                .word 0x20700C0, 1, 1, 2, 1, 1, 0x81, 0
                .word dword_A8, dword_A8
off_57BE8:      .word a23sSKx8sAu4sEn    # DATA XREF: SSL_CIPHER_description+1AC↑r
                                         # "%-23s %s Kx=%-8s Au=%-4s Enc=%-9s Mac=%"...
dword_57BEC:    .word 0                  # DATA XREF: ssl_create_cipher_list+790↑o
                .word aComplementofal+0xC  # "ALL"
                .align 4
                .word 0xFFFFFFDF, 0, 0, 0, 0, 0, 0, 0
                .word aComplementofal    # "COMPLEMENTOFALL"
                .align 4
                .word 0x20, 0, 0, 0, 0, 0, 0, 0
                .word dword_45B88
                .align 3
                .word 0x88, 4, 0xFFFFFFDF, 0, 0, 0, 0, 0, 0, 0
                .word aKrsa              # "kRSA"
                .align 3
                .word 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKdhr              # "kDHr"
                .align 3
                .word 2, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKdhd              # "kDHd"
                .align 3
                .word 4, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKdh               # "kDH"
                .align 3
                .word 6, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKedh              # "kEDH"
                .align 3
                .word 8, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKeecdh+4          # "DH"
                .align 3
                .word 0xE, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKkrb5             # "kKRB5"
                .align 3
                .word 0x10, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKecdhr            # "kECDHr"
                .align 3
                .word 0x20, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKecdhe            # "kECDHe"
                .align 3
                .word dword_40, _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word aKecdh             # "kECDH"
                .align 3
                .word dword_60, _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word aKeecdh            # "kEECDH"
                .align 3
                .word dword_80, _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word aEcdh              # "ECDH"
                .align 3
                .word 0xE0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKpsk              # "kPSK"
                .word 0
                .word 0x100, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKsrp              # "kSRP"
                .word 0
                .word 0x400, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aKgost             # "kGOST"
                .word 0
                .word 0x200, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aArsa              # "aRSA"
                .word 0, 0
                .word 1, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAdss              # "aDSS"
                .word 0, 0
                .word 2, 0, 0, 0, 0, 0, 0, 0, 0
                .word aDss               # "DSS"
                .word 0, 0
                .word 2, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAkrb5             # "aKRB5"
                .word 0, 0
                .word 0x20, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAnull             # "aNULL"
                .word 0, 0
                .word 4, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAdh               # "aDH"
                .word 0, 0
                .word 8, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAecdh             # "aECDH"
                .word 0, 0
                .word 0x10, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAecdsa            # "aECDSA"
                .word 0, 0
                .word dword_40, _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free
                .word aEcdsa             # "ECDSA"
                .word 0, 0
                .word dword_40, _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free
                .word aApsk              # "aPSK"
                .word 0, 0
                .word dword_80, _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free, _X509_NAME_free
                .word aAgost94           # "aGOST94"
                .word 0, 0
                .word 0x100, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAgost01           # "aGOST01"
                .word 0, 0
                .word 0x200, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAgost             # "aGOST"
                .word 0, 0
                .word 0x300, 0, 0, 0, 0, 0, 0, 0, 0
                .word aEdh               # "EDH"
                .align 3
                .word 8, 0xFFFFFFFB, 0, 0, 0, 0, 0, 0, 0, 0
                .word aEecdh             # "EECDH"
                .align 3
                .word 0x80, 0xFFFFFFFB, 0, 0, 0, 0, 0, 0, 0, 0
                .word aNull              # "NULL"
                .align 4
                .word 0x20, 0, 0, 0, 0, 0, 0, 0
                .word aKrb5              # "KRB5"
                .align 3
                .word 0x10, 0x20, 0, 0, 0, 0, 0, 0, 0, 0
                .word aRsa               # "RSA"
                .align 3
                .word 1, 1, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAdh_0             # "ADH"
                .align 3
                .word 8, 4, 0, 0, 0, 0, 0, 0, 0, 0
                .word aAecdh_0           # "AECDH"
                .align 3
                .word 0x80, 4, 0, 0, 0, 0, 0, 0, 0, 0
                .word aPsk               # "PSK"
                .word 0
                .word 0x100, 0x80, 0, 0, 0, 0, 0, 0, 0, 0
                .word aSrp               # "SRP"
                .word 0
                .word 0x400, 0, 0, 0, 0, 0, 0, 0, 0, 0
                .word aDes               # "DES"
                .align 4
                .word 1, 0, 0, 0, 0, 0, 0, 0
                .word _ZTS3DES           # reference to type's name
                .align 4
                .word 2, 0, 0, 0, 0, 0, 0, 0
                .word aRc4               # "RC4"
                .align 4
                .word 4, 0, 0, 0, 0, 0, 0, 0
                .word aRc2               # "RC2"
                .align 4
                .word 8, 0, 0, 0, 0, 0, 0, 0
                .word aIdea              # "IDEA"
                .align 4
                .word 0x10, 0, 0, 0, 0, 0, 0, 0
                .word aSeed              # "SEED"
                .word 0, 0, 0
                .word 0x800, 0, 0, 0, 0, 0, 0, 0
                .word aEnull             # "eNULL"
                .align 4
                .word 0x20, 0, 0, 0, 0, 0, 0, 0
                .word aAes128_0          # "AES128"
                .align 4
                .word 0x1040, 0, 0, 0, 0, 0, 0, 0
                .word aAes256_0          # "AES256"
                .align 4
                .word 0x2080, 0, 0, 0, 0, 0, 0, 0
                .word aAes               # "AES"
                .align 4
                .word 0x30C0, 0, 0, 0, 0, 0, 0, 0
                .word aAesgcm            # "AESGCM"
                .word 0, 0, 0
                .word 0x3000, 0, 0, 0, 0, 0, 0, 0
                .word aCamellia128_0     # "CAMELLIA128"
                .word 0, 0, 0
                .word 0x100, 0, 0, 0, 0, 0, 0, 0
                .word aCamellia256_0     # "CAMELLIA256"
                .word 0, 0, 0
                .word 0x200, 0, 0, 0, 0, 0, 0, 0
                .word aCamellia          # "CAMELLIA"
                .word 0, 0, 0
                .word 0x300, 0, 0, 0, 0, 0, 0, 0
                .word aExpAdhRc4Md5+0xC  # "MD5"
                .word 0, 0, 0, 0
                .word 1, 0, 0, 0, 0, 0, 0
                .word aSha1              # "SHA1"
                .word 0, 0, 0, 0
                .word 2, 0, 0, 0, 0, 0, 0
                .word aDhRsaDesCbc3Sh+0x10  # "SHA"
                .word 0, 0, 0, 0
                .word 2, 0, 0, 0, 0, 0, 0
                .word aGost94NullGost+0xC  # "GOST94"
                .word 0, 0, 0, 0
                .word 4, 0, 0, 0, 0, 0, 0
                .word aGost89mac         # "GOST89MAC"
                .word 0, 0, 0, 0
                .word 8, 0, 0, 0, 0, 0, 0
                .word aSha256            # "SHA256"
                .word 0, 0, 0, 0
                .word 0x10, 0, 0, 0, 0, 0, 0
                .word aSha384            # "SHA384"
                .word 0, 0, 0, 0
                .word 0x20, 0, 0, 0, 0, 0, 0
                .word aSslv2             # "SSLv2"
                .word 0, 0, 0, 0, 0
                .word 1, 0, 0, 0, 0, 0
                .word aSslv3             # "SSLv3"
                .word 0, 0, 0, 0, 0
                .word 2, 0, 0, 0, 0, 0
                .word aTlsv1             # "TLSv1"
                .word 0, 0, 0, 0, 0
                .word 2, 0, 0, 0, 0, 0
                .word aExp               # "EXP"
                .word 0, 0, 0, 0, 0, 0
                .word 2, 0, 0, 0, 0
                .word aExport_0          # "EXPORT"
                .word 0, 0, 0, 0, 0, 0
                .word 2, 0, 0, 0, 0
                .word aExport40          # "EXPORT40"
                .word 0, 0, 0, 0, 0, 0
                .word 8, 0, 0, 0, 0
                .word aExport56          # "EXPORT56"
                .word 0, 0, 0, 0, 0, 0
                .word 0x10, 0, 0, 0, 0
                .word aLow               # "LOW"
                .word 0, 0, 0, 0, 0, 0
                .word 0x20, 0, 0, 0, 0
                .word aMedium            # "MEDIUM"
                .word 0, 0, 0, 0, 0, 0
                .word dword_40, _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free
                .word aHigh              # "HIGH"
                .word 0, 0, 0, 0, 0, 0
                .word dword_80, _X509_NAME_free, _X509_NAME_free, _X509_NAME_free
                .word _X509_NAME_free
                .word aFips              # "FIPS"
                .align 4
                .word 0xFFFFFFDF, 0, 0
                .word 0x100, 0, 0, 0
dword_5896C:    .word 2                  # DATA XREF: _ftext+14↑o
                                         # ssl_create_cipher_list+794↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word 0, 0, 0, 0
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_A1DC
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_589E0:    .word 2                  # DATA XREF: SSLv2_server_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word 0, 0, 0, 0
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_A220
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58A54:    .word 2                  # DATA XREF: SSLv2_client_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word 0, 0, 0, 0
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_BE78
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58AC8:    .word 0x300              # DATA XREF: SSLv3_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_F8F0
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58B3C:    .word 0x300              # DATA XREF: SSLv3_server_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_F934
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58BB0:    .word 0x300              # DATA XREF: SSLv3_client_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_13F54
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58C24:    .word 0x303              # DATA XREF: SSLv23_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_1F0C8
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58C98:    .word 0x303              # DATA XREF: SSLv23_server_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_1F15C
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58D0C:    .word 0x303              # DATA XREF: SSLv23_client_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_1FE04
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58D80:    .word 0x301              # DATA XREF: TLSv1_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_213E4
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58DF4:    .word 0x302              # DATA XREF: TLSv1_1_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_213E4
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58E68:    .word 0x303              # DATA XREF: TLSv1_2_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_213E4
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58EDC:    .word 0x301              # DATA XREF: TLSv1_server_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_21480
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58F50:    .word 0x302              # DATA XREF: TLSv1_1_server_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_21480
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_58FC4:    .word 0x303              # DATA XREF: TLSv1_2_server_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_21480
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_59038:    .word 0x301              # DATA XREF: TLSv1_client_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_2151C
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_590AC:    .word 0x302              # DATA XREF: TLSv1_1_client_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_2151C
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_59120:    .word 0x303              # DATA XREF: TLSv1_2_client_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_2151C
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
off_59194:      .word loc_FEFC+3         # DATA XREF: DTLSv1_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_268C8
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
off_59208:      .word loc_FEFC+3         # DATA XREF: DTLSv1_server_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_2690C
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
off_5927C:      .word loc_FEFC+3         # DATA XREF: DTLSv1_client_method+14↑o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word sub_28B4C
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free

 # ===========================================================================

 # Segment type: Pure data
                .data
                .globl _fdata
_fdata:         .word 1                  # DATA XREF: LOAD:00001D48↑o
                                         # LOAD:00004528↑o ...
                                         # Alternative name is '_fdata'
                                         # ssl3_ciphers
                .word aNullMd5           # "NULL-MD5"
                .word 0x3000001, 1, 1, 0x20, 1, 2, 5, 0xC030, 0, 0
                .word 1
                .word aNullSha           # "NULL-SHA"
                .word 0x3000002, 1, 1, 0x20, 2, 2, 0x105, 0xC030, 0, 0
                .word 1
                .word aExpRc4Md5         # "EXP-RC4-MD5"
                .word 0x3000003, 1, 1, 4, 1, 2, 0xA, 0xC030, 0x28, 0x80
                .word 1
                .word aExpAdhRc4Md5+8    # "RC4-MD5"
                .word 0x3000004, 1, 1, 4, 1, 2, 0x41, 0xC030, 0x80, 0x80
                .word 1
                .word aRc4Sha            # "RC4-SHA"
                .word 0x3000005, 1, 1, 4, 2, 2, 0x41, 0xC030, 0x80, 0x80
                .word 1
                .word aExpRc2CbcMd5      # "EXP-RC2-CBC-MD5"
                .word 0x3000006, 1, 1, 8, 1, 2, 0xA, 0xC030, 0x28, 0x80
                .word 1
                .word aExpDesCbcSha      # "EXP-DES-CBC-SHA"
                .word 0x3000008, 1, 1, 1, 2, 2, 0xA, 0xC030, 0x28, 0x38
                .word 1
                .word aExpEdhRsaDesCb+0xC  # "DES-CBC-SHA"
                .word 0x3000009, 1, 1, 1, 2, 2, 0x21, 0xC030, 0x38, 0x38
                .word 1
                .word aEdhRsaDesCbc3S+8  # "DES-CBC3-SHA"
                .word 0x300000A, 1, 1, 2, 2, 2, 0x181, 0xC030, 0xA8, 0xA8
                .word 0
                .word aExpDhDssDesCbc    # "EXP-DH-DSS-DES-CBC-SHA"
                .word 0x300000B, 4, 8, 1, 2, 2, 0xA, 0xC030, 0x28, 0x38
                .word 0
                .word aExpDhDssDesCbc+4  # "DH-DSS-DES-CBC-SHA"
                .word 0x300000C, 4, 8, 1, 2, 2, 0x21, 0xC030, 0x38, 0x38
                .word 0
                .word aDhDssDesCbc3Sh    # "DH-DSS-DES-CBC3-SHA"
                .word 0x300000D, 4, 8, 2, 2, 2, 0x181, 0xC030, 0xA8, 0xA8
                .word 0
                .word aExpDhRsaDesCbc    # "EXP-DH-RSA-DES-CBC-SHA"
                .word 0x300000E, 2, 8, 1, 2, 2, 0xA, 0xC030, 0x28, 0x38
                .word 0
                .word aExpDhRsaDesCbc+4  # "DH-RSA-DES-CBC-SHA"
                .word 0x300000F, 2, 8, 1, 2, 2, 0x21, 0xC030, 0x38, 0x38
                .word 0
                .word aDhRsaDesCbc3Sh    # "DH-RSA-DES-CBC3-SHA"
                .word 0x3000010, 2, 8, 2, 2, 2, 0x181, 0xC030, 0xA8, 0xA8
                .word 1
                .word aExpEdhDssDesCb    # "EXP-EDH-DSS-DES-CBC-SHA"
                .word 0x3000011, 8, 2, 1, 2, 2, 0xA, 0xC030, 0x28, 0x38
                .word 1
                .word aExpEdhDssDesCb+4  # "EDH-DSS-DES-CBC-SHA"
                .word 0x3000012, 8, 2, 1, 2, 2, 0x21, 0xC030, 0x38, 0x38
                .word 1
                .word aEdhDssDesCbc3S    # "EDH-DSS-DES-CBC3-SHA"
                .word 0x3000013, 8, 2, 2, 2, 2, 0x181, 0xC030, 0xA8, 0xA8
                .word 1
                .word aExpEdhRsaDesCb    # "EXP-EDH-RSA-DES-CBC-SHA"
                .word 0x3000014, 8, 1, 1, 2, 2, 0xA, 0xC030, 0x28, 0x38
                .word 1
                .word aExpEdhRsaDesCb+4  # "EDH-RSA-DES-CBC-SHA"
                .word 0x3000015, 8, 1, 1, 2, 2, 0x21, 0xC030, 0x38, 0x38
                .word 1
                .word aEdhRsaDesCbc3S    # "EDH-RSA-DES-CBC3-SHA"
                .word 0x3000016, 8, 1, 2, 2, 2, 0x181, 0xC030, 0xA8, 0xA8
                .word 1
                .word aExpAdhRc4Md5      # "EXP-ADH-RC4-MD5"
                .word 0x3000017, 8, 4, 4, 1, 2, 0xA, 0xC030, 0x28, 0x80
                .word 1
                .word aExpAdhRc4Md5+4    # "ADH-RC4-MD5"
                .word 0x3000018, 8, 4, 4, 1, 2, 0x41, 0xC030, 0x80, 0x80
                .word 1
                .word aExpAdhDesCbcSh    # "EXP-ADH-DES-CBC-SHA"
                .word 0x3000019, 8, 4, 1, 2, 2, 0xA, 0xC030, 0x28, 0x80
                .word 1
                .word aExpAdhDesCbcSh+4  # "ADH-DES-CBC-SHA"
                .word 0x300001A, 8, 4, 1, 2, 2, 0x21, 0xC030, 0x38, 0x38
                .word 1
                .word aAdhDesCbc3Sha     # "ADH-DES-CBC3-SHA"
                .word 0x300001B, 8, 4, 2, 2, 2, 0x181, 0xC030, 0xA8, 0xA8
                .word 1
                .word aDheRsaAes128Sh+8  # "AES128-SHA"
                .word 0x300002F, 1, 1, 0x40, 2, 2, 0x181, 0xC030, 0x80
                .word 0x80, 0
                .word aDhDssAes128Sha    # "DH-DSS-AES128-SHA"
                .word 0x3000030, 4, 8, 0x40, 2, 2, 0x181, 0xC030, 0x80
                .word 0x80, 0
                .word aDhRsaAes128Sha    # "DH-RSA-AES128-SHA"
                .word 0x3000031, 2, 8, 0x40, 2, 2, 0x181, 0xC030, 0x80
                .word 0x80, 1
                .word aDheDssAes128Sh    # "DHE-DSS-AES128-SHA"
                .word 0x3000032, 8, 2, 0x40, 2, 2, 0x181, 0xC030, 0x80
                .word 0x80, 1
                .word aDheRsaAes128Sh    # "DHE-RSA-AES128-SHA"
                .word 0x3000033, 8, 1, 0x40, 2, 2, 0x181, 0xC030, 0x80
                .word 0x80, 1
                .word aAdhAes128Sha      # "ADH-AES128-SHA"
                .word 0x3000034, 8, 4, 0x40, 2, 2, 0x181, 0xC030, 0x80
                .word 0x80, 1
                .word aDheRsaAes256Sh+8  # "AES256-SHA"
                .word 0x3000035, 1, 1, 0x80, 2, 2, 0x181, 0xC030, 0x100
                .word 0x100, 0
                .word aDhDssAes256Sha    # "DH-DSS-AES256-SHA"
                .word 0x3000036, 4, 8, 0x80, 2, 2, 0x181, 0xC030, 0x100
                .word 0x100, 0
                .word aDhRsaAes256Sha    # "DH-RSA-AES256-SHA"
                .word 0x3000037, 2, 8, 0x80, 2, 2, 0x181, 0xC030, 0x100
                .word 0x100, 1
                .word aDheDssAes256Sh    # "DHE-DSS-AES256-SHA"
                .word 0x3000038, 8, 2, 0x80, 2, 2, 0x181, 0xC030, 0x100
                .word 0x100, 1
                .word aDheRsaAes256Sh    # "DHE-RSA-AES256-SHA"
                .word 0x3000039, 8, 1, 0x80, 2, 2, 0x181, 0xC030, 0x100
                .word 0x100, 1
                .word aAdhAes256Sha      # "ADH-AES256-SHA"
                .word 0x300003A, 8, 4, 0x80, 2, 2, 0x181, 0xC030, 0x100
                .word 0x100, 1
                .word aNullSha256        # "NULL-SHA256"
                .word 0x300003B, 1, 1, 0x20, 0x10, 4, 0x105, 0xC030, 0
                .word 0
                .word 1
                .word aDheRsaAes128Sh_0+8  # "AES128-SHA256"
                .word 0x300003C, 1, 1, 0x40, 0x10, 4, 0x181, 0xC030, 0x80
                .word 0x80, 1
                .word aDheRsaAes256Sh_0+8  # "AES256-SHA256"
                .word 0x300003D, 1, 1, 0x80, 0x10, 4, 0x181, 0xC030, 0x100
                .word 0x100, 0
                .word aDhDssAes128Sha_0  # "DH-DSS-AES128-SHA256"
                .word 0x300003E, 2, 8, 0x40, 0x10, 4, 0x181, 0xC030, 0x80
                .word 0x80, 0
                .word aDhRsaAes128Sha_0  # "DH-RSA-AES128-SHA256"
                .word 0x300003F, 2, 8, 0x40, 0x10, 4, 0x181, 0xC030, 0x80
                .word 0x80, 1
                .word aDheDssAes128Sh_0  # "DHE-DSS-AES128-SHA256"
                .word 0x3000040, 8, 2, 0x40, 0x10, 4, 0x181, 0xC030, 0x80
                .word 0x80, 1
                .word aDheRsaAes128Sh_0  # "DHE-RSA-AES128-SHA256"
                .word 0x3000067, 8, 1, 0x40, 0x10, 4, 0x181, 0xC030, 0x80
                .word 0x80, 0
                .word aDhDssAes256Sha_0  # "DH-DSS-AES256-SHA256"
                .word 0x3000068, 2, 8, 0x80, 0x10, 4, 0x181, 0xC030, 0x100
                .word 0x100, 0
                .word aDhRsaAes256Sha_0  # "DH-RSA-AES256-SHA256"
                .word 0x3000069, 2, 8, 0x80, 0x10, 4, 0x181, 0xC030, 0x100
                .word 0x100, 1
                .word aDheDssAes256Sh_0  # "DHE-DSS-AES256-SHA256"
                .word 0x300006A, 8, 2, 0x80, 0x10, 4, 0x181, 0xC030, 0x100
                .word 0x100, 1
                .word aDheRsaAes256Sh_0  # "DHE-RSA-AES256-SHA256"
                .word 0x300006B, 8, 1, 0x80, 0x10, 4, 0x181, 0xC030, 0x100
                .word 0x100, 1
                .word aAdhAes128Sha25    # "ADH-AES128-SHA256"
                .word 0x300006C, 8, 4, 0x40, 0x10, 4, 0x181, 0xC030, 0x80
                .word 0x80, 1
                .word aAdhAes256Sha25    # "ADH-AES256-SHA256"
                .word 0x300006D, 8, 4, 0x80, 0x10, 4, 0x181, 0xC030, 0x100
                .word 0x100, 1
                .word aGost94Gost89Go    # "GOST94-GOST89-GOST89"
                .word 0x3000080, 0x200, 0x100, 0x400, 8, 2, 0x81, 0x10044
                .word 0x100, 0x100, 1
                .word aGost2001Gost89    # "GOST2001-GOST89-GOST89"
                .word 0x3000081, 0x200, 0x200, 0x400, 8, 2, 0x81, 0x10044
                .word 0x100, 0x100, 1
                .word aGost94NullGost    # "GOST94-NULL-GOST94"
                .word 0x3000082, 0x200, 0x100, 0x20, 4, 2, 5, 0x10040
                .word 0, 0
                .word 1
                .word aGost2001NullGo    # "GOST2001-NULL-GOST94"
                .word 0x3000083, 0x200, 0x200, 0x20, 4, 2, 5, 0x10040
                .word 0, 0
                .word 1
                .word aDheRsaAes128Gc+8  # "AES128-GCM-SHA256"
                .word 0x300009C, 1, 1, 0x1000, 0x40, 4, 0x181, 0x20080
                .word 0x80, 0x80, 1
                .word aDheRsaAes256Gc+8  # "AES256-GCM-SHA384"
                .word 0x300009D, 1, 1, 0x2000, 0x40, 4, 0x181, 0x40100
                .word 0x100, 0x100, 1
                .word aDheRsaAes128Gc    # "DHE-RSA-AES128-GCM-SHA256"
                .word 0x300009E, 8, 1, 0x1000, 0x40, 4, 0x181, 0x20080
                .word 0x80, 0x80, 1
                .word aDheRsaAes256Gc    # "DHE-RSA-AES256-GCM-SHA384"
                .word 0x300009F, 8, 1, 0x2000, 0x40, 4, 0x181, 0x40100
                .word 0x100, 0x100, 0
                .word aDhRsaAes128Gcm    # "DH-RSA-AES128-GCM-SHA256"
                .word 0x30000A0, 2, 8, 0x1000, 0x40, 4, 0x181, 0x20080
                .word 0x80, 0x80, 0
                .word aDhRsaAes256Gcm    # "DH-RSA-AES256-GCM-SHA384"
                .word 0x30000A1, 2, 8, 0x2000, 0x40, 4, 0x181, 0x40100
                .word 0x100, 0x100, 1
                .word aDheDssAes128Gc    # "DHE-DSS-AES128-GCM-SHA256"
                .word 0x30000A2, 8, 2, 0x1000, 0x40, 4, 0x181, 0x20080
                .word 0x80, 0x80, 1
                .word aDheDssAes256Gc    # "DHE-DSS-AES256-GCM-SHA384"
                .word 0x30000A3, 8, 2, 0x2000, 0x40, 4, 0x181, 0x40100
                .word 0x100, 0x100, 0
                .word aDhDssAes128Gcm    # "DH-DSS-AES128-GCM-SHA256"
                .word 0x30000A4, 2, 8, 0x1000, 0x40, 4, 0x181, 0x20080
                .word 0x80, 0x80, 0
                .word aDhDssAes256Gcm    # "DH-DSS-AES256-GCM-SHA384"
                .word 0x30000A5, 2, 8, 0x2000, 0x40, 4, 0x181, 0x40100
                .word 0x100, 0x100, 1
                .word aAdhAes128GcmSh    # "ADH-AES128-GCM-SHA256"
                .word 0x30000A6, 8, 4, 0x1000, 0x40, 4, 0x181, 0x20080
                .word 0x80, 0x80, 1
                .word aAdhAes256GcmSh    # "ADH-AES256-GCM-SHA384"
                .word 0x30000A7, 8, 4, 0x2000, 0x40, 4, 0x181, 0x40100
                .word 0x100, 0x100, 1
                .word aSrp3desEdeCbcS    # "SRP-3DES-EDE-CBC-SHA"
                .word 0x300C01A, 0x400, 4, 2, 2, 2, 0x81, 0xC030, 0xA8
                .word 0xA8, 1
                .word aSrpRsa3desEdeC    # "SRP-RSA-3DES-EDE-CBC-SHA"
                .word 0x300C01B, 0x400, 1, 2, 2, 2, 0x81, 0xC030, 0xA8
                .word 0xA8, 1
                .word aSrpDss3desEdeC    # "SRP-DSS-3DES-EDE-CBC-SHA"
                .word 0x300C01C, 0x400, 2, 2, 2, 2, 0x81, 0xC030, 0xA8
                .word 0xA8, 1
                .word aSrpAes128CbcSh    # "SRP-AES-128-CBC-SHA"
                .word 0x300C01D, 0x400, 4, 0x40, 2, 2, 0x81, 0xC030, 0x80
                .word 0x80, 1
                .word aSrpRsaAes128Cb    # "SRP-RSA-AES-128-CBC-SHA"
                .word 0x300C01E, 0x400, 1, 0x40, 2, 2, 0x81, 0xC030, 0x80
                .word 0x80, 1
                .word aSrpDssAes128Cb    # "SRP-DSS-AES-128-CBC-SHA"
                .word 0x300C01F, 0x400, 2, 0x40, 2, 2, 0x81, 0xC030, 0x80
                .word 0x80, 1
                .word aSrpAes256CbcSh    # "SRP-AES-256-CBC-SHA"
                .word 0x300C020, 0x400, 4, 0x80, 2, 2, 0x81, 0xC030, 0x100
                .word 0x100, 1
                .word aSrpRsaAes256Cb    # "SRP-RSA-AES-256-CBC-SHA"
                .word 0x300C021, 0x400, 1, 0x80, 2, 2, 0x81, 0xC030, 0x100
                .word 0x100, 1
                .word aSrpDssAes256Cb    # "SRP-DSS-AES-256-CBC-SHA"
                .word 0x300C022, 0x400, 2, 0x80, 2, 2, 0x81, 0xC030, 0x100
                .word 0x100
                .globl SSLv3_enc_data
SSLv3_enc_data: .word _X509_NAME_free    # DATA XREF: LOAD:000049E8↑o
                                         # .got:SSLv3_enc_data_ptr↓o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word dword_24
                .word _X509_NAME_free
                .word aClnt              # "CLNT"
                .word 4
                .word aSrvr              # "SRVR"
                .word 4
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_5A168:    .word 0x36363636, 0x36363636, 0x36363636, 0x36363636, 0x36363636
                                         # DATA XREF: n_ssl3_mac+E0↑o
                                         # sub_1A6F8+204↑o
                .word 0x36363636, 0x36363636, 0x36363636, 0x36363636, 0x36363636
                .word 0x36363636, 0x36363636
dword_5A198:    .word 0x5C5C5C5C, 0x5C5C5C5C, 0x5C5C5C5C, 0x5C5C5C5C, 0x5C5C5C5C
                                         # DATA XREF: n_ssl3_mac+1BC↑o
                                         # sub_1A6F8+290↑o
                .word 0x5C5C5C5C, 0x5C5C5C5C, 0x5C5C5C5C, 0x5C5C5C5C, 0x5C5C5C5C
                .word 0x5C5C5C5C, 0x5C5C5C5C
                .globl TLSv1_enc_data
TLSv1_enc_data: .word _X509_NAME_free    # DATA XREF: LOAD:000048B8↑o
                                         # .got:TLSv1_enc_data_ptr↓o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word 0xC
                .word _X509_NAME_free
                .word aClientFinished    # "client finished"
                .word 0xF
                .word aServerFinished    # "server finished"
                .word 0xF
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_5A200:    .word 6                  # DATA XREF: tls12_get_sigid+14↑r
                                         # tls12_get_sigid:loc_215C0↑o
                .word 1
off_5A208:      .word dword_74           # DATA XREF: tls12_get_sigid+24↑r
                                         # tls12_get_sigid+2C↑o
                .word 2
dword_5A210:    .word 4                  # DATA XREF: tls12_get_sigandhash+4C↑r
                                         # tls12_get_sigandhash:loc_24108↑o
                .word 1
off_5A218:      .word dword_40           # DATA XREF: tls12_get_sigandhash+58↑r
                                         # tls12_get_sigandhash+60↑o
                .word 2
dword_5A220:    .word 0x2A3              # DATA XREF: tls12_get_sigandhash+68↑r
                                         # tls12_get_sigandhash+70↑o
                .word 3
dword_5A228:    .word 0x2A0              # DATA XREF: tls12_get_sigandhash+78↑r
                                         # tls12_get_sigandhash+80↑o
                .word 4
dword_5A230:    .word 0x2A1              # DATA XREF: tls12_get_sigandhash+88↑r
                                         # tls12_get_sigandhash+90↑o
                .word 5
dword_5A238:    .word 0x2A2              # DATA XREF: tls12_get_sigandhash+98↑r
                                         # tls12_get_sigandhash+A0↑o
                .word 6
dword_5A240:    .word 0x2060106          # DATA XREF: tls12_get_req_sig_algs+18↑r
                                         # tls12_get_req_sig_algs+1C↑o ...
dword_5A244:    .word 0x2050105          # DATA XREF: tls12_get_req_sig_algs+20↑r
                                         # ssl_add_clienthello_tlsext+578↑r
dword_5A248:    .word 0x2040104          # DATA XREF: tls12_get_req_sig_algs+24↑r
                                         # ssl_add_clienthello_tlsext+57C↑r
dword_5A24C:    .word 0x2030103          # DATA XREF: tls12_get_req_sig_algs+28↑r
                                         # ssl_add_clienthello_tlsext+574↑r
dword_5A250:    .word 0x2020102          # DATA XREF: tls12_get_req_sig_algs+2C↑r
                                         # ssl_add_clienthello_tlsext+570↑r
byte_5A254:     .byte 1                  # DATA XREF: tls12_get_req_sig_algs+58↑r
                                         # ssl_add_clienthello_tlsext+5A8↑r
byte_5A255:     .byte 1                  # DATA XREF: tls12_get_req_sig_algs+60↑r
                                         # ssl_add_clienthello_tlsext+5B0↑r
                .align 2
                .globl DTLSv1_enc_data
DTLSv1_enc_data:.word _X509_NAME_free    # DATA XREF: LOAD:000049D8↑o
                                         # .got:DTLSv1_enc_data_ptr↓o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word 0xC
                .word _X509_NAME_free
                .word aClientFinished    # "client finished"
                .word 0xF
                .word aServerFinished    # "server finished"
                .word 0xF
                .word _X509_NAME_free
                .word _X509_NAME_free
off_5A290:      .word aSrtpAes128CmSh    # DATA XREF: ssl_parse_clienthello_use_srtp_ext+90↑o
                                         # sub_309B4+60↑o
                                         # "SRTP_AES128_CM_SHA1_80"
                .word 1
                .word aSrtpAes128CmSh_0  # "SRTP_AES128_CM_SHA1_32"
                .word 2, 0, 0
                .globl SSL_version_str
SSL_version_str:.word aOpenssl101c10M    # DATA XREF: LOAD:00002228↑o
                                         # "OpenSSL 1.0.1c 10 May 2012"
                .globl ssl3_undef_enc_method
ssl3_undef_enc_method:.word _X509_NAME_free
                                         # DATA XREF: LOAD:00004978↑o
                                         # .got:ssl3_undef_enc_method_ptr↓o
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word 0
                .word _X509_NAME_free
                .word 0, 0, 0, 0
                .word _X509_NAME_free
                .word _X509_NAME_free
dword_5A2E4:    .word 0, 0               # DATA XREF: ssl_cipher_list_to_bytes+F8↑o
                                         # ssl_cipher_list_to_bytes+1B0↑o
                .word 0x30000FF, 0, 0, 0, 0, 0, 0, 0, 0, 0
dword_5A314:    .word 0xFFFFFFFF         # DATA XREF: SSL_get_ex_data_X509_STORE_CTX_idx+40↑r
                                         # SSL_get_ex_data_X509_STORE_CTX_idx+64↑r ...
dword_5A318:    .word 0x357, 0x357, 0x357
                                         # DATA XREF: ssl_cipher_get_evp+364↑o
dword_5A324:    .word 0                  # DATA XREF: ssl_load_ciphers+25C↑w
                                         # ssl_create_cipher_list+290↑r
                .word 0x357, 0x357
dword_5A330:    .word 0x207              # DATA XREF: BIO_f_ssl+14↑o
                .word aSsl               # "ssl"
                .word sub_411F0
                .word sub_40FBC
                .word sub_40F60
                .align 3
                .word sub_41404
                .word sub_40EB4
                .word sub_40DCC
                .word sub_40D70

 # ===========================================================================

 # Segment type: Pure data
                .data # LOAD
                .align 4

 # ===========================================================================

 # Segment type: Pure data
                .data # .got
off_5A360:      .word _X509_NAME_free    # DATA XREF: LOAD:000019E8↑o
                                         # _ftext↑o ...
                .word 0x80000000
                .word 0x60000
                .word loc_40000
                .word loc_10000
                .word locret_20000
                .word loc_30000
                .word 0x50000
                .word _X509_NAME_free
                .word _X509_NAME_free
                .word _X509_NAME_free
CRYPTO_free_ex_data_ptr:.word CRYPTO_free_ex_data
dtls1_accept_ptr:.word dtls1_accept
PEM_ASN1_read_ptr:.word PEM_ASN1_read
ssl23_read_bytes_ptr:.word ssl23_read_bytes
ssl_clear_hash_ctx_ptr:.word ssl_clear_hash_ctx
SSL_CTX_SRP_CTX_free_ptr:.word SSL_CTX_SRP_CTX_free
pqueue_pop_ptr: .word pqueue_pop
SSL_CTX_SRP_CTX_init_ptr:.word SSL_CTX_SRP_CTX_init
ssl3_release_read_buffer_ptr:.word ssl3_release_read_buffer
strcpy_ptr:     .word strcpy
EVP_CIPHER_flags_ptr:.word EVP_CIPHER_flags
ssl3_send_server_key_exchange_ptr:.word ssl3_send_server_key_exchange
dtls1_send_client_certificate_ptr:.word dtls1_send_client_certificate
d2i_PrivateKey_bio_ptr:.word d2i_PrivateKey_bio
EVP_DigestUpdate_ptr:.word EVP_DigestUpdate
OBJ_obj2nid_ptr:.word OBJ_obj2nid
EVP_MD_size_ptr:.word EVP_MD_size
sk_push_ptr:    .word sk_push
SSL_get_default_timeout_ptr:.word SSL_get_default_timeout
SSL_CTX_free_ptr:.word SSL_CTX_free
X509_STORE_set_default_paths_ptr:.word X509_STORE_set_default_paths
ERR_put_error_ptr:.word ERR_put_error
ssl3_setup_read_buffer_ptr:.word ssl3_setup_read_buffer
dtls1_retransmit_buffered_messages_ptr:.word dtls1_retransmit_buffered_messages
ERR_add_error_data_ptr:.word ERR_add_error_data
SSL_get_error_ptr:.word SSL_get_error
BN_copy_ptr:    .word BN_copy
EVP_sha1_ptr:   .word EVP_sha1
ssl_check_clienthello_tlsext_ptr:.word ssl_check_clienthello_tlsext
dtls1_send_server_hello_ptr:.word dtls1_send_server_hello
dtls1_send_server_done_ptr:.word dtls1_send_server_done
BN_free_ptr:    .word BN_free
ssl_add_serverhello_tlsext_ptr:.word ssl_add_serverhello_tlsext
dtls1_buffer_message_ptr:.word dtls1_buffer_message
lh_delete_ptr:  .word lh_delete
ssl3_renegotiate_ptr:.word ssl3_renegotiate
EVP_aes_128_gcm_ptr:.word EVP_aes_128_gcm
pqueue_peek_ptr:.word pqueue_peek
SSL_get_ciphers_ptr:.word SSL_get_ciphers
SSL_callback_ctrl_ptr:.word SSL_callback_ctrl
SRP_generate_client_master_secret_ptr:.word SRP_generate_client_master_secret
ssl2_enc_init_ptr:.word ssl2_enc_init
CRYPTO_mem_ctrl_ptr:.word CRYPTO_mem_ctrl
lh_num_items_ptr:.word lh_num_items
TLSv1_1_server_method_ptr:.word TLSv1_1_server_method
X509_VERIFY_PARAM_new_ptr:.word X509_VERIFY_PARAM_new
tls12_get_sigandhash_ptr:.word tls12_get_sigandhash
PEM_ASN1_write_ptr:.word PEM_ASN1_write
ssl3_send_alert_ptr:.word ssl3_send_alert
RSA_up_ref_ptr: .word RSA_up_ref
PEM_read_bio_X509_AUX_ptr:.word PEM_read_bio_X509_AUX
ssl2_write_ptr: .word ssl2_write
BIO_s_connect_ptr:.word BIO_s_connect
SSL_CTX_ctrl_ptr:.word SSL_CTX_ctrl
TLSv1_2_client_method_ptr:.word TLSv1_2_client_method
ssl_add_clienthello_tlsext_ptr:.word ssl_add_clienthello_tlsext
ssl3_accept_ptr:.word ssl3_accept
SSL_use_PrivateKey_ptr:.word SSL_use_PrivateKey
dtls1_send_newsession_ticket_ptr:.word dtls1_send_newsession_ticket
d2i_X509_bio_ptr:.word d2i_X509_bio
strchr_ptr:     .word strchr
dtls1_send_hello_request_ptr:.word dtls1_send_hello_request
SRP_Calc_server_key_ptr:.word SRP_Calc_server_key
BIO_int_ctrl_ptr:.word BIO_int_ctrl
EVP_md5_ptr:    .word EVP_md5
dtls1_get_ccs_header_ptr:.word dtls1_get_ccs_header
ssl_parse_clienthello_tlsext_ptr:.word ssl_parse_clienthello_tlsext
ssl_create_cipher_list_ptr:.word ssl_create_cipher_list
SSL_srp_server_param_with_username_ptr:.word SSL_srp_server_param_with_username
ssl_cert_type_ptr:.word ssl_cert_type
asn1_GetSequence_ptr:.word asn1_GetSequence
dtls1_process_heartbeat_ptr:.word dtls1_process_heartbeat
PEM_ASN1_read_bio_ptr:.word PEM_ASN1_read_bio
ssl23_write_bytes_ptr:.word ssl23_write_bytes
dtls1_get_queue_priority_ptr:.word dtls1_get_queue_priority
EVP_des_ede3_cbc_ptr:.word EVP_des_ede3_cbc
EVP_PKEY_assign_ptr:.word EVP_PKEY_assign
ssl_clear_cipher_ctx_ptr:.word ssl_clear_cipher_ctx
EVP_aes_128_cbc_ptr:.word EVP_aes_128_cbc
dtls1_double_timeout_ptr:.word dtls1_double_timeout
BIO_pop_ptr:    .word BIO_pop
EVP_DigestFinal_ex_ptr:.word EVP_DigestFinal_ex
EVP_VerifyFinal_ptr:.word EVP_VerifyFinal
OBJ_find_sigid_algs_ptr:.word OBJ_find_sigid_algs
dtls1_do_write_ptr:.word dtls1_do_write
EVP_PKEY_copy_parameters_ptr:.word EVP_PKEY_copy_parameters
sk_delete_ptr:  .word sk_delete
EVP_DigestInit_ex_ptr:.word EVP_DigestInit_ex
SSL_use_certificate_ptr:.word SSL_use_certificate
SRP_Calc_x_ptr: .word SRP_Calc_x
ssl_get_handshake_digest_ptr:.word ssl_get_handshake_digest
RSA_flags_ptr:  .word RSA_flags
EVP_CIPHER_key_length_ptr:.word EVP_CIPHER_key_length
BIO_read_ptr:   .word BIO_read
ssl3_send_change_cipher_spec_ptr:.word ssl3_send_change_cipher_spec
EVP_DigestSignFinal_ptr:.word EVP_DigestSignFinal
EVP_EncryptUpdate_ptr:.word EVP_EncryptUpdate
X509_STORE_CTX_set_ex_data_ptr:.word X509_STORE_CTX_set_ex_data
ssl_replace_hash_ptr:.word ssl_replace_hash
pqueue_new_ptr: .word pqueue_new
SSL_CTX_add_session_ptr:.word SSL_CTX_add_session
ssl_set_cert_masks_ptr:.word ssl_set_cert_masks
i2d_SSL_SESSION_ptr:.word i2d_SSL_SESSION
EVP_PKEY_sign_init_ptr:.word EVP_PKEY_sign_init
dtls1_send_server_certificate_ptr:.word dtls1_send_server_certificate
dtls1_client_hello_ptr:.word dtls1_client_hello
SSL_version_ptr:.word SSL_version
EVP_PKEY_CTX_ctrl_ptr:.word EVP_PKEY_CTX_ctrl
d2i_OCSP_RESPID_ptr:.word d2i_OCSP_RESPID
SSL_shutdown_ptr:.word SSL_shutdown
EVP_aes_256_gcm_ptr:.word EVP_aes_256_gcm
EVP_DigestSignInit_ptr:.word EVP_DigestSignInit
SSL_set_ssl_method_ptr:.word SSL_set_ssl_method
BIO_s_file_ptr: .word BIO_s_file
ssl_free_wbio_buffer_ptr:.word ssl_free_wbio_buffer
EVP_EncryptInit_ex_ptr:.word EVP_EncryptInit_ex
SSLv2_server_method_ptr:.word SSLv2_server_method
ssl3_num_ciphers_ptr:.word ssl3_num_ciphers
SSL_accept_ptr: .word SSL_accept
ssl3_do_change_cipher_spec_ptr:.word ssl3_do_change_cipher_spec
EVP_PKEY_new_ptr:.word EVP_PKEY_new
EVP_Cipher_ptr: .word EVP_Cipher
sk_new_null_ptr:.word sk_new_null
TLSv1_server_method_ptr:.word TLSv1_server_method
ssl3_comp_find_ptr:.word ssl3_comp_find
dtls1_connect_ptr:.word dtls1_connect
SSL_get_info_callback_ptr:.word SSL_get_info_callback
ASN1_const_check_infinite_end_ptr:.word ASN1_const_check_infinite_end
SSL_set_verify_ptr:.word SSL_set_verify
ssl_cipher_id_cmp_ptr:.word ssl_cipher_id_cmp
SSL_CTX_callback_ctrl_ptr:.word SSL_CTX_callback_ctrl
EVP_MD_CTX_init_ptr:.word EVP_MD_CTX_init
ssl3_release_write_buffer_ptr:.word ssl3_release_write_buffer
dtls1_send_client_verify_ptr:.word dtls1_send_client_verify
pqueue_size_ptr:.word pqueue_size
X509_free_ptr:  .word X509_free
lh_insert_ptr:  .word lh_insert
X509_STORE_free_ptr:.word X509_STORE_free
COMP_CTX_new_ptr:.word COMP_CTX_new
ssl3_do_write_ptr:.word ssl3_do_write
SRP_Verify_B_mod_N_ptr:.word SRP_Verify_B_mod_N
ssl3_client_hello_ptr:.word ssl3_client_hello
ssl2_num_ciphers_ptr:.word ssl2_num_ciphers
EVP_SignFinal_ptr:.word EVP_SignFinal
SSL_get_ex_data_X509_STORE_CTX_idx_ptr:.word SSL_get_ex_data_X509_STORE_CTX_idx
lh_free_ptr:    .word lh_free
X509_check_private_key_ptr:.word X509_check_private_key
DTLSv1_method_ptr:.word DTLSv1_method
BUF_strndup_ptr:.word BUF_strndup
ssl3_send_cert_status_ptr:.word ssl3_send_cert_status
lh_doall_arg_ptr:.word lh_doall_arg
ssl_cipher_get_evp_ptr:.word ssl_cipher_get_evp
ssl3_ctx_callback_ctrl_ptr:.word ssl3_ctx_callback_ctrl
BIO_find_type_ptr:.word BIO_find_type
EVP_DecryptUpdate_ptr:.word EVP_DecryptUpdate
ssl3_get_client_hello_ptr:.word ssl3_get_client_hello
ssl2_return_error_ptr:.word ssl2_return_error
ssl3_new_ptr:   .word ssl3_new
X509_STORE_CTX_set_verify_cb_ptr:.word X509_STORE_CTX_set_verify_cb
ssl3_send_server_hello_ptr:.word ssl3_send_server_hello
i2d_ASN1_INTEGER_ptr:.word i2d_ASN1_INTEGER
ssl3_get_server_done_ptr:.word ssl3_get_server_done
EVP_des_cbc_ptr:.word EVP_des_cbc
CRYPTO_add_lock_ptr:.word CRYPTO_add_lock
ssl_get_server_send_cert_ptr:.word ssl_get_server_send_cert
memcmp_ptr:     .word memcmp
ssl_sess_cert_free_ptr:.word ssl_sess_cert_free
abort_ptr:      .word abort
tls12_get_req_sig_algs_ptr:.word tls12_get_req_sig_algs
dtls1_read_failed_ptr:.word dtls1_read_failed
SRP_Calc_A_param_ptr:.word SRP_Calc_A_param
SSL_get_SSL_CTX_ptr:.word SSL_get_SSL_CTX
BIO_callback_ctrl_ptr:.word BIO_callback_ctrl
EVP_dss1_ptr:   .word EVP_dss1
EVP_PKEY_encrypt_ptr:.word EVP_PKEY_encrypt
ssl_cert_new_ptr:.word ssl_cert_new
X509_VERIFY_PARAM_get_depth_ptr:.word X509_VERIFY_PARAM_get_depth
BUF_MEM_free_ptr:.word BUF_MEM_free
RAND_pseudo_bytes_ptr:.word RAND_pseudo_bytes
pqueue_free_ptr:.word pqueue_free
ssl2_get_cipher_by_char_ptr:.word ssl2_get_cipher_by_char
X509_VERIFY_PARAM_set1_ptr:.word X509_VERIFY_PARAM_set1
SSL_SESSION_print_ptr:.word SSL_SESSION_print
SRP_Calc_client_key_ptr:.word SRP_Calc_client_key
BN_dup_ptr:     .word BN_dup
fprintf_ptr:    .word fprintf
SSL_write_ptr:  .word SSL_write
ssl3_finish_mac_ptr:.word ssl3_finish_mac
SSL_CTX_use_certificate_ptr:.word SSL_CTX_use_certificate
EVP_get_digestbyname_ptr:.word EVP_get_digestbyname
SSL_new_ptr:    .word SSL_new
ssl3_send_client_key_exchange_ptr:.word ssl3_send_client_key_exchange
BIO_printf_ptr: .word BIO_printf
d2i_PrivateKey_ptr:.word d2i_PrivateKey
i2d_X509_NAME_ptr:.word i2d_X509_NAME
SSL_do_handshake_ptr:.word SSL_do_handshake
X509_STORE_CTX_set_default_ptr:.word X509_STORE_CTX_set_default
X509_get_pubkey_ptr:.word X509_get_pubkey
SSL_clear_ptr:  .word SSL_clear
SSL_get_verify_mode_ptr:.word SSL_get_verify_mode
memset_ptr:     .word memset
BIO_write_ptr:  .word BIO_write
ssl2_part_read_ptr:.word ssl2_part_read
SSL_get_client_CA_list_ptr:.word SSL_get_client_CA_list
OPENSSL_DIR_end_ptr:.word OPENSSL_DIR_end
ssl2_ciphers_ptr:.word ssl2_ciphers
dtls1_start_timer_ptr:.word dtls1_start_timer
EVP_MD_CTX_set_flags_ptr:.word EVP_MD_CTX_set_flags
ssl_cipher_ptr_id_cmp_ptr:.word ssl_cipher_ptr_id_cmp
X509_VERIFY_PARAM_free_ptr:.word X509_VERIFY_PARAM_free
ssl_parse_serverhello_renegotiate_ext_ptr:.word ssl_parse_serverhello_renegotiate_ext
dtls1_write_bytes_ptr:.word dtls1_write_bytes
ssl_init_wbio_buffer_ptr:.word ssl_init_wbio_buffer
BUF_memdup_ptr: .word BUF_memdup
ssl3_get_certificate_request_ptr:.word ssl3_get_certificate_request
BUF_MEM_grow_clean_ptr:.word BUF_MEM_grow_clean
ERR_peek_error_ptr:.word ERR_peek_error
ssl3_digest_cached_records_ptr:.word ssl3_digest_cached_records
EVP_Digest_ptr: .word EVP_Digest
ssl_prepare_serverhello_tlsext_ptr:.word ssl_prepare_serverhello_tlsext
EVP_PKEY_free_ptr:.word EVP_PKEY_free
ssl_set_peer_cert_type_ptr:.word ssl_set_peer_cert_type
ASN1_put_object_ptr:.word ASN1_put_object
SRP_check_known_gN_param_ptr:.word SRP_check_known_gN_param
ssl3_setup_buffers_ptr:.word ssl3_setup_buffers
SSL_has_matching_session_id_ptr:.word SSL_has_matching_session_id
OBJ_NAME_add_ptr:.word OBJ_NAME_add
BIO_new_ssl_ptr:.word BIO_new_ssl
d2i_X509_ptr:   .word d2i_X509
DTLSv1_client_method_ptr:.word DTLSv1_client_method
sk_num_ptr:     .word sk_num
SSL_get_wbio_ptr:.word SSL_get_wbio
PEM_ASN1_write_bio_ptr:.word PEM_ASN1_write_bio
ssl3_send_newsession_ticket_ptr:.word ssl3_send_newsession_ticket
EVP_PKEY_verify_ptr:.word EVP_PKEY_verify
BIO_new_ssl_connect_ptr:.word BIO_new_ssl_connect
dtls1_stop_timer_ptr:.word dtls1_stop_timer
ASN1_INTEGER_get_ptr:.word ASN1_INTEGER_get
SSL_set_read_ahead_ptr:.word SSL_set_read_ahead
BIO_dump_indent_ptr:.word BIO_dump_indent
EVP_MD_CTX_destroy_ptr:.word EVP_MD_CTX_destroy
tls1_heartbeat_ptr:.word tls1_heartbeat
EVP_CIPHER_CTX_key_length_ptr:.word EVP_CIPHER_CTX_key_length
X509_VERIFY_PARAM_set_trust_ptr:.word X509_VERIFY_PARAM_set_trust
ssl3_write_bytes_ptr:.word ssl3_write_bytes
ssl3_ctrl_ptr:  .word ssl3_ctrl
tls12_get_hash_ptr:.word tls12_get_hash
BN_clear_free_ptr:.word BN_clear_free
EVP_PKEY_verify_init_ptr:.word EVP_PKEY_verify_init
EVP_CIPHER_CTX_cipher_ptr:.word EVP_CIPHER_CTX_cipher
COMP_zlib_ptr:  .word COMP_zlib
sk_dup_ptr:     .word sk_dup
TLSv1_1_client_method_ptr:.word TLSv1_1_client_method
ERR_peek_last_error_ptr:.word ERR_peek_last_error
ssl3_check_finished_ptr:.word ssl3_check_finished
sk_set_ptr:     .word sk_set
EVP_MD_type_ptr:.word EVP_MD_type
EVP_DecryptInit_ex_ptr:.word EVP_DecryptInit_ex
ssl_check_serverhello_tlsext_ptr:.word ssl_check_serverhello_tlsext
ssl2_get_cipher_ptr:.word ssl2_get_cipher
dtls1_get_message_header_ptr:.word dtls1_get_message_header
ssl2_generate_key_material_ptr:.word ssl2_generate_key_material
ssl3_send_finished_ptr:.word ssl3_send_finished
d2i_RSAPrivateKey_bio_ptr:.word d2i_RSAPrivateKey_bio
SSL_SRP_CTX_init_ptr:.word SSL_SRP_CTX_init
RAND_add_ptr:   .word RAND_add
EVP_aes_256_cbc_ptr:.word EVP_aes_256_cbc
dtls1_listen_ptr:.word dtls1_listen
d2i_ASN1_INTEGER_ptr:.word d2i_ASN1_INTEGER
HMAC_CTX_cleanup_ptr:.word HMAC_CTX_cleanup
ssl3_do_uncompress_ptr:.word ssl3_do_uncompress
X509_EXTENSION_free_ptr:.word X509_EXTENSION_free
BIO_snprintf_ptr:.word BIO_snprintf
RSA_free_ptr:   .word RSA_free
ssl3_put_cipher_by_char_ptr:.word ssl3_put_cipher_by_char
CRYPTO_set_ex_data_ptr:.word CRYPTO_set_ex_data
ssl_cipher_list_to_bytes_ptr:.word ssl_cipher_list_to_bytes
sk_find_ptr:    .word sk_find
d2i_RSAPrivateKey_ptr:.word d2i_RSAPrivateKey
SSL_COMP_get_compression_methods_ptr:.word SSL_COMP_get_compression_methods
dtls1_is_timer_expired_ptr:.word dtls1_is_timer_expired
SSL_SRP_CTX_free_ptr:.word SSL_SRP_CTX_free
ssl3_send_server_certificate_ptr:.word ssl3_send_server_certificate
EVP_rc4_ptr:    .word EVP_rc4
TLSv1_2_method_ptr:.word TLSv1_2_method
X509_check_purpose_ptr:.word X509_check_purpose
dtls1_reset_seq_numbers_ptr:.word dtls1_reset_seq_numbers
SSL_get_read_ahead_ptr:.word SSL_get_read_ahead
EVP_aes_128_cbc_hmac_sha1_ptr:.word EVP_aes_128_cbc_hmac_sha1
X509_VERIFY_PARAM_set_purpose_ptr:.word X509_VERIFY_PARAM_set_purpose
SSL_CTX_flush_sessions_ptr:.word SSL_CTX_flush_sessions
RSA_new_ptr:    .word RSA_new
COMP_expand_block_ptr:.word COMP_expand_block
dtls1_send_client_key_exchange_ptr:.word dtls1_send_client_key_exchange
BIO_push_ptr:   .word BIO_push
BUF_strdup_ptr: .word BUF_strdup
stderr_ptr:     .word stderr
SSL_add_file_cert_subjects_to_stack_ptr:.word SSL_add_file_cert_subjects_to_stack
EVP_CipherInit_ex_ptr:.word EVP_CipherInit_ex
time_ptr:       .word time
ssl_cert_dup_ptr:.word ssl_cert_dup
ssl_add_serverhello_renegotiate_ext_ptr:.word ssl_add_serverhello_renegotiate_ext
ssl3_get_req_cert_type_ptr:.word ssl3_get_req_cert_type
EVP_CIPHER_CTX_cleanup_ptr:.word EVP_CIPHER_CTX_cleanup
ssl3_get_next_proto_ptr:.word ssl3_get_next_proto
SSL_want_ptr:   .word SSL_want
X509_certificate_type_ptr:.word X509_certificate_type
ASN1_object_size_ptr:.word ASN1_object_size
OBJ_nid2sn_ptr: .word OBJ_nid2sn
EVP_MD_CTX_cleanup_ptr:.word EVP_MD_CTX_cleanup
X509_verify_cert_error_string_ptr:.word X509_verify_cert_error_string
EVP_PKEY_decrypt_ptr:.word EVP_PKEY_decrypt
ssl_parse_serverhello_tlsext_ptr:.word ssl_parse_serverhello_tlsext
SSL_pending_ptr:.word SSL_pending
EVP_PKEY_size_ptr:.word EVP_PKEY_size
EVP_MD_CTX_md_ptr:.word EVP_MD_CTX_md
dtls1_get_timeout_ptr:.word dtls1_get_timeout
tls1_process_heartbeat_ptr:.word tls1_process_heartbeat
sk_sort_ptr:    .word sk_sort
ssl_get_algorithm2_ptr:.word ssl_get_algorithm2
SSL_CTX_use_PrivateKey_ptr:.word SSL_CTX_use_PrivateKey
BN_bin2bn_ptr:  .word BN_bin2bn
OCSP_RESPID_free_ptr:.word OCSP_RESPID_free
pitem_free_ptr: .word pitem_free
EVP_PKEY_bits_ptr:.word EVP_PKEY_bits
RAND_bytes_ptr: .word RAND_bytes
do_dtls1_write_ptr:.word do_dtls1_write
ssl_get_prev_session_ptr:.word ssl_get_prev_session
ssl3_get_cipher_ptr:.word ssl3_get_cipher
SSL_read_ptr:   .word SSL_read
COMP_compress_block_ptr:.word COMP_compress_block
d2i_X509_EXTENSIONS_ptr:.word d2i_X509_EXTENSIONS
HMAC_Init_ex_ptr:.word HMAC_Init_ex
ssl2_new_ptr:   .word ssl2_new
dtls1_set_message_header_ptr:.word dtls1_set_message_header
X509_verify_cert_ptr:.word X509_verify_cert
DTLSv1_server_method_ptr:.word DTLSv1_server_method
BIO_set_flags_ptr:.word BIO_set_flags
SSL_SESSION_new_ptr:.word SSL_SESSION_new
BIO_f_buffer_ptr:.word BIO_f_buffer
sk_shift_ptr:   .word sk_shift
ssl3_shutdown_ptr:.word ssl3_shutdown
memmove_ptr:    .word memmove
SSL_set_accept_state_ptr:.word SSL_set_accept_state
X509_STORE_CTX_cleanup_ptr:.word X509_STORE_CTX_cleanup
tls1_process_sigalgs_ptr:.word tls1_process_sigalgs
SSLv3_method_ptr:.word SSLv3_method
SSL_set_connect_state_ptr:.word SSL_set_connect_state
ssl3_check_client_hello_ptr:.word ssl3_check_client_hello
EVP_sha512_ptr: .word EVP_sha512
ssl3_do_compress_ptr:.word ssl3_do_compress
EVP_CIPHER_CTX_ctrl_ptr:.word EVP_CIPHER_CTX_ctrl
ssl23_get_client_hello_ptr:.word ssl23_get_client_hello
ssl2_accept_ptr:.word ssl2_accept
EVP_sha224_ptr: .word EVP_sha224
EVP_MD_CTX_copy_ex_ptr:.word EVP_MD_CTX_copy_ex
ssl3_clear_ptr: .word ssl3_clear
BUF_MEM_grow_ptr:.word BUF_MEM_grow
SSLv3_client_method_ptr:.word SSLv3_client_method
CRYPTO_free_ptr:.word CRYPTO_free
SRP_create_verifier_BN_ptr:.word SRP_create_verifier_BN
ssl_verify_alarm_type_ptr:.word ssl_verify_alarm_type
tls12_get_sigid_ptr:.word tls12_get_sigid
BIO_test_flags_ptr:.word BIO_test_flags
dtls1_send_server_key_exchange_ptr:.word dtls1_send_server_key_exchange
sk_zero_ptr:    .word sk_zero
asn1_const_Finish_ptr:.word asn1_const_Finish
ssl3_read_n_ptr:.word ssl3_read_n
ssl_clear_bad_session_ptr:.word ssl_clear_bad_session
PEM_read_bio_RSAPrivateKey_ptr:.word PEM_read_bio_RSAPrivateKey
BIO_method_type_ptr:.word BIO_method_type
SSL_CTX_remove_session_ptr:.word SSL_CTX_remove_session
ssl3_get_server_certificate_ptr:.word ssl3_get_server_certificate
EVP_CIPHER_CTX_flags_ptr:.word EVP_CIPHER_CTX_flags
ssl_parse_clienthello_renegotiate_ext_ptr:.word ssl_parse_clienthello_renegotiate_ext
i2d_OCSP_RESPID_ptr:.word i2d_OCSP_RESPID
ssl3_free_ptr:  .word ssl3_free
EVP_PKEY_encrypt_init_ptr:.word EVP_PKEY_encrypt_init
BIO_puts_ptr:   .word BIO_puts
PEM_read_bio_X509_ptr:.word PEM_read_bio_X509
CRYPTO_lock_ptr:.word CRYPTO_lock
sk_new_ptr:     .word sk_new
dtls1_send_finished_ptr:.word dtls1_send_finished
dtls1_get_record_ptr:.word dtls1_get_record
ssl3_record_sequence_update_ptr:.word ssl3_record_sequence_update
i2d_X509_EXTENSIONS_ptr:.word i2d_X509_EXTENSIONS
SSLv3_server_method_ptr:.word SSLv3_server_method
SSL_get_verify_depth_ptr:.word SSL_get_verify_depth
EVP_PKEY_new_mac_key_ptr:.word EVP_PKEY_new_mac_key
ssl_undefined_function_ptr:.word ssl_undefined_function
EVP_enc_null_ptr:.word EVP_enc_null
EVP_aes_256_cbc_hmac_sha1_ptr:.word EVP_aes_256_cbc_hmac_sha1
ERR_clear_error_ptr:.word ERR_clear_error
ssl2_read_ptr:  .word ssl2_read
EVP_PKEY_asn1_find_str_ptr:.word EVP_PKEY_asn1_find_str
SSL_dup_ptr:    .word SSL_dup
ssl3_get_finished_ptr:.word ssl3_get_finished
SSL_free_ptr:   .word SSL_free
HMAC_Final_ptr: .word HMAC_Final
SSL_set_session_id_context_ptr:.word SSL_set_session_id_context
ssl3_choose_cipher_ptr:.word ssl3_choose_cipher
X509_get_subject_name_ptr:.word X509_get_subject_name
BIO_f_ssl_ptr:  .word BIO_f_ssl
SRP_generate_server_master_secret_ptr:.word SRP_generate_server_master_secret
BIO_new_ptr:    .word BIO_new
ssl3_cleanup_key_block_ptr:.word ssl3_cleanup_key_block
ASN1_INTEGER_set_ptr:.word ASN1_INTEGER_set
BUF_MEM_new_ptr:.word BUF_MEM_new
EVP_add_digest_ptr:.word EVP_add_digest
strlen_ptr:     .word strlen
ssl2_connect_ptr:.word ssl2_connect
ssl_cert_free_ptr:.word ssl_cert_free
OpenSSLDie_ptr: .word OpenSSLDie
ssl_parse_clienthello_use_srtp_ext_ptr:.word ssl_parse_clienthello_use_srtp_ext
CRYPTO_dup_ex_data_ptr:.word CRYPTO_dup_ex_data
X509_NAME_cmp_ptr:.word X509_NAME_cmp
EVP_PKEY_missing_parameters_ptr:.word EVP_PKEY_missing_parameters
pqueue_find_ptr:.word pqueue_find
SSL_use_RSAPrivateKey_ptr:.word SSL_use_RSAPrivateKey
ssl3_init_finished_mac_ptr:.word ssl3_init_finished_mac
ssl_get_new_session_ptr:.word ssl_get_new_session
ssl2_write_error_ptr:.word ssl2_write_error
EVP_CIPHER_block_size_ptr:.word EVP_CIPHER_block_size
_ftext_ptr:     .word _ftext
ssl_verify_cert_chain_ptr:.word ssl_verify_cert_chain
ssl3_send_client_certificate_ptr:.word ssl3_send_client_certificate
SSL_set_info_callback_ptr:.word SSL_set_info_callback
EVP_PKEY_asn1_get0_info_ptr:.word EVP_PKEY_asn1_get0_info
BIO_clear_flags_ptr:.word BIO_clear_flags
RSA_public_encrypt_ptr:.word RSA_public_encrypt
BN_bn2bin_ptr:  .word BN_bn2bin
strncmp_ptr:    .word strncmp
X509_NAME_free_ptr:.word X509_NAME_free
EVP_PKEY_decrypt_init_ptr:.word EVP_PKEY_decrypt_init
RSA_private_decrypt_ptr:.word RSA_private_decrypt
TLSv1_1_method_ptr:.word TLSv1_1_method
dtls1_send_certificate_request_ptr:.word dtls1_send_certificate_request
SSLv2_client_method_ptr:.word SSLv2_client_method
dtls1_heartbeat_ptr:.word dtls1_heartbeat
ASN1_get_object_ptr:.word ASN1_get_object
ssl3_get_cipher_by_char_ptr:.word ssl3_get_cipher_by_char
SRP_Calc_B_ptr: .word SRP_Calc_B
ssl2_set_certificate_ptr:.word ssl2_set_certificate
SSL_copy_session_id_ptr:.word SSL_copy_session_id
RSA_sign_ptr:   .word RSA_sign
DSA_sign_ptr:   .word DSA_sign
TLSv1_2_server_method_ptr:.word TLSv1_2_server_method
SSL_state_ptr:  .word SSL_state
SSL_CTX_use_RSAPrivateKey_ptr:.word SSL_CTX_use_RSAPrivateKey
X509_STORE_CTX_init_ptr:.word X509_STORE_CTX_init
CRYPTO_malloc_ptr:.word CRYPTO_malloc
d2i_ASN1_OCTET_STRING_ptr:.word d2i_ASN1_OCTET_STRING
DSA_verify_ptr: .word DSA_verify
SRP_Calc_u_ptr: .word SRP_Calc_u
dtls1_clear_record_buffer_ptr:.word dtls1_clear_record_buffer
ssl_add_clienthello_use_srtp_ext_ptr:.word ssl_add_clienthello_use_srtp_ext
X509_STORE_new_ptr:.word X509_STORE_new
i2d_ASN1_OCTET_STRING_ptr:.word i2d_ASN1_OCTET_STRING
EVP_MD_CTX_create_ptr:.word EVP_MD_CTX_create
ssl3_output_cert_chain_ptr:.word ssl3_output_cert_chain
SSL_peek_ptr:   .word SSL_peek
ssl3_ctx_ctrl_ptr:.word ssl3_ctx_ctrl
OPENSSL_cleanse_ptr:.word OPENSSL_cleanse
X509_STORE_CTX_get_ex_new_index_ptr:.word X509_STORE_CTX_get_ex_new_index
HMAC_Update_ptr:.word HMAC_Update
ssl3_get_client_certificate_ptr:.word ssl3_get_client_certificate
SSL_ctrl_ptr:   .word SSL_ctrl
RSA_size_ptr:   .word RSA_size
ssl_do_client_cert_cb_ptr:.word ssl_do_client_cert_cb
sk_value_ptr:   .word sk_value
PEM_read_bio_PrivateKey_ptr:.word PEM_read_bio_PrivateKey
OBJ_bsearch_ssl_cipher_id_ptr:.word OBJ_bsearch_ssl_cipher_id
gettimeofday_ptr:.word gettimeofday
SSL_get_rfd_ptr:.word SSL_get_rfd
sk_set_cmp_func_ptr:.word sk_set_cmp_func
tls1_process_ticket_ptr:.word tls1_process_ticket
ssl3_check_cert_and_algorithm_ptr:.word ssl3_check_cert_and_algorithm
pqueue_next_ptr:.word pqueue_next
EVP_get_cipherbyname_ptr:.word EVP_get_cipherbyname
SSL_SESSION_free_ptr:.word SSL_SESSION_free
EVP_EncryptFinal_ptr:.word EVP_EncryptFinal
ssl_bytes_to_cipher_list_ptr:.word ssl_bytes_to_cipher_list
ssl_cert_inst_ptr:.word ssl_cert_inst
X509_NAME_dup_ptr:.word X509_NAME_dup
CRYPTO_get_ex_new_index_ptr:.word CRYPTO_get_ex_new_index
EVP_sha256_ptr: .word EVP_sha256
dtls1_min_mtu_ptr:.word dtls1_min_mtu
ssl3_free_digest_list_ptr:.word ssl3_free_digest_list
SSL_get_srtp_profiles_ptr:.word SSL_get_srtp_profiles
RSA_verify_ptr: .word RSA_verify
BIO_get_retry_reason_ptr:.word BIO_get_retry_reason
ssl_sess_cert_new_ptr:.word ssl_sess_cert_new
SRP_Verify_A_mod_N_ptr:.word SRP_Verify_A_mod_N
lh_retrieve_ptr:.word lh_retrieve
SRP_get_default_gN_ptr:.word SRP_get_default_gN
ssl2_clear_ptr: .word ssl2_clear
EVP_PKEY_derive_set_peer_ptr:.word EVP_PKEY_derive_set_peer
CRYPTO_new_ex_data_ptr:.word CRYPTO_new_ex_data
EVP_CIPHER_CTX_init_ptr:.word EVP_CIPHER_CTX_init
BIO_copy_next_retry_ptr:.word BIO_copy_next_retry
SSL_set_session_ptr:.word SSL_set_session
EVP_add_cipher_ptr:.word EVP_add_cipher
ssl3_renegotiate_check_ptr:.word ssl3_renegotiate_check
ssl_add_clienthello_renegotiate_ext_ptr:.word ssl_add_clienthello_renegotiate_ext
ssl3_get_key_exchange_ptr:.word ssl3_get_key_exchange
ssl3_connect_ptr:.word ssl3_connect
EVP_aes_192_cbc_ptr:.word EVP_aes_192_cbc
dtls1_output_cert_chain_ptr:.word dtls1_output_cert_chain
dtls1_check_timeout_num_ptr:.word dtls1_check_timeout_num
ssl3_send_client_verify_ptr:.word ssl3_send_client_verify
asn1_add_error_ptr:.word asn1_add_error
EVP_CIPHER_iv_length_ptr:.word EVP_CIPHER_iv_length
ssl_add_serverhello_use_srtp_ext_ptr:.word ssl_add_serverhello_use_srtp_ext
ssl_prepare_clienthello_tlsext_ptr:.word ssl_prepare_clienthello_tlsext
memcpy_ptr:     .word memcpy
EVP_CIPHER_CTX_iv_length_ptr:.word EVP_CIPHER_CTX_iv_length
EVP_CIPHER_CTX_block_size_ptr:.word EVP_CIPHER_CTX_block_size
lh_new_ptr:     .word lh_new
HMAC_CTX_init_ptr:.word HMAC_CTX_init
CRYPTO_get_ex_data_ptr:.word CRYPTO_get_ex_data
ssl3_write_pending_ptr:.word ssl3_write_pending
fwrite_ptr:     .word fwrite
EVP_PKEY_CTX_new_ptr:.word EVP_PKEY_CTX_new
ssl3_get_server_hello_ptr:.word ssl3_get_server_hello
 # OBJ_bsearch__ptr
OBJ_bsearch__ptr:.word OBJ_bsearch_
BN_num_bits_ptr:.word BN_num_bits
ssl3_send_certificate_request_ptr:.word ssl3_send_certificate_request
pqueue_insert_ptr:.word pqueue_insert
sk_free_ptr:    .word sk_free
EVP_sha384_ptr: .word EVP_sha384
X509_VERIFY_PARAM_set_depth_ptr:.word X509_VERIFY_PARAM_set_depth
EVP_PKEY_CTX_free_ptr:.word EVP_PKEY_CTX_free
BIO_ctrl_ptr:   .word BIO_ctrl
ssl3_get_client_key_exchange_ptr:.word ssl3_get_client_key_exchange
TLSv1_client_method_ptr:.word TLSv1_client_method
EVP_PKEY_sign_ptr:.word EVP_PKEY_sign
__errno_location_ptr:.word __errno_location
ssl_get_ciphers_by_id_ptr:.word ssl_get_ciphers_by_id
ssl3_setup_write_buffer_ptr:.word ssl3_setup_write_buffer
BIO_free_all_ptr:.word BIO_free_all
EVP_MD_CTX_copy_ptr:.word EVP_MD_CTX_copy
dtls1_handle_timeout_ptr:.word dtls1_handle_timeout
sk_pop_free_ptr:.word sk_pop_free
ssl2_do_write_ptr:.word ssl2_do_write
d2i_SSL_SESSION_ptr:.word d2i_SSL_SESSION
ssl_parse_serverhello_use_srtp_ext_ptr:.word ssl_parse_serverhello_use_srtp_ext
ssl2_mac_ptr:   .word ssl2_mac
ssl_get_sign_pkey_ptr:.word ssl_get_sign_pkey
_fdata_ptr:     .word _fdata
OPENSSL_DIR_read_ptr:.word OPENSSL_DIR_read
SSL_get_session_ptr:.word SSL_get_session
ssl2_enc_ptr:   .word ssl2_enc
BIO_s_mem_ptr:  .word BIO_s_mem
ssl_update_cache_ptr:.word ssl_update_cache
BIO_free_ptr:   .word BIO_free
pqueue_iterator_ptr:.word pqueue_iterator
EVP_DigestInit_ptr:.word EVP_DigestInit
X509_STORE_load_locations_ptr:.word X509_STORE_load_locations
COMP_CTX_free_ptr:.word COMP_CTX_free
pitem_new_ptr:  .word pitem_new
dtls1_retransmit_message_ptr:.word dtls1_retransmit_message
ssl3_get_cert_status_ptr:.word ssl3_get_cert_status
SSL_set_bio_ptr:.word SSL_set_bio
ssl3_get_cert_verify_ptr:.word ssl3_get_cert_verify
SSL_set_verify_depth_ptr:.word SSL_set_verify_depth
ssl3_send_hello_request_ptr:.word ssl3_send_hello_request
ssl3_send_server_done_ptr:.word ssl3_send_server_done
SSL_renegotiate_ptr:.word SSL_renegotiate
SRP_Calc_A_ptr: .word SRP_Calc_A
X509_STORE_CTX_get0_param_ptr:.word X509_STORE_CTX_get0_param
SSL_get_verify_callback_ptr:.word SSL_get_verify_callback
BIO_s_socket_ptr:.word BIO_s_socket
SSL_get_rbio_ptr:.word SSL_get_rbio
i2d_X509_ptr:   .word i2d_X509
SSL_connect_ptr:.word SSL_connect
EVP_DecryptFinal_ptr:.word EVP_DecryptFinal
ssl3_send_next_proto_ptr:.word ssl3_send_next_proto
ssl_load_ciphers_ptr:.word ssl_load_ciphers
d2i_X509_NAME_ptr:.word d2i_X509_NAME
ssl3_get_new_session_ticket_ptr:.word ssl3_get_new_session_ticket
TLSv1_method_ptr:.word TLSv1_method
X509_VERIFY_PARAM_inherit_ptr:.word X509_VERIFY_PARAM_inherit
RSAPrivateKey_dup_ptr:.word RSAPrivateKey_dup
dtls1_send_change_cipher_spec_ptr:.word dtls1_send_change_cipher_spec
ssl23_get_cipher_by_char_ptr:.word ssl23_get_cipher_by_char
tls1_alert_code_ptr:.word tls1_alert_code
ssl3_pending_ptr:.word ssl3_pending
ssl_undefined_const_function_ptr:.word ssl_undefined_const_function
tls1_cert_verify_mac_ptr:.word tls1_cert_verify_mac
dtls1_enc_ptr:  .word dtls1_enc
tls1_free_ptr:  .word tls1_free
dtls1_write_app_data_bytes_ptr:.word dtls1_write_app_data_bytes
ssl3_change_cipher_state_ptr:.word ssl3_change_cipher_state
ssl2_pending_ptr:.word ssl2_pending
ssl_ok_ptr:     .word ssl_ok
ssl3_peek_ptr:  .word ssl3_peek
ssl23_num_ciphers_ptr:.word ssl23_num_ciphers
ssl23_read_ptr: .word ssl23_read
dtls1_dispatch_alert_ptr:.word dtls1_dispatch_alert
dtls1_ctrl_ptr: .word dtls1_ctrl
ssl23_connect_ptr:.word ssl23_connect
ssl2_shutdown_ptr:.word ssl2_shutdown
ssl3_generate_master_secret_ptr:.word ssl3_generate_master_secret
tls1_new_ptr:   .word tls1_new
n_ssl3_mac_ptr: .word n_ssl3_mac
TLSv1_enc_data_ptr:.word TLSv1_enc_data
ssl3_dispatch_alert_ptr:.word ssl3_dispatch_alert
dtls1_new_ptr:  .word dtls1_new
tls1_mac_ptr:   .word tls1_mac
ssl3_write_ptr: .word ssl3_write
ssl2_default_timeout_ptr:.word ssl2_default_timeout
ssl2_ctx_callback_ctrl_ptr:.word ssl2_ctx_callback_ctrl
tls1_final_finish_mac_ptr:.word tls1_final_finish_mac
tls1_export_keying_material_ptr:.word tls1_export_keying_material
ssl3_read_bytes_ptr:.word ssl3_read_bytes
ssl3_cert_verify_mac_ptr:.word ssl3_cert_verify_mac
tls1_change_cipher_state_ptr:.word tls1_change_cipher_state
ssl3_undef_enc_method_ptr:.word ssl3_undef_enc_method
ssl3_final_finish_mac_ptr:.word ssl3_final_finish_mac
tls1_generate_master_secret_ptr:.word tls1_generate_master_secret
dtls1_shutdown_ptr:.word dtls1_shutdown
ssl2_ctx_ctrl_ptr:.word ssl2_ctx_ctrl
ssl23_accept_ptr:.word ssl23_accept
DTLSv1_enc_data_ptr:.word DTLSv1_enc_data
SSLv3_enc_data_ptr:.word SSLv3_enc_data
ssl3_read_ptr:  .word ssl3_read
ssl2_peek_ptr:  .word ssl2_peek
ssl2_ctrl_ptr:  .word ssl2_ctrl
ssl2_free_ptr:  .word ssl2_free
dtls1_free_ptr: .word dtls1_free
ssl3_default_timeout_ptr:.word ssl3_default_timeout
tls1_default_timeout_ptr:.word tls1_default_timeout
ssl23_put_cipher_by_char_ptr:.word ssl23_put_cipher_by_char
ssl2_callback_ctrl_ptr:.word ssl2_callback_ctrl
ssl3_callback_ctrl_ptr:.word ssl3_callback_ctrl
dtls1_clear_ptr:.word dtls1_clear
ssl3_setup_key_block_ptr:.word ssl3_setup_key_block
ssl23_get_cipher_ptr:.word ssl23_get_cipher
ssl3_alert_code_ptr:.word ssl3_alert_code
ssl3_get_message_ptr:.word ssl3_get_message
dtls1_get_cipher_ptr:.word dtls1_get_cipher
dtls1_default_timeout_ptr:.word dtls1_default_timeout
tls1_clear_ptr: .word tls1_clear
ssl23_default_timeout_ptr:.word ssl23_default_timeout
ssl2_put_cipher_by_char_ptr:.word ssl2_put_cipher_by_char
ssl3_enc_ptr:   .word ssl3_enc
dtls1_get_message_ptr:.word dtls1_get_message
ssl23_peek_ptr: .word ssl23_peek
ssl_undefined_void_function_ptr:.word ssl_undefined_void_function
ssl23_write_ptr:.word ssl23_write
tls1_enc_ptr:   .word tls1_enc
tls1_setup_key_block_ptr:.word tls1_setup_key_block
dtls1_read_bytes_ptr:.word dtls1_read_bytes

 # ===========================================================================

 # Segment type: Uninitialized
                .bss
dword_5ADC0:    .space 4                 # DATA XREF: LOAD:00001738↑o
                                         # LOAD:00001F08↑o ...
dword_5ADC4:    .space 4                 # DATA XREF: ssl_cipher_get_evp+128↑o
                                         # ssl_load_ciphers+44↑w ...
dword_5ADC8:    .space 4                 # DATA XREF: ssl_load_ciphers+60↑w
                                         # ssl_create_cipher_list+16C↑r
dword_5ADCC:    .space 4                 # DATA XREF: ssl_load_ciphers+78↑w
                                         # ssl_create_cipher_list+170↑r
dword_5ADD0:    .space 4                 # DATA XREF: ssl_load_ciphers+90↑w
                                         # ssl_create_cipher_list+168↑r
dword_5ADD4:    .space 4                 # DATA XREF: ssl_load_ciphers+9C↑w
                                         # ssl_create_cipher_list+174↑r
                .space 4
dword_5ADDC:    .space 4                 # DATA XREF: ssl_load_ciphers+AC↑w
                                         # ssl_create_cipher_list+178↑r
dword_5ADE0:    .space 4                 # DATA XREF: ssl_load_ciphers+C4↑w
                                         # ssl_create_cipher_list+17C↑r
dword_5ADE4:    .space 4                 # DATA XREF: ssl_load_ciphers+DC↑w
                                         # ssl_create_cipher_list+188↑r
dword_5ADE8:    .space 4                 # DATA XREF: ssl_load_ciphers+F4↑w
                                         # ssl_create_cipher_list+18C↑r
dword_5ADEC:    .space 4                 # DATA XREF: ssl_load_ciphers+10C↑w
                                         # ssl_create_cipher_list+190↑r
dword_5ADF0:    .space 4                 # DATA XREF: ssl_load_ciphers+124↑w
                                         # ssl_create_cipher_list+164↑r
dword_5ADF4:    .space 4                 # DATA XREF: ssl_load_ciphers+13C↑w
                                         # ssl_create_cipher_list+180↑r
dword_5ADF8:    .space 4                 # DATA XREF: ssl_load_ciphers+154↑w
                                         # ssl_create_cipher_list+184↑r
dword_5ADFC:    .space 4                 # DATA XREF: ssl_get_handshake_digest+48↑o
                                         # ssl_cipher_get_evp+34C↑o ...
dword_5AE00:    .space 4                 # DATA XREF: ssl_load_ciphers+1A4↑w
                                         # ssl_create_cipher_list+204↑r
dword_5AE04:    .space 4                 # DATA XREF: ssl_load_ciphers+1D8↑w
                                         # ssl_create_cipher_list+200↑r
dword_5AE08:    .space 4                 # DATA XREF: ssl_load_ciphers+20C↑w
                                         # ssl_create_cipher_list+20C↑r
dword_5AE0C:    .space 4                 # DATA XREF: ssl_load_ciphers+288↑w
                                         # ssl_create_cipher_list+1F8↑r
dword_5AE10:    .space 4                 # DATA XREF: ssl_load_ciphers+2AC↑w
                                         # ssl_create_cipher_list+1FC↑r
dword_5AE14:    .space 4                 # DATA XREF: ssl_cipher_get_evp+37C↑o
                                         # ssl_load_ciphers+184↑w ...
dword_5AE18:    .space 4                 # DATA XREF: ssl_load_ciphers+1BC↑w
dword_5AE1C:    .space 4                 # DATA XREF: ssl_load_ciphers+1E8↑w
dword_5AE20:    .space 4                 # DATA XREF: ssl_load_ciphers+264↑w
dword_5AE24:    .space 4                 # DATA XREF: ssl_load_ciphers+298↑w
dword_5AE28:    .space 4                 # DATA XREF: ssl_load_ciphers+2B8↑w

 # ===========================================================================

 # Segment type: Zero-length
                .data # .prgend
_end_0:                                  # DATA XREF: LOAD:00002068↑o

 # ===========================================================================

 # Segment type: Absolute symbols
                .globl _fbss
_fbss           = 0x5ADC0
                .globl _GLOBAL_OFFSET_TABLE_
_GLOBAL_OFFSET_TABLE_= 0x5A360
                .globl _gp
_gp             = 0x62350
                .globl __bss_start
__bss_start     = 0x5ADC0
                .globl _end
_end            = 0x5AE2C
                .globl _edata
_edata          = 0x5ADC0

 # ===========================================================================

 # Segment type: Externs
                .extern _fini
                .extern _init
                .extern CRYPTO_free_ex_data
                                         # CODE XREF: SSL_CTX_free+B0↑p
                                         # SSL_free+84↑p ...
                .extern PEM_ASN1_read    # CODE XREF: PEM_read_SSL_SESSION+3C↑p
                                         # DATA XREF: PEM_read_SSL_SESSION+24↑o ...
                .extern pqueue_pop       # CODE XREF: sub_2A7EC+74↑p
                                         # sub_2A7EC+94↑p ...
                .extern strcpy           # CODE XREF: SSL_get_shared_ciphers+D0↑p
                                         # DATA XREF: SSL_get_shared_ciphers+CC↑o ...
                .extern EVP_CIPHER_flags
                                         # CODE XREF: tls1_enc+B4↑p
                                         # tls1_enc+1B8↑p ...
                .extern d2i_PrivateKey_bio
                                         # CODE XREF: SSL_CTX_use_PrivateKey_file+E4↑p
                                         # SSL_use_PrivateKey_file+E4↑p
                                         # DATA XREF: ...
                .extern EVP_DigestUpdate
                                         # CODE XREF: sub_A24C+3F0↑p
                                         # sub_A24C+408↑p ...
                .extern OBJ_obj2nid      # CODE XREF: ssl_set_cert_masks+334↑p
                                         # DATA XREF: ssl_set_cert_masks+330↑o ...
                .extern EVP_MD_size      # CODE XREF: ssl2_generate_key_material+84↑p
                                         # sub_EC5C+170↑p ...
                .extern sk_push          # CODE XREF: sub_A24C+198↑p
                                         # ssl2_set_certificate+6C↑p ...
                .extern X509_STORE_set_default_paths
                                         # CODE XREF: SSL_CTX_set_default_verify_paths+10↑j
                                         # DATA XREF: SSL_CTX_set_default_verify_paths+C↑o ...
                .extern ERR_put_error    # CODE XREF: sub_A24C:loc_A2E0↑p
                                         # sub_A24C+1BC↑p ...
                .extern ERR_add_error_data
                                         # CODE XREF: ssl3_read_bytes+EE8↑p
                                         # dtls1_read_bytes+BC4↑p ...
                .extern BN_copy          # CODE XREF: SSL_set_srp_server_param+48↑p
                                         # SSL_set_srp_server_param+6C↑p ...
                .extern EVP_sha1         # CODE XREF: ssl3_send_client_verify+104↑p
                                         # ssl3_get_key_exchange:loc_16284↑p ...
                .extern BN_free          # CODE XREF: SSL_SRP_CTX_free+38↑p
                                         # SSL_SRP_CTX_free+48↑p ...
                .extern lh_delete        # CODE XREF: sub_379B4+50↑p
                                         # sub_37AE0+150↑p
                                         # DATA XREF: ...
                .extern EVP_aes_128_gcm  # CODE XREF: SSL_library_init+EC↑p
                                         # DATA XREF: SSL_library_init+E8↑o ...
                .extern pqueue_peek      # CODE XREF: dtls1_get_record+44↑p
                                         # dtls1_get_record+5FC↑p ...
                .extern CRYPTO_mem_ctrl  # CODE XREF: sub_388FC+EC↑p
                                         # sub_388FC+194↑p ...
                .extern lh_num_items     # CODE XREF: SSL_CTX_ctrl+170↑j
                                         # DATA XREF: SSL_CTX_ctrl:loc_33408↑o ...
                .extern X509_VERIFY_PARAM_new
                                         # CODE XREF: SSL_CTX_new+1D4↑p
                                         # SSL_new+13C↑p
                                         # DATA XREF: ...
                .extern PEM_ASN1_write   # CODE XREF: PEM_write_SSL_SESSION+40↑p
                                         # DATA XREF: PEM_write_SSL_SESSION+20↑o ...
                .extern RSA_up_ref       # CODE XREF: ssl3_send_server_key_exchange+588↑p
                                         # dtls1_send_server_key_exchange+528↑p ...
                .extern PEM_read_bio_X509_AUX
                                         # CODE XREF: SSL_CTX_use_certificate_chain_file+98↑p
                                         # DATA XREF: SSL_CTX_use_certificate_chain_file+88↑o ...
                .extern BIO_s_connect    # CODE XREF: BIO_new_ssl_connect+24↑p
                                         # DATA XREF: BIO_new_ssl_connect+20↑o ...
                .extern d2i_X509_bio     # CODE XREF: SSL_CTX_use_certificate_file+17C↑p
                                         # SSL_use_certificate_file+180↑p
                                         # DATA XREF: ...
                .extern strchr           # CODE XREF: sub_309B4+6C↑p
                                         # DATA XREF: sub_309B4:loc_30A18↑o ...
                .extern SRP_Calc_server_key
                                         # CODE XREF: SRP_generate_server_master_secret+88↑p
                                         # DATA XREF: SRP_generate_server_master_secret+74↑o ...
                .extern BIO_int_ctrl     # CODE XREF: ssl_init_wbio_buffer+6C↑p
                                         # SSL_set_rfd+84↑p ...
                .extern EVP_md5          # CODE XREF: ssl2_generate_key_material+48↑p
                                         # ssl3_setup_key_block+2E0↑p ...
                .extern asn1_GetSequence
                                         # CODE XREF: d2i_SSL_SESSION+98↑p
                                         # d2i_SSL_SESSION+214↑p
                                         # DATA XREF: ...
                .extern PEM_ASN1_read_bio
                                         # CODE XREF: PEM_read_bio_SSL_SESSION+3C↑p
                                         # DATA XREF: PEM_read_bio_SSL_SESSION+24↑o ...
                .extern EVP_des_ede3_cbc
                                         # CODE XREF: SSL_library_init+4C↑p
                                         # DATA XREF: SSL_library_init+44↑o ...
                .extern EVP_PKEY_assign  # CODE XREF: SSL_CTX_use_RSAPrivateKey+78↑p
                                         # SSL_use_RSAPrivateKey+78↑p
                                         # DATA XREF: ...
                .extern EVP_aes_128_cbc  # CODE XREF: ssl3_send_newsession_ticket+4A8↑p
                                         # tls1_process_ticket+258↑p ...
                .extern BIO_pop          # CODE XREF: ssl2_accept+7F4↑p
                                         # ssl_free_wbio_buffer:loc_31718↑p ...
                .extern EVP_DigestFinal_ex
                                         # CODE XREF: ssl2_generate_key_material+14C↑p
                                         # ssl2_mac+F8↑p ...
                .extern EVP_VerifyFinal  # CODE XREF: sub_A24C+4C0↑p
                                         # ssl3_get_cert_verify+63C↑p ...
                .extern OBJ_find_sigid_algs
                                         # CODE XREF: ssl_set_cert_masks+34C↑p
                                         # DATA XREF: ssl_set_cert_masks+340↑o ...
                .extern EVP_PKEY_copy_parameters
                                         # CODE XREF: sub_3C684+84↑p
                                         # sub_3CCE8+80↑p
                                         # DATA XREF: ...
                .extern sk_delete        # CODE XREF: ssl2_accept+FC4↑p
                                         # DATA XREF: ssl2_accept:loc_B8CC↑o ...
                .extern EVP_DigestInit_ex
                                         # CODE XREF: sub_A24C+3D4↑p
                                         # sub_C104+280↑p ...
                .extern SRP_Calc_x       # CODE XREF: SRP_generate_client_master_secret+A8↑p
                                         # DATA XREF: SRP_generate_client_master_secret+9C↑o ...
                .extern RSA_flags        # CODE XREF: sub_3C684+1EC↑p
                                         # sub_3CCE8+158↑p
                                         # DATA XREF: ...
                .extern EVP_CIPHER_key_length
                                         # CODE XREF: ssl2_accept:loc_B7F4↑p
                                         # ssl2_accept+F08↑p ...
                .extern BIO_read         # CODE XREF: sub_E97C+15C↑p
                                         # ssl3_read_n+210↑p ...
                .extern EVP_DigestSignFinal
                                         # CODE XREF: sub_2427C+2E8↑p
                                         # sub_2427C+450↑p ...
                .extern EVP_EncryptUpdate
                                         # CODE XREF: ssl3_send_newsession_ticket+308↑p
                                         # dtls1_send_newsession_ticket+258↑p
                                         # DATA XREF: ...
                .extern X509_STORE_CTX_set_ex_data
                                         # CODE XREF: ssl_verify_cert_chain+BC↑p
                                         # DATA XREF: ssl_verify_cert_chain+B0↑o ...
                .extern pqueue_new       # CODE XREF: dtls1_new+8C↑p
                                         # dtls1_new+9C↑p ...
                .extern EVP_PKEY_sign_init
                                         # CODE XREF: ssl3_send_client_verify+F4↑p
                                         # DATA XREF: ssl3_send_client_verify+EC↑o ...
                .extern EVP_PKEY_CTX_ctrl
                                         # CODE XREF: ssl3_get_client_key_exchange+30C↑p
                                         # ssl3_send_client_verify+128↑p ...
                .extern d2i_OCSP_RESPID  # CODE XREF: ssl_parse_clienthello_tlsext+4F4↑p
                                         # ssl_parse_clienthello_tlsext+58C↑p
                                         # DATA XREF: ...
                .extern EVP_aes_256_gcm  # CODE XREF: SSL_library_init+10C↑p
                                         # DATA XREF: SSL_library_init+108↑o ...
                .extern EVP_DigestSignInit
                                         # CODE XREF: sub_2427C+1F4↑p
                                         # sub_2427C+218↑p ...
                .extern BIO_s_file       # CODE XREF: SSL_add_file_cert_subjects_to_stack+50↑p
                                         # SSL_load_client_CA_file+4C↑p ...
                .extern EVP_EncryptInit_ex
                                         # CODE XREF: ssl2_enc_init+178↑p
                                         # ssl2_enc_init+208↑p ...
                .extern EVP_PKEY_new     # CODE XREF: SSL_CTX_use_RSAPrivateKey+48↑p
                                         # SSL_use_RSAPrivateKey+48↑p
                                         # DATA XREF: ...
                .extern EVP_Cipher       # CODE XREF: ssl2_enc+40↑j
                                         # ssl2_enc+74↑j ...
                .extern sk_new_null      # CODE XREF: sub_A24C+17C↑p
                                         # ssl2_set_certificate+50↑p ...
                .extern ASN1_const_check_infinite_end
                                         # CODE XREF: d2i_SSL_SESSION+1094↑p
                                         # d2i_SSL_SESSION+10F4↑p ...
                .extern EVP_MD_CTX_init  # CODE XREF: sub_A24C+3B8↑p
                                         # sub_C104+264↑p ...
                .extern pqueue_size      # CODE XREF: sub_2B88C+38↑p
                                         # DATA XREF: sub_2B88C+28↑o ...
                .extern X509_free        # CODE XREF: sub_A24C+C0↑p
                                         # sub_A24C+504↑p ...
                .extern lh_insert        # CODE XREF: SSL_CTX_add_session+7C↑p
                                         # DATA XREF: SSL_CTX_add_session+78↑o ...
                .extern X509_STORE_free  # CODE XREF: SSL_CTX_set_cert_store+34↑p
                                         # SSL_CTX_free+E0↑p
                                         # DATA XREF: ...
                .extern COMP_CTX_new     # CODE XREF: ssl3_change_cipher_state+C8↑p
                                         # ssl3_change_cipher_state+278↑p ...
                .extern SRP_Verify_B_mod_N
                                         # CODE XREF: SRP_generate_client_master_secret+48↑p
                                         # DATA XREF: SRP_generate_client_master_secret+3C↑o ...
                .extern EVP_SignFinal    # CODE XREF: sub_C104+374↑p
                                         # ssl3_send_server_key_exchange+490↑p ...
                .extern lh_free          # CODE XREF: SSL_CTX_free+C8↑p
                                         # DATA XREF: SSL_CTX_free+C4↑o ...
                .extern X509_check_private_key
                                         # CODE XREF: SSL_check_private_key+50↑j
                                         # SSL_CTX_check_private_key+50↑j ...
                .extern BUF_strndup      # CODE XREF: d2i_SSL_SESSION+CCC↑p
                                         # d2i_SSL_SESSION+E50↑p
                                         # DATA XREF: ...
                .extern lh_doall_arg     # CODE XREF: SSL_CTX_flush_sessions+70↑p
                                         # DATA XREF: SSL_CTX_flush_sessions+5C↑o ...
                .extern BIO_find_type    # CODE XREF: SSL_get_wfd+34↑p
                                         # SSL_get_rfd+34↑p ...
                .extern EVP_DecryptUpdate
                                         # CODE XREF: tls1_process_ticket+368↑p
                                         # DATA XREF: tls1_process_ticket+354↑o ...
                .extern X509_STORE_CTX_set_verify_cb
                                         # CODE XREF: ssl_verify_cert_chain+118↑p
                                         # DATA XREF: ssl_verify_cert_chain+114↑o ...
                .extern i2d_ASN1_INTEGER
                                         # CODE XREF: i2d_SSL_SESSION+1FC↑p
                                         # i2d_SSL_SESSION+214↑p ...
                .extern EVP_des_cbc      # CODE XREF: SSL_library_init+28↑p
                                         # DATA XREF: SSL_library_init+20↑o ...
                .extern CRYPTO_add_lock  # CODE XREF: sub_A24C+530↑p
                                         # ssl2_connect+EFC↑p ...
                .extern memcmp           # CODE XREF: ssl2_accept+8F8↑p
                                         # ssl2_connect+248↑p ...
                .extern abort            # CODE XREF: ssl_get_prev_session+A0↑p
                                         # DATA XREF: ssl_get_prev_session+9C↑o ...
                .extern BIO_callback_ctrl
                                         # CODE XREF: sub_40D70+34↑j
                                         # DATA XREF: sub_40D70+28↑o ...
                .extern EVP_dss1         # CODE XREF: tls1_process_sigalgs:loc_21BFC↑p
                                         # dtls1_send_server_key_exchange+544↑p ...
                .extern EVP_PKEY_encrypt
                                         # CODE XREF: ssl3_send_client_key_exchange+3D0↑p
                                         # DATA XREF: ssl3_send_client_key_exchange+3AC↑o ...
                .extern X509_VERIFY_PARAM_get_depth
                                         # CODE XREF: SSL_CTX_get_verify_depth+10↑j
                                         # SSL_get_verify_depth+10↑j
                                         # DATA XREF: ...
                .extern BUF_MEM_free     # CODE XREF: ssl2_accept+684↑p
                                         # ssl2_connect+724↑p ...
                .extern RAND_pseudo_bytes
                                         # CODE XREF: sub_A24C+62C↑p
                                         # ssl2_accept+578↑p ...
                .extern pqueue_free      # CODE XREF: dtls1_free+48↑p
                                         # dtls1_free+5C↑p ...
                .extern X509_VERIFY_PARAM_set1
                                         # CODE XREF: SSL_set1_param+10↑j
                                         # SSL_CTX_set1_param+10↑j ...
                .extern SRP_Calc_client_key
                                         # CODE XREF: SRP_generate_client_master_secret+D8↑p
                                         # DATA XREF: SRP_generate_client_master_secret+CC↑o ...
                .extern BN_dup           # CODE XREF: SSL_set_srp_server_param+178↑p
                                         # SSL_set_srp_server_param+190↑p ...
                .extern fprintf          # CODE XREF: ssl3_get_cert_verify+4F4↑p
                                         # tls1_enc+118↑p ...
                .extern EVP_get_digestbyname
                                         # CODE XREF: ssl3_send_client_key_exchange+2F8↑p
                                         # SSL_CTX_new+1F0↑p ...
                .extern BIO_printf       # CODE XREF: SSL_SESSION_print+DC↑p
                                         # SSL_SESSION_print+120↑p ...
                .extern d2i_PrivateKey   # CODE XREF: SSL_CTX_use_PrivateKey_ASN1+30↑p
                                         # SSL_use_PrivateKey_ASN1+30↑p
                                         # DATA XREF: ...
                .extern i2d_X509_NAME    # CODE XREF: ssl3_send_certificate_request+150↑p
                                         # ssl3_send_certificate_request+1C8↑p ...
                .extern X509_STORE_CTX_set_default
                                         # CODE XREF: ssl_verify_cert_chain+DC↑p
                                         # DATA XREF: ssl_verify_cert_chain:loc_3662C↑o ...
                .extern X509_get_pubkey  # CODE XREF: sub_A24C+498↑p
                                         # ssl2_set_certificate+180↑p ...
                .extern memset           # CODE XREF: ssl2_clear+44↑p
                                         # ssl2_new+58↑p ...
                .extern BIO_write        # CODE XREF: ssl2_write+150↑p
                                         # ssl2_write+318↑p ...
                .extern OPENSSL_DIR_end  # CODE XREF: SSL_add_dir_cert_subjects_to_stack+11C↑p
                                         # DATA XREF: SSL_add_dir_cert_subjects_to_stack+118↑o ...
                .extern EVP_MD_CTX_set_flags
                                         # CODE XREF: ssl3_send_server_key_exchange+600↑p
                                         # ssl3_send_server_key_exchange+6A4↑p ...
                .extern X509_VERIFY_PARAM_free
                                         # CODE XREF: SSL_CTX_free+7C↑p
                                         # SSL_free+6C↑p
                                         # DATA XREF: ...
                .extern BUF_memdup       # CODE XREF: ssl3_get_cert_status+14C↑p
                                         # DATA XREF: ssl3_get_cert_status:loc_153D8↑o ...
                .extern BUF_MEM_grow_clean
                                         # CODE XREF: ssl3_send_certificate_request+16C↑p
                                         # ssl3_send_server_key_exchange+204↑p ...
                .extern ERR_peek_error   # CODE XREF: SSL_get_error+50↑p
                                         # SSL_CTX_use_certificate_chain_file+C4↑p
                                         # DATA XREF: ...
                .extern EVP_Digest       # CODE XREF: ssl3_get_new_session_ticket+21C↑p
                                         # DATA XREF: ssl3_get_new_session_ticket+204↑o ...
                .extern EVP_PKEY_free    # CODE XREF: sub_A24C+4D4↑p
                                         # ssl2_set_certificate+CC↑p ...
                .extern ASN1_put_object  # CODE XREF: i2d_SSL_SESSION+478↑p
                                         # i2d_SSL_SESSION+528↑p ...
                .extern SRP_check_known_gN_param
                                         # CODE XREF: SRP_Calc_A_param+E8↑p
                                         # DATA XREF: SRP_Calc_A_param+48↑o ...
                .extern OBJ_NAME_add     # CODE XREF: SSL_library_init+198↑p
                                         # SSL_library_init+1B4↑p ...
                .extern d2i_X509         # CODE XREF: sub_A24C+164↑p
                                         # ssl2_set_certificate+38↑p ...
                .extern sk_num           # CODE XREF: ssl2_accept+F70↑p
                                         # ssl2_connect+E70↑p ...
                .extern PEM_ASN1_write_bio
                                         # CODE XREF: PEM_write_bio_SSL_SESSION+40↑p
                                         # DATA XREF: PEM_write_bio_SSL_SESSION+20↑o ...
                .extern EVP_PKEY_verify  # CODE XREF: ssl3_get_cert_verify+53C↑p
                                         # DATA XREF: ssl3_get_cert_verify+524↑o ...
                .extern ASN1_INTEGER_get
                                         # CODE XREF: d2i_SSL_SESSION+150↑p
                                         # d2i_SSL_SESSION+4B0↑p ...
                .extern BIO_dump_indent  # CODE XREF: SSL_SESSION_print+42C↑p
                                         # DATA XREF: SSL_SESSION_print+41C↑o ...
                .extern EVP_MD_CTX_destroy
                                         # CODE XREF: ssl3_send_client_key_exchange+36C↑p
                                         # ssl3_free_digest_list+3C↑p ...
                .extern EVP_CIPHER_CTX_key_length
                                         # CODE XREF: ssl2_mac+98↑p
                                         # DATA XREF: ssl2_mac+94↑o ...
                .extern X509_VERIFY_PARAM_set_trust
                                         # CODE XREF: SSL_set_trust+10↑j
                                         # SSL_CTX_set_trust+10↑j
                                         # DATA XREF: ...
                .extern BN_clear_free    # CODE XREF: SRP_generate_client_master_secret+194↑p
                                         # SRP_generate_client_master_secret+1A4↑p ...
                .extern EVP_PKEY_verify_init
                                         # CODE XREF: ssl3_get_cert_verify+4CC↑p
                                         # DATA XREF: ssl3_get_cert_verify+4C4↑o ...
                .extern EVP_CIPHER_CTX_cipher
                                         # CODE XREF: ssl3_enc+50↑p
                                         # tls1_enc+94↑p ...
                .extern COMP_zlib        # CODE XREF: sub_388FC+138↑p
                                         # DATA XREF: sub_388FC+134↑o ...
                .extern sk_dup           # CODE XREF: ssl2_accept+FE0↑p
                                         # ssl3_get_client_hello+5B4↑p ...
                .extern ERR_peek_last_error
                                         # CODE XREF: SSL_CTX_use_certificate_chain_file+240↑p
                                         # DATA XREF: SSL_CTX_use_certificate_chain_file:loc_3CBD4↑o ...
                .extern sk_set           # CODE XREF: SSL_dup+368↑p
                                         # DATA XREF: SSL_dup+35C↑o ...
                .extern EVP_MD_type      # CODE XREF: ssl3_accept+7EC↑p
                                         # sub_1A6F8+A0↑p ...
                .extern EVP_DecryptInit_ex
                                         # CODE XREF: ssl2_enc_init+1A4↑p
                                         # ssl2_enc_init+238↑p ...
                .extern d2i_RSAPrivateKey_bio
                                         # CODE XREF: SSL_CTX_use_RSAPrivateKey_file+17C↑p
                                         # SSL_use_RSAPrivateKey_file+180↑p
                                         # DATA XREF: ...
                .extern RAND_add         # CODE XREF: ssl2_accept+64↑p
                                         # ssl2_connect+64↑p ...
                .extern EVP_aes_256_cbc  # CODE XREF: SSL_library_init+CC↑p
                                         # DATA XREF: SSL_library_init+C8↑o ...
                .extern d2i_ASN1_INTEGER
                                         # CODE XREF: d2i_SSL_SESSION+C8↑p
                                         # d2i_SSL_SESSION+124↑p ...
                .extern HMAC_CTX_cleanup
                                         # CODE XREF: ssl3_send_newsession_ticket+394↑p
                                         # tls1_process_ticket+2D8↑p ...
                .extern X509_EXTENSION_free
                                         # DATA XREF: ssl_parse_clienthello_tlsext+8B0↑o
                                         # SSL_free+200↑o ...
                .extern BIO_snprintf     # CODE XREF: ssl3_read_bytes+ECC↑p
                                         # dtls1_read_bytes+BA8↑p ...
                .extern RSA_free         # CODE XREF: ssl3_get_key_exchange+11C↑p
                                         # ssl3_get_key_exchange+228↑p ...
                .extern CRYPTO_set_ex_data
                                         # CODE XREF: SSL_CTX_set_ex_data+10↑j
                                         # SSL_set_ex_data+10↑j ...
                .extern sk_find          # CODE XREF: ssl2_accept+FA4↑p
                                         # ssl2_connect+E58↑p ...
                .extern d2i_RSAPrivateKey
                                         # CODE XREF: SSL_CTX_use_RSAPrivateKey_ASN1+30↑p
                                         # SSL_use_RSAPrivateKey_ASN1+30↑p
                                         # DATA XREF: ...
                .extern EVP_rc4          # CODE XREF: SSL_library_init+6C↑p
                                         # DATA XREF: SSL_library_init+68↑o ...
                .extern X509_check_purpose
                                         # CODE XREF: ssl_set_cert_masks+2DC↑p
                                         # DATA XREF: ssl_set_cert_masks+20C↑o ...
                .extern EVP_aes_128_cbc_hmac_sha1
                                         # CODE XREF: SSL_library_init+12C↑p
                                         # DATA XREF: SSL_library_init+128↑o ...
                .extern X509_VERIFY_PARAM_set_purpose
                                         # CODE XREF: SSL_set_purpose+10↑j
                                         # SSL_CTX_set_purpose+10↑j
                                         # DATA XREF: ...
                .extern RSA_new          # CODE XREF: ssl3_get_key_exchange:loc_16010↑p
                                         # DATA XREF: ssl3_get_key_exchange+284↑o ...
                .extern COMP_expand_block
                                         # CODE XREF: ssl3_do_uncompress+38↑p
                                         # DATA XREF: ssl3_do_uncompress+20↑o ...
                .extern BIO_push         # CODE XREF: ssl3_connect+9BC↑p
                                         # dtls1_connect+9A0↑p ...
                .extern BUF_strdup       # CODE XREF: ssl3_get_client_key_exchange+46C↑p
                                         # ssl3_send_client_key_exchange+1B4↑p ...
                .extern stderr           # DATA XREF: ssl3_get_cert_verify+4E0↑o
                                         # ssl3_get_cert_verify+4EC↑r ...
                .extern EVP_CipherInit_ex
                                         # CODE XREF: ssl3_change_cipher_state+370↑p
                                         # tls1_change_cipher_state+588↑p ...
                .extern time             # CODE XREF: ssl2_accept+44↑p
                                         # ssl2_connect+44↑p ...
                .extern EVP_CIPHER_CTX_cleanup
                                         # CODE XREF: ssl3_send_newsession_ticket+350↑p
                                         # ssl3_change_cipher_state+2AC↑p ...
                .extern X509_certificate_type
                                         # CODE XREF: ssl3_get_cert_verify+AC↑p
                                         # ssl3_check_cert_and_algorithm+98↑p
                                         # DATA XREF: ...
                .extern ASN1_object_size
                                         # CODE XREF: i2d_SSL_SESSION+2E0↑p
                                         # i2d_SSL_SESSION+31C↑p ...
                .extern OBJ_nid2sn       # CODE XREF: ssl3_send_client_key_exchange+2E8↑p
                                         # DATA XREF: ssl3_send_client_key_exchange+2E0↑o ...
                .extern EVP_MD_CTX_cleanup
                                         # CODE XREF: sub_A24C+4E4↑p
                                         # sub_C104+384↑p ...
                .extern X509_verify_cert_error_string
                                         # CODE XREF: SSL_SESSION_print+4BC↑p
                                         # DATA XREF: SSL_SESSION_print+4B8↑o ...
                .extern EVP_PKEY_decrypt
                                         # CODE XREF: ssl3_get_client_key_exchange+2B4↑p
                                         # DATA XREF: ssl3_get_client_key_exchange:loc_1121C↑o ...
                .extern EVP_PKEY_size    # CODE XREF: ssl3_get_cert_verify+1DC↑p
                                         # ssl3_send_server_key_exchange+3CC↑p ...
                .extern EVP_MD_CTX_md    # CODE XREF: sub_EC5C+160↑p
                                         # ssl2_write+3C8↑p ...
                .extern sk_sort          # CODE XREF: sub_388FC+184↑p
                                         # ssl_create_cipher_list+974↑p
                                         # DATA XREF: ...
                .extern BN_bin2bn        # CODE XREF: ssl3_get_client_key_exchange+434↑p
                                         # ssl3_get_key_exchange+190↑p ...
                .extern OCSP_RESPID_free
                                         # CODE XREF: ssl_parse_clienthello_tlsext+824↑p
                                         # ssl_parse_clienthello_tlsext+848↑p ...
                .extern pitem_free       # CODE XREF: sub_2A7EC+60↑p
                                         # sub_2A7EC+E0↑p ...
                .extern EVP_PKEY_bits    # CODE XREF: ssl_set_cert_masks+304↑p
                                         # DATA XREF: ssl_set_cert_masks+300↑o ...
                .extern RAND_bytes       # CODE XREF: ssl2_connect+C04↑p
                                         # ssl3_send_client_key_exchange+284↑p ...
                .extern COMP_compress_block
                                         # CODE XREF: ssl3_do_compress+38↑p
                                         # DATA XREF: ssl3_do_compress+20↑o ...
                .extern d2i_X509_EXTENSIONS
                                         # CODE XREF: ssl_parse_clienthello_tlsext+8CC↑p
                                         # DATA XREF: ssl_parse_clienthello_tlsext:loc_23178↑o ...
                .extern HMAC_Init_ex     # CODE XREF: ssl3_send_newsession_ticket+4F8↑p
                                         # tls1_process_ticket+248↑p ...
                .extern X509_verify_cert
                                         # CODE XREF: ssl3_output_cert_chain+16C↑p
                                         # dtls1_output_cert_chain+244↑p ...
                .extern BIO_set_flags    # CODE XREF: ssl3_read_bytes:loc_1D470↑p
                                         # dtls1_read_bytes:loc_2CBC0↑p ...
                .extern BIO_f_buffer     # CODE XREF: ssl_init_wbio_buffer+148↑p
                                         # BIO_new_buffer_ssl_connect+28↑p
                                         # DATA XREF: ...
                .extern sk_shift         # CODE XREF: ssl3_get_client_certificate+3AC↑p
                                         # DATA XREF: ssl3_get_client_certificate:loc_1075C↑o ...
                .extern memmove          # CODE XREF: ssl2_part_read+B8↑p
                                         # ssl3_enc+F8↑p ...
                .extern X509_STORE_CTX_cleanup
                                         # CODE XREF: ssl3_output_cert_chain+250↑p
                                         # ssl3_output_cert_chain+42C↑p ...
                .extern EVP_sha512       # CODE XREF: tls12_get_hash+44↑j
                                         # SSL_library_init+284↑p
                                         # DATA XREF: ...
                .extern EVP_CIPHER_CTX_ctrl
                                         # CODE XREF: tls1_enc+2E8↑p
                                         # tls1_change_cipher_state+5CC↑p ...
                .extern EVP_sha224       # CODE XREF: tls12_get_hash+68↑j
                                         # SSL_library_init+224↑p
                                         # DATA XREF: ...
                .extern EVP_MD_CTX_copy_ex
                                         # CODE XREF: n_ssl3_mac+A8↑p
                                         # n_ssl3_mac+184↑p ...
                .extern BUF_MEM_grow     # CODE XREF: ssl2_accept+62C↑p
                                         # ssl2_connect+6C4↑p ...
                .extern CRYPTO_free      # CODE XREF: sub_A24C+488↑p
                                         # ssl2_free+38↑p ...
                .extern SRP_create_verifier_BN
                                         # CODE XREF: SSL_set_srp_server_param_pw+CC↑p
                                         # DATA XREF: SSL_set_srp_server_param_pw+B0↑o ...
                .extern BIO_test_flags   # CODE XREF: dtls1_accept+E28↑p
                                         # dtls1_connect+C80↑p ...
                .extern sk_zero          # CODE XREF: ssl_bytes_to_cipher_list+94↑p
                                         # DATA XREF: ssl_bytes_to_cipher_list+90↑o ...
                .extern asn1_const_Finish
                                         # CODE XREF: d2i_SSL_SESSION+6C0↑p
                                         # DATA XREF: d2i_SSL_SESSION:loc_3E92C↑o ...
                .extern PEM_read_bio_RSAPrivateKey
                                         # CODE XREF: SSL_CTX_use_RSAPrivateKey_file+EC↑p
                                         # SSL_use_RSAPrivateKey_file+F0↑p
                                         # DATA XREF: ...
                .extern BIO_method_type  # CODE XREF: SSL_set_rfd+38↑p
                                         # SSL_set_wfd+38↑p
                                         # DATA XREF: ...
                .extern EVP_CIPHER_CTX_flags
                                         # CODE XREF: sub_1BE08:loc_1C1E8↑p
                                         # tls1_enc+6B4↑p
                                         # DATA XREF: ...
                .extern i2d_OCSP_RESPID  # CODE XREF: ssl_add_clienthello_tlsext+5F0↑p
                                         # ssl_add_clienthello_tlsext+70C↑p
                                         # DATA XREF: ...
                .extern EVP_PKEY_encrypt_init
                                         # CODE XREF: ssl3_send_client_key_exchange+270↑p
                                         # DATA XREF: ssl3_send_client_key_exchange+268↑o ...
                .extern BIO_puts         # CODE XREF: SSL_SESSION_print+3C↑p
                                         # SSL_SESSION_print+164↑p ...
                .extern PEM_read_bio_X509
                                         # CODE XREF: SSL_add_file_cert_subjects_to_stack+10C↑p
                                         # SSL_add_file_cert_subjects_to_stack+18C↑p ...
                .extern CRYPTO_lock      # CODE XREF: ssl3_release_write_buffer+58↑p
                                         # ssl3_release_write_buffer+B0↑p ...
                .extern sk_new           # CODE XREF: ssl3_get_certificate_request+158↑p
                                         # SSL_load_client_CA_file+3C↑p ...
                .extern i2d_X509_EXTENSIONS
                                         # CODE XREF: ssl_add_clienthello_tlsext+638↑p
                                         # ssl_add_clienthello_tlsext+774↑p
                                         # DATA XREF: ...
                .extern EVP_PKEY_new_mac_key
                                         # CODE XREF: sub_2427C+1C4↑p
                                         # tls1_change_cipher_state+684↑p
                                         # DATA XREF: ...
                .extern EVP_enc_null     # CODE XREF: ssl_cipher_get_evp+310↑p
                                         # DATA XREF: ssl_cipher_get_evp:loc_39E3C↑o ...
                .extern EVP_aes_256_cbc_hmac_sha1
                                         # CODE XREF: SSL_library_init+14C↑p
                                         # DATA XREF: SSL_library_init+148↑o ...
                .extern ERR_clear_error  # CODE XREF: ssl2_accept+74↑p
                                         # ssl2_accept+564↑p ...
                .extern EVP_PKEY_asn1_find_str
                                         # CODE XREF: ssl_load_ciphers+21C↑p
                                         # ssl_create_cipher_list+B0↑p ...
                .extern HMAC_Final       # CODE XREF: ssl3_send_newsession_ticket+384↑p
                                         # tls1_process_ticket+2C8↑p ...
                .extern X509_get_subject_name
                                         # CODE XREF: SSL_add_file_cert_subjects_to_stack:loc_356AC↑p
                                         # sub_359BC+3C↑p ...
                .extern BIO_new          # CODE XREF: ssl3_init_finished_mac+74↑p
                                         # ssl_init_wbio_buffer+158↑p ...
                .extern ASN1_INTEGER_set
                                         # CODE XREF: i2d_SSL_SESSION+74↑p
                                         # i2d_SSL_SESSION+9C↑p ...
                .extern BUF_MEM_new      # CODE XREF: ssl2_accept+D74↑p
                                         # ssl2_connect+F38↑p ...
                .extern EVP_add_digest   # CODE XREF: SSL_library_init+17C↑p
                                         # SSL_library_init+1D4↑p ...
                .extern strlen           # CODE XREF: ssl3_ctx_ctrl+1D8↑p
                                         # ssl3_ctrl+208↑p ...
                .extern OpenSSLDie       # CODE XREF: ssl2_write_error+E4↑p
                                         # ssl2_generate_key_material+1C4↑p ...
                .extern CRYPTO_dup_ex_data
                                         # CODE XREF: SSL_dup+1A0↑p
                                         # DATA XREF: SSL_dup+190↑o ...
                .extern X509_NAME_cmp    # CODE XREF: sub_15CD8+14↑j
                                         # sub_359A0+14↑j
                                         # DATA XREF: ...
                .extern EVP_PKEY_missing_parameters
                                         # CODE XREF: ssl3_get_server_certificate+3CC↑p
                                         # DATA XREF: ssl3_get_server_certificate+3C8↑o ...
                .extern pqueue_find      # CODE XREF: dtls1_retransmit_message+64↑p
                                         # sub_2F088+D4↑p ...
                .extern EVP_CIPHER_block_size
                                         # CODE XREF: ssl3_enc+80↑p
                                         # tls1_enc+1A4↑p ...
                .extern EVP_PKEY_asn1_get0_info
                                         # CODE XREF: ssl_load_ciphers+244↑p
                                         # ssl_create_cipher_list+D8↑p ...
                .extern BIO_clear_flags  # CODE XREF: ssl3_read_bytes+920↑p
                                         # ssl3_read_bytes+DD8↑p ...
                .extern RSA_public_encrypt
                                         # CODE XREF: ssl2_connect+CF0↑p
                                         # ssl3_send_client_key_exchange+51C↑p ...
                .extern BN_bn2bin        # CODE XREF: ssl3_send_server_key_exchange+280↑p
                                         # ssl3_send_server_key_exchange+914↑p ...
                .extern strncmp          # CODE XREF: ssl23_get_client_hello+634↑p
                                         # ssl23_get_client_hello+654↑p ...
                .extern X509_NAME_free   # CODE XREF: SSL_dup+37C↑p
                                         # SSL_add_file_cert_subjects_to_stack+170↑p ...
                .extern EVP_PKEY_decrypt_init
                                         # CODE XREF: ssl3_get_client_key_exchange+230↑p
                                         # DATA XREF: ssl3_get_client_key_exchange+228↑o ...
                .extern RSA_private_decrypt
                                         # CODE XREF: ssl2_accept+DA0↑p
                                         # ssl3_get_client_key_exchange+F4↑p
                                         # DATA XREF: ...
                .extern ASN1_get_object  # CODE XREF: d2i_SSL_SESSION+76C↑p
                                         # d2i_SSL_SESSION+7B0↑p ...
                .extern SRP_Calc_B       # CODE XREF: SSL_srp_server_param_with_username+C0↑p
                                         # DATA XREF: SSL_srp_server_param_with_username+B4↑o ...
                .extern RSA_sign         # CODE XREF: ssl3_send_server_key_exchange+758↑p
                                         # ssl3_send_client_verify+3F0↑p ...
                .extern DSA_sign         # CODE XREF: ssl3_send_client_verify+438↑p
                                         # dtls1_send_client_verify+EC↑p
                                         # DATA XREF: ...
                .extern X509_STORE_CTX_init
                                         # CODE XREF: ssl3_output_cert_chain+158↑p
                                         # dtls1_output_cert_chain+7C↑p ...
                .extern CRYPTO_malloc    # CODE XREF: sub_A24C+43C↑p
                                         # ssl2_new+38↑p ...
                .extern d2i_ASN1_OCTET_STRING
                                         # CODE XREF: d2i_SSL_SESSION+1A4↑p
                                         # d2i_SSL_SESSION+358↑p ...
                .extern DSA_verify       # CODE XREF: ssl3_get_cert_verify+598↑p
                                         # DATA XREF: ssl3_get_cert_verify+588↑o ...
                .extern SRP_Calc_u       # CODE XREF: SRP_generate_client_master_secret+64↑p
                                         # SRP_generate_server_master_secret+5C↑p
                                         # DATA XREF: ...
                .extern X509_STORE_new   # CODE XREF: SSL_CTX_new+178↑p
                                         # DATA XREF: SSL_CTX_new+174↑o ...
                .extern i2d_ASN1_OCTET_STRING
                                         # CODE XREF: i2d_SSL_SESSION+234↑p
                                         # i2d_SSL_SESSION+254↑p ...
                .extern EVP_MD_CTX_create
                                         # CODE XREF: ssl3_send_client_key_exchange+2D4↑p
                                         # ssl3_digest_cached_records+110↑p ...
                .extern OPENSSL_cleanse  # CODE XREF: ssl2_free+64↑p
                                         # ssl3_get_client_key_exchange+1B4↑p ...
                .extern X509_STORE_CTX_get_ex_new_index
                                         # CODE XREF: SSL_get_ex_data_X509_STORE_CTX_idx+10C↑p
                                         # DATA XREF: SSL_get_ex_data_X509_STORE_CTX_idx+F8↑o ...
                .extern HMAC_Update      # CODE XREF: ssl3_send_newsession_ticket+36C↑p
                                         # tls1_process_ticket+2AC↑p ...
                .extern RSA_size         # CODE XREF: ssl3_check_cert_and_algorithm+1C8↑p
                                         # ssl_set_cert_masks:loc_329C8↑p
                                         # DATA XREF: ...
                .extern sk_value         # CODE XREF: ssl2_accept+F90↑p
                                         # ssl2_connect:loc_D404↑p ...
                .extern PEM_read_bio_PrivateKey
                                         # CODE XREF: SSL_CTX_use_PrivateKey_file+17C↑p
                                         # SSL_use_PrivateKey_file+180↑p
                                         # DATA XREF: ...
                .extern gettimeofday     # CODE XREF: dtls1_get_timeout+3C↑p
                                         # dtls1_start_timer+48↑p
                                         # DATA XREF: ...
                .extern sk_set_cmp_func  # CODE XREF: ssl2_connect+DF8↑p
                                         # ssl2_connect+E20↑p ...
                .extern pqueue_next      # CODE XREF: dtls1_retransmit_buffered_messages+4C↑p
                                         # dtls1_retransmit_buffered_messages:loc_2E5B0↑p
                                         # DATA XREF: ...
                .extern EVP_get_cipherbyname
                                         # CODE XREF: ssl_cipher_get_evp+2E8↑p
                                         # ssl_cipher_get_evp+3CC↑p ...
                .extern EVP_EncryptFinal
                                         # CODE XREF: ssl3_send_newsession_ticket+330↑p
                                         # dtls1_send_newsession_ticket+280↑p
                                         # DATA XREF: ...
                .extern X509_NAME_dup    # CODE XREF: SSL_dup+350↑p
                                         # SSL_add_file_cert_subjects_to_stack+138↑p ...
                .extern CRYPTO_get_ex_new_index
                                         # CODE XREF: SSL_CTX_get_ex_new_index+3C↑p
                                         # SSL_get_ex_new_index+3C↑p ...
                .extern EVP_sha256       # CODE XREF: ssl3_send_newsession_ticket+4D8↑p
                                         # ssl3_get_new_session_ticket+1F8↑p ...
                .extern RSA_verify       # CODE XREF: ssl3_get_cert_verify+46C↑p
                                         # ssl3_get_key_exchange+708↑p
                                         # DATA XREF: ...
                .extern BIO_get_retry_reason
                                         # CODE XREF: SSL_get_error+140↑p
                                         # SSL_get_error+20C↑p
                                         # DATA XREF: ...
                .extern SRP_Verify_A_mod_N
                                         # CODE XREF: SRP_generate_server_master_secret+40↑p
                                         # DATA XREF: SRP_generate_server_master_secret+34↑o ...
                .extern lh_retrieve      # CODE XREF: SSL_has_matching_session_id+B0↑p
                                         # sub_37AE0+58↑p ...
                .extern SRP_get_default_gN
                                         # CODE XREF: SSL_set_srp_server_param_pw+38↑p
                                         # DATA XREF: SSL_set_srp_server_param_pw+28↑o ...
                .extern EVP_PKEY_derive_set_peer
                                         # CODE XREF: ssl3_get_client_key_exchange+260↑p
                                         # ssl3_send_client_key_exchange+2B0↑p
                                         # DATA XREF: ...
                .extern CRYPTO_new_ex_data
                                         # CODE XREF: SSL_CTX_new+260↑p
                                         # SSL_new+328↑p ...
                .extern EVP_CIPHER_CTX_init
                                         # CODE XREF: ssl2_enc_init+EC↑p
                                         # ssl2_enc_init+104↑p ...
                .extern BIO_copy_next_retry
                                         # CODE XREF: sub_41404+3C8↑p
                                         # DATA XREF: sub_41404+3C0↑o ...
                .extern EVP_add_cipher   # CODE XREF: SSL_library_init+38↑p
                                         # SSL_library_init+5C↑p ...
                .extern EVP_aes_192_cbc  # CODE XREF: SSL_library_init+AC↑p
                                         # DATA XREF: SSL_library_init+A8↑o ...
                .extern asn1_add_error   # CODE XREF: d2i_SSL_SESSION+288↑p
                                         # d2i_SSL_SESSION+9F8↑p
                                         # DATA XREF: ...
                .extern EVP_CIPHER_iv_length
                                         # CODE XREF: ssl2_connect+BA0↑p
                                         # ssl3_setup_key_block+150↑p ...
                .extern memcpy           # CODE XREF: ssl2_accept+494↑p
                                         # ssl2_accept+5BC↑p ...
                .extern EVP_CIPHER_CTX_iv_length
                                         # CODE XREF: ssl3_send_newsession_ticket+2B0↑p
                                         # ssl3_send_newsession_ticket+2D8↑p ...
                .extern EVP_CIPHER_CTX_block_size
                                         # CODE XREF: sub_EC5C+440↑p
                                         # ssl2_write+4B0↑p
                                         # DATA XREF: ...
                .extern lh_new           # CODE XREF: SSL_CTX_new+160↑p
                                         # DATA XREF: SSL_CTX_new+144↑o ...
                .extern HMAC_CTX_init    # CODE XREF: ssl3_send_newsession_ticket+1BC↑p
                                         # tls1_process_ticket+1E0↑p ...
                .extern CRYPTO_get_ex_data
                                         # CODE XREF: SSL_CTX_get_ex_data+10↑j
                                         # SSL_get_ex_data+10↑j ...
                .extern fwrite           # CODE XREF: dtls1_retransmit_buffered_messages+D4↑p
                                         # DATA XREF: dtls1_retransmit_buffered_messages+C4↑o ...
                .extern EVP_PKEY_CTX_new
                                         # CODE XREF: ssl3_get_cert_verify+4B8↑p
                                         # ssl3_get_client_key_exchange+21C↑p ...
                .extern OBJ_bsearch_     # CODE XREF: OBJ_bsearch_ssl_cipher_id+28↑p
                                         # DATA XREF: OBJ_bsearch_ssl_cipher_id+1C↑o ...
                .extern BN_num_bits      # CODE XREF: ssl3_send_server_key_exchange+168↑p
                                         # ssl3_send_server_key_exchange:loc_12138↑p ...
                .extern pqueue_insert    # CODE XREF: sub_2B88C+138↑p
                                         # dtls1_buffer_message+170↑p ...
                .extern sk_free          # CODE XREF: sub_A24C+B0↑p
                                         # ssl2_accept+1014↑p ...
                .extern EVP_sha384       # CODE XREF: tls12_get_hash+80↑j
                                         # SSL_library_init+264↑p
                                         # DATA XREF: ...
                .extern X509_VERIFY_PARAM_set_depth
                                         # CODE XREF: SSL_CTX_set_verify_depth+10↑j
                                         # SSL_set_verify_depth+10↑j
                                         # DATA XREF: ...
                .extern EVP_PKEY_CTX_free
                                         # CODE XREF: ssl3_get_cert_verify+550↑p
                                         # ssl3_get_client_key_exchange+334↑p ...
                .extern BIO_ctrl         # CODE XREF: ssl2_accept+7B0↑p
                                         # ssl2_accept+7D8↑p ...
                .extern EVP_PKEY_sign    # CODE XREF: ssl3_send_client_verify+318↑p
                                         # DATA XREF: ssl3_send_client_verify+304↑o ...
                .extern __errno_location
                                         # CODE XREF: ssl2_accept+84↑p
                                         # ssl2_connect+84↑p ...
                .extern BIO_free_all     # CODE XREF: SSL_set_bio+58↑p
                                         # SSL_set_bio+84↑p ...
                .extern EVP_MD_CTX_copy  # CODE XREF: ssl2_mac+88↑p
                                         # tls1_mac+320↑p
                                         # DATA XREF: ...
                .extern sk_pop_free      # CODE XREF: ssl3_get_client_certificate+F0↑p
                                         # ssl3_get_client_certificate+3E0↑p ...
                .extern OPENSSL_DIR_read
                                         # CODE XREF: SSL_add_dir_cert_subjects_to_stack+78↑p
                                         # DATA XREF: SSL_add_dir_cert_subjects_to_stack:loc_357F0↑o ...
                .extern BIO_s_mem        # CODE XREF: ssl3_init_finished_mac+64↑p
                                         # DATA XREF: ssl3_init_finished_mac:loc_1AB48↑o ...
                .extern BIO_free         # CODE XREF: ssl3_get_cert_verify+F4↑p
                                         # ssl3_clear+A4↑p ...
                .extern pqueue_iterator  # CODE XREF: dtls1_retransmit_buffered_messages+34↑p
                                         # DATA XREF: dtls1_retransmit_buffered_messages+28↑o ...
                .extern EVP_DigestInit   # CODE XREF: ssl3_send_client_key_exchange+30C↑p
                                         # DATA XREF: ssl3_send_client_key_exchange+304↑o ...
                .extern X509_STORE_load_locations
                                         # CODE XREF: SSL_CTX_load_verify_locations+10↑j
                                         # DATA XREF: SSL_CTX_load_verify_locations+C↑o ...
                .extern COMP_CTX_free    # CODE XREF: ssl3_change_cipher_state+B0↑p
                                         # ssl3_change_cipher_state+260↑p ...
                .extern pitem_new        # CODE XREF: sub_2B88C+90↑p
                                         # dtls1_buffer_message+154↑p ...
                .extern SRP_Calc_A       # CODE XREF: SRP_Calc_A_param+A0↑p
                                         # DATA XREF: SRP_Calc_A_param+98↑o ...
                .extern X509_STORE_CTX_get0_param
                                         # CODE XREF: ssl_verify_cert_chain+EC↑p
                                         # DATA XREF: ssl_verify_cert_chain+E8↑o ...
                .extern BIO_s_socket     # CODE XREF: SSL_set_rfd+50↑p
                                         # SSL_set_wfd+50↑p ...
                .extern i2d_X509         # CODE XREF: sub_A24C+424↑p
                                         # sub_A24C+460↑p ...
                .extern EVP_DecryptFinal
                                         # CODE XREF: tls1_process_ticket+384↑p
                                         # DATA XREF: tls1_process_ticket+378↑o ...
                .extern d2i_X509_NAME    # CODE XREF: ssl3_get_certificate_request+318↑p
                                         # DATA XREF: ssl3_get_certificate_request:loc_15A20↑o ...
                .extern X509_VERIFY_PARAM_inherit
                                         # CODE XREF: SSL_new+158↑p
                                         # SSL_dup+29C↑p
                                         # DATA XREF: ...
                .extern RSAPrivateKey_dup
                                         # CODE XREF: ssl3_ctx_ctrl+B4↑p
                                         # ssl3_ctrl+148↑p
                                         # DATA XREF: ...

                 # end _ftext
